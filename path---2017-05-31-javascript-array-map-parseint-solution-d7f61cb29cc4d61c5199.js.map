{"version":3,"sources":["webpack:///path---2017-05-31-javascript-array-map-parseint-solution-d7f61cb29cc4d61c5199.js","webpack:///./.cache/json/2017-05-31-javascript-array-map-parseint-solution.json"],"names":["webpackJsonp","1005","module","exports","data","content","title","createdDate","headerImgur","id","toc","tags","latestPosts","totalCount","edges","node","url","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWA,QAAA,yrFAAmwFC,MAAA,wCAAAC,YAAA,yBAAAC,YAAA,KAAAC,GAAA,yBAAAC,KAAA,aAAAC,KAAA,cAAgNC,aAAgBC,WAAA,GAAAC,QAA0BC,MAAQT,MAAA,wCAAAU,IAAA,qBAAAT,YAAA,4BAAqHQ,MAAQT,MAAA,kEAAAU,IAAA,qCAAAT,YAAA,4BAA+JQ,MAAQT,MAAA,OAAAU,IAAA,kBAAAT,YAAA,4BAAiFQ,MAAQT,MAAA,yCAAAU,IAAA,+BAAAT,YAAA,4BAAgIQ,MAAQT,MAAA,kBAAAU,IAAA,gCAAAT,YAAA,4BAA0GQ,MAAQT,MAAA,gCAAAU,IAAA,4CAAAT,YAAA,8BAAqIU,aAAgBR,GAAA","file":"path---2017-05-31-javascript-array-map-parseint-solution-d7f61cb29cc4d61c5199.js","sourcesContent":["webpackJsonp([191908604601672],{\n\n/***/ 1005:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"content\":{\"content\":\"<p>如果我想轉換數組裡面的字符串為數字的話，很自然就會想到 <code>map</code> 和 <code>parseInt</code> 這兩個方法。但是用起來的時候卻不是我想要的結果。。。</p>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> a = [<span class=\\\"hljs-string\\\">\\\"1\\\"</span>, <span class=\\\"hljs-string\\\">\\\"2\\\"</span>, <span class=\\\"hljs-string\\\">\\\"3\\\"</span>, <span class=\\\"hljs-string\\\">\\\"4\\\"</span>, <span class=\\\"hljs-string\\\">\\\"5\\\"</span>];\\n\\n<span class=\\\"hljs-keyword\\\">var</span> b = a.map(<span class=\\\"hljs-built_in\\\">parseInt</span>);\\n\\n<span class=\\\"hljs-built_in\\\">console</span>.log(b); <span class=\\\"hljs-comment\\\">// [1, NaN, NaN, NaN, NaN]</span>\\n</code></pre></code></pre>\\n<h2 id=原因>原因</h2>\\n<p>如果我們細看 map 的參數，就會發現它的 callback 會有三個 arguments：<code>currentValue</code>, <code>index</code> 和 <code>array</code>。</p>\\n<p>對於 <code>parseInt</code> 來說， 它會接收<code>currentValue</code>和 <code>index</code>，並用 index 作為 index 進制。。。</p>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-number\\\">0</span>); <span class=\\\"hljs-comment\\\">// OK =&gt; 1</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-number\\\">1</span>); <span class=\\\"hljs-comment\\\">// 不合法的進制。。。</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-number\\\">2</span>); <span class=\\\"hljs-comment\\\">// NaN, 二進制沒有 3</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-number\\\">3</span>); <span class=\\\"hljs-comment\\\">// NaN, 三進制沒有 4</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'5'</span>, <span class=\\\"hljs-number\\\">4</span>); <span class=\\\"hljs-comment\\\">// NaN, 四進制沒有 5</span>\\n</code></pre></code></pre>\\n<h2 id=解決方法>解決方法</h2>\\n<ol>\\n<li>用<code>.map(parseFloat)</code>，因為它只接收一個參數。</li>\\n</ol>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> c = a.map(<span class=\\\"hljs-built_in\\\">parseFloat</span>);\\n</code></pre></code></pre>\\n<ol>\\n<li>用<code>.map(Number)</code></li>\\n</ol>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> d = a.map(<span class=\\\"hljs-built_in\\\">Number</span>);\\n</code></pre></code></pre>\\n<ol>\\n<li>用<code>.map(num =&gt; parseInt(num))</code></li>\\n</ol>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> e = a.map(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">num</span> =&gt;</span> <span class=\\\"hljs-built_in\\\">parseInt</span>(num));\\n</code></pre></code></pre>\\n\",\"title\":\"JavaScript Array.map(parseInt) 錯誤解決方案\",\"createdDate\":\"2017-05-31T11:06+08:00\",\"headerImgur\":null,\"id\":\"1hSgSVxg6WGY6GOkSSk0Cm\",\"toc\":[\"原因\",\"解決方法\"],\"tags\":\"JavaScript\"},\"latestPosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"url\":\"netease-kaola-live\",\"createdDate\":\"2018-08-01T20:00+08:00\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"url\":\"regenerator-runtime-is-not-defined\",\"createdDate\":\"2018-07-29T20:00+08:00\"}},{\"node\":{\"title\":\"關於作者\",\"url\":\"about-calpa-liu\",\"createdDate\":\"2018-05-01T20:00+08:00\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"url\":\"insert-zero-width-characters\",\"createdDate\":\"2018-04-06T23:00+08:00\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"url\":\"zhihu-unlimited-lives-website\",\"createdDate\":\"2018-03-28T20:49+08:00\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"createdDate\":\"2018-03-21T20:00+08:00\"}}]}},\"pathContext\":{\"id\":\"1hSgSVxg6WGY6GOkSSk0Cm\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2017-05-31-javascript-array-map-parseint-solution-d7f61cb29cc4d61c5199.js","module.exports = {\"data\":{\"content\":{\"content\":\"<p>如果我想轉換數組裡面的字符串為數字的話，很自然就會想到 <code>map</code> 和 <code>parseInt</code> 這兩個方法。但是用起來的時候卻不是我想要的結果。。。</p>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> a = [<span class=\\\"hljs-string\\\">\\\"1\\\"</span>, <span class=\\\"hljs-string\\\">\\\"2\\\"</span>, <span class=\\\"hljs-string\\\">\\\"3\\\"</span>, <span class=\\\"hljs-string\\\">\\\"4\\\"</span>, <span class=\\\"hljs-string\\\">\\\"5\\\"</span>];\\n\\n<span class=\\\"hljs-keyword\\\">var</span> b = a.map(<span class=\\\"hljs-built_in\\\">parseInt</span>);\\n\\n<span class=\\\"hljs-built_in\\\">console</span>.log(b); <span class=\\\"hljs-comment\\\">// [1, NaN, NaN, NaN, NaN]</span>\\n</code></pre></code></pre>\\n<h2 id=原因>原因</h2>\\n<p>如果我們細看 map 的參數，就會發現它的 callback 會有三個 arguments：<code>currentValue</code>, <code>index</code> 和 <code>array</code>。</p>\\n<p>對於 <code>parseInt</code> 來說， 它會接收<code>currentValue</code>和 <code>index</code>，並用 index 作為 index 進制。。。</p>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-number\\\">0</span>); <span class=\\\"hljs-comment\\\">// OK =&gt; 1</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-number\\\">1</span>); <span class=\\\"hljs-comment\\\">// 不合法的進制。。。</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-number\\\">2</span>); <span class=\\\"hljs-comment\\\">// NaN, 二進制沒有 3</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-number\\\">3</span>); <span class=\\\"hljs-comment\\\">// NaN, 三進制沒有 4</span>\\n<span class=\\\"hljs-built_in\\\">parseInt</span>(<span class=\\\"hljs-string\\\">'5'</span>, <span class=\\\"hljs-number\\\">4</span>); <span class=\\\"hljs-comment\\\">// NaN, 四進制沒有 5</span>\\n</code></pre></code></pre>\\n<h2 id=解決方法>解決方法</h2>\\n<ol>\\n<li>用<code>.map(parseFloat)</code>，因為它只接收一個參數。</li>\\n</ol>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> c = a.map(<span class=\\\"hljs-built_in\\\">parseFloat</span>);\\n</code></pre></code></pre>\\n<ol>\\n<li>用<code>.map(Number)</code></li>\\n</ol>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> d = a.map(<span class=\\\"hljs-built_in\\\">Number</span>);\\n</code></pre></code></pre>\\n<ol>\\n<li>用<code>.map(num =&gt; parseInt(num))</code></li>\\n</ol>\\n<pre><code class=\\\"language-JavaScript\\\"><pre><code class=\\\"hljs JavaScript\\\"><span class=\\\"hljs-keyword\\\">var</span> e = a.map(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">num</span> =&gt;</span> <span class=\\\"hljs-built_in\\\">parseInt</span>(num));\\n</code></pre></code></pre>\\n\",\"title\":\"JavaScript Array.map(parseInt) 錯誤解決方案\",\"createdDate\":\"2017-05-31T11:06+08:00\",\"headerImgur\":null,\"id\":\"1hSgSVxg6WGY6GOkSSk0Cm\",\"toc\":[\"原因\",\"解決方法\"],\"tags\":\"JavaScript\"},\"latestPosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"url\":\"netease-kaola-live\",\"createdDate\":\"2018-08-01T20:00+08:00\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"url\":\"regenerator-runtime-is-not-defined\",\"createdDate\":\"2018-07-29T20:00+08:00\"}},{\"node\":{\"title\":\"關於作者\",\"url\":\"about-calpa-liu\",\"createdDate\":\"2018-05-01T20:00+08:00\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"url\":\"insert-zero-width-characters\",\"createdDate\":\"2018-04-06T23:00+08:00\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"url\":\"zhihu-unlimited-lives-website\",\"createdDate\":\"2018-03-28T20:49+08:00\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"createdDate\":\"2018-03-21T20:00+08:00\"}}]}},\"pathContext\":{\"id\":\"1hSgSVxg6WGY6GOkSSk0Cm\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2017-05-31-javascript-array-map-parseint-solution.json\n// module id = 1005\n// module chunks = 191908604601672"],"sourceRoot":""}