webpackJsonp([0xfc245ed4e17f],{1026:function(s,a){s.exports={data:{content:{content:'<h2 id=前言>前言</h2>\n<p>當我在更新 gatsbyjs 本體和 <code>gatsbyjs-*</code> 插件後，就發現構建 JavaScript 代碼的時候失敗。解決問題的過程，需要多聯想關鍵字。但簡單來說，只要安裝正確的 babel 轉換插件，就可以解決這個問題。</p>\n<h2 id=問題>問題</h2>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-built_in">SyntaxError</span>: Unexpected token operator «*», expected punc «(» [component---src-templates-blog-post-js<span class="hljs-number">-42473</span>b53655caf4635a2.js:<span class="hljs-number">18311</span>,<span class="hljs-number">43</span>]\n</code></pre></code></pre>\n<p>這裡是說在 uglifyjs 處理文本的時候，預期 ( 但出現 <code>*</code> 這一個符號，如果你是有用過 generator 的話，你就會發現這裡的線索跟 generator 有一點相似。</p>\n<h3 id=generator>generator</h3>\n<pre><code class="language-JavaScript"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span>;\n}\n</code></pre></code></pre>\n<h3 id=function>function</h3>\n<pre><code class="language-JavaScript"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;\n}\n</code></pre></code></pre>\n<h2 id=解決方法>解決方法</h2>\n<p>安裝額外的 babel 插件：</p>\n<p><code>npm i babel-plugin-transform-decorators-legacy babel-plugin-transform-regenerator</code></p>\n<p>安裝之後，babel 就可以把上面 generator 的代碼輸出為以下代碼：</p>\n<pre><code class="language-JavaScript"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> _marked = [a].map(regeneratorRuntime.mark);\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> regeneratorRuntime.wrap(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a$</span>(<span class="hljs-params">_context</span>) </span>{\n    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) {\n      <span class="hljs-keyword">switch</span> (_context.prev = _context.next) {\n        <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:\n          _context.next = <span class="hljs-number">2</span>;\n          <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;\n\n        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:\n        <span class="hljs-keyword">case</span> <span class="hljs-string">"end"</span>:\n          <span class="hljs-keyword">return</span> _context.stop();\n      }\n    }\n  }, _marked[<span class="hljs-number">0</span>], <span class="hljs-keyword">this</span>);\n}\n</code></pre></code></pre>\n<p>轉換後，可以避免 <code>*</code> 這一個符號出現在 ( 之前。</p>\n<p>可能你會遇到這樣的報錯信息，具體錯誤位於 async 的那一行代碼上：</p>\n<pre><code><pre><code class="hljs javascript">Uncaught <span class="hljs-built_in">ReferenceError</span>: regeneratorRuntime is not defined\n</code></pre></code></pre>\n<p>透過 stackoverflow 的回答可以得知，這依然是跟 async/await 相關的問題，使用 babel-plugin-transform-runtime 就好了。</p>\n<pre><code><pre><code class="hljs javascript">npm install --save-dev babel-plugin-transform-runtime\n</code></pre></code></pre>\n<p>別忘記在<code>gatsbyjs-node.js</code> 文件裏面加入修改 babel 設置的<a href="https://github.com/calpa/blog/blob/master/gatsby-node.js#L115">代碼</a>：</p>\n<pre><code class="language-JavaScript"><pre><code class="hljs JavaScript">exports.modifyBabelrc = <span class="hljs-function">(<span class="hljs-params">{ babelrc }</span>) =&gt;</span> ({\n  ...babelrc,\n  <span class="hljs-attr">plugins</span>: babelrc.plugins.concat([<span class="hljs-string">\'transform-decorators-legacy\'</span>, <span class="hljs-string">\'transform-regenerator\'</span>, <span class="hljs-string">\'transform-runtime\'</span>]),\n});\n</code></pre></code></pre>\n<h2 id=後記>後記</h2>\n<p>果然我還是要學習一個，看著那兩個符號（<code>*</code>, <code>(</code>），也想不起居然跟 generator 有關。。。</p>\n<h2 id=參考資料>參考資料</h2>\n<ol>\n<li><a href="https://github.com/gatsbyjs/gatsby/issues/3931#issuecomment-364414141">gatsby build issues - likely async related</a></li>\n<li><a href="https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy">loganfsmyth/babel-plugin-transform-decorators-legacy</a></li>\n<li><a href="https://babeljs.io/docs/plugins/transform-regenerator/">Regenerator transform - Babel</a></li>\n<li><a href="http://babeljs.io/docs/plugins/transform-runtime/">Runtime transform</a></li>\n<li><a href="https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined">Babel 6 regeneratorRuntime is not defined</a></li>\n</ol>\n',title:"Gatsbyjs async/await 更新報錯解決方法",createdDate:"2018-03-21T20:00+08:00",headerImgur:null,id:"34a3HzeKaAm44oScsggWok",toc:["前言","問題","generator","function","解決方法","後記","參考資料"],tags:"Gatsybjs, Javascript, async-await"},latestPosts:{totalCount:60,edges:[{node:{title:"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）",url:"netease-kaola-live",createdDate:"2018-08-01T20:00+08:00"}},{node:{title:"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法",url:"regenerator-runtime-is-not-defined",createdDate:"2018-07-29T20:00+08:00"}},{node:{title:"關於作者",url:"about-calpa-liu",createdDate:"2018-05-01T20:00+08:00"}},{node:{title:"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」",url:"insert-zero-width-characters",createdDate:"2018-04-06T23:00+08:00"}},{node:{title:"知乎無限 live 數據流網站",url:"zhihu-unlimited-lives-website",createdDate:"2018-03-28T20:49+08:00"}},{node:{title:"Gatsbyjs async/await 更新報錯解決方法",url:"gatsybjs-async-await-upgrade-bug-solution",createdDate:"2018-03-21T20:00+08:00"}}]}},pathContext:{id:"34a3HzeKaAm44oScsggWok"}}}});
//# sourceMappingURL=path---2018-03-21-gatsybjs-async-await-upgrade-bug-solution-2fa0b7c3aba7fa10781d.js.map