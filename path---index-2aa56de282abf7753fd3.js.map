{"version":3,"sources":["webpack:///path---index-2aa56de282abf7753fd3.js","webpack:///./.cache/json/index.json"],"names":["webpackJsonp","1044","module","exports","data","header","headerImage","title","titleVisible","subTitle","subTitleVisible","latestPosts","totalCount","edges","node","url","createdDate","pagePosts","headerImgur","headerBackgroundColor","content","tags","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,QAAUC,YAAA,kCAAAC,MAAA,SAAAC,cAAA,EAAAC,SAAA,oBAAAC,iBAAA,GAA2IC,aAAgBC,WAAA,GAAAC,QAA0BC,MAAQP,MAAA,wCAAAQ,IAAA,qBAAAC,YAAA,4BAAqHF,MAAQP,MAAA,kEAAAQ,IAAA,qCAAAC,YAAA,4BAA+JF,MAAQP,MAAA,OAAAQ,IAAA,kBAAAC,YAAA,4BAAiFF,MAAQP,MAAA,yCAAAQ,IAAA,+BAAAC,YAAA,4BAAgIF,MAAQP,MAAA,kBAAAQ,IAAA,gCAAAC,YAAA,4BAA0GF,MAAQP,MAAA,gCAAAQ,IAAA,4CAAAC,YAAA,6BAAoIC,WAAcL,WAAA,GAAAC,QAA0BC,MAAQP,MAAA,wCAAAS,YAAA,yBAAAD,IAAA,qBAAAG,YAAA,kCAAAC,sBAAA,OAAAC,QAAA,ohCAAAC,KAAA,gBAAsvCP,MAAQP,MAAA,kEAAAS,YAAA,yBAAAD,IAAA,qCAAAG,YAAA,KAAAC,sBAAA,KAAAC,QAAA,g8BAAi2BC,KAAA,iCAA+WP,MAAQP,MAAA,OAAAS,YAAA,yBAAAD,IAAA,kBAAAG,YAAA,kCAAAC,sBAAA,SAAAC,QAAA,izCAAAC,KAAA,cAA++CP,MAAQP,MAAA,yCAAAS,YAAA,yBAAAD,IAAA,+BAAAG,YAAA,KAAAC,sBAAA,KAAAC,QAAA,6iFAA4mCC,KAAA,gBAAq2BP,MAAQP,MAAA,kBAAAS,YAAA,yBAAAD,IAAA,gCAAAG,YAAA,KAAAC,sBAAA,KAAAC,QAAA,oeAAAC,KAAA,uBAAmqBP,MAAQP,MAAA,gCAAAS,YAAA,yBAAAD,IAAA,4CAAAG,YAAA,KAAAC,sBAAA,KAAAC,QAAA,wzEAAuwDC,KAAA,yCAA2xBC","file":"path---index-2aa56de282abf7753fd3.js","sourcesContent":["webpackJsonp([142629428675168],{\n\n/***/ 1044:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"header\":{\"headerImage\":\"https://i.imgur.com/ebCJ61b.jpg\",\"title\":\"你好，杭州。\",\"titleVisible\":true,\"subTitle\":\"Hello, Hang Zhou.\",\"subTitleVisible\":true},\"latestPosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"url\":\"netease-kaola-live\",\"createdDate\":\"2018-08-01T20:00+08:00\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"url\":\"regenerator-runtime-is-not-defined\",\"createdDate\":\"2018-07-29T20:00+08:00\"}},{\"node\":{\"title\":\"關於作者\",\"url\":\"about-calpa-liu\",\"createdDate\":\"2018-05-01T20:00+08:00\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"url\":\"insert-zero-width-characters\",\"createdDate\":\"2018-04-06T23:00+08:00\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"url\":\"zhihu-unlimited-lives-website\",\"createdDate\":\"2018-03-28T20:49+08:00\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"createdDate\":\"2018-03-21T20:00+08:00\"}}]},\"pagePosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"createdDate\":\"2018-08-01T20:00+08:00\",\"url\":\"netease-kaola-live\",\"headerImgur\":\"https://i.imgur.com/odGAstQ.jpg\",\"headerBackgroundColor\":\"#eee\",\"content\":\"## 前言\\n\\n又來到了校招的季節，為了應對這一次的招生活動，公司的 HR 舉辦很多活動，各種福利，然後朋友圈就發了一堆圖。。。不僅如此，他們還會直播答疑。。。依照國際慣例，內推碼 B222E54 先行。以下是直播的細節和內容。\\n\\n## 直播細節\\n\\n親愛的小考拉：\\n\\n相信優秀的你在校招過程中，會有很多非常好的機會，而你當前對考拉的了解，可能還只停留在消費者的階段。我們擔心會因為相互之間的熟悉程度不夠，而最終和你失之交臂，所以特意安排了這次直播，希望能夠通過面對面的形式，加深你對考拉的了解，消除你的疑惑，讓你看到日常工作狀態下真實的考拉。\\n\\n直播過程中，你可以提出任何感興趣的問題（技術、生活、美食、校招筆試原題…），我們都會盡力進行解答。我們也會在直播過程中，不定期發放考拉福利！\\n\\n具體安排如下：\\n\\n直播鏈接：https://m.kaola.com/live/roomDetail.html?roomId=403000\\n\\n直播答疑時間：\\n\\n8月1日~8月7日 \\n\\n每天21:00~21:30\\n\\n\\n| 時間     | 職位大類     | 答疑人     |\\n| ---------- | ---------- | ---------- |\\n| 8月1日  （週三）  | 所有技術類職位 | 杨文杰 考拉技術類招聘HR       |\\n| 8月2日（週四）       | BI       | 沈老闆 考拉商業智能總監       |\\n| 8月3日（週五）       | Java       | 汉姐  考拉java技術總監     |\\n| 8月6日（週一）~8月7日（週二）     | 前端&移動端&算法&測試       |  對應模塊負責人（詳見直播頁）   |\\n \\n如有任何問題，可聯繫 hzhuoxiangyu@corp.netease.com\\n期待你的加入！\\n\\n附：網易內推碼 **B222E54**，使用方式：\\n1. 訪問 https://campus.163.com \\n1. 點開你心儀的崗位\\n1. 點擊&投遞簡歷按鈕，你將看到崗位所屬部門，選擇“意向部門”—“考拉海購”\\n1. Copy and Paste 內推碼\\n1. 填寫簡歷信息，投遞簡歷\\n\\n## 感想\\n\\n天天都有小夥伴入職，十二點吃飯的時候食堂好多人。。。\\n\\n還有就是，還沒到八點，已經開始直播了。。。\",\"tags\":\"網易, 校招, 直播\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"createdDate\":\"2018-07-29T20:00+08:00\",\"url\":\"regenerator-runtime-is-not-defined\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n\\nasync/await 能讓開發者享受異步操作的快感，解決回調地獄的問題。然而，編譯器對於 async/await 的編譯有時候卻不和我們想象中的一樣。透過安裝正確插件，或改回 Promise 版本，我們可以解決這個問題。\\n\\n## 解決方法\\n\\n之前在[Gatsbyjs async/await 更新報錯解決方法](https://calpa.me/2018/03/21/gatsybjs-async-await-upgrade-bug-solution/) 就已經提及過，使用 babel-plugin-transform-runtime 就好了。\\n\\n```\\nnpm install --save-dev babel-plugin-transform-runtime\\n```\\n\\n然後在 `.babelrc` 裡面填寫：\\n\\n```\\n{\\n  \\\"plugins\\\": [\\\"transform-runtime\\\"]\\n}\\n```\\n\\n或加入自定義選項：\\n\\n```\\n{\\n  \\\"plugins\\\": [\\n    [\\\"transform-runtime\\\", {\\n      \\\"helpers\\\": false,\\n      \\\"polyfill\\\": false,\\n      \\\"regenerator\\\": true,\\n      \\\"moduleName\\\": \\\"babel-runtime\\\"\\n    }]\\n  ]\\n}\\n```\\n\\n因為 Babel 會不斷更新，所以具體配置請到官網查閱，或點擊下面的鏈接。\\n\\n\\n其實你也可以使用`babel-polyfill`，不過它會包含 `regenerator runtime` 及 `core-js`，打包的體積會變得很大。\\n\\n## 參考資料\\n1. [babel-plugin-transform-runtime - Babel](https://babeljs.io/docs/en/babel-plugin-transform-runtime#docsNav)\\n1. [babel-polyfill - Babel](https://babeljs.io/docs/en/babel-polyfill/)\",\"tags\":\"前端, Javascript, async-await\"}},{\"node\":{\"title\":\"關於作者\",\"createdDate\":\"2018-05-01T20:00+08:00\",\"url\":\"about-calpa-liu\",\"headerImgur\":\"https://i.imgur.com/mich3dS.jpg\",\"headerBackgroundColor\":\"25a2c6\",\"content\":\"## 自我介紹\\n\\n你好，謝謝你閱讀我的博客。就讓我簡單地自我介紹一下自己吧。\\n\\n時光荏苒，歲月如梭。不知不覺之間，我就已經來到杭州網易從事前端開發的事業。\\n\\n過去，我在香港科技大學就讀化學及環境工程，期間自學前端開發。\\n\\n曾經參加八次黑客松，並把心得寫成[參加八次黑客馬拉松的個人體會與總結](https://calpa.me/2017/11/06/hackathon-summary)。\\n\\n\\n## 對於前端的看法\\n\\n畢竟不是科班出身，我只好抽多點時間打好基礎，學習前端技能，跟著在 2017年 5月寫下的 [《打好 JavaScript 基礎的6個步驟》](/2017/05/21/learn-javascript-in-six-steps/)路線來做。\\n\\n到了三到四年的時候，我希望可以不再是普通的程序員，而是可以和不同的小組談笑風生。\\n\\n這就需要我提高自己的能力，認知，格局，以及大局觀。\\n\\n提高自己的技能，只是足夠生存；而提高自己的能力，則是開發大規模應用所需要的。\\n\\n## 關於我的一些事\\n\\n1. 我是一名自學的 Web 前端程序員\\n1. 本科內容與編程好像沒有什麼關係。。。\\n1. 那個。。。我最喜歡 Miku\\n1. 2016年暑假時，我在香港科技大學圖書館工作，從最基本的 HTML，CSS 開始入門。\\n1. 原來世界上好多種程序員，比如說Markdown程序員，而我則是想成為一個 Web 前端程序員\\n1. 寫博客是為了記錄一下開發日常，還有就是遇到的坑\\n1. 推薦一本書：JavaScript高級程序設計(第3版)\\n\\n## 寫博客的動機\\n\\n最初寫博客，是為了記錄一下開發日常，還有遇到的坑。不知不覺，博客的 Page View 已經超過了 ~~8~~ 30k，用戶數量也到達了 16k 了，這個數字可能還是很小，但這讓我有了去優化博客瀏覽速度的動機 XD\\n\\n## 回顧\\n\\n2018年6月，正式到杭州工作。\\n\\n2017年11月，已取得網易 offer，詳見[遠征成功﹣﹣一個香港人北上杭州豬場的前端面試之路》](https://calpa.me/2017/09/30/hang-zhou-interview-summary/)。\\n\\n現在是2017年9月，是校招的季節，不知不覺已經過了那麼久的時間。。。\\n\\n現在是2017年8月，又是內推的時節，如果你看到這篇自我介紹的話，你可以留下郵箱。這裡是我的[簡歷](https://calpa.me/resume/resume-calpa-liu-hok-yiu.pdf)，以及一點小總結。\\n1. 就讀港科大\\n2. 知識面廣，接觸過 Python, Node, Angular, Web Socket, React, Vue\\n3. 自學能力強，7次黑客馬拉松，屢次獲獎\\n4. 各社區踴躍參與，並具有一定影響力，現於掘金設有專欄\\n5. 英語閲讀無任何障礙，並能流利溝通\\n\\n## 最近開發什麼項目\\n- [blog](https://github.com/calpa/blog)\\n  個人博客系統\",\"tags\":\"自我介紹, 前端\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"createdDate\":\"2018-04-06T23:00+08:00\",\"url\":\"insert-zero-width-characters\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n\\n趁著深夜有空，我就翻譯了一篇有趣的文章。這篇文章是說如何插入任意文本到任意文本。有時候，文章都會被某些網站會直接引用博客內容。。。這一類的插入空白字符串方法，可以成為其中一個有力的追蹤源頭的線索。\\n\\n空白符號不可視，不可說，那就是一個謎一樣的地方了。\\n\\n經過實測，瀏覽器直接 Copy & Paste 都會把空白字符帶過去的。\\n\\n[Be careful what you copy: Invisibly inserting usernames into text with Zero-Width Characters][1] 這一篇文章提到了加入謎一樣的空白符號的方法。\\n\\n\\n簡單來說就是把每一個要加密的文字轉換為不可視符號，然後塞到原本的文本裏面。\\n\\n## 方法\\n\\n第一步：分割文字，並轉換成二進制格式的符號。\\n\\n```\\nconst zeroPad = num => ‘00000000’.slice(String(num).length) + num;\\nconst textToBinary = username => (\\n  username.split('').map(char =>\\n    zeroPad(char.charCodeAt(0).toString(2))).join(' ')\\n);\\n```\\n\\n第二步：對於每一個二進制符號，並進一步編譯為加密符號\\n\\n```\\nconst binaryToZeroWidth = binary => (\\n  binary.split('').map((binaryNum) => {\\n    const num = parseInt(binaryNum, 10);\\n    if (num === 1) {\\n      return ''; // 零距離的空白\\n    } else if (num === 0) {\\n      return '‌'; // 零距離的非連接工具 (NON-JOINER)\\n    }\\n    return '‍'; // 零距離的連接工具 (JOINER)\\n  }).join('') // 零距離的不中斷空白\\n);\\n```\\n\\n第三步：加入這個不可視的符號到文字就行。\\n\\n## 後記\\nConfidential Announcement: ​﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿​﻿‌﻿‌﻿‍﻿​﻿​﻿‌﻿‌﻿​﻿​﻿‌﻿‌﻿‌﻿​﻿‌﻿​﻿​﻿​﻿​﻿‍﻿​﻿​﻿​﻿​﻿‌﻿​﻿‌﻿‌﻿‌﻿​﻿‌﻿​﻿​﻿​﻿‌﻿‍﻿​﻿​﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿​﻿​﻿‌﻿‌﻿‌﻿‌﻿‍﻿​﻿​﻿‌﻿​﻿‌﻿​﻿​﻿​﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿‍﻿​﻿‌﻿‌﻿‌﻿​﻿​﻿​﻿​﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿​﻿‍﻿​﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿​﻿‌﻿​﻿‌﻿‌﻿​﻿‍﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‍﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿‍﻿​﻿‌﻿​﻿​﻿‌﻿​﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿‌﻿‌This is some confidential text that you really shouldn't be sharing anywhere else.\\n\\n希望大家玩得開心 www\\n\\n## 延伸閱讀\\n\\n1. 關於代碼洩密的那些事\\n1. [Zero width Playground][2]\\n1. [Be careful what you copy: Invisibly inserting usernames into text with Zero-Width Characters][1]\\n\\n\\n[1]: https://medium.com/@umpox/be-careful-what-you-copy-invisibly-inserting-usernames-into-text-with-zero-width-characters-18b4e6f17b66\\n[2]: https://umpox.github.io/zero-width-detection/\",\"tags\":\"JavaScript\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"createdDate\":\"2018-03-28T20:49+08:00\",\"url\":\"zhihu-unlimited-lives-website\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n一直收聽知乎無限 live 的時候，我都會想：如何才能更有效率地收聽這些計畫內的 live 呢？於是我心血來潮，把無限 live 的資料拿了下來，然後做一個數據流的網站。這個網站展示和源碼已經放在 [Github][1] 。這個項目可能適合那些喜歡看到很多數據的同學...\\n\\n![Overview][2]\\n\\n## 主要功能\\n\\n1. 展示所有無限 live 計畫下面 live 資料，包括：日期，費用，參加人數，分數，以及講者。\\n1. 提供過濾名稱功能\\n1. 提供每頁展示特定資料數量的選項（10,20,100）。\\n\\n## 數據庫\\n透過簡單的 nodejs 腳本來獲取知乎 API，並儲存到 [zhihu-unlimited-live][3]\\n\\n[1]: https://github.com/calpa/zhihu-unlimited-web\\n[2]: https://i.imgur.com/TaTf7dq.jpg\\n[3]: https://github.com/calpa/zhihu-unlimited-live\",\"tags\":\"Zhihu, JavaScript\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"createdDate\":\"2018-03-21T20:00+08:00\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n當我在更新 gatsbyjs 本體和 `gatsbyjs-*` 插件後，就發現構建 JavaScript 代碼的時候失敗。解決問題的過程，需要多聯想關鍵字。但簡單來說，只要安裝正確的 babel 轉換插件，就可以解決這個問題。\\n\\n## 問題\\n```\\nSyntaxError: Unexpected token operator «*», expected punc «(» [component---src-templates-blog-post-js-42473b53655caf4635a2.js:18311,43]\\n```\\n\\n這裡是說在 uglifyjs 處理文本的時候，預期 ( 但出現 `*` 這一個符號，如果你是有用過 generator 的話，你就會發現這裡的線索跟 generator 有一點相似。\\n\\n### generator\\n```JavaScript\\nfunction* a() {\\n  yield 1;\\n}\\n```\\n\\n### function\\n```JavaScript\\nfunction a() {\\n  return 1;\\n}\\n```\\n\\n## 解決方法\\n安裝額外的 babel 插件：\\n\\n`npm i babel-plugin-transform-decorators-legacy babel-plugin-transform-regenerator`\\n\\n安裝之後，babel 就可以把上面 generator 的代碼輸出為以下代碼：\\n```JavaScript\\nvar _marked = [a].map(regeneratorRuntime.mark);\\n\\nfunction a() {\\n  return regeneratorRuntime.wrap(function a$(_context) {\\n    while (1) {\\n      switch (_context.prev = _context.next) {\\n        case 0:\\n          _context.next = 2;\\n          return 1;\\n\\n        case 2:\\n        case \\\"end\\\":\\n          return _context.stop();\\n      }\\n    }\\n  }, _marked[0], this);\\n}\\n```\\n\\n轉換後，可以避免 `*` 這一個符號出現在 ( 之前。\\n\\n可能你會遇到這樣的報錯信息，具體錯誤位於 async 的那一行代碼上：\\n```\\nUncaught ReferenceError: regeneratorRuntime is not defined\\n```\\n\\n透過 stackoverflow 的回答可以得知，這依然是跟 async/await 相關的問題，使用 babel-plugin-transform-runtime 就好了。\\n\\n```\\nnpm install --save-dev babel-plugin-transform-runtime\\n```\\n\\n別忘記在`gatsbyjs-node.js` 文件裏面加入修改 babel 設置的[代碼][1]：\\n```JavaScript\\nexports.modifyBabelrc = ({ babelrc }) => ({\\n  ...babelrc,\\n  plugins: babelrc.plugins.concat(['transform-decorators-legacy', 'transform-regenerator', 'transform-runtime']),\\n});\\n```\\n\\n## 後記\\n果然我還是要學習一個，看著那兩個符號（`*`, `(`），也想不起居然跟 generator 有關。。。\\n\\n## 參考資料\\n1. [gatsby build issues - likely async related][2]\\n2. [loganfsmyth/babel-plugin-transform-decorators-legacy][3]\\n3. [Regenerator transform - Babel][4]\\n4. [Runtime transform][5]\\n5. [Babel 6 regeneratorRuntime is not defined][6]\\n\\n\\n[1]: https://github.com/calpa/blog/blob/master/gatsby-node.js#L115\\n[2]: https://github.com/gatsbyjs/gatsby/issues/3931#issuecomment-364414141\\n[3]: https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy\\n[4]: https://babeljs.io/docs/plugins/transform-regenerator/\\n[5]: http://babeljs.io/docs/plugins/transform-runtime/\\n[6]: https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined\",\"tags\":\"Gatsybjs, Javascript, async-await\"}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---index-2aa56de282abf7753fd3.js","module.exports = {\"data\":{\"header\":{\"headerImage\":\"https://i.imgur.com/ebCJ61b.jpg\",\"title\":\"你好，杭州。\",\"titleVisible\":true,\"subTitle\":\"Hello, Hang Zhou.\",\"subTitleVisible\":true},\"latestPosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"url\":\"netease-kaola-live\",\"createdDate\":\"2018-08-01T20:00+08:00\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"url\":\"regenerator-runtime-is-not-defined\",\"createdDate\":\"2018-07-29T20:00+08:00\"}},{\"node\":{\"title\":\"關於作者\",\"url\":\"about-calpa-liu\",\"createdDate\":\"2018-05-01T20:00+08:00\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"url\":\"insert-zero-width-characters\",\"createdDate\":\"2018-04-06T23:00+08:00\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"url\":\"zhihu-unlimited-lives-website\",\"createdDate\":\"2018-03-28T20:49+08:00\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"createdDate\":\"2018-03-21T20:00+08:00\"}}]},\"pagePosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"createdDate\":\"2018-08-01T20:00+08:00\",\"url\":\"netease-kaola-live\",\"headerImgur\":\"https://i.imgur.com/odGAstQ.jpg\",\"headerBackgroundColor\":\"#eee\",\"content\":\"## 前言\\n\\n又來到了校招的季節，為了應對這一次的招生活動，公司的 HR 舉辦很多活動，各種福利，然後朋友圈就發了一堆圖。。。不僅如此，他們還會直播答疑。。。依照國際慣例，內推碼 B222E54 先行。以下是直播的細節和內容。\\n\\n## 直播細節\\n\\n親愛的小考拉：\\n\\n相信優秀的你在校招過程中，會有很多非常好的機會，而你當前對考拉的了解，可能還只停留在消費者的階段。我們擔心會因為相互之間的熟悉程度不夠，而最終和你失之交臂，所以特意安排了這次直播，希望能夠通過面對面的形式，加深你對考拉的了解，消除你的疑惑，讓你看到日常工作狀態下真實的考拉。\\n\\n直播過程中，你可以提出任何感興趣的問題（技術、生活、美食、校招筆試原題…），我們都會盡力進行解答。我們也會在直播過程中，不定期發放考拉福利！\\n\\n具體安排如下：\\n\\n直播鏈接：https://m.kaola.com/live/roomDetail.html?roomId=403000\\n\\n直播答疑時間：\\n\\n8月1日~8月7日 \\n\\n每天21:00~21:30\\n\\n\\n| 時間     | 職位大類     | 答疑人     |\\n| ---------- | ---------- | ---------- |\\n| 8月1日  （週三）  | 所有技術類職位 | 杨文杰 考拉技術類招聘HR       |\\n| 8月2日（週四）       | BI       | 沈老闆 考拉商業智能總監       |\\n| 8月3日（週五）       | Java       | 汉姐  考拉java技術總監     |\\n| 8月6日（週一）~8月7日（週二）     | 前端&移動端&算法&測試       |  對應模塊負責人（詳見直播頁）   |\\n \\n如有任何問題，可聯繫 hzhuoxiangyu@corp.netease.com\\n期待你的加入！\\n\\n附：網易內推碼 **B222E54**，使用方式：\\n1. 訪問 https://campus.163.com \\n1. 點開你心儀的崗位\\n1. 點擊&投遞簡歷按鈕，你將看到崗位所屬部門，選擇“意向部門”—“考拉海購”\\n1. Copy and Paste 內推碼\\n1. 填寫簡歷信息，投遞簡歷\\n\\n## 感想\\n\\n天天都有小夥伴入職，十二點吃飯的時候食堂好多人。。。\\n\\n還有就是，還沒到八點，已經開始直播了。。。\",\"tags\":\"網易, 校招, 直播\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"createdDate\":\"2018-07-29T20:00+08:00\",\"url\":\"regenerator-runtime-is-not-defined\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n\\nasync/await 能讓開發者享受異步操作的快感，解決回調地獄的問題。然而，編譯器對於 async/await 的編譯有時候卻不和我們想象中的一樣。透過安裝正確插件，或改回 Promise 版本，我們可以解決這個問題。\\n\\n## 解決方法\\n\\n之前在[Gatsbyjs async/await 更新報錯解決方法](https://calpa.me/2018/03/21/gatsybjs-async-await-upgrade-bug-solution/) 就已經提及過，使用 babel-plugin-transform-runtime 就好了。\\n\\n```\\nnpm install --save-dev babel-plugin-transform-runtime\\n```\\n\\n然後在 `.babelrc` 裡面填寫：\\n\\n```\\n{\\n  \\\"plugins\\\": [\\\"transform-runtime\\\"]\\n}\\n```\\n\\n或加入自定義選項：\\n\\n```\\n{\\n  \\\"plugins\\\": [\\n    [\\\"transform-runtime\\\", {\\n      \\\"helpers\\\": false,\\n      \\\"polyfill\\\": false,\\n      \\\"regenerator\\\": true,\\n      \\\"moduleName\\\": \\\"babel-runtime\\\"\\n    }]\\n  ]\\n}\\n```\\n\\n因為 Babel 會不斷更新，所以具體配置請到官網查閱，或點擊下面的鏈接。\\n\\n\\n其實你也可以使用`babel-polyfill`，不過它會包含 `regenerator runtime` 及 `core-js`，打包的體積會變得很大。\\n\\n## 參考資料\\n1. [babel-plugin-transform-runtime - Babel](https://babeljs.io/docs/en/babel-plugin-transform-runtime#docsNav)\\n1. [babel-polyfill - Babel](https://babeljs.io/docs/en/babel-polyfill/)\",\"tags\":\"前端, Javascript, async-await\"}},{\"node\":{\"title\":\"關於作者\",\"createdDate\":\"2018-05-01T20:00+08:00\",\"url\":\"about-calpa-liu\",\"headerImgur\":\"https://i.imgur.com/mich3dS.jpg\",\"headerBackgroundColor\":\"25a2c6\",\"content\":\"## 自我介紹\\n\\n你好，謝謝你閱讀我的博客。就讓我簡單地自我介紹一下自己吧。\\n\\n時光荏苒，歲月如梭。不知不覺之間，我就已經來到杭州網易從事前端開發的事業。\\n\\n過去，我在香港科技大學就讀化學及環境工程，期間自學前端開發。\\n\\n曾經參加八次黑客松，並把心得寫成[參加八次黑客馬拉松的個人體會與總結](https://calpa.me/2017/11/06/hackathon-summary)。\\n\\n\\n## 對於前端的看法\\n\\n畢竟不是科班出身，我只好抽多點時間打好基礎，學習前端技能，跟著在 2017年 5月寫下的 [《打好 JavaScript 基礎的6個步驟》](/2017/05/21/learn-javascript-in-six-steps/)路線來做。\\n\\n到了三到四年的時候，我希望可以不再是普通的程序員，而是可以和不同的小組談笑風生。\\n\\n這就需要我提高自己的能力，認知，格局，以及大局觀。\\n\\n提高自己的技能，只是足夠生存；而提高自己的能力，則是開發大規模應用所需要的。\\n\\n## 關於我的一些事\\n\\n1. 我是一名自學的 Web 前端程序員\\n1. 本科內容與編程好像沒有什麼關係。。。\\n1. 那個。。。我最喜歡 Miku\\n1. 2016年暑假時，我在香港科技大學圖書館工作，從最基本的 HTML，CSS 開始入門。\\n1. 原來世界上好多種程序員，比如說Markdown程序員，而我則是想成為一個 Web 前端程序員\\n1. 寫博客是為了記錄一下開發日常，還有就是遇到的坑\\n1. 推薦一本書：JavaScript高級程序設計(第3版)\\n\\n## 寫博客的動機\\n\\n最初寫博客，是為了記錄一下開發日常，還有遇到的坑。不知不覺，博客的 Page View 已經超過了 ~~8~~ 30k，用戶數量也到達了 16k 了，這個數字可能還是很小，但這讓我有了去優化博客瀏覽速度的動機 XD\\n\\n## 回顧\\n\\n2018年6月，正式到杭州工作。\\n\\n2017年11月，已取得網易 offer，詳見[遠征成功﹣﹣一個香港人北上杭州豬場的前端面試之路》](https://calpa.me/2017/09/30/hang-zhou-interview-summary/)。\\n\\n現在是2017年9月，是校招的季節，不知不覺已經過了那麼久的時間。。。\\n\\n現在是2017年8月，又是內推的時節，如果你看到這篇自我介紹的話，你可以留下郵箱。這裡是我的[簡歷](https://calpa.me/resume/resume-calpa-liu-hok-yiu.pdf)，以及一點小總結。\\n1. 就讀港科大\\n2. 知識面廣，接觸過 Python, Node, Angular, Web Socket, React, Vue\\n3. 自學能力強，7次黑客馬拉松，屢次獲獎\\n4. 各社區踴躍參與，並具有一定影響力，現於掘金設有專欄\\n5. 英語閲讀無任何障礙，並能流利溝通\\n\\n## 最近開發什麼項目\\n- [blog](https://github.com/calpa/blog)\\n  個人博客系統\",\"tags\":\"自我介紹, 前端\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"createdDate\":\"2018-04-06T23:00+08:00\",\"url\":\"insert-zero-width-characters\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n\\n趁著深夜有空，我就翻譯了一篇有趣的文章。這篇文章是說如何插入任意文本到任意文本。有時候，文章都會被某些網站會直接引用博客內容。。。這一類的插入空白字符串方法，可以成為其中一個有力的追蹤源頭的線索。\\n\\n空白符號不可視，不可說，那就是一個謎一樣的地方了。\\n\\n經過實測，瀏覽器直接 Copy & Paste 都會把空白字符帶過去的。\\n\\n[Be careful what you copy: Invisibly inserting usernames into text with Zero-Width Characters][1] 這一篇文章提到了加入謎一樣的空白符號的方法。\\n\\n\\n簡單來說就是把每一個要加密的文字轉換為不可視符號，然後塞到原本的文本裏面。\\n\\n## 方法\\n\\n第一步：分割文字，並轉換成二進制格式的符號。\\n\\n```\\nconst zeroPad = num => ‘00000000’.slice(String(num).length) + num;\\nconst textToBinary = username => (\\n  username.split('').map(char =>\\n    zeroPad(char.charCodeAt(0).toString(2))).join(' ')\\n);\\n```\\n\\n第二步：對於每一個二進制符號，並進一步編譯為加密符號\\n\\n```\\nconst binaryToZeroWidth = binary => (\\n  binary.split('').map((binaryNum) => {\\n    const num = parseInt(binaryNum, 10);\\n    if (num === 1) {\\n      return ''; // 零距離的空白\\n    } else if (num === 0) {\\n      return '‌'; // 零距離的非連接工具 (NON-JOINER)\\n    }\\n    return '‍'; // 零距離的連接工具 (JOINER)\\n  }).join('') // 零距離的不中斷空白\\n);\\n```\\n\\n第三步：加入這個不可視的符號到文字就行。\\n\\n## 後記\\nConfidential Announcement: ​﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿​﻿‌﻿‌﻿‍﻿​﻿​﻿‌﻿‌﻿​﻿​﻿‌﻿‌﻿‌﻿​﻿‌﻿​﻿​﻿​﻿​﻿‍﻿​﻿​﻿​﻿​﻿‌﻿​﻿‌﻿‌﻿‌﻿​﻿‌﻿​﻿​﻿​﻿‌﻿‍﻿​﻿​﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿​﻿​﻿‌﻿‌﻿‌﻿‌﻿‍﻿​﻿​﻿‌﻿​﻿‌﻿​﻿​﻿​﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿‍﻿​﻿‌﻿‌﻿‌﻿​﻿​﻿​﻿​﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿​﻿‍﻿​﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿​﻿‌﻿​﻿‌﻿‌﻿​﻿‍﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿‌﻿‌﻿‌﻿‍﻿​﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿‌﻿​﻿‍﻿​﻿‌﻿​﻿​﻿‌﻿​﻿​﻿‌﻿​﻿‌﻿​﻿‌﻿‌﻿‌﻿‌This is some confidential text that you really shouldn't be sharing anywhere else.\\n\\n希望大家玩得開心 www\\n\\n## 延伸閱讀\\n\\n1. 關於代碼洩密的那些事\\n1. [Zero width Playground][2]\\n1. [Be careful what you copy: Invisibly inserting usernames into text with Zero-Width Characters][1]\\n\\n\\n[1]: https://medium.com/@umpox/be-careful-what-you-copy-invisibly-inserting-usernames-into-text-with-zero-width-characters-18b4e6f17b66\\n[2]: https://umpox.github.io/zero-width-detection/\",\"tags\":\"JavaScript\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"createdDate\":\"2018-03-28T20:49+08:00\",\"url\":\"zhihu-unlimited-lives-website\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n一直收聽知乎無限 live 的時候，我都會想：如何才能更有效率地收聽這些計畫內的 live 呢？於是我心血來潮，把無限 live 的資料拿了下來，然後做一個數據流的網站。這個網站展示和源碼已經放在 [Github][1] 。這個項目可能適合那些喜歡看到很多數據的同學...\\n\\n![Overview][2]\\n\\n## 主要功能\\n\\n1. 展示所有無限 live 計畫下面 live 資料，包括：日期，費用，參加人數，分數，以及講者。\\n1. 提供過濾名稱功能\\n1. 提供每頁展示特定資料數量的選項（10,20,100）。\\n\\n## 數據庫\\n透過簡單的 nodejs 腳本來獲取知乎 API，並儲存到 [zhihu-unlimited-live][3]\\n\\n[1]: https://github.com/calpa/zhihu-unlimited-web\\n[2]: https://i.imgur.com/TaTf7dq.jpg\\n[3]: https://github.com/calpa/zhihu-unlimited-live\",\"tags\":\"Zhihu, JavaScript\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"createdDate\":\"2018-03-21T20:00+08:00\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"headerImgur\":null,\"headerBackgroundColor\":null,\"content\":\"## 前言\\n當我在更新 gatsbyjs 本體和 `gatsbyjs-*` 插件後，就發現構建 JavaScript 代碼的時候失敗。解決問題的過程，需要多聯想關鍵字。但簡單來說，只要安裝正確的 babel 轉換插件，就可以解決這個問題。\\n\\n## 問題\\n```\\nSyntaxError: Unexpected token operator «*», expected punc «(» [component---src-templates-blog-post-js-42473b53655caf4635a2.js:18311,43]\\n```\\n\\n這裡是說在 uglifyjs 處理文本的時候，預期 ( 但出現 `*` 這一個符號，如果你是有用過 generator 的話，你就會發現這裡的線索跟 generator 有一點相似。\\n\\n### generator\\n```JavaScript\\nfunction* a() {\\n  yield 1;\\n}\\n```\\n\\n### function\\n```JavaScript\\nfunction a() {\\n  return 1;\\n}\\n```\\n\\n## 解決方法\\n安裝額外的 babel 插件：\\n\\n`npm i babel-plugin-transform-decorators-legacy babel-plugin-transform-regenerator`\\n\\n安裝之後，babel 就可以把上面 generator 的代碼輸出為以下代碼：\\n```JavaScript\\nvar _marked = [a].map(regeneratorRuntime.mark);\\n\\nfunction a() {\\n  return regeneratorRuntime.wrap(function a$(_context) {\\n    while (1) {\\n      switch (_context.prev = _context.next) {\\n        case 0:\\n          _context.next = 2;\\n          return 1;\\n\\n        case 2:\\n        case \\\"end\\\":\\n          return _context.stop();\\n      }\\n    }\\n  }, _marked[0], this);\\n}\\n```\\n\\n轉換後，可以避免 `*` 這一個符號出現在 ( 之前。\\n\\n可能你會遇到這樣的報錯信息，具體錯誤位於 async 的那一行代碼上：\\n```\\nUncaught ReferenceError: regeneratorRuntime is not defined\\n```\\n\\n透過 stackoverflow 的回答可以得知，這依然是跟 async/await 相關的問題，使用 babel-plugin-transform-runtime 就好了。\\n\\n```\\nnpm install --save-dev babel-plugin-transform-runtime\\n```\\n\\n別忘記在`gatsbyjs-node.js` 文件裏面加入修改 babel 設置的[代碼][1]：\\n```JavaScript\\nexports.modifyBabelrc = ({ babelrc }) => ({\\n  ...babelrc,\\n  plugins: babelrc.plugins.concat(['transform-decorators-legacy', 'transform-regenerator', 'transform-runtime']),\\n});\\n```\\n\\n## 後記\\n果然我還是要學習一個，看著那兩個符號（`*`, `(`），也想不起居然跟 generator 有關。。。\\n\\n## 參考資料\\n1. [gatsby build issues - likely async related][2]\\n2. [loganfsmyth/babel-plugin-transform-decorators-legacy][3]\\n3. [Regenerator transform - Babel][4]\\n4. [Runtime transform][5]\\n5. [Babel 6 regeneratorRuntime is not defined][6]\\n\\n\\n[1]: https://github.com/calpa/blog/blob/master/gatsby-node.js#L115\\n[2]: https://github.com/gatsbyjs/gatsby/issues/3931#issuecomment-364414141\\n[3]: https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy\\n[4]: https://babeljs.io/docs/plugins/transform-regenerator/\\n[5]: http://babeljs.io/docs/plugins/transform-runtime/\\n[6]: https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined\",\"tags\":\"Gatsybjs, Javascript, async-await\"}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/index.json\n// module id = 1044\n// module chunks = 142629428675168"],"sourceRoot":""}