{"version":3,"sources":["webpack:///path---page-7-69a8bbc49a492f75b2a8.js","webpack:///./.cache/json/page-7.json"],"names":["webpackJsonp","1052","module","exports","data","latestPosts","totalCount","edges","node","title","url","createdDate","pagePosts","headerImgur","content","tags","pathContext","limit","skip"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,WAAA,GAAAC,QAA0BC,MAAQC,MAAA,wCAAAC,IAAA,qBAAAC,YAAA,4BAAqHH,MAAQC,MAAA,kEAAAC,IAAA,qCAAAC,YAAA,4BAA+JH,MAAQC,MAAA,OAAAC,IAAA,kBAAAC,YAAA,4BAAiFH,MAAQC,MAAA,yCAAAC,IAAA,+BAAAC,YAAA,4BAAgIH,MAAQC,MAAA,kBAAAC,IAAA,gCAAAC,YAAA,4BAA0GH,MAAQC,MAAA,gCAAAC,IAAA,4CAAAC,YAAA,6BAAoIC,WAAcL,QAAUC,MAAQC,MAAA,2CAAAE,YAAA,yBAAAD,IAAA,2BAAAG,YAAA,cAAAC,QAAA,0kBAAAC,KAAA,kBAAowBP,MAAQC,MAAA,6BAAAE,YAAA,yBAAAD,IAAA,aAAAG,YAAA,KAAAC,QAAA,qHAAAC,KAAA,YAAoQP,MAAQC,MAAA,gBAAAE,YAAA,yBAAAD,IAAA,0BAAAG,YAAA,KAAAC,QAAA,siBAAAC,KAAA,UAAmrBP,MAAQC,MAAA,aAAAE,YAAA,yBAAAD,IAAA,qBAAAG,YAAA,KAAAC,QAAA,ueAAAC,KAAA,SAA2mBP,MAAQC,MAAA,gBAAAE,YAAA,yBAAAD,IAAA,eAAAG,YAAA,KAAAC,QAAA,2bAAAC,KAAA,SAAkkBP,MAAQC,MAAA,UAAAE,YAAA,yBAAAD,IAAA,YAAAG,YAAA,KAAAC,QAAA,kRAAAC,KAAA,iBAAiZC,aAAgBC,MAAA,EAAAC,KAAA","file":"path---page-7-69a8bbc49a492f75b2a8.js","sourcesContent":["webpackJsonp([16783939301590],{\n\n/***/ 1052:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"latestPosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"url\":\"netease-kaola-live\",\"createdDate\":\"2018-08-01T20:00+08:00\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"url\":\"regenerator-runtime-is-not-defined\",\"createdDate\":\"2018-07-29T20:00+08:00\"}},{\"node\":{\"title\":\"關於作者\",\"url\":\"about-calpa-liu\",\"createdDate\":\"2018-05-01T20:00+08:00\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"url\":\"insert-zero-width-characters\",\"createdDate\":\"2018-04-06T23:00+08:00\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"url\":\"zhihu-unlimited-lives-website\",\"createdDate\":\"2018-03-28T20:49+08:00\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"createdDate\":\"2018-03-21T20:00+08:00\"}}]},\"pagePosts\":{\"edges\":[{\"node\":{\"title\":\"【React Native】安裝 Android Apk 而無需連接伺服器的方法\",\"createdDate\":\"2017-04-11T17:41+08:00\",\"url\":\"react-native-run-android\",\"headerImgur\":\"IYhTVXU.png\",\"content\":\"正常情況下，我們會用命令`react-native run-android`來在自己的電話中測試app，但是這個方法需要連接電腦。\\n\\n我們可以利用以下命令：\\n```\\nreact-native bundle --dev false --platform android --entry-file index.android.js --bundle-output ./android/app/build/intermediates/assets/debug/index.android.bundle --assets-dest ./android/app/build/intermediates/res/merged/debug\\n\\ncd android\\n./gradlew assembleDebug\\n```\\n\\n## 參考資料\\n1. [Build and Install unsigned apk on device without the development server? - stackoverflow](http://stackoverflow.com/questions/35283959/build-and-install-unsigned-apk-on-device-without-the-development-server)\",\"tags\":\"React Native\"}},{\"node\":{\"title\":\"第一次使用 ssh 連接 Github 就成功的方法\",\"createdDate\":\"2017-04-11T16:30+08:00\",\"url\":\"github-ssh\",\"headerImgur\":null,\"content\":\"其實很簡單，按照下面打就是了。。。\\n\\n1. `ls -la ~/.ssh/`\\n1. `cat ~/.ssh/id_rsa.pub` 複製貼上到Github SSH Page\\n1. `ssh git@github.com`\",\"tags\":\"Github\"}},{\"node\":{\"title\":\"常見的14種HTTP狀態碼\",\"createdDate\":\"2017-04-08T14:10+08:00\",\"url\":\"common-http-status-code\",\"headerImgur\":null,\"content\":\"當用戶向伺服器發出請求時，狀態碼能夠描述伺服器返回的結果。\\n\\n1. 2XX 成功\\n  1. 200 OK\\n  1. 204 No Content\\n  1. 206 Partial Content\\n\\n1. 3XX 重新導向\\n  1. 301 Moved Permanently\\n  1. 302 Found\\n  1. 303 See Other\\n  1. 304 Not Modified\\n  1. 307 Temporary Redirect\\n\\n1. 4XX 客戶端錯誤\\n  1. 400 Bad Request\\n\\n    伺服器無法理解當前請求\\n  1. 401 Unauthorized\\n  1. 403 Forbidden\\n  1. 404 Not Found\\n\\n1. 5XX 伺服器錯誤\\n  1. 500 Internal Server Error\\n  1. 503 Service Unavailable\\n\\n\\n## 參考資料\\n1. 圖解HTTP\\n1. [10 Status Code Definitions](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)\\n\",\"tags\":\"HTTP\"}},{\"node\":{\"title\":\"前端工程師的入門書單\",\"createdDate\":\"2017-04-05T22:51+08:00\",\"url\":\"front-end-booklist\",\"headerImgur\":null,\"content\":\"![Books](https://i.imgur.com/CTfB7K9.jpg)\\n\\n在二十一世紀資訊發達的年代，我們很容易在互聯網上獲取這些書本的內容，而且能夠獲取書籍的最新內容。比如說vczero寫的[React Native入门与实战](https://github.com/vczero/react-native-lesson)，作者已經在Github上放上自己的書本內容，以及代碼。雖然我在電腦和手機里已經看過這些書，但當我拿起實體書的時候，那種感覺是非常不同的。\\n\\n以下這些書都是很值得去閱讀（開坑）的：\\n\\n1. JavaScript 高級程序設計(第三版)\\n\\n  我在去年的暑假看過一次這本書，感覺能夠學到很多JavaScript的細節。\\n\\n1. CSS揭秘\\n\\n1. 圖解HTTP\\n\\n  [常見的14種HTTP狀態碼](https://calpa.me/2017/04/08/common-http-status-code/)\\n\\n1. 人月神話\\n\\n1. Clean Code\\n\\n1. Code Complete\\n\",\"tags\":\"Web\"}},{\"node\":{\"title\":\"Git多人合作開發工作流程\",\"createdDate\":\"2017-04-01T22:22+08:00\",\"url\":\"git-workflow\",\"headerImgur\":null,\"content\":\"## 流程\\n1. `git fetch` 確認遠端數據庫的內容\\n1. `git checkout dev` 從現有支線轉到開發支線\\n1. `git pull` 下載遠端數據庫到本地\\n1. 永遠使用`git pull`之後才使用`git push`\\n1. `git commit -m \\\"Message\\\"` 很實用。。。\\n1. `git checkout -b \\\"New Branch\\\"` 可以直接開新支線，並切換到那條支線上\\n1. `git push origin \\\"updated-branch\\\"` 就可以推上去遠端數據庫\\n\\n## fetch\\n使用`fetch`指令可以避免更改本地數據庫，同時更新其他人更新遠端數據庫後的內容。\\n\\n## checkout\\n`checkout`切換本地數據庫支線，正常情況下應該建立超過兩條支線，比如說`master`只用作發佈更新版本，`dev`用作開發。\\n\\n個人開發項目和與他人一同開發項目是兩回事來的。。。\\n\",\"tags\":\"Git\"}},{\"node\":{\"title\":\"某一次面試後記\",\"createdDate\":\"2017-03-27T20:00+08:00\",\"url\":\"interview\",\"headerImgur\":null,\"content\":\"## 前言\\n原本預約了兩點面試的，結果我一點多就去到，面試官讓我在一旁坐坐。感覺這次面試氣氛不錯，但是不知道為什麼每次面試，大多時間都是問Database的問題。。。\\n\\n## 面試問題：\\n### 背景\\n1. 請自我介紹\\n1. 為什麼會從前端開始？\\n1. 請畫出現在項目的技術圖，並簡單介紹一下\\n1. 你最近在探索什麼新技術？\\n\\n### 技術\\n1. NoSQL和SQL的比較，優點和缺點？\\n1. 哪一個性能比較好？\\n1. HTTPS如何加密\\n\\n## 行動\\nLearning by Coding，動手做項目學習吧。\",\"tags\":\"Interview\"}}]}},\"pathContext\":{\"limit\":6,\"skip\":42}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---page-7-69a8bbc49a492f75b2a8.js","module.exports = {\"data\":{\"latestPosts\":{\"totalCount\":60,\"edges\":[{\"node\":{\"title\":\"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）\",\"url\":\"netease-kaola-live\",\"createdDate\":\"2018-08-01T20:00+08:00\"}},{\"node\":{\"title\":\"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法\",\"url\":\"regenerator-runtime-is-not-defined\",\"createdDate\":\"2018-07-29T20:00+08:00\"}},{\"node\":{\"title\":\"關於作者\",\"url\":\"about-calpa-liu\",\"createdDate\":\"2018-05-01T20:00+08:00\"}},{\"node\":{\"title\":\"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」\",\"url\":\"insert-zero-width-characters\",\"createdDate\":\"2018-04-06T23:00+08:00\"}},{\"node\":{\"title\":\"知乎無限 live 數據流網站\",\"url\":\"zhihu-unlimited-lives-website\",\"createdDate\":\"2018-03-28T20:49+08:00\"}},{\"node\":{\"title\":\"Gatsbyjs async/await 更新報錯解決方法\",\"url\":\"gatsybjs-async-await-upgrade-bug-solution\",\"createdDate\":\"2018-03-21T20:00+08:00\"}}]},\"pagePosts\":{\"edges\":[{\"node\":{\"title\":\"【React Native】安裝 Android Apk 而無需連接伺服器的方法\",\"createdDate\":\"2017-04-11T17:41+08:00\",\"url\":\"react-native-run-android\",\"headerImgur\":\"IYhTVXU.png\",\"content\":\"正常情況下，我們會用命令`react-native run-android`來在自己的電話中測試app，但是這個方法需要連接電腦。\\n\\n我們可以利用以下命令：\\n```\\nreact-native bundle --dev false --platform android --entry-file index.android.js --bundle-output ./android/app/build/intermediates/assets/debug/index.android.bundle --assets-dest ./android/app/build/intermediates/res/merged/debug\\n\\ncd android\\n./gradlew assembleDebug\\n```\\n\\n## 參考資料\\n1. [Build and Install unsigned apk on device without the development server? - stackoverflow](http://stackoverflow.com/questions/35283959/build-and-install-unsigned-apk-on-device-without-the-development-server)\",\"tags\":\"React Native\"}},{\"node\":{\"title\":\"第一次使用 ssh 連接 Github 就成功的方法\",\"createdDate\":\"2017-04-11T16:30+08:00\",\"url\":\"github-ssh\",\"headerImgur\":null,\"content\":\"其實很簡單，按照下面打就是了。。。\\n\\n1. `ls -la ~/.ssh/`\\n1. `cat ~/.ssh/id_rsa.pub` 複製貼上到Github SSH Page\\n1. `ssh git@github.com`\",\"tags\":\"Github\"}},{\"node\":{\"title\":\"常見的14種HTTP狀態碼\",\"createdDate\":\"2017-04-08T14:10+08:00\",\"url\":\"common-http-status-code\",\"headerImgur\":null,\"content\":\"當用戶向伺服器發出請求時，狀態碼能夠描述伺服器返回的結果。\\n\\n1. 2XX 成功\\n  1. 200 OK\\n  1. 204 No Content\\n  1. 206 Partial Content\\n\\n1. 3XX 重新導向\\n  1. 301 Moved Permanently\\n  1. 302 Found\\n  1. 303 See Other\\n  1. 304 Not Modified\\n  1. 307 Temporary Redirect\\n\\n1. 4XX 客戶端錯誤\\n  1. 400 Bad Request\\n\\n    伺服器無法理解當前請求\\n  1. 401 Unauthorized\\n  1. 403 Forbidden\\n  1. 404 Not Found\\n\\n1. 5XX 伺服器錯誤\\n  1. 500 Internal Server Error\\n  1. 503 Service Unavailable\\n\\n\\n## 參考資料\\n1. 圖解HTTP\\n1. [10 Status Code Definitions](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)\\n\",\"tags\":\"HTTP\"}},{\"node\":{\"title\":\"前端工程師的入門書單\",\"createdDate\":\"2017-04-05T22:51+08:00\",\"url\":\"front-end-booklist\",\"headerImgur\":null,\"content\":\"![Books](https://i.imgur.com/CTfB7K9.jpg)\\n\\n在二十一世紀資訊發達的年代，我們很容易在互聯網上獲取這些書本的內容，而且能夠獲取書籍的最新內容。比如說vczero寫的[React Native入门与实战](https://github.com/vczero/react-native-lesson)，作者已經在Github上放上自己的書本內容，以及代碼。雖然我在電腦和手機里已經看過這些書，但當我拿起實體書的時候，那種感覺是非常不同的。\\n\\n以下這些書都是很值得去閱讀（開坑）的：\\n\\n1. JavaScript 高級程序設計(第三版)\\n\\n  我在去年的暑假看過一次這本書，感覺能夠學到很多JavaScript的細節。\\n\\n1. CSS揭秘\\n\\n1. 圖解HTTP\\n\\n  [常見的14種HTTP狀態碼](https://calpa.me/2017/04/08/common-http-status-code/)\\n\\n1. 人月神話\\n\\n1. Clean Code\\n\\n1. Code Complete\\n\",\"tags\":\"Web\"}},{\"node\":{\"title\":\"Git多人合作開發工作流程\",\"createdDate\":\"2017-04-01T22:22+08:00\",\"url\":\"git-workflow\",\"headerImgur\":null,\"content\":\"## 流程\\n1. `git fetch` 確認遠端數據庫的內容\\n1. `git checkout dev` 從現有支線轉到開發支線\\n1. `git pull` 下載遠端數據庫到本地\\n1. 永遠使用`git pull`之後才使用`git push`\\n1. `git commit -m \\\"Message\\\"` 很實用。。。\\n1. `git checkout -b \\\"New Branch\\\"` 可以直接開新支線，並切換到那條支線上\\n1. `git push origin \\\"updated-branch\\\"` 就可以推上去遠端數據庫\\n\\n## fetch\\n使用`fetch`指令可以避免更改本地數據庫，同時更新其他人更新遠端數據庫後的內容。\\n\\n## checkout\\n`checkout`切換本地數據庫支線，正常情況下應該建立超過兩條支線，比如說`master`只用作發佈更新版本，`dev`用作開發。\\n\\n個人開發項目和與他人一同開發項目是兩回事來的。。。\\n\",\"tags\":\"Git\"}},{\"node\":{\"title\":\"某一次面試後記\",\"createdDate\":\"2017-03-27T20:00+08:00\",\"url\":\"interview\",\"headerImgur\":null,\"content\":\"## 前言\\n原本預約了兩點面試的，結果我一點多就去到，面試官讓我在一旁坐坐。感覺這次面試氣氛不錯，但是不知道為什麼每次面試，大多時間都是問Database的問題。。。\\n\\n## 面試問題：\\n### 背景\\n1. 請自我介紹\\n1. 為什麼會從前端開始？\\n1. 請畫出現在項目的技術圖，並簡單介紹一下\\n1. 你最近在探索什麼新技術？\\n\\n### 技術\\n1. NoSQL和SQL的比較，優點和缺點？\\n1. 哪一個性能比較好？\\n1. HTTPS如何加密\\n\\n## 行動\\nLearning by Coding，動手做項目學習吧。\",\"tags\":\"Interview\"}}]}},\"pathContext\":{\"limit\":6,\"skip\":42}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/page-7.json\n// module id = 1052\n// module chunks = 16783939301590"],"sourceRoot":""}