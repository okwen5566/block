webpackJsonp([0xae8112a621d1],{994:function(s,n){s.exports={data:{content:{content:'<p>在這些時候，我可以附和著笑，老闆是決不責備的。而且老闆見了他，也每每這樣問他，引人發笑。他自己知道不能和他們談天，便只好向孩子說話。有一回對我說道：「你讀過書麼？」我略略點一點頭。他說：「讀過書，。。。我便考你一考。代碼的Hello World，怎樣寫的？」他等了許久，很懇切的說道：「不能寫罷？。。。我教給你，記著！這些字應該記著。將來做老闆的時候，Debug要用。」我暗想我和老闆的等級還很遠呢，而且我們老闆也從不將代碼上傳；又好笑，又不耐煩，懶懶的答他道：「誰要你教，不就是用alert輸出嘛」他顯出極高興的樣子，將兩個指頭的長指甲敲著鍵盤，點頭說：「對呀對呀！。。。Hello World有四樣寫法，你知道麼？」我愈不耐煩了，努著嘴走遠。他剛用指甲蘸了酒，想在鍵盤上打字，見我毫不熱心，便又歎一口氣，顯出極惋惜的樣子。</p>\n<h2 id=alert()>alert()</h2>\n<p><code>alert(&quot;Hello, World!!&quot;);</code></p>\n<h2 id=document.write()>document.write()</h2>\n<p>直接輸出<code>Hello, World!</code>到document:\n<code>document.write(\'Hello, World!\');</code></p>\n<h2 id=document.writeln()>document.writeln()</h2>\n<p>在現有的document上增加<code>Hello, World!</code>這一行：</p>\n<p><code>document.writeln(\'Hello, World!\');</code></p>\n<h2 id=Functionconstructor>Function constructor</h2>\n<p>使用Function constructor, 以及 Immediately-Invoked Function Expression (IIFE):</p>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Function</span> ([arg1[, arg2[, ...argN]],] functionBody);\n(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Function</span> (<span class="hljs-string">\'console.log("Hello, World")\'</span>))();\n</code></pre></code></pre>\n<p>順帶一提，以下三種寫法，結果都是一樣的。</p>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Function</span>(<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"c"</span>, <span class="hljs-string">"return a+b+c;"</span>); <span class="hljs-comment">// 每一個arugument都用,分開</span>\n<span class="hljs-keyword">new</span> <span class="hljs-built_in">Function</span>(<span class="hljs-string">"a, b, c"</span>, <span class="hljs-string">"return a+b+c;"</span>);      \n<span class="hljs-keyword">new</span> <span class="hljs-built_in">Function</span>(<span class="hljs-string">"a,b"</span>, <span class="hljs-string">"c"</span>, <span class="hljs-string">"return a+b+c;"</span>);\n</code></pre></code></pre>\n<p>輸出：</p>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">anonymous</span>(<span class="hljs-params">a, b, c\n<span class="hljs-regexp">/*``*/</span></span>) </span>{\n<span class="hljs-keyword">return</span> a+b+c;\n}\n</code></pre></code></pre>\n<h2 id=Functiondeclaration>Function declaration</h2>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHello</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Hello, World!\'</span>);\n}\n\nsayHello(); <span class="hljs-comment">// Hello, World!</span>\nsayHello    <span class="hljs-comment">// function sayHello() {</span>\n        <span class="hljs-comment">//   console.log(\'Hello, World!\');</span>\n        <span class="hljs-comment">// }</span>\n</code></pre></code></pre>\n<h2 id=ArrowFunction>Arrow Function</h2>\n<pre><code><pre><code class="hljs javascript">() =&gt; { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Hello, World!\'</span>)};\n<span class="hljs-function">(<span class="hljs-params">(</span>) =&gt;</span> { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Hello, World!\'</span>)})(); <span class="hljs-comment">// Hello, World!</span>\n</code></pre></code></pre>\n<h2 id=Promise>Promise</h2>\n<p>先定義一個Promise：</p>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> helloPromise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve</span>)</span>{\n    resolve(<span class="hljs-string">"Hello, World!"</span>);\n});\n</code></pre></code></pre>\n<p>如果resolve成功的話，就會輸出&quot;Hello, World!&quot;:</p>\n<pre><code><pre><code class="hljs javascript">helloPromise.then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(value);\n}).catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(error);\n}); <span class="hljs-comment">// Hello, World!</span>\n</code></pre></code></pre>\n<p>當然，你也可以利用Arrow Function這樣寫：</p>\n<pre><code><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> helloPromise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n  resolve(<span class="hljs-string">"Hello, World!"</span>);\n});\n\nhelloPromise.then(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(value);\n}).catch(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(error);\n});\n</code></pre></code></pre>\n<p>有幾回，鄰舍孩子聽得笑聲，也趕熱鬧，圍住了他。他便給他們看代碼，一人一段。孩子看完代碼，仍然不散，眼睛都望著屏幕。他著了慌，伸開五指將屏幕罩住，彎腰下去說道：「不多了，我已經不多了。」直起身又看一看代碼，自己搖頭說：「不多不多！多乎哉？不多也。」於是這一群孩子都在笑聲裏走散了。</p>\n<p>他是這樣的使人快活，可是沒有他，別人也便這麼過。</p>\n<p>自此以後，又長久沒有看見爪哇文。到了年關，掌櫃取下粉板說：「爪哇文還欠十九行代碼呢！」到第二年的端午，又說「爪哇文還欠十九行代碼呢！」到中秋可是沒有說，再到年關也沒有看見他。</p>\n<h2 id=參考資料>參考資料</h2>\n<p><a href="https://tc39.github.io/ecma262/#sec-function-p1-p2-pn-body">Function constructor - ECMAScript® 2018 Language Specification</a></p>\n',title:"JavaScript 的 N 種 Hello World方法",createdDate:"2017-04-27T14:34+08:00",headerImgur:"KMksHxZ.png",id:"2n9kdkrXksiyKSc6CEMQeQ",toc:["alert()","document.write()","document.writeln()","Functionconstructor","Functiondeclaration","ArrowFunction","Promise","參考資料"],tags:"JavaScript"},latestPosts:{totalCount:60,edges:[{node:{title:"【網易考拉校招】部門總監面對面-直播答疑邀約（附網易內推碼B222E54）",url:"netease-kaola-live",createdDate:"2018-08-01T20:00+08:00"}},{node:{title:"Uncaught ReferenceError: regeneratorRuntime is not defined 解決方法",url:"regenerator-runtime-is-not-defined",createdDate:"2018-07-29T20:00+08:00"}},{node:{title:"關於作者",url:"about-calpa-liu",createdDate:"2018-05-01T20:00+08:00"}},{node:{title:"【方法】在直接複製貼上內容的時候，可能已經不知不覺注入了一段不可視的「空白」",url:"insert-zero-width-characters",createdDate:"2018-04-06T23:00+08:00"}},{node:{title:"知乎無限 live 數據流網站",url:"zhihu-unlimited-lives-website",createdDate:"2018-03-28T20:49+08:00"}},{node:{title:"Gatsbyjs async/await 更新報錯解決方法",url:"gatsybjs-async-await-upgrade-bug-solution",createdDate:"2018-03-21T20:00+08:00"}}]}},pathContext:{id:"2n9kdkrXksiyKSc6CEMQeQ"}}}});
//# sourceMappingURL=path---2017-04-27-n-ways-to-output-hello-world-ad28396931245991caf0.js.map