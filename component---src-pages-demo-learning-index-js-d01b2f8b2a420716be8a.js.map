{"version":3,"sources":["webpack:///component---src-pages-demo-learning-index-js-d01b2f8b2a420716be8a.js","webpack:///./data/front-end/data.js","webpack:///./data/front-end/index.js","webpack:///./data/front-end/link/css.js","webpack:///./data/front-end/link/index.js","webpack:///./data/front-end/link/javascript.js","webpack:///./data/front-end/link/others.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/action/roamHelper.js","webpack:///./~/echarts/lib/chart/graph.js","webpack:///./~/echarts/lib/chart/graph/GraphSeries.js","webpack:///./~/echarts/lib/chart/graph/GraphView.js","webpack:///./~/echarts/lib/chart/graph/adjustEdge.js","webpack:///./~/echarts/lib/chart/graph/categoryFilter.js","webpack:///./~/echarts/lib/chart/graph/categoryVisual.js","webpack:///./~/echarts/lib/chart/graph/circularLayout.js","webpack:///./~/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./~/echarts/lib/chart/graph/createView.js","webpack:///./~/echarts/lib/chart/graph/edgeVisual.js","webpack:///./~/echarts/lib/chart/graph/forceHelper.js","webpack:///./~/echarts/lib/chart/graph/forceLayout.js","webpack:///./~/echarts/lib/chart/graph/graphAction.js","webpack:///./~/echarts/lib/chart/graph/simpleLayout.js","webpack:///./~/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./~/echarts/lib/chart/helper/Line.js","webpack:///./~/echarts/lib/chart/helper/LineDraw.js","webpack:///./~/echarts/lib/chart/helper/LinePath.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./~/echarts/lib/chart/helper/labelHelper.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/component/gridSimple.js","webpack:///./~/echarts/lib/component/helper/RoamController.js","webpack:///./~/echarts/lib/component/helper/cursorHelper.js","webpack:///./~/echarts/lib/component/helper/interactionMutex.js","webpack:///./~/echarts/lib/component/helper/roamHelper.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/config.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/View.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/geo/Region.js","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/data/Graph.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/OrdinalMeta.js","webpack:///./~/echarts/lib/data/Source.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/data/helper/createDimensions.js","webpack:///./~/echarts/lib/data/helper/dataProvider.js","webpack:///./~/echarts/lib/data/helper/dimensionHelper.js","webpack:///./~/echarts/lib/data/helper/linkList.js","webpack:///./~/echarts/lib/data/helper/sourceHelper.js","webpack:///./~/echarts/lib/data/helper/sourceType.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/export.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/lang.js","webpack:///./~/echarts/lib/layout/barGrid.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/model/mixin/dataFormat.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/model/referHelper.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/stream/Scheduler.js","webpack:///./~/echarts/lib/stream/task.js","webpack:///./~/echarts/lib/theme/dark.js","webpack:///./~/echarts/lib/theme/light.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/aria.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/polygon.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/zrender/lib/graphic/helper/fixShadow.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./src/components/LearningMap/index.js","webpack:///./src/pages/demo/learning/index.js"],"names":["webpackJsonp","606","module","exports","__esModule","data","name","draggable","category","default","607","__webpack_require__","_interopRequireDefault","obj","_link","_link2","_data","_data2","options","title","text","top","left","tooltip","legend","show","selectedMode","bottom","toolbox","feature","dataView","readOnly","restore","saveAsImage","animationDuration","animationEasingUpdate","series","type","layout","force","repulsion","links","categories","focusNodeAdjacency","roam","label","normal","position","lineStyle","color","curveness","608","css","source","target","609","_javascript","_javascript2","_css","_css2","_others","_others2","concat","javascript","others","610","611","189","CoordinateSystemManager","this","_coordinateSystems","zrUtil","coordinateSystemCreators","prototype","constructor","create","ecModel","api","coordinateSystems","each","creater","list","update","coordSys","getCoordinateSystems","slice","register","coordinateSystemCreator","get","_default","407","ExtensionAPI","chartInstance","echartsAPIList","bind","753","updateCenterAndZoom","view","payload","zoomLimit","previousZoom","getZoom","center","getCenter","zoom","point","dataToPoint","dx","dy","pointToData","setCenter","zoomMin","min","zoomMax","max","Infinity","Math","scale","fixX","originX","fixY","originY","updateTransform","setZoom","754","echarts","categoryFilter","visualSymbol","categoryVisual","edgeVisual","simpleLayout","circularLayout","forceLayout","createView","registerProcessor","registerVisual","registerLayout","registerCoordinateSystem","755","List","_model","defaultEmphasis","Model","_format","encodeHTML","createGraphFromNodeEdge","GraphSeries","extendSeriesModel","init","option","superApply","arguments","legendDataProvider","_categoriesData","fillDataTextStyle","edges","_updateCategoriesData","mergeOption","mergeDefaultAndTheme","getInitialData","beforeLink","nodeData","edgeData","edgeGetParent","path","parsePath","fakeSeriesModel","parentModel","wrapMethod","model","categoriesModels","self","_categoriesModels","categoryIdx","getShallow","categoryModel","edgeLabelModel","getModel","customizeGetParent","nodes","getGraph","getData","graph","getEdgeData","getCategoriesData","formatTooltip","dataIndex","multipleSeries","dataType","params","getDataParams","edge","getEdgeByIndex","sourceName","getName","node1","targetName","node2","html","push","join","value","map","extend","categoriesData","initData","mapArray","idx","getItemModel","isAnimationEnabled","superCall","defaultOption","zlevel","z","coordinateSystem","legendHoverLink","hoverAnimation","circular","rotateLabel","initLayout","gravity","edgeLength","layoutAnimation","symbol","symbolSize","edgeSymbol","edgeSymbolSize","edgeLabel","nodeScaleRatio","formatter","itemStyle","width","opacity","emphasis","756","getItemOpacity","item","opacityPath","getVisual","fadeOutItem","opacityRatio","el","getGraphicEl","downplay","traverse","child","setStyle","fadeInItem","highlight","SymbolDraw","LineDraw","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","graphic","adjustEdge","nodeOpacityPath","lineOpacityPath","extendChartView","symbolDraw","lineDraw","group","_controller","getZr","_controllerHost","add","_symbolDraw","_lineDraw","_firstRender","render","seriesModel","_nodeScaleRatio","groupNewProp","attr","updateProps","_getNodeGlobalScale","updateData","_updateNodeAndLinkScale","_updateController","clearTimeout","_layoutTimeout","_startForceLayoutIteration","eachItemGraphicEl","itemModel","off","on","warmUp","_layouting","setFixed","setItemLayout","setUnfixed","setDraggable","__focusNodeAdjacency","__unfocusNodeAdjacency","dispatchAction","seriesId","id","eachEdge","edgeDataIndex","circularRotateLabel","cx","getLayout","cy","symbolPath","getSymbolPath","pos","getItemLayout","rad","atan2","PI","isLeft","textPosition","textRotation","textOrigin","hoverStyle","dispose","node","getNodeByIndex","eachNode","adjacentEdge","unfocusNodeAdjacency","step","stopped","updateLayout","setTimeout","controller","controllerHost","setPointerChecker","e","x","y","rect","getBoundingRect","applyTransform","transform","contain","disable","enable","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","nodeScale","invScale","groupScale","groupZoom","roamZoom","remove","757","intersectCurveCircle","curvePoints","radius","t","p0","p1","p2","d","radiusSquare","interval","_t","v1","quadraticAt","diff","mathAbs","v2DistSquare","i","next","v2","v3","nextDiff","getSymbolSize","Array","tmp0","quadraticSubdivide","curveTool","pts","pts2","v","linePoints","fromSymbol","toSymbol","__original","vec2","clone","originalPoints","copy","sub","normalize","scaleAndAdd","distSquare","abs","758","legendModels","findComponents","mainType","length","eachSeriesByType","graphSeries","categoryNames","filterSelf","isSelected","759","paletteScope","categoryNameIdxMap","getColorFromPalette","setItemVisual","count","getItemVisual","760","_circularLayoutHelper","408","angle","sum","getSum","unitAngle","height","r","getValue","setLayout","cos","sin","cp1","x12","y12","761","getViewRect","aspect","getBoxLayoutParams","getLayoutRect","getWidth","getHeight","viewList","coordSysType","positions","bbox","fromPoints","viewRect","isNaN","bbWidth","bbHeight","viewWidth","viewHeight","viewCoordSys","View","setBoundingRect","setViewRect","_layout","762","a","symbolType","colorQuery","split","opacityQuery","setVisual","763","opts","n","p","random","pp","friction","fixed","cb","v12","nLen","n1","n2","len","w","j","set","repFact","rep","764","preservedPoints","forceModel","getId","NaN","nodeDataExtent","getDataExtent","edgeDataExtent","isArray","linearMap","forceInstance","oldStep","l","points","_forceHelper","_simpleLayoutHelper","_number","765","_roamHelper","actionInfo","event","registerAction","eachComponent","query","res","766","dimensions","coordDim","mapDimension","hasValue","val","simpleLayoutEdge","_util","409","767","makeSymbolTypeKey","symbolCategory","createSymbol","lineData","symbolUtil","createLine","line","LinePath","setLinePoints","shape","targetShape","x1","y1","x2","y2","percent","cpx1","cpy1","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","childOfName","symbolTo","ignore","parentNode","parent","__dirty","fromPos","pointAt","toPos","vector","tangent","tangentAt","textAlign","textVerticalAlign","distance","__position","halfPercent","cp","rotation","style","__verticalAlign","__textAlign","Line","seriesScope","Group","call","_createLine","round","SYMBOL_CATEGORIES","lineProto","beforeUpdate","hostModel","initProps","Text","_updateCommonStl","key","hoverLineStyle","labelModel","hoverLabelModel","hasItemOption","getLineStyle","visualColor","visualOpacity","retrieve3","useStyle","defaults","strokeNoScale","fill","stroke","setColor","defaultLabelColor","normalText","emphasisText","showLabel","hoverShowLabel","getFormattedLabel","rawVal","getRawValue","isFinite","retrieve2","labelStyle","setTextStyle","autoColor","textFill","getTextColor","fontStyle","fontWeight","fontSize","fontFamily","setHoverStyle","trigger","linePath","dirty","inherits","768","ctor","_ctor","LineGroup","doAdd","itemLayout","lineNeedsDraw","setItemGraphicEl","doUpdate","oldLineData","newLineData","oldIdx","newIdx","itemEl","getItemGraphicEl","makeSeriesScope","isPointNaN","pt","lineDrawProto","isPersistent","_lineData","removeAll","execute","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","useHoverLayer","start","end","_clearIncremental","_incremental","clearDisplaybles","769","isLine","straightLineProto","bezierCurveProto","BezierCurve","extendShape","buildPath","ctx","770","getScale","SymbolClz","driftSymbol","drift","_symbol","parsePercent","_labelHelper","getDefaultLabel","symbolProto","_createSymbol","z2","culling","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","setZ","cursor","silent","isInit","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","opt","useNameLabel","hoverItemStyle","symbolRotate","symbolOffset","cursorStyle","getItemStyle","elStyle","symbolInnerColor","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","onEmphasis","ratio","animateTo","onNormal","fadeOut","keepLabel","771","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","SymbolCtor","symbolEl","enableAnimation","772","directed","Graph","addNode","retrieve","linkNameList","validEdges","linkCount","link","addEdge","createListFromArray","coordSysCtor","CoordinateSystem","dimensionNames","createDimensions","coordDimensions","linkList","mainData","struct","structAttr","datas","datasAttr","410","Source","isInstance","seriesDataToSource","coordSysDimDefs","coordSysName","registeredCoordSys","coordSysDefine","getCoordSysDefineBySeries","coordSysDims","dim","dimInfo","axisModel","axisMap","axisType","getDimensionTypeByAxis","stackable","isStackable","getDimensionsInfo","firstCategoryDimIndex","hasNameEncode","dimInfoList","dimIndex","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","dimName","defaultDimValueGetter","sourceFormat","SOURCE_FORMAT_ORIGINAL","sampleItem","firstDataNotNull","getDataItemValue","_sourceType","_dimensionHelper","_referHelper","773","inner","makeInner","fields","pipelineContext","originalLarge","large","originalIncremental","incrementalRender","774","labelDims","retrieveRawValue","vals","_dataProvider","775","411","makeAxisEventDataBase","eventData","componentType","componentIndex","endTextLayout","textRotate","extent","rotationDiff","remRadian","inverse","onLeft","isRadianAroundZero","isSilent","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","identity","rotate","mul","getLocalTransform","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","axis","isBlank","tickModel","lineStyleModel","tickLen","tickInterval","getInterval","labelInterval","ticksCoords","getTicksCoords","ticks","getTicks","pt1","pt2","matrix","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","subPixelOptimizeLine","anid","buildAxisLabel","axisLabelShow","labelMargin","labels","getFormattedLabels","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","getCategories","triggerEvent","tickVal","index","itemLabelModel","textStyle","textColor","dataToCoord","labelOffset","labelStr","getLabel","textEl","targetType","_dumbGroup","decomposeTransform","formatUtil","_vector","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","getExtent","lineCap","strokeContainThreshold","arrows","arrowSize","symbolWidth","symbolHeight","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","content","axisRotation","direction","rawTick","412","updateAxisPointer","axisView","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModel","axisPointerModelHelper","getAxisPointerModel","_axisPointer","disposeAxisPointer","axisPointer","_config","__DEV__","extendComponentView","fixValue","axisPointerClazz","registerAxisPointerClass","clazz","776","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","gridModel","getCoordSysModel","groupTransition","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","getRect","isHorizontal","lineCount","toGlobalCoord","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","prevX","prevY","areaInterval","areaStyle","getAreaStyle","Rect","413","grid","rawAxisPosition","axisPosition","onZero","axisDim","rectBound","right","axisOffset","posBound","otherAxis","getAxis","onZeroAxisIndex","onZeroCoord","dirMap","labelInside","getLabelInterval","414","axisTrigger","registerPreprocessor","PRIORITY","PROCESSOR","STATISTIC","getComponent","coordSysAxesInfo","collect","777","AxisPointerModel","extendComponentModel","triggerOn","snap","triggerTooltip","status","animation","animationDurationUpdate","shadowStyle","precision","margin","padding","backgroundColor","borderColor","borderWidth","shadowBlur","shadowColor","handle","icon","size","shadowOffsetX","shadowOffsetY","throttle","778","globalListener","AxisPointerView","globalAxisPointerModel","globalTooltipModel","currTrigger","indexOf","offsetX","offsetY","unregister","779","BaseAxisPointer","animationModel","moveAnimation","props","propsEqual","lastProp","lastProps","newProps","isObject","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","clazzUtil","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","hide","elOption","makeElOption","graphicKey","clear","_moveAnimation","determineAnimation","doUpdateProps","curry","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","getBandWidth","seriesDataCount","getAxisInfo","axisExtent","pointerOption","pointer","pointerEl","updateHandleTransform","zr","handleModel","createIcon","onmousemove","stop","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","createOrUpdate","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axesInfo","axisIndex","doClear","buildLabel","xy","wh","xDimIndex","enableClassExtend","415","getCartesian","getAxisDimIndex","viewHelper","CartesianAxisPointer","axisPointerType","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","buildElStyle","pointerShapeBuilder","layoutInfo","buildCartesianSingleLabelElOption","getTransformedPosition","delta","currPosition","cursorOtherValue","tooltipOptions","verticalAlign","align","makeLineShape","shadow","bandWidth","span","makeRectShape","780","finder","illegalPoint","findPointFromSeries","seriesIndex","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","containPoint","axisInfo","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","parse","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","containData","involveSeries","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","Number","MAX_VALUE","minDiff","seriesModels","seriesNestestValue","dataIndices","dataDim","getAxisTooltipData","result","nestestValue","indicesOfNearest","dist","dataIndexInside","getRawIndex","coordSysModel","modelHelper","makeKey","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","dataByAxis","axisId","valueLabelOpt","seriesDataIndices","outputAxesInfo","valItem","useHandle","escapeConnect","highDownKey","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","416","getSeriesByIndex","modelUtil","queryDataIndex","getTooltipPosition","getValues","417","handler","env","records","initGlobalListeners","record","useHandler","eventType","dis","makeDispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","pendingList","190","seriesInvolved","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","axisPointerEnabled","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","eachSeries","seriesTooltipTrigger","seriesTooltipShow","linkOption","checkPropInLink","linkPropValue","axisPropValue","reverse","418","styleModel","buildLabelElOption","labelPos","getValueLabel","paddings","normalizeCssArray","font","textRect","textContain","confineInContainer","bgColor","lineWidth","axisHelper","getAxisRawValue","seriesData","idxItem","dataParams","isString","replace","isFunction","translate","textLayout","makeSectorShape","r0","startAngle","endAngle","clockwise","781","782","xAxis","yAxis","783","pointerChecker","_zr","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","Eventful","controlType","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","isPinching","_pinching","notLeftMouse","_x","_y","checkKeyBinding","gestureEvent","interactionMutex","isTaken","oldX","oldY","wheelDelta","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","mixin","784","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","brush","785","take","resourceKey","userKey","store","getStore","release","uKey","ATTR","786","newZoom","zoomScale","787","788","assembleTransition","duration","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","tooltipModel","transitionDuration","canvasSupported","zrColor","toHex","borderName","camelCase","toCamelCase","TooltipContent","container","wxa","document","createElement","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","window","eventUtil","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","gCssText","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","time","isShow","789","dependencies","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","790","buildTooltipModel","modelCascade","resultModel","pop","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","parseInt","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","numberUtil","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","from","uid","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","delay","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","formatTpl","callback","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","26","global","dev","419","fixExtentWithBands","nTick","normalizedExtent","Axis","_extent","onBand","_labelInterval","coord","getPixelPrecision","dataExtent","setExtent","clamp","coordToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getRotate","getAxisLabelInterval","791","TransformDummy","Transformable","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","methodName","BoundingRect","_rect","transformTo","_viewRect","rawTransform","calculateTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","origin","roamTransformable","rawTransformable","_rawTransform","invTransform","invert","getViewRectAfterRoam","noRoam","out","convertToPixel","convertFromPixel","792","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","categoryAxis","merge","boundaryGap","deduplication","valueAxis","splitNumber","timeAxis","logAxis","logBase","92","getScaleExtent","axisDataLen","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","eqNaN","getNeedCrossZero","isBaseAxisAndHasBarSeries","filter","getSeriesByType","getBaseAxis","adjustedScale","adjustScaleForOverflow","axisLength","barWidthAndOffset","calBarWidthAndOffset","isSeriesFiltered","baseAxisKey","barsOnCurrentAxis","undefined","minOverflow","offset","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","niceScaleExtent","base","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","OrdinalScale","IntervalScale","Scale","getClass","ifAxisCrossZero","tickCoords","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","floor","union","labelFormatter","getTicksLabels","tpl","tick","_barGrid","420","rangeStart","rangeEnd","noop","setRange","resetRange","793","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","layoutMode","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","thisOption","__ordinalMeta","OrdinalMeta","createByAxisModel","mergeAll","ComponentModel","registerSubTypeDefaulter","794","Axis2D","coordExtent","asc","ret","isLabelIgnored","toLocalCoord","421","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","restoreData","queryComponents","gridIndex","gridId","extraOption","795","dimAxisMapper","_axes","Cartesian","_dimList","getAxesByScale","toLowerCase","addAxis","_dataCoordConvert","input","method","dimList","output","796","Cartesian2D","axisX","axisY","reserved","clampData","xAxisExtent","yAxisExtent","797","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","getLabelUnionRect","axisLabelModel","labelCount","ceil","unrotatedSingleRect","getTextRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","hasOwnProperty","updateAxisTransform","coordBase","axisExtentSum","findAxesModels","axesTypes","getReferringComponents","isCartesian2D","gridProto","_updateScale","resize","ignoreContainLabel","adjustAxes","axesList","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","xAxisModel","yAxisModel","coordsList","createAxisCreator","axisPositionUsed","isCategory","axesCount","unionExtent","unionExtentFromData","axesModels","baseAxis","grids","798","containLabel","799","Region","geometries","polygonContain","properties","MAX_NUMBER","min2","max2","exterior","loopGeo","interiors","k","h","800","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","f","geometry","coordinates","encodeOffsets","c","coordinate","decodePolygon","c2","polygon","charCodeAt","geoJson","featureObj","geo","region","801","defaultKeyGetter","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","context","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","func","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","802","generateNodeKey","Node","inEdges","outEdges","hostGraph","Edge","_clazz","enableClassCheck","_directed","_nodesMap","_edgesMap","graphProto","isDirected","nodesMap","rawIdx","getNodeById","edgesMap","getEdge","breadthFirstTraverse","startNode","edgeType","__visited","queue","currentNode","shift","otherNode","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","dataName","dimension","getDimension","ignoreParent","191","getIndicesCtor","CtorUint32Array","globalObj","Uint32Array","UNDEFINED","CtorUint16Array","Uint16Array","_rawCount","cloneChunk","originalChunk","Ctor","transferProperties","b","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","getRawIndexWithoutIndices","getRawIndexWithIndices","_count","_indices","rawIndex","_idList","_getIdFromStore","ID_PREFIX","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","storage","_storage","originalStorage","cloneDimStore","originalDimStore","newDimStore","defaultDimValueGetters","DefaultDataProvider","summarizeDimensions","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","dimensionInfos","dimensionName","dimensionInfo","coordDimIndex","_dimensionInfos","_nameList","_optionModels","stackedOn","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawData","_rawExtent","_approximateExtent","_dimensionsSummary","listProto","getDimensionsOnCoord","dataDimsOnCoord","dims","encode","nameList","notProvider","isArrayLike","_nameRepeatCount","getSource","_dimValueGetter","_initDataFromProvider","pure","getProvider","appendData","rawData","persistent","nameDimIdx","chunkSize","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","_idDimIdx","DataCtor","resizeChunkArray","newStore","dataItem","getItem","chunkIndex","chunkOffset","dimStorage","_getNameFromStore","clean","chunk","idDimIdx","getIndices","buffer","stack","chunkStore","stackedValue","_getFast","values","dimData","initialExtent","isStacked","dimExtent","currEnd","cacheName","useRaw","getApproximateExtent","setApproximateExtent","concreteDim","indexOfName","indexOfRawIndex","indices","rawDataIndex","mid","maxDistance","nearestIndices","getRawDataItem","dimSize","apply","dim0","keep","selectRange","range","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","dimStore","downSample","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","visual","clearItemLayouts","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","cloneShallow","dimensionInfoList","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","422","_needCollect","needCollect","_deduplication","_map","getOrCreateMap","createHashMap","dedplication","proto","getOrdinal","parseAndCollect","127","fromDataset","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","seriesLayoutBy","SERIES_LAYOUT_BY_COLUMN","dimensionsDefine","encodeDefine","startIndex","dimensionsDetectCount","isTypedArray","SOURCE_FORMAT_TYPED_ARRAY","423","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMENSIONS","coordDimNameMap","dimsDef","encodeDef","dataDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","displayName","dataDims","normalizeToArray","validDataDims","resultDimIdx","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","isSysCoord","extra","extraPrefix","genName","extraFromZero","isExtraCoord","guessOrdinal","fromZero","_sourceHelper","268","dimensionsCount","128","_source","_offset","_dimSize","methods","providerMethods","SOURCE_FORMAT_ARRAY_ROWS","countSimply","getItemSimply","appendDataSimply","newData","getRawValueSimply","getDimValueSimply","converDataValue","dimType","parseDate","rawValueGetters","retrieveRawAttr","SOURCE_FORMAT_OBJECT_ROWS","assert","isDataItemOption","providerProto","arrayRows_column","arrayRows_row","row","Error","objectRows","keyedColumns","col","newCol","oldCol","typedArray","arrayRows","269","summary","coordDimMap","defaultedLabel","dimItem","coordDimArr","mayLabelDimType","otherDim","otherDimArr","encodeLabel","defaultedTooltip","encodeTooltip","803","main","linkAll","transferInjection","cloneShallowInjection","changeInjection","isMainData","DATAS","linkSingle","MAIN_DATA","getLinkedData","270","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","sourceHeader","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","arrayRowsTravelFirst","SERIES_LAYOUT_BY_ROW","objectRowsCollectDimensions","colArr","value0","potentialNameDimIndex","nameMap","exist","maxLoop","firstIndex","encodeItemName","encodeSeriesName","seriesType","subType","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","firstNotOrdinal","doGuessOrdinal","nameDimIndex","seriesName","thisData","datasetIndex","detectValue","sample","192","27","createRegisterEventWithLowercaseName","eventName","MessageCenter","ECharts","dom","theme","prioritySortFunc","__prio","themeStorage","_dom","defaultRenderer","zrender","renderer","devicePixelRatio","_throttledZrFlush","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","createExtensionAPI","_scheduler","Scheduler","_messageCenter","_initEvents","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","_onframe","setAsPrimitive","doConvertPixel","coordSysList","parseFinder","prepare","ecIns","scheduler","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","callView","__alive","__model","condition","__viewId","refresh","needPrepare","IN_MAIN_PROCESS","updateMethods","flushPendingActions","triggerUpdatedEvent","updateStreamModes","chartsMap","doDispatchAction","payloadType","actionWrap","actions","cptType","updateMethod","parseClassType","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","pendingActions","doPrepare","viewId","viewMap","classType","isComponent","ComponentView","ChartView","__id","__ecComponentInfo","renderTask","splice","stackSeriesData","stackedDataMap","previousStack","clearColorPalette","renderComponents","chart","renderSeries","dirtyList","componentView","componentModel","updateZ","dirtyMap","unfinished","chartView","updatePayload","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","aria","performPostUpdateFuncs","postUpdateFuncs","elCount","blendMode","blend","eachPendingDisplayable","displayable","ecInstance","coordSysMgr","modelInfo","enableConnect","updateConnectedChartsStatus","charts","otherChart","STATUS_KEY","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","instances","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","preprocessorFunc","optionPreprocessorFuncs","priority","processor","normalizeRegister","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","ACTION_REG","test","getCoordinateSystemDimensions","coordSysCreator","layoutTask","PRIORITY_VISUAL_LAYOUT","visualTask","PRIORITY_VISUAL_CHART","targetList","fn","defaultPriority","visualType","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","loadingEffects","SeriesModel","setCanvasCreator","creator","$override","registerMap","mapName","specialAreas","JSON","Function","mapDataStores","getMap","colorTool","GlobalModel","OptionManager","_throttle","seriesColor","loadingDefault","lightTheme","darkTheme","version","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","HAS_GRADIENT_OR_PATTERN_BG","one","echartsProto","_disposed","remainTime","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","setOption","notMerge","lazyUpdate","optionManager","setTheme","console","log","getOption","getDevicePixelRatio","dpr","getRenderedCanvas","pixelRatio","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","component","url","getType","toDataURL","getConnectedDataURL","mathMin","mathMax","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","createCanvas","img","Image","image","refreshImmediately","containPixel","models","defaultMainType","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","componentDirtyList","seriesDirtyMap","setDirty","updateView","markUpdateMethod","updateVisual","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","browser","weChat","MOUSE_EVENT_NAMES","eveName","disconnect","dataTool","___ec_export","804","format","ecHelper","helper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","util","805","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","_createDimensions","806","lineX","lineY","lang","dataZoom","back","magicType","bar","tiled","typeNames","pie","scatter","effectScatter","radar","tree","treemap","boxplot","candlestick","heatmap","parallel","lines","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","807","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","barSeries","seriesInfoList","barWidth","barMaxWidth","barGap","barCategoryGap","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","valueAxisStart","coordDims","sign","lastCoord","lastCoordOrigin","808","maskColor","mask","arc","Arc","labelRect","textDistance","animateShape","when","setShape","75","getDependencies","deps","getClassesByMainType","componentUtil","enableClassManagement","boxLayoutMixin","dependentModels","$constructor","extraOpt","getUID","newCptOption","optList","Class","superClass","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","424","isNotTargetSeries","seiresIndex","mergeTheme","themeItem","hasClass","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","_seriesIndicesMap","globalDefault","getComponentsByTypes","componentsMap","types","determineSubType","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","colorPaletteMixin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","newOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","ComponentModelClass","newCptTypes","componentOption","topologicalTravel","getAllClassMainTypes","isIdInner","cpts","isIdArray","isNameArray","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","queryCond","queryResult","getSeriesByName","oneSeries","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","55","doGet","pathArr","getParent","getParentMethod","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","thisParentModel","isEmpty","setReadOnly","809","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","match","QUERY_REG","operator","realAttr","compare","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","810","autoSeriesName","DEFAULT_COMPONENT_NAME","getSeriesAutoName","getRawData","nameArr","dataTaskCount","dataTaskReset","setData","dataTaskProgress","param","outputData","wrapData","onDataSelfChange","task","getCurrentTask","setOutputEnd","pipeline","getPipeline","currentTask","agentStubMap","formatTime","addCommas","getTooltipMarker","dataFormatMixin","_task","createTask","visualColorAccessPath","dataTask","reset","dataBeforeProcessed","themeSubType","newSeriesOption","isOverallFilter","formatArrayValue","setEachItem","dimHead","valStr","vertially","reduce","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","formattedValue","colorEl","animationEnabled","scope","requestColorNum","coordDimToDataDim","getProgressive","getProgressiveThreshold","pipeTask","preventIncremental","811","platform","navigator","gradientColor","animationEasing","progressiveThreshold","progressive","hoverLayerThreshold","useUTC","812","makeStyleMapper","excludes","includes","813","425","getNearestColorPalette","colors","paletteNum","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","814","DIMENSION_LABEL_REG","rawValue","componentSubType","marker","labelProp","str","charAt","815","lineDash","getBorderLineDash","lineType","816","getLineDash","dotSize","dashSize","271","817","graphicUtil","PATH_COLOR","isEmphasis","426","fetch","fetchers","cartesian2d","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","parallelModel","parallelAxisIndex","818","overwrite","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","819","compatEC2ItemStyle","itemStyleOpt","POSSIBLE_STYLES","styleName","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOpt","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","processSeries","upperLabel","markPoint","markLine","markArea","mpData","mlData","breadcrumb","levels","toArr","o","toObj","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geoOpt","regions","regionObj","toolboxOpt","featureOpt","272","roundNumber","_interval","_intervalPrecision","thisExtent","parseFloat","other","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","getPrecisionSafe","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","820","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathPow","pow","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","quantity","err","821","_ordinalMeta","rank","193","_setting","getSetting","_isBlank","822","scaleHelper","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","lo","hi","TimeScale","stepLvl","_stepLvl","date","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","427","safeLimit","823","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","performRawSeries","createSeriesStageTask","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","pipe","getTargetSeries","createOnAllSeries","pipelineMap","_pipelineMap","removeKey","createOverallStageTask","createStub","stubReset","onDirty","stubOnDirty","overallProgress","agent","__block","overallTaskReset","overallReset","upstreamContext","stubProgress","getDownstream","resetDefines","seriesTaskProgress","resetDefine","dataEach","progress","head","tail","__idxInPipeline","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","Clz","_component","isBlock","pCtx","progressiveEnabled","bockIndex","dataLen","incrementalPrepareRender","threshold","stageTaskMap","getUpstream","cond","273","define","Task","_reset","_plan","_onDirty","_dirty","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","taskProto","upTask","_upstream","planResult","outputDueEnd","downTask","824","contrastColor","axisCommon","iconStyle","controlStyle","color0","borderColor0","825","colorAll","colorLayer","56","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","ExtendedClass","classAttr","classBase","toFixed","args","entity","makeContainer","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","hasSubTypes","originalExtend","194","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","44","upperCaseFirst","group1","toUpperCase","String","paramsList","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","formatTplSimple","isUTC","utc","M","m","s","s2d","capitalFirst","substr","varName","18","Path","extendPath","pathData","pathTool","extendFromString","makePath","createFromString","centerGraphic","resizePath","makeImage","imageUrl","ZImage","onload","pathRect","subPixelOptimize","subPixelOptimizeRect","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","removeHover","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","baseText","labelDimIndex","showNormal","showEmphasis","normalStyleText","emphasisStyleText","specifiedTextStyle","setTextStyleCommon","host","setText","defaultColor","textOffset","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","gTextStyleModel","trim","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","getTransform","ancestor","mat","transformDirection","hBase","vBase","vertex","g1","g2","getElMap","g","elMap","getAnimatableProps","elMap1","oldEl","newProp","clipPointsByRect","clipRectByRect","targetRect","iconStr","rectHover","Circle","Sector","Ring","Polygon","Polyline","CompoundPath","LinearGradient","RadialGradient","IncrementalDisplayable","mergePath","76","boxLayout","orient","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","containerWidth","containerHeight","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","sizeCalculable","hvIdx","HV_NAMES","targetOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","box","vbox","hbox","11","subOpts","subOptName","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","innerUniqueIndex","hostObj","has","parsedKey","queryType","includeMainTypes","queryParam","22","_trim","domain","subDomain","subRange","all","returnStr","sort","getPrecision","toString","eIndex","dotIndex","pixelExtent","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","radian","pi2","RADIAN_EPSILON","TIME_REG","exec","hour","UTC","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","lg","close","curr","currClose","isNumeric","MAX_SAFE_INTEGER","195","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","keepAspect","Triangle","lineTo","closePath","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","bezierCurveTo","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","inBundle","proxySymbol","274","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","debounceDelay","fnAttr","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","lastRate","RATE","826","Chart","renderTaskPlan","renderTaskReset","elSetState","state","childCount","toggleHighlight","renderPlanner","renderTaskProgress","createRenderPlanner","chartProto","827","Component","componentProto","828","keyValues","RegExp","getConfig","userConfig","ariaModel","getTitle","getSeriesTypeName","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","829","Gradient","colorAccessPath","830","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","hasCallback","558","guid","Animatable","Element","clipPath","afterUpdate","attrKV","setClipPath","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","addAnimator","removeAnimator","1486","makeEventPacket","eveType","targetInfo","cancelBubble","zrX","zrY","zrDelta","which","EmptyProxy","isHover","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","setHandlerProxy","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","nodeType","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1487","returnFalse","createDom","newDom","newDomStyle","Style","Pattern","Layer","onselectstart","domBack","ctxBack","config","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","getContext","createBackBuffer","clearAll","haveMotionBLur","globalCompositeOperation","drawImage","clearRect","clearColorGradientOrPattern","__canvasGradient","getGradient","getCanvasPattern","save","fillStyle","fillRect","globalAlpha","1488","parseInt10","isLayerValid","__builtin__","isDisplayableCulled","tmpRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","setTransform","beginPath","clip","restoreTransform","createRoot","domRoot","requestAnimationFrame","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","Painter","root","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","_domRoot","_getSize","_hoverlayer","_hoverElements","getViewportRoot","viewportRoot","paintAll","_redrawId","_paintList","refreshHover","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invisible","__clipPaths","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","notClear","error","dTime","prevElClipPaths","draw","currentLayer","forcePaint","prevEl","afterBrush","insertLayer","layersMap","prevLayer","prevDom","nextSibling","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","hasStroke","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","1489","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","roots","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","children","_children","addRoot","__storage","addChildrenToStorage","addToStorage","delRoot","delChildrenFromStorage","delFromStorage","_renderList","1490","_event","Dispatcher","Animator","Animation","stage","onframe","_clips","_running","_time","_pausedTime","_pauseStart","_paused","addClip","animator","clips","getClips","removeClip","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","pause","resume","animate","loop","getter","setter","559","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","arraySlice","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","cloneValue","rgba2String","rgba","getArrayDim","keyframes","lastValue","createTrackClip","easing","oneTrackDone","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","frame","Clip","life","_loop","_delay","ondestroy","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","during","isPaused","_doneCallback","doneList","lastClip","clipCount","oldOnFrame","forwardToLast","clipList","done","1491","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","1492","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","sqrt","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","560","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","230","debugMode","1493","containStroke","anticlockwise","_l","PI2","tmp","normalizeRadian","1494","x0","y0","x3","y3","curve","cubicProjectPoint","1495","_a","_b","_s","1496","isAroundEqual","EPSILON","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","y0_","y1_","nExtrema","unit","x_","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","windingArc","dir","containPath","isStroke","xi","yi","cmd","CMD","windingLine","L","C","cubic","Q","quadratic","A","rx","ry","theta","dTheta","R","Z","PathProxy","1497","1498","quadraticProjectPoint","_curve","113","DEFAULT_FONT","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","stlPadding","truncateWidth","truncateHeight","tokens","token","tokenStyle","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","561","562","231","_doAdd","addBefore","includeChildren","tmpMat","childRect","34","lt","rb","lb","rt","maxX","maxY","sx","sy","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","1499","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","gestureInfo","track","pinchEnd","pinchPre","pinchCenter","563","LinkedList","_len","linkedListProto","insert","entry","Entry","insertEntry","prev","LRU","maxSize","_list","_maxSize","_lastRemovedEntry","LRUProto","put","removed","leastUsedEntry","232","mathCos","mathSin","mathSqrt","hasTypedArray","Float32Array","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arcTo","toStatic","setLineDash","lineDashSum","setLineDashOffset","appendPath","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","fromLine","fromCubic","fromQuadratic","fromArc","rebuildPath","ux","uy","psi","fs","scaleX","scaleY","isEllipse","358","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","84","isAroundZero","isNotAroundZero","onet","cubicDerivativeAt","B","t1","disc","K","discSqrt","Y1","Y2","ONE_THIRD","T","acos","ASqrt","THREE_SQRT","cubicSubdivide","p01","p12","p23","p012","p123","p0123","d1","d2","_v0","_v1","EPSILON_NUMERIC","_v2","quadraticDerivativeAt","divider","v2Create","35","detect","ua","os","firefox","ie","SVGRect","touchEventsSupported","pointerEventsSupported","wx","worker","userAgent","114","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","isTouch","targetTouches","changedTouches","detail","button","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","preventDefault","stopPropagation","returnValue","564","idStart","565","85","ArrayCtor","m1","m2","out0","out1","out2","out3","out4","out5","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","359","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","array","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","tmpStorageLength","DEFAULT_TMP_STORAGE_LENGTH","stackLength","remaining","ts","minRun","3","typeStr","objToString","isPrimitive","TYPED_ARRAY","BUILTIN_OBJECT","isDom","targetProp","sourceProp","isBuiltInObject","targetAndSources","overlay","baseClazz","F","clazzPrototype","forEach","nativeForEach","nativeMap","memo","nativeReduce","nativeFilter","find","nativeSlice","ownerDocument","value1","value2","message","primitiveKey","HashMap","visit","isArr","thisMap","concatArray","newArray","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","arrayProto","10","lenSquare","div","dot","distanceSquare","negate","lerp","lengthSquare","1500","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","TOUCH_CLICK_DELAY","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1501","paths","_updatePathDirty","dirtyPath","__dirtyPath","getGlobalScale","createPathProxy","233","Displayable","RectText","dragging","inplace","rectContain","transformCoordToLocal","animateStyle","360","addColorStop","566","src","_image","createOrUpdateImage","sWidth","sHeight","drawRectText","1502","IncrementalDisplayble","Displayble","_displayables","_temporaryDisplayables","_cursor","addDisplayable","notPersistent","addDisplayables","displayables","localPos","1503","globalCoord","42","pathContain","pathProxyForDraw","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","strokeStyle","lineDashOffset","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","getLineScale","Sub","defaultShape","thisShape","567","repeat","createPattern","1504","568","createLinearGradient","canvasGradient","createRadialGradient","fixShadow","STYLE_COMMON_PROPS","transformText","prevStyle","firstDraw","otherStyle","newStyle","styleProto","1505","textHelper","normalizeTextStyle","needDrawText","renderText","getStroke","1506","orignalBrush","modified","shadowTemp","569","SHADOW_PROPS","361","newImageOrSrc","cachedImgObj","globalImageCache","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","570","smooth","controlPoints","smoothBezier","smoothConstraint","cp2","smoothSpline","571","r1","r2","r3","r4","total","1507","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","cp0","v2Add","1508","interpolate","segs","w2","w3","572","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","leftIndex","lineXLeft","lineXRight","rightIndex","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","1509","1510","unitX","unitY","1511","someVectorAt","isTangent","cpx2","cpy2","1512","1513","1514","polyHelper","1515","1516","1517","1518","fixClipWithShadow","1519","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1520","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","115","arrySlice","_$handlers","_h","newList","argLen","triggerWithContext","362","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","165","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1521","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","1522","nPoint","mathAtan2","573","ZRender","getInstance","registerPainter","painterCtors","delInstance","HandlerProxy","useVML","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","623","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react","_react2","_propTypes","_propTypes2","_echarts","_echarts2","LearningMap","_Component","componentDidMount","initPie","componentDidUpdate","_props$options","myChart","ID","onresize","_this2","_props","ref","propTypes","PropTypes","string","defaultProps","642","_LearningMap","_LearningMap2","_frontEnd","_frontEnd2","Learning","_this","componentWillMount","setState","className"],"mappings":"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","file":"component---src-pages-demo-learning-index-js-d01b2f8b2a420716be8a.js","sourcesContent":["webpackJsonp([107944193185467],{\n\n/***/ 606:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tvar data = [{\n\t  name: 'HTML',\n\t  draggable: 'true'\n\t}, {\n\t  name: 'CSS',\n\t  category: 'CSS',\n\t  draggable: 'true'\n\t}, {\n\t  name: 'JavaScript',\n\t  category: 'JavaScript',\n\t  draggable: 'true'\n\t}, {\n\t  name: 'ECMAScript 6',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'HTTP'\n\t}, {\n\t  name: 'Webpack'\n\t}, {\n\t  name: 'Babel',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'React.js',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'Vue.js',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'AngularJS',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'TypeScript',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'CoffeeScript',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'axios'\n\t}, {\n\t  name: 'XMLHttpRequest'\n\t}, {\n\t  name: 'Node.js'\n\t}, {\n\t  name: 'Bootstrap',\n\t  category: 'CSS'\n\t}, {\n\t  name: 'SCSS',\n\t  category: 'CSS'\n\t}, {\n\t  name: 'LESS',\n\t  category: 'CSS'\n\t}, {\n\t  name: 'SASS',\n\t  category: 'CSS'\n\t}, {\n\t  name: 'PostCSS',\n\t  category: 'CSS'\n\t}, {\n\t  name: 'gulp'\n\t}, {\n\t  name: 'grunt'\n\t}, {\n\t  name: 'npm scripts'\n\t}, {\n\t  name: 'CSS Prepossesor',\n\t  category: 'CSS'\n\t}, {\n\t  name: 'moment.js',\n\t  category: 'JavaScript'\n\t}, {\n\t  name: 'Database'\n\t}, {\n\t  name: 'MongoDB'\n\t}, {\n\t  name: 'MySQL'\n\t}, {\n\t  name: '瀏覽器'\n\t}, {\n\t  name: '瀏覽器渲染頁面過程'\n\t}, {\n\t  name: 'SPA'\n\t}, {\n\t  name: 'Local Storage'\n\t}, {\n\t  name: 'Session Storage'\n\t}, {\n\t  name: 'Redux'\n\t}, {\n\t  name: 'Flux'\n\t}, {\n\t  name: 'HTML5',\n\t  category: 'HTML'\n\t}, {\n\t  name: 'CSS3',\n\t  category: 'CSS'\n\t}, {\n\t  name: '前端'\n\t}, {\n\t  name: '後端'\n\t}, {\n\t  name: 'HTTP2'\n\t}, {\n\t  name: 'CSR'\n\t}, {\n\t  name: 'SSR'\n\t}, {\n\t  name: 'WebSocket'\n\t}, {\n\t  name: 'Socket.io'\n\t}, {\n\t  name: 'Express.js'\n\t}, {\n\t  name: 'Koa'\n\t}, {\n\t  name: 'Storage'\n\t}, {\n\t  name: 'IndexDB'\n\t}, {\n\t  name: '常用網站'\n\t}, {\n\t  name: '掘金'\n\t}, {\n\t  name: 'V2EX'\n\t}, {\n\t  name: 'MDN'\n\t}, {\n\t  name: 'CSDN'\n\t}, {\n\t  name: 'Github'\n\t}, {\n\t  name: 'CodePen'\n\t}];\n\t\n\texports.default = data;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 607:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _link = __webpack_require__(609);\n\t\n\tvar _link2 = _interopRequireDefault(_link);\n\t\n\tvar _data = __webpack_require__(606);\n\t\n\tvar _data2 = _interopRequireDefault(_data);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar options = {\n\t  title: {\n\t    text: '前端學習圖譜',\n\t    top: 'top',\n\t    left: 'center'\n\t  },\n\t  tooltip: {},\n\t  legend: [{\n\t    tooltip: {\n\t      show: true\n\t    },\n\t    selectedMode: 'false',\n\t    bottom: 20,\n\t    data: ['HTML', 'CSS', 'JavaScript']\n\t  }],\n\t  toolbox: {\n\t    show: true,\n\t    feature: {\n\t      dataView: {\n\t        show: true,\n\t        readOnly: true\n\t      },\n\t      restore: {\n\t        show: true\n\t      },\n\t      saveAsImage: {\n\t        show: true\n\t      }\n\t    }\n\t  },\n\t  animationDuration: 3000,\n\t  animationEasingUpdate: 'quinticInOut',\n\t  series: [{\n\t    name: '前端學習圖譜',\n\t    type: 'graph',\n\t    layout: 'force',\n\t    force: {\n\t      repulsion: 200\n\t    },\n\t    data: _data2.default,\n\t    links: _link2.default,\n\t    categories: [{\n\t      name: 'HTML'\n\t    }, {\n\t      name: 'CSS'\n\t    }, {\n\t      name: 'JavaScript'\n\t    }],\n\t    focusNodeAdjacency: true,\n\t    roam: true,\n\t    label: {\n\t      normal: {\n\t        show: true,\n\t        position: 'top'\n\t      }\n\t    },\n\t    lineStyle: {\n\t      normal: {\n\t        color: 'source',\n\t        curveness: 0,\n\t        type: 'solid'\n\t      }\n\t    }\n\t  }]\n\t};\n\t\n\texports.default = options;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 608:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tvar css = [{\n\t  source: 'CSS Prepossesor',\n\t  target: 'Bootstrap'\n\t}, {\n\t  source: 'CSS Prepossesor',\n\t  target: 'SCSS'\n\t}, {\n\t  source: 'CSS Prepossesor',\n\t  target: 'LESS'\n\t}, {\n\t  source: 'CSS Prepossesor',\n\t  target: 'SASS'\n\t}, {\n\t  source: 'CSS Prepossesor',\n\t  target: 'PostCSS'\n\t}, {\n\t  source: 'CSS',\n\t  target: 'CSS Prepossesor'\n\t}];\n\t\n\texports.default = css;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 609:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _javascript = __webpack_require__(610);\n\t\n\tvar _javascript2 = _interopRequireDefault(_javascript);\n\t\n\tvar _css = __webpack_require__(608);\n\t\n\tvar _css2 = _interopRequireDefault(_css);\n\t\n\tvar _others = __webpack_require__(611);\n\t\n\tvar _others2 = _interopRequireDefault(_others);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar links = [{\n\t  source: 'HTML',\n\t  target: '前端'\n\t}, {\n\t  source: 'CSS',\n\t  target: '前端'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: '前端'\n\t}].concat(_javascript2.default, _css2.default, _others2.default);\n\t\n\texports.default = links;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 610:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tvar javascript = [{\n\t  source: 'JavaScript',\n\t  target: 'AngularJS'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'Vue.js'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'React.js'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'ECMAScript 6'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'CoffeeScript'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'TypeScript'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'Babel'\n\t}, {\n\t  source: 'JavaScript',\n\t  target: 'Node.js'\n\t}, {\n\t  source: 'Node.js',\n\t  target: 'gulp'\n\t}, {\n\t  source: 'Node.js',\n\t  target: 'grunt'\n\t}, {\n\t  source: 'Node.js',\n\t  target: 'npm scripts'\n\t}];\n\t\n\texports.default = javascript;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 611:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tvar others = [{\n\t  source: 'axios',\n\t  target: 'XMLHttpRequest'\n\t}, {\n\t  source: 'HTTP',\n\t  target: 'axios'\n\t}, {\n\t  source: 'Database',\n\t  target: 'MongoDB'\n\t}, {\n\t  source: 'Database',\n\t  target: 'MySQL'\n\t}, {\n\t  source: 'HTTP',\n\t  target: '前端'\n\t}, {\n\t  source: 'HTTP',\n\t  target: '後端'\n\t}, {\n\t  source: '後端',\n\t  target: 'Database'\n\t}, {\n\t  source: 'HTML',\n\t  target: 'HTML5'\n\t}, {\n\t  source: 'HTTP',\n\t  target: 'HTTP2'\n\t}, {\n\t  source: 'HTTP',\n\t  target: 'Webpack'\n\t}, {\n\t  source: 'CSS',\n\t  target: 'CSS3'\n\t}, {\n\t  source: 'WebSocket',\n\t  target: 'Socket.io'\n\t}, {\n\t  source: 'Node.js',\n\t  target: 'Express.js'\n\t}, {\n\t  source: 'Node.js',\n\t  target: 'Koa'\n\t}, {\n\t  source: 'React.js',\n\t  target: 'Redux'\n\t}, {\n\t  source: '瀏覽器',\n\t  target: 'Storage'\n\t}, {\n\t  source: 'Storage',\n\t  target: 'Local Storage'\n\t}, {\n\t  source: 'Storage',\n\t  target: 'Session Storage'\n\t}, {\n\t  source: 'Storage',\n\t  target: 'IndexDB'\n\t}, {\n\t  source: '前端',\n\t  target: '瀏覽器'\n\t}, {\n\t  source: '瀏覽器',\n\t  target: '瀏覽器渲染頁面過程'\n\t}, {\n\t  source: '常用網站',\n\t  target: '掘金'\n\t}, {\n\t  source: '常用網站',\n\t  target: 'V2EX'\n\t}, {\n\t  source: '常用網站',\n\t  target: 'MDN'\n\t}, {\n\t  source: '常用網站',\n\t  target: 'CSDN'\n\t}, {\n\t  source: '前端',\n\t  target: '常用網站'\n\t}, {\n\t  source: 'Redux',\n\t  target: 'Flux'\n\t}, {\n\t  source: '常用網站',\n\t  target: 'Github'\n\t}, {\n\t  source: '常用網站',\n\t  target: 'CodePen'\n\t}];\n\t\n\texports.default = others;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 189:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar coordinateSystemCreators = {};\n\t\n\tfunction CoordinateSystemManager() {\n\t  this._coordinateSystems = [];\n\t}\n\t\n\tCoordinateSystemManager.prototype = {\n\t  constructor: CoordinateSystemManager,\n\t  create: function (ecModel, api) {\n\t    var coordinateSystems = [];\n\t    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n\t      var list = creater.create(ecModel, api);\n\t      coordinateSystems = coordinateSystems.concat(list || []);\n\t    });\n\t    this._coordinateSystems = coordinateSystems;\n\t  },\n\t  update: function (ecModel, api) {\n\t    zrUtil.each(this._coordinateSystems, function (coordSys) {\n\t      coordSys.update && coordSys.update(ecModel, api);\n\t    });\n\t  },\n\t  getCoordinateSystems: function () {\n\t    return this._coordinateSystems.slice();\n\t  }\n\t};\n\t\n\tCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n\t  coordinateSystemCreators[type] = coordinateSystemCreator;\n\t};\n\t\n\tCoordinateSystemManager.get = function (type) {\n\t  return coordinateSystemCreators[type];\n\t};\n\t\n\tvar _default = CoordinateSystemManager;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 407:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\t\n\tfunction ExtensionAPI(chartInstance) {\n\t  zrUtil.each(echartsAPIList, function (name) {\n\t    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n\t  }, this);\n\t}\n\t\n\tvar _default = ExtensionAPI;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 753:\n/***/ (function(module, exports) {\n\n\t/**\n\t * @param {module:echarts/coord/View} view\n\t * @param {Object} payload\n\t * @param {Object} [zoomLimit]\n\t */\n\tfunction updateCenterAndZoom(view, payload, zoomLimit) {\n\t  var previousZoom = view.getZoom();\n\t  var center = view.getCenter();\n\t  var zoom = payload.zoom;\n\t  var point = view.dataToPoint(center);\n\t\n\t  if (payload.dx != null && payload.dy != null) {\n\t    point[0] -= payload.dx;\n\t    point[1] -= payload.dy;\n\t    var center = view.pointToData(point);\n\t    view.setCenter(center);\n\t  }\n\t\n\t  if (zoom != null) {\n\t    if (zoomLimit) {\n\t      var zoomMin = zoomLimit.min || 0;\n\t      var zoomMax = zoomLimit.max || Infinity;\n\t      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n\t    } // Zoom on given point(originX, originY)\n\t\n\t\n\t    view.scale[0] *= zoom;\n\t    view.scale[1] *= zoom;\n\t    var position = view.position;\n\t    var fixX = (payload.originX - position[0]) * (zoom - 1);\n\t    var fixY = (payload.originY - position[1]) * (zoom - 1);\n\t    position[0] -= fixX;\n\t    position[1] -= fixY;\n\t    view.updateTransform(); // Get the new center\n\t\n\t    var center = view.pointToData(point);\n\t    view.setCenter(center);\n\t    view.setZoom(zoom * previousZoom);\n\t  }\n\t\n\t  return {\n\t    center: view.getCenter(),\n\t    zoom: view.getZoom()\n\t  };\n\t}\n\t\n\texports.updateCenterAndZoom = updateCenterAndZoom;\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\t__webpack_require__(755);\n\t\n\t__webpack_require__(756);\n\t\n\t__webpack_require__(765);\n\t\n\tvar categoryFilter = __webpack_require__(758);\n\t\n\tvar visualSymbol = __webpack_require__(830);\n\t\n\tvar categoryVisual = __webpack_require__(759);\n\t\n\tvar edgeVisual = __webpack_require__(762);\n\t\n\tvar simpleLayout = __webpack_require__(766);\n\t\n\tvar circularLayout = __webpack_require__(760);\n\t\n\tvar forceLayout = __webpack_require__(764);\n\t\n\tvar createView = __webpack_require__(761);\n\t\n\techarts.registerProcessor(categoryFilter);\n\techarts.registerVisual(visualSymbol('graph', 'circle', null));\n\techarts.registerVisual(categoryVisual);\n\techarts.registerVisual(edgeVisual);\n\techarts.registerLayout(simpleLayout);\n\techarts.registerLayout(circularLayout);\n\techarts.registerLayout(forceLayout); // Graph view coordinate system\n\t\n\techarts.registerCoordinateSystem('graphView', {\n\t  create: createView\n\t});\n\n/***/ }),\n\n/***/ 755:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar List = __webpack_require__(191);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar defaultEmphasis = _model.defaultEmphasis;\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar _format = __webpack_require__(44);\n\t\n\tvar encodeHTML = _format.encodeHTML;\n\t\n\tvar createGraphFromNodeEdge = __webpack_require__(772);\n\t\n\tvar GraphSeries = echarts.extendSeriesModel({\n\t  type: 'series.graph',\n\t  init: function (option) {\n\t    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\t\n\t    this.legendDataProvider = function () {\n\t      return this._categoriesData;\n\t    };\n\t\n\t    this.fillDataTextStyle(option.edges || option.links);\n\t\n\t    this._updateCategoriesData();\n\t  },\n\t  mergeOption: function (option) {\n\t    GraphSeries.superApply(this, 'mergeOption', arguments);\n\t    this.fillDataTextStyle(option.edges || option.links);\n\t\n\t    this._updateCategoriesData();\n\t  },\n\t  mergeDefaultAndTheme: function (option) {\n\t    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n\t    defaultEmphasis(option, ['edgeLabel'], ['show']);\n\t  },\n\t  getInitialData: function (option, ecModel) {\n\t    var edges = option.edges || option.links || [];\n\t    var nodes = option.data || option.nodes || [];\n\t    var self = this;\n\t\n\t    if (nodes && edges) {\n\t      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n\t    }\n\t\n\t    function beforeLink(nodeData, edgeData) {\n\t      // Overwrite nodeData.getItemModel to\n\t      nodeData.wrapMethod('getItemModel', function (model) {\n\t        var categoriesModels = self._categoriesModels;\n\t        var categoryIdx = model.getShallow('category');\n\t        var categoryModel = categoriesModels[categoryIdx];\n\t\n\t        if (categoryModel) {\n\t          categoryModel.parentModel = model.parentModel;\n\t          model.parentModel = categoryModel;\n\t        }\n\t\n\t        return model;\n\t      });\n\t      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\t\n\t      var fakeSeriesModel = new Model({\n\t        label: edgeLabelModel.option\n\t      }, edgeLabelModel.parentModel, ecModel);\n\t      edgeData.wrapMethod('getItemModel', function (model) {\n\t        model.customizeGetParent(edgeGetParent);\n\t        return model;\n\t      });\n\t\n\t      function edgeGetParent(path) {\n\t        path = this.parsePath(path);\n\t        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {module:echarts/data/Graph}\n\t   */\n\t  getGraph: function () {\n\t    return this.getData().graph;\n\t  },\n\t\n\t  /**\n\t   * @return {module:echarts/data/List}\n\t   */\n\t  getEdgeData: function () {\n\t    return this.getGraph().edgeData;\n\t  },\n\t\n\t  /**\n\t   * @return {module:echarts/data/List}\n\t   */\n\t  getCategoriesData: function () {\n\t    return this._categoriesData;\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n\t    if (dataType === 'edge') {\n\t      var nodeData = this.getData();\n\t      var params = this.getDataParams(dataIndex, dataType);\n\t      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n\t      var sourceName = nodeData.getName(edge.node1.dataIndex);\n\t      var targetName = nodeData.getName(edge.node2.dataIndex);\n\t      var html = [];\n\t      sourceName != null && html.push(sourceName);\n\t      targetName != null && html.push(targetName);\n\t      html = encodeHTML(html.join(' > '));\n\t\n\t      if (params.value) {\n\t        html += ' : ' + encodeHTML(params.value);\n\t      }\n\t\n\t      return html;\n\t    } else {\n\t      // dataType === 'node' or empty\n\t      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n\t    }\n\t  },\n\t  _updateCategoriesData: function () {\n\t    var categories = zrUtil.map(this.option.categories || [], function (category) {\n\t      // Data must has value\n\t      return category.value != null ? category : zrUtil.extend({\n\t        value: 0\n\t      }, category);\n\t    });\n\t    var categoriesData = new List(['value'], this);\n\t    categoriesData.initData(categories);\n\t    this._categoriesData = categoriesData;\n\t    this._categoriesModels = categoriesData.mapArray(function (idx) {\n\t      return categoriesData.getItemModel(idx, true);\n\t    });\n\t  },\n\t  setZoom: function (zoom) {\n\t    this.option.zoom = zoom;\n\t  },\n\t  setCenter: function (center) {\n\t    this.option.center = center;\n\t  },\n\t  isAnimationEnabled: function () {\n\t    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n\t    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n\t  },\n\t  defaultOption: {\n\t    zlevel: 0,\n\t    z: 2,\n\t    coordinateSystem: 'view',\n\t    // Default option for all coordinate systems\n\t    // xAxisIndex: 0,\n\t    // yAxisIndex: 0,\n\t    // polarIndex: 0,\n\t    // geoIndex: 0,\n\t    legendHoverLink: true,\n\t    hoverAnimation: true,\n\t    layout: null,\n\t    focusNodeAdjacency: false,\n\t    // Configuration of circular layout\n\t    circular: {\n\t      rotateLabel: false\n\t    },\n\t    // Configuration of force directed layout\n\t    force: {\n\t      initLayout: null,\n\t      // Node repulsion. Can be an array to represent range.\n\t      repulsion: [0, 50],\n\t      gravity: 0.1,\n\t      // Edge length. Can be an array to represent range.\n\t      edgeLength: 30,\n\t      layoutAnimation: true\n\t    },\n\t    left: 'center',\n\t    top: 'center',\n\t    // right: null,\n\t    // bottom: null,\n\t    // width: '80%',\n\t    // height: '80%',\n\t    symbol: 'circle',\n\t    symbolSize: 10,\n\t    edgeSymbol: ['none', 'none'],\n\t    edgeSymbolSize: 10,\n\t    edgeLabel: {\n\t      position: 'middle'\n\t    },\n\t    draggable: false,\n\t    roam: false,\n\t    // Default on center of graph\n\t    center: null,\n\t    zoom: 1,\n\t    // Symbol size scale ratio in roam\n\t    nodeScaleRatio: 0.6,\n\t    // cursor: null,\n\t    // categories: [],\n\t    // data: []\n\t    // Or\n\t    // nodes: []\n\t    //\n\t    // links: []\n\t    // Or\n\t    // edges: []\n\t    label: {\n\t      show: false,\n\t      formatter: '{b}'\n\t    },\n\t    itemStyle: {},\n\t    lineStyle: {\n\t      color: '#aaa',\n\t      width: 1,\n\t      curveness: 0,\n\t      opacity: 0.5\n\t    },\n\t    emphasis: {\n\t      label: {\n\t        show: true\n\t      }\n\t    }\n\t  }\n\t});\n\tvar _default = GraphSeries;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 756:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar SymbolDraw = __webpack_require__(771);\n\t\n\tvar LineDraw = __webpack_require__(768);\n\t\n\tvar RoamController = __webpack_require__(783);\n\t\n\tvar roamHelper = __webpack_require__(786);\n\t\n\tvar _cursorHelper = __webpack_require__(784);\n\t\n\tvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar adjustEdge = __webpack_require__(757);\n\t\n\tvar nodeOpacityPath = ['itemStyle', 'opacity'];\n\tvar lineOpacityPath = ['lineStyle', 'opacity'];\n\t\n\tfunction getItemOpacity(item, opacityPath) {\n\t  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n\t}\n\t\n\tfunction fadeOutItem(item, opacityPath, opacityRatio) {\n\t  var el = item.getGraphicEl();\n\t  var opacity = getItemOpacity(item, opacityPath);\n\t\n\t  if (opacityRatio != null) {\n\t    opacity == null && (opacity = 1);\n\t    opacity *= opacityRatio;\n\t  }\n\t\n\t  el.downplay && el.downplay();\n\t  el.traverse(function (child) {\n\t    if (child.type !== 'group') {\n\t      child.setStyle('opacity', opacity);\n\t    }\n\t  });\n\t}\n\t\n\tfunction fadeInItem(item, opacityPath) {\n\t  var opacity = getItemOpacity(item, opacityPath);\n\t  var el = item.getGraphicEl();\n\t  el.highlight && el.highlight();\n\t  el.traverse(function (child) {\n\t    if (child.type !== 'group') {\n\t      child.setStyle('opacity', opacity);\n\t    }\n\t  });\n\t}\n\t\n\tvar _default = echarts.extendChartView({\n\t  type: 'graph',\n\t  init: function (ecModel, api) {\n\t    var symbolDraw = new SymbolDraw();\n\t    var lineDraw = new LineDraw();\n\t    var group = this.group;\n\t    this._controller = new RoamController(api.getZr());\n\t    this._controllerHost = {\n\t      target: group\n\t    };\n\t    group.add(symbolDraw.group);\n\t    group.add(lineDraw.group);\n\t    this._symbolDraw = symbolDraw;\n\t    this._lineDraw = lineDraw;\n\t    this._firstRender = true;\n\t  },\n\t  render: function (seriesModel, ecModel, api) {\n\t    var coordSys = seriesModel.coordinateSystem;\n\t    this._model = seriesModel;\n\t    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\t    var symbolDraw = this._symbolDraw;\n\t    var lineDraw = this._lineDraw;\n\t    var group = this.group;\n\t\n\t    if (coordSys.type === 'view') {\n\t      var groupNewProp = {\n\t        position: coordSys.position,\n\t        scale: coordSys.scale\n\t      };\n\t\n\t      if (this._firstRender) {\n\t        group.attr(groupNewProp);\n\t      } else {\n\t        graphic.updateProps(group, groupNewProp, seriesModel);\n\t      }\n\t    } // Fix edge contact point with node\n\t\n\t\n\t    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\t    var data = seriesModel.getData();\n\t    symbolDraw.updateData(data);\n\t    var edgeData = seriesModel.getEdgeData();\n\t    lineDraw.updateData(edgeData);\n\t\n\t    this._updateNodeAndLinkScale();\n\t\n\t    this._updateController(seriesModel, ecModel, api);\n\t\n\t    clearTimeout(this._layoutTimeout);\n\t    var forceLayout = seriesModel.forceLayout;\n\t    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\t\n\t    if (forceLayout) {\n\t      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n\t    }\n\t\n\t    data.eachItemGraphicEl(function (el, idx) {\n\t      var itemModel = data.getItemModel(idx); // Update draggable\n\t\n\t      el.off('drag').off('dragend');\n\t      var draggable = data.getItemModel(idx).get('draggable');\n\t\n\t      if (draggable) {\n\t        el.on('drag', function () {\n\t          if (forceLayout) {\n\t            forceLayout.warmUp();\n\t            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n\t            forceLayout.setFixed(idx); // Write position back to layout\n\t\n\t            data.setItemLayout(idx, el.position);\n\t          }\n\t        }, this).on('dragend', function () {\n\t          if (forceLayout) {\n\t            forceLayout.setUnfixed(idx);\n\t          }\n\t        }, this);\n\t      }\n\t\n\t      el.setDraggable(draggable && forceLayout);\n\t      el.off('mouseover', el.__focusNodeAdjacency);\n\t      el.off('mouseout', el.__unfocusNodeAdjacency);\n\t\n\t      if (itemModel.get('focusNodeAdjacency')) {\n\t        el.on('mouseover', el.__focusNodeAdjacency = function () {\n\t          api.dispatchAction({\n\t            type: 'focusNodeAdjacency',\n\t            seriesId: seriesModel.id,\n\t            dataIndex: el.dataIndex\n\t          });\n\t        });\n\t        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n\t          api.dispatchAction({\n\t            type: 'unfocusNodeAdjacency',\n\t            seriesId: seriesModel.id\n\t          });\n\t        });\n\t      }\n\t    }, this);\n\t    data.graph.eachEdge(function (edge) {\n\t      var el = edge.getGraphicEl();\n\t      el.off('mouseover', el.__focusNodeAdjacency);\n\t      el.off('mouseout', el.__unfocusNodeAdjacency);\n\t\n\t      if (edge.getModel().get('focusNodeAdjacency')) {\n\t        el.on('mouseover', el.__focusNodeAdjacency = function () {\n\t          api.dispatchAction({\n\t            type: 'focusNodeAdjacency',\n\t            seriesId: seriesModel.id,\n\t            edgeDataIndex: edge.dataIndex\n\t          });\n\t        });\n\t        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n\t          api.dispatchAction({\n\t            type: 'unfocusNodeAdjacency',\n\t            seriesId: seriesModel.id\n\t          });\n\t        });\n\t      }\n\t    });\n\t    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n\t    var cx = data.getLayout('cx');\n\t    var cy = data.getLayout('cy');\n\t    data.eachItemGraphicEl(function (el, idx) {\n\t      var symbolPath = el.getSymbolPath();\n\t\n\t      if (circularRotateLabel) {\n\t        var pos = data.getItemLayout(idx);\n\t        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\t\n\t        if (rad < 0) {\n\t          rad = Math.PI * 2 + rad;\n\t        }\n\t\n\t        var isLeft = pos[0] < cx;\n\t\n\t        if (isLeft) {\n\t          rad = rad - Math.PI;\n\t        }\n\t\n\t        var textPosition = isLeft ? 'left' : 'right';\n\t        symbolPath.setStyle({\n\t          textRotation: -rad,\n\t          textPosition: textPosition,\n\t          textOrigin: 'center'\n\t        });\n\t        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n\t      } else {\n\t        symbolPath.setStyle({\n\t          textRotation: 0\n\t        });\n\t      }\n\t    });\n\t    this._firstRender = false;\n\t  },\n\t  dispose: function () {\n\t    this._controller && this._controller.dispose();\n\t    this._controllerHost = {};\n\t  },\n\t  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n\t    var data = this._model.getData();\n\t\n\t    var graph = data.graph;\n\t    var dataIndex = payload.dataIndex;\n\t    var edgeDataIndex = payload.edgeDataIndex;\n\t    var node = graph.getNodeByIndex(dataIndex);\n\t    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\t\n\t    if (!node && !edge) {\n\t      return;\n\t    }\n\t\n\t    graph.eachNode(function (node) {\n\t      fadeOutItem(node, nodeOpacityPath, 0.1);\n\t    });\n\t    graph.eachEdge(function (edge) {\n\t      fadeOutItem(edge, lineOpacityPath, 0.1);\n\t    });\n\t\n\t    if (node) {\n\t      fadeInItem(node, nodeOpacityPath);\n\t      zrUtil.each(node.edges, function (adjacentEdge) {\n\t        if (adjacentEdge.dataIndex < 0) {\n\t          return;\n\t        }\n\t\n\t        fadeInItem(adjacentEdge, lineOpacityPath);\n\t        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n\t        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n\t      });\n\t    }\n\t\n\t    if (edge) {\n\t      fadeInItem(edge, lineOpacityPath);\n\t      fadeInItem(edge.node1, nodeOpacityPath);\n\t      fadeInItem(edge.node2, nodeOpacityPath);\n\t    }\n\t  },\n\t  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n\t    var graph = this._model.getData().graph;\n\t\n\t    graph.eachNode(function (node) {\n\t      fadeOutItem(node, nodeOpacityPath);\n\t    });\n\t    graph.eachEdge(function (edge) {\n\t      fadeOutItem(edge, lineOpacityPath);\n\t    });\n\t  },\n\t  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n\t    var self = this;\n\t\n\t    (function step() {\n\t      forceLayout.step(function (stopped) {\n\t        self.updateLayout(self._model);\n\t        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n\t      });\n\t    })();\n\t  },\n\t  _updateController: function (seriesModel, ecModel, api) {\n\t    var controller = this._controller;\n\t    var controllerHost = this._controllerHost;\n\t    var group = this.group;\n\t    controller.setPointerChecker(function (e, x, y) {\n\t      var rect = group.getBoundingRect();\n\t      rect.applyTransform(group.transform);\n\t      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n\t    });\n\t\n\t    if (seriesModel.coordinateSystem.type !== 'view') {\n\t      controller.disable();\n\t      return;\n\t    }\n\t\n\t    controller.enable(seriesModel.get('roam'));\n\t    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n\t    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n\t    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n\t      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n\t      api.dispatchAction({\n\t        seriesId: seriesModel.id,\n\t        type: 'graphRoam',\n\t        dx: dx,\n\t        dy: dy\n\t      });\n\t    }).on('zoom', function (zoom, mouseX, mouseY) {\n\t      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n\t      api.dispatchAction({\n\t        seriesId: seriesModel.id,\n\t        type: 'graphRoam',\n\t        zoom: zoom,\n\t        originX: mouseX,\n\t        originY: mouseY\n\t      });\n\t\n\t      this._updateNodeAndLinkScale();\n\t\n\t      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\t\n\t      this._lineDraw.updateLayout();\n\t    }, this);\n\t  },\n\t  _updateNodeAndLinkScale: function () {\n\t    var seriesModel = this._model;\n\t    var data = seriesModel.getData();\n\t\n\t    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\t\n\t    var invScale = [nodeScale, nodeScale];\n\t    data.eachItemGraphicEl(function (el, idx) {\n\t      el.attr('scale', invScale);\n\t    });\n\t  },\n\t  _getNodeGlobalScale: function (seriesModel) {\n\t    var coordSys = seriesModel.coordinateSystem;\n\t\n\t    if (coordSys.type !== 'view') {\n\t      return 1;\n\t    }\n\t\n\t    var nodeScaleRatio = this._nodeScaleRatio;\n\t    var groupScale = coordSys.scale;\n\t    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\t\n\t    var roamZoom = coordSys.getZoom();\n\t    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n\t    return nodeScale / groupZoom;\n\t  },\n\t  updateLayout: function (seriesModel) {\n\t    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\t\n\t    this._symbolDraw.updateLayout();\n\t\n\t    this._lineDraw.updateLayout();\n\t  },\n\t  remove: function (ecModel, api) {\n\t    this._symbolDraw && this._symbolDraw.remove();\n\t    this._lineDraw && this._lineDraw.remove();\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 757:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar curveTool = __webpack_require__(84);\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar v1 = [];\n\tvar v2 = [];\n\tvar v3 = [];\n\tvar quadraticAt = curveTool.quadraticAt;\n\tvar v2DistSquare = vec2.distSquare;\n\tvar mathAbs = Math.abs;\n\t\n\tfunction intersectCurveCircle(curvePoints, center, radius) {\n\t  var p0 = curvePoints[0];\n\t  var p1 = curvePoints[1];\n\t  var p2 = curvePoints[2];\n\t  var d = Infinity;\n\t  var t;\n\t  var radiusSquare = radius * radius;\n\t  var interval = 0.1;\n\t\n\t  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n\t    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n\t    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n\t    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\t\n\t    if (diff < d) {\n\t      d = diff;\n\t      t = _t;\n\t    }\n\t  } // Assume the segment is monotone，Find root through Bisection method\n\t  // At most 32 iteration\n\t\n\t\n\t  for (var i = 0; i < 32; i++) {\n\t    // var prev = t - interval;\n\t    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n\t    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\t\n\t    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n\t    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n\t    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n\t    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n\t    var diff = v2DistSquare(v2, center) - radiusSquare;\n\t\n\t    if (mathAbs(diff) < 1e-2) {\n\t      break;\n\t    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\t\n\t\n\t    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n\t    interval /= 2;\n\t\n\t    if (diff < 0) {\n\t      if (nextDiff >= 0) {\n\t        t = t + interval;\n\t      } else {\n\t        t = t - interval;\n\t      }\n\t    } else {\n\t      if (nextDiff >= 0) {\n\t        t = t - interval;\n\t      } else {\n\t        t = t + interval;\n\t      }\n\t    }\n\t  }\n\t\n\t  return t;\n\t} // Adjust edge to avoid\n\t\n\t\n\tfunction _default(graph, scale) {\n\t  var tmp0 = [];\n\t  var quadraticSubdivide = curveTool.quadraticSubdivide;\n\t  var pts = [[], [], []];\n\t  var pts2 = [[], []];\n\t  var v = [];\n\t  scale /= 2;\n\t\n\t  function getSymbolSize(node) {\n\t    var symbolSize = node.getVisual('symbolSize');\n\t\n\t    if (symbolSize instanceof Array) {\n\t      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n\t    }\n\t\n\t    return symbolSize;\n\t  }\n\t\n\t  graph.eachEdge(function (edge, idx) {\n\t    var linePoints = edge.getLayout();\n\t    var fromSymbol = edge.getVisual('fromSymbol');\n\t    var toSymbol = edge.getVisual('toSymbol');\n\t\n\t    if (!linePoints.__original) {\n\t      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\t\n\t      if (linePoints[2]) {\n\t        linePoints.__original.push(vec2.clone(linePoints[2]));\n\t      }\n\t    }\n\t\n\t    var originalPoints = linePoints.__original; // Quadratic curve\n\t\n\t    if (linePoints[2] != null) {\n\t      vec2.copy(pts[0], originalPoints[0]);\n\t      vec2.copy(pts[1], originalPoints[2]);\n\t      vec2.copy(pts[2], originalPoints[1]);\n\t\n\t      if (fromSymbol && fromSymbol != 'none') {\n\t        var symbolSize = getSymbolSize(edge.node1);\n\t        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\t\n\t        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n\t        pts[0][0] = tmp0[3];\n\t        pts[1][0] = tmp0[4];\n\t        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n\t        pts[0][1] = tmp0[3];\n\t        pts[1][1] = tmp0[4];\n\t      }\n\t\n\t      if (toSymbol && toSymbol != 'none') {\n\t        var symbolSize = getSymbolSize(edge.node2);\n\t        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\t\n\t        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n\t        pts[1][0] = tmp0[1];\n\t        pts[2][0] = tmp0[2];\n\t        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n\t        pts[1][1] = tmp0[1];\n\t        pts[2][1] = tmp0[2];\n\t      } // Copy back to layout\n\t\n\t\n\t      vec2.copy(linePoints[0], pts[0]);\n\t      vec2.copy(linePoints[1], pts[2]);\n\t      vec2.copy(linePoints[2], pts[1]);\n\t    } // Line\n\t    else {\n\t        vec2.copy(pts2[0], originalPoints[0]);\n\t        vec2.copy(pts2[1], originalPoints[1]);\n\t        vec2.sub(v, pts2[1], pts2[0]);\n\t        vec2.normalize(v, v);\n\t\n\t        if (fromSymbol && fromSymbol != 'none') {\n\t          var symbolSize = getSymbolSize(edge.node1);\n\t          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n\t        }\n\t\n\t        if (toSymbol && toSymbol != 'none') {\n\t          var symbolSize = getSymbolSize(edge.node2);\n\t          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n\t        }\n\t\n\t        vec2.copy(linePoints[0], pts2[0]);\n\t        vec2.copy(linePoints[1], pts2[1]);\n\t      }\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 758:\n/***/ (function(module, exports) {\n\n\tfunction _default(ecModel) {\n\t  var legendModels = ecModel.findComponents({\n\t    mainType: 'legend'\n\t  });\n\t\n\t  if (!legendModels || !legendModels.length) {\n\t    return;\n\t  }\n\t\n\t  ecModel.eachSeriesByType('graph', function (graphSeries) {\n\t    var categoriesData = graphSeries.getCategoriesData();\n\t    var graph = graphSeries.getGraph();\n\t    var data = graph.data;\n\t    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n\t    data.filterSelf(function (idx) {\n\t      var model = data.getItemModel(idx);\n\t      var category = model.getShallow('category');\n\t\n\t      if (category != null) {\n\t        if (typeof category === 'number') {\n\t          category = categoryNames[category];\n\t        } // If in any legend component the status is not selected.\n\t\n\t\n\t        for (var i = 0; i < legendModels.length; i++) {\n\t          if (!legendModels[i].isSelected(category)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t\n\t      return true;\n\t    });\n\t  }, this);\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 759:\n/***/ (function(module, exports) {\n\n\tfunction _default(ecModel) {\n\t  var paletteScope = {};\n\t  ecModel.eachSeriesByType('graph', function (seriesModel) {\n\t    var categoriesData = seriesModel.getCategoriesData();\n\t    var data = seriesModel.getData();\n\t    var categoryNameIdxMap = {};\n\t    categoriesData.each(function (idx) {\n\t      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\t\n\t      categoryNameIdxMap['ec-' + name] = idx;\n\t      var itemModel = categoriesData.getItemModel(idx);\n\t      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n\t      categoriesData.setItemVisual(idx, 'color', color);\n\t    }); // Assign category color to visual\n\t\n\t    if (categoriesData.count()) {\n\t      data.each(function (idx) {\n\t        var model = data.getItemModel(idx);\n\t        var category = model.getShallow('category');\n\t\n\t        if (category != null) {\n\t          if (typeof category === 'string') {\n\t            category = categoryNameIdxMap['ec-' + category];\n\t          }\n\t\n\t          if (!data.getItemVisual(idx, 'color', true)) {\n\t            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n\t          }\n\t        }\n\t      });\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 760:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _circularLayoutHelper = __webpack_require__(408);\n\t\n\tvar circularLayout = _circularLayoutHelper.circularLayout;\n\t\n\tfunction _default(ecModel) {\n\t  ecModel.eachSeriesByType('graph', function (seriesModel) {\n\t    if (seriesModel.get('layout') === 'circular') {\n\t      circularLayout(seriesModel);\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 408:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar vec2 = __webpack_require__(10);\n\t\n\tfunction circularLayout(seriesModel) {\n\t  var coordSys = seriesModel.coordinateSystem;\n\t\n\t  if (coordSys && coordSys.type !== 'view') {\n\t    return;\n\t  }\n\t\n\t  var rect = coordSys.getBoundingRect();\n\t  var nodeData = seriesModel.getData();\n\t  var graph = nodeData.graph;\n\t  var angle = 0;\n\t  var sum = nodeData.getSum('value');\n\t  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n\t  var cx = rect.width / 2 + rect.x;\n\t  var cy = rect.height / 2 + rect.y;\n\t  var r = Math.min(rect.width, rect.height) / 2;\n\t  graph.eachNode(function (node) {\n\t    var value = node.getValue('value');\n\t    angle += unitAngle * (sum ? value : 1) / 2;\n\t    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n\t    angle += unitAngle * (sum ? value : 1) / 2;\n\t  });\n\t  nodeData.setLayout({\n\t    cx: cx,\n\t    cy: cy\n\t  });\n\t  graph.eachEdge(function (edge) {\n\t    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n\t    var p1 = vec2.clone(edge.node1.getLayout());\n\t    var p2 = vec2.clone(edge.node2.getLayout());\n\t    var cp1;\n\t    var x12 = (p1[0] + p2[0]) / 2;\n\t    var y12 = (p1[1] + p2[1]) / 2;\n\t\n\t    if (+curveness) {\n\t      curveness *= 3;\n\t      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n\t    }\n\t\n\t    edge.setLayout([p1, p2, cp1]);\n\t  });\n\t}\n\t\n\texports.circularLayout = circularLayout;\n\n/***/ }),\n\n/***/ 761:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar View = __webpack_require__(791);\n\t\n\tvar _layout = __webpack_require__(76);\n\t\n\tvar getLayoutRect = _layout.getLayoutRect;\n\t\n\tvar bbox = __webpack_require__(358);\n\t\n\t// FIXME Where to create the simple view coordinate system\n\tfunction getViewRect(seriesModel, api, aspect) {\n\t  var option = seriesModel.getBoxLayoutParams();\n\t  option.aspect = aspect;\n\t  return getLayoutRect(option, {\n\t    width: api.getWidth(),\n\t    height: api.getHeight()\n\t  });\n\t}\n\t\n\tfunction _default(ecModel, api) {\n\t  var viewList = [];\n\t  ecModel.eachSeriesByType('graph', function (seriesModel) {\n\t    var coordSysType = seriesModel.get('coordinateSystem');\n\t\n\t    if (!coordSysType || coordSysType === 'view') {\n\t      var data = seriesModel.getData();\n\t      var positions = data.mapArray(function (idx) {\n\t        var itemModel = data.getItemModel(idx);\n\t        return [+itemModel.get('x'), +itemModel.get('y')];\n\t      });\n\t      var min = [];\n\t      var max = [];\n\t      bbox.fromPoints(positions, min, max); // If width or height is 0\n\t\n\t      if (max[0] - min[0] === 0) {\n\t        max[0] += 1;\n\t        min[0] -= 1;\n\t      }\n\t\n\t      if (max[1] - min[1] === 0) {\n\t        max[1] += 1;\n\t        min[1] -= 1;\n\t      }\n\t\n\t      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\t\n\t      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\t\n\t      if (isNaN(aspect)) {\n\t        min = [viewRect.x, viewRect.y];\n\t        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n\t      }\n\t\n\t      var bbWidth = max[0] - min[0];\n\t      var bbHeight = max[1] - min[1];\n\t      var viewWidth = viewRect.width;\n\t      var viewHeight = viewRect.height;\n\t      var viewCoordSys = seriesModel.coordinateSystem = new View();\n\t      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n\t      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n\t      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\t\n\t      viewCoordSys.setCenter(seriesModel.get('center'));\n\t      viewCoordSys.setZoom(seriesModel.get('zoom'));\n\t      viewList.push(viewCoordSys);\n\t    }\n\t  });\n\t  return viewList;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 762:\n/***/ (function(module, exports) {\n\n\tfunction normalize(a) {\n\t  if (!(a instanceof Array)) {\n\t    a = [a, a];\n\t  }\n\t\n\t  return a;\n\t}\n\t\n\tfunction _default(ecModel) {\n\t  ecModel.eachSeriesByType('graph', function (seriesModel) {\n\t    var graph = seriesModel.getGraph();\n\t    var edgeData = seriesModel.getEdgeData();\n\t    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n\t    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n\t    var colorQuery = 'lineStyle.color'.split('.');\n\t    var opacityQuery = 'lineStyle.opacity'.split('.');\n\t    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n\t    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n\t    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n\t    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n\t    edgeData.setVisual('color', seriesModel.get(colorQuery));\n\t    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n\t    edgeData.each(function (idx) {\n\t      var itemModel = edgeData.getItemModel(idx);\n\t      var edge = graph.getEdgeByIndex(idx);\n\t      var symbolType = normalize(itemModel.getShallow('symbol', true));\n\t      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\t\n\t      var color = itemModel.get(colorQuery);\n\t      var opacity = itemModel.get(opacityQuery);\n\t\n\t      switch (color) {\n\t        case 'source':\n\t          color = edge.node1.getVisual('color');\n\t          break;\n\t\n\t        case 'target':\n\t          color = edge.node2.getVisual('color');\n\t          break;\n\t      }\n\t\n\t      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n\t      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n\t      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n\t      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n\t      edge.setVisual('color', color);\n\t      edge.setVisual('opacity', opacity);\n\t    });\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 763:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n\t//     return e.n1 === n ? e.n2 : e.n1;\n\t// }\n\t\n\tfunction forceLayout(nodes, edges, opts) {\n\t  var rect = opts.rect;\n\t  var width = rect.width;\n\t  var height = rect.height;\n\t  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\t\n\t  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n\t  //     var e = edges[i];\n\t  //     var n1 = e.n1;\n\t  //     var n2 = e.n2;\n\t  //     n1.edges = n1.edges || [];\n\t  //     n2.edges = n2.edges || [];\n\t  //     n1.edges.push(e);\n\t  //     n2.edges.push(e);\n\t  // }\n\t  // Init position\n\t\n\t  for (var i = 0; i < nodes.length; i++) {\n\t    var n = nodes[i];\n\t\n\t    if (!n.p) {\n\t      // Use the position from first adjecent node with defined position\n\t      // Or use a random position\n\t      // From d3\n\t      // if (n.edges) {\n\t      //     var j = -1;\n\t      //     while (++j < n.edges.length) {\n\t      //         var e = n.edges[j];\n\t      //         var other = adjacentNode(n, e);\n\t      //         if (other.p) {\n\t      //             n.p = vec2.clone(other.p);\n\t      //             break;\n\t      //         }\n\t      //     }\n\t      // }\n\t      // if (!n.p) {\n\t      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n\t    }\n\t\n\t    n.pp = vec2.clone(n.p);\n\t    n.edges = null;\n\t  } // Formula in 'Graph Drawing by Force-directed Placement'\n\t  // var k = scale * Math.sqrt(width * height / nodes.length);\n\t  // var k2 = k * k;\n\t\n\t\n\t  var friction = 0.6;\n\t  return {\n\t    warmUp: function () {\n\t      friction = 0.5;\n\t    },\n\t    setFixed: function (idx) {\n\t      nodes[idx].fixed = true;\n\t    },\n\t    setUnfixed: function (idx) {\n\t      nodes[idx].fixed = false;\n\t    },\n\t    step: function (cb) {\n\t      var v12 = [];\n\t      var nLen = nodes.length;\n\t\n\t      for (var i = 0; i < edges.length; i++) {\n\t        var e = edges[i];\n\t        var n1 = e.n1;\n\t        var n2 = e.n2;\n\t        vec2.sub(v12, n2.p, n1.p);\n\t        var d = vec2.len(v12) - e.d;\n\t        var w = n2.w / (n1.w + n2.w);\n\t\n\t        if (isNaN(w)) {\n\t          w = 0;\n\t        }\n\t\n\t        vec2.normalize(v12, v12);\n\t        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n\t        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n\t      } // Gravity\n\t\n\t\n\t      for (var i = 0; i < nLen; i++) {\n\t        var n = nodes[i];\n\t\n\t        if (!n.fixed) {\n\t          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n\t          // vec2.scale(v12, v12, 1 / d);\n\t          // var gravityFactor = gravity;\n\t\n\t          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n\t        }\n\t      } // Repulsive\n\t      // PENDING\n\t\n\t\n\t      for (var i = 0; i < nLen; i++) {\n\t        var n1 = nodes[i];\n\t\n\t        for (var j = i + 1; j < nLen; j++) {\n\t          var n2 = nodes[j];\n\t          vec2.sub(v12, n2.p, n1.p);\n\t          var d = vec2.len(v12);\n\t\n\t          if (d === 0) {\n\t            // Random repulse\n\t            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n\t            d = 1;\n\t          }\n\t\n\t          var repFact = (n1.rep + n2.rep) / d / d;\n\t          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n\t          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n\t        }\n\t      }\n\t\n\t      var v = [];\n\t\n\t      for (var i = 0; i < nLen; i++) {\n\t        var n = nodes[i];\n\t\n\t        if (!n.fixed) {\n\t          vec2.sub(v, n.p, n.pp);\n\t          scaleAndAdd(n.p, n.p, v, friction);\n\t          vec2.copy(n.pp, n.p);\n\t        }\n\t      }\n\t\n\t      friction = friction * 0.992;\n\t      cb && cb(nodes, edges, friction < 0.01);\n\t    }\n\t  };\n\t}\n\t\n\texports.forceLayout = forceLayout;\n\n/***/ }),\n\n/***/ 764:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _forceHelper = __webpack_require__(763);\n\t\n\tvar forceLayout = _forceHelper.forceLayout;\n\t\n\tvar _simpleLayoutHelper = __webpack_require__(409);\n\t\n\tvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\t\n\tvar _circularLayoutHelper = __webpack_require__(408);\n\t\n\tvar circularLayout = _circularLayoutHelper.circularLayout;\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar linearMap = _number.linearMap;\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tfunction _default(ecModel) {\n\t  ecModel.eachSeriesByType('graph', function (graphSeries) {\n\t    var coordSys = graphSeries.coordinateSystem;\n\t\n\t    if (coordSys && coordSys.type !== 'view') {\n\t      return;\n\t    }\n\t\n\t    if (graphSeries.get('layout') === 'force') {\n\t      var preservedPoints = graphSeries.preservedPoints || {};\n\t      var graph = graphSeries.getGraph();\n\t      var nodeData = graph.data;\n\t      var edgeData = graph.edgeData;\n\t      var forceModel = graphSeries.getModel('force');\n\t      var initLayout = forceModel.get('initLayout');\n\t\n\t      if (graphSeries.preservedPoints) {\n\t        nodeData.each(function (idx) {\n\t          var id = nodeData.getId(idx);\n\t          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n\t        });\n\t      } else if (!initLayout || initLayout === 'none') {\n\t        simpleLayout(graphSeries);\n\t      } else if (initLayout === 'circular') {\n\t        circularLayout(graphSeries);\n\t      }\n\t\n\t      var nodeDataExtent = nodeData.getDataExtent('value');\n\t      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\t\n\t      var repulsion = forceModel.get('repulsion');\n\t      var edgeLength = forceModel.get('edgeLength');\n\t\n\t      if (!zrUtil.isArray(repulsion)) {\n\t        repulsion = [repulsion, repulsion];\n\t      }\n\t\n\t      if (!zrUtil.isArray(edgeLength)) {\n\t        edgeLength = [edgeLength, edgeLength];\n\t      } // Larger value has smaller length\n\t\n\t\n\t      edgeLength = [edgeLength[1], edgeLength[0]];\n\t      var nodes = nodeData.mapArray('value', function (value, idx) {\n\t        var point = nodeData.getItemLayout(idx);\n\t        var rep = linearMap(value, nodeDataExtent, repulsion);\n\t\n\t        if (isNaN(rep)) {\n\t          rep = (repulsion[0] + repulsion[1]) / 2;\n\t        }\n\t\n\t        return {\n\t          w: rep,\n\t          rep: rep,\n\t          fixed: nodeData.getItemModel(idx).get('fixed'),\n\t          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n\t        };\n\t      });\n\t      var edges = edgeData.mapArray('value', function (value, idx) {\n\t        var edge = graph.getEdgeByIndex(idx);\n\t        var d = linearMap(value, edgeDataExtent, edgeLength);\n\t\n\t        if (isNaN(d)) {\n\t          d = (edgeLength[0] + edgeLength[1]) / 2;\n\t        }\n\t\n\t        return {\n\t          n1: nodes[edge.node1.dataIndex],\n\t          n2: nodes[edge.node2.dataIndex],\n\t          d: d,\n\t          curveness: edge.getModel().get('lineStyle.curveness') || 0\n\t        };\n\t      });\n\t      var coordSys = graphSeries.coordinateSystem;\n\t      var rect = coordSys.getBoundingRect();\n\t      var forceInstance = forceLayout(nodes, edges, {\n\t        rect: rect,\n\t        gravity: forceModel.get('gravity')\n\t      });\n\t      var oldStep = forceInstance.step;\n\t\n\t      forceInstance.step = function (cb) {\n\t        for (var i = 0, l = nodes.length; i < l; i++) {\n\t          if (nodes[i].fixed) {\n\t            // Write back to layout instance\n\t            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n\t          }\n\t        }\n\t\n\t        oldStep(function (nodes, edges, stopped) {\n\t          for (var i = 0, l = nodes.length; i < l; i++) {\n\t            if (!nodes[i].fixed) {\n\t              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n\t            }\n\t\n\t            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n\t          }\n\t\n\t          for (var i = 0, l = edges.length; i < l; i++) {\n\t            var e = edges[i];\n\t            var edge = graph.getEdgeByIndex(i);\n\t            var p1 = e.n1.p;\n\t            var p2 = e.n2.p;\n\t            var points = edge.getLayout();\n\t            points = points ? points.slice() : [];\n\t            points[0] = points[0] || [];\n\t            points[1] = points[1] || [];\n\t            vec2.copy(points[0], p1);\n\t            vec2.copy(points[1], p2);\n\t\n\t            if (+e.curveness) {\n\t              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n\t            }\n\t\n\t            edge.setLayout(points);\n\t          } // Update layout\n\t\n\t\n\t          cb && cb(stopped);\n\t        });\n\t      };\n\t\n\t      graphSeries.forceLayout = forceInstance;\n\t      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\t\n\t      forceInstance.step();\n\t    } else {\n\t      // Remove prev injected forceLayout instance\n\t      graphSeries.forceLayout = null;\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 765:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar _roamHelper = __webpack_require__(753);\n\t\n\tvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\tvar actionInfo = {\n\t  type: 'graphRoam',\n\t  event: 'graphRoam',\n\t  update: 'none'\n\t};\n\t/**\n\t * @payload\n\t * @property {string} name Series name\n\t * @property {number} [dx]\n\t * @property {number} [dy]\n\t * @property {number} [zoom]\n\t * @property {number} [originX]\n\t * @property {number} [originY]\n\t */\n\t\n\techarts.registerAction(actionInfo, function (payload, ecModel) {\n\t  ecModel.eachComponent({\n\t    mainType: 'series',\n\t    query: payload\n\t  }, function (seriesModel) {\n\t    var coordSys = seriesModel.coordinateSystem;\n\t    var res = updateCenterAndZoom(coordSys, payload);\n\t    seriesModel.setCenter && seriesModel.setCenter(res.center);\n\t    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n\t  });\n\t});\n\t/**\n\t * @payload\n\t * @property {number} [seriesIndex]\n\t * @property {string} [seriesId]\n\t * @property {string} [seriesName]\n\t * @property {number} [dataIndex]\n\t */\n\t\n\techarts.registerAction({\n\t  type: 'focusNodeAdjacency',\n\t  event: 'focusNodeAdjacency',\n\t  update: 'series.graph:focusNodeAdjacency'\n\t}, function () {});\n\t/**\n\t * @payload\n\t * @property {number} [seriesIndex]\n\t * @property {string} [seriesId]\n\t * @property {string} [seriesName]\n\t */\n\t\n\techarts.registerAction({\n\t  type: 'unfocusNodeAdjacency',\n\t  event: 'unfocusNodeAdjacency',\n\t  update: 'series.graph:unfocusNodeAdjacency'\n\t}, function () {});\n\n/***/ }),\n\n/***/ 766:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar each = _util.each;\n\t\n\tvar _simpleLayoutHelper = __webpack_require__(409);\n\t\n\tvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\tvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\t\n\tfunction _default(ecModel, api) {\n\t  ecModel.eachSeriesByType('graph', function (seriesModel) {\n\t    var layout = seriesModel.get('layout');\n\t    var coordSys = seriesModel.coordinateSystem;\n\t\n\t    if (coordSys && coordSys.type !== 'view') {\n\t      var data = seriesModel.getData();\n\t      var dimensions = [];\n\t      each(coordSys.dimensions, function (coordDim) {\n\t        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n\t      });\n\t\n\t      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n\t        var value = [];\n\t        var hasValue = false;\n\t\n\t        for (var i = 0; i < dimensions.length; i++) {\n\t          var val = data.get(dimensions[i], dataIndex);\n\t\n\t          if (!isNaN(val)) {\n\t            hasValue = true;\n\t          }\n\t\n\t          value.push(val);\n\t        }\n\t\n\t        if (hasValue) {\n\t          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n\t        } else {\n\t          // Also {Array.<number>}, not undefined to avoid if...else... statement\n\t          data.setItemLayout(dataIndex, [NaN, NaN]);\n\t        }\n\t      }\n\t\n\t      simpleLayoutEdge(data.graph);\n\t    } else if (!layout || layout === 'none') {\n\t      simpleLayout(seriesModel);\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 409:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar vec2 = __webpack_require__(10);\n\t\n\tfunction simpleLayout(seriesModel) {\n\t  var coordSys = seriesModel.coordinateSystem;\n\t\n\t  if (coordSys && coordSys.type !== 'view') {\n\t    return;\n\t  }\n\t\n\t  var graph = seriesModel.getGraph();\n\t  graph.eachNode(function (node) {\n\t    var model = node.getModel();\n\t    node.setLayout([+model.get('x'), +model.get('y')]);\n\t  });\n\t  simpleLayoutEdge(graph);\n\t}\n\t\n\tfunction simpleLayoutEdge(graph) {\n\t  graph.eachEdge(function (edge) {\n\t    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n\t    var p1 = vec2.clone(edge.node1.getLayout());\n\t    var p2 = vec2.clone(edge.node2.getLayout());\n\t    var points = [p1, p2];\n\t\n\t    if (+curveness) {\n\t      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n\t    }\n\t\n\t    edge.setLayout(points);\n\t  });\n\t}\n\t\n\texports.simpleLayout = simpleLayout;\n\texports.simpleLayoutEdge = simpleLayoutEdge;\n\n/***/ }),\n\n/***/ 767:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar vector = __webpack_require__(10);\n\t\n\tvar symbolUtil = __webpack_require__(195);\n\t\n\tvar LinePath = __webpack_require__(769);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar round = _number.round;\n\t\n\t/**\n\t * @module echarts/chart/helper/Line\n\t */\n\tvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\t\n\tfunction makeSymbolTypeKey(symbolCategory) {\n\t  return '_' + symbolCategory + 'Type';\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction createSymbol(name, lineData, idx) {\n\t  var color = lineData.getItemVisual(idx, 'color');\n\t  var symbolType = lineData.getItemVisual(idx, name);\n\t  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\t\n\t  if (!symbolType || symbolType === 'none') {\n\t    return;\n\t  }\n\t\n\t  if (!zrUtil.isArray(symbolSize)) {\n\t    symbolSize = [symbolSize, symbolSize];\n\t  }\n\t\n\t  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n\t  symbolPath.name = name;\n\t  return symbolPath;\n\t}\n\t\n\tfunction createLine(points) {\n\t  var line = new LinePath({\n\t    name: 'line'\n\t  });\n\t  setLinePoints(line.shape, points);\n\t  return line;\n\t}\n\t\n\tfunction setLinePoints(targetShape, points) {\n\t  var p1 = points[0];\n\t  var p2 = points[1];\n\t  var cp1 = points[2];\n\t  targetShape.x1 = p1[0];\n\t  targetShape.y1 = p1[1];\n\t  targetShape.x2 = p2[0];\n\t  targetShape.y2 = p2[1];\n\t  targetShape.percent = 1;\n\t\n\t  if (cp1) {\n\t    targetShape.cpx1 = cp1[0];\n\t    targetShape.cpy1 = cp1[1];\n\t  } else {\n\t    targetShape.cpx1 = NaN;\n\t    targetShape.cpy1 = NaN;\n\t  }\n\t}\n\t\n\tfunction updateSymbolAndLabelBeforeLineUpdate() {\n\t  var lineGroup = this;\n\t  var symbolFrom = lineGroup.childOfName('fromSymbol');\n\t  var symbolTo = lineGroup.childOfName('toSymbol');\n\t  var label = lineGroup.childOfName('label'); // Quick reject\n\t\n\t  if (!symbolFrom && !symbolTo && label.ignore) {\n\t    return;\n\t  }\n\t\n\t  var invScale = 1;\n\t  var parentNode = this.parent;\n\t\n\t  while (parentNode) {\n\t    if (parentNode.scale) {\n\t      invScale /= parentNode.scale[0];\n\t    }\n\t\n\t    parentNode = parentNode.parent;\n\t  }\n\t\n\t  var line = lineGroup.childOfName('line'); // If line not changed\n\t  // FIXME Parent scale changed\n\t\n\t  if (!this.__dirty && !line.__dirty) {\n\t    return;\n\t  }\n\t\n\t  var percent = line.shape.percent;\n\t  var fromPos = line.pointAt(0);\n\t  var toPos = line.pointAt(percent);\n\t  var d = vector.sub([], toPos, fromPos);\n\t  vector.normalize(d, d);\n\t\n\t  if (symbolFrom) {\n\t    symbolFrom.attr('position', fromPos);\n\t    var tangent = line.tangentAt(0);\n\t    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n\t    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n\t  }\n\t\n\t  if (symbolTo) {\n\t    symbolTo.attr('position', toPos);\n\t    var tangent = line.tangentAt(1);\n\t    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n\t    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n\t  }\n\t\n\t  if (!label.ignore) {\n\t    label.attr('position', toPos);\n\t    var textPosition;\n\t    var textAlign;\n\t    var textVerticalAlign;\n\t    var distance = 5 * invScale; // End\n\t\n\t    if (label.__position === 'end') {\n\t      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n\t      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n\t      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n\t    } // Middle\n\t    else if (label.__position === 'middle') {\n\t        var halfPercent = percent / 2;\n\t        var tangent = line.tangentAt(halfPercent);\n\t        var n = [tangent[1], -tangent[0]];\n\t        var cp = line.pointAt(halfPercent);\n\t\n\t        if (n[1] > 0) {\n\t          n[0] = -n[0];\n\t          n[1] = -n[1];\n\t        }\n\t\n\t        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n\t        textAlign = 'center';\n\t        textVerticalAlign = 'bottom';\n\t        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\t\n\t        if (toPos[0] < fromPos[0]) {\n\t          rotation = Math.PI + rotation;\n\t        }\n\t\n\t        label.attr('rotation', rotation);\n\t      } // Start\n\t      else {\n\t          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n\t          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n\t          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n\t        }\n\t\n\t    label.attr({\n\t      style: {\n\t        // Use the user specified text align and baseline first\n\t        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n\t        textAlign: label.__textAlign || textAlign\n\t      },\n\t      position: textPosition,\n\t      scale: [invScale, invScale]\n\t    });\n\t  }\n\t}\n\t/**\n\t * @constructor\n\t * @extends {module:zrender/graphic/Group}\n\t * @alias {module:echarts/chart/helper/Line}\n\t */\n\t\n\t\n\tfunction Line(lineData, idx, seriesScope) {\n\t  graphic.Group.call(this);\n\t\n\t  this._createLine(lineData, idx, seriesScope);\n\t}\n\t\n\tvar lineProto = Line.prototype; // Update symbol position and rotation\n\t\n\tlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\t\n\tlineProto._createLine = function (lineData, idx, seriesScope) {\n\t  var seriesModel = lineData.hostModel;\n\t  var linePoints = lineData.getItemLayout(idx);\n\t  var line = createLine(linePoints);\n\t  line.shape.percent = 0;\n\t  graphic.initProps(line, {\n\t    shape: {\n\t      percent: 1\n\t    }\n\t  }, seriesModel, idx);\n\t  this.add(line);\n\t  var label = new graphic.Text({\n\t    name: 'label'\n\t  });\n\t  this.add(label);\n\t  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n\t    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n\t    // it will be updated after line#update.\n\t    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\t\n\t    this.add(symbol);\n\t    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n\t  }, this);\n\t\n\t  this._updateCommonStl(lineData, idx, seriesScope);\n\t};\n\t\n\tlineProto.updateData = function (lineData, idx, seriesScope) {\n\t  var seriesModel = lineData.hostModel;\n\t  var line = this.childOfName('line');\n\t  var linePoints = lineData.getItemLayout(idx);\n\t  var target = {\n\t    shape: {}\n\t  };\n\t  setLinePoints(target.shape, linePoints);\n\t  graphic.updateProps(line, target, seriesModel, idx);\n\t  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n\t    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n\t    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\t\n\t    if (this[key] !== symbolType) {\n\t      this.remove(this.childOfName(symbolCategory));\n\t      var symbol = createSymbol(symbolCategory, lineData, idx);\n\t      this.add(symbol);\n\t    }\n\t\n\t    this[key] = symbolType;\n\t  }, this);\n\t\n\t  this._updateCommonStl(lineData, idx, seriesScope);\n\t};\n\t\n\tlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n\t  var seriesModel = lineData.hostModel;\n\t  var line = this.childOfName('line');\n\t  var lineStyle = seriesScope && seriesScope.lineStyle;\n\t  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\t  var labelModel = seriesScope && seriesScope.labelModel;\n\t  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\t\n\t  if (!seriesScope || lineData.hasItemOption) {\n\t    var itemModel = lineData.getItemModel(idx);\n\t    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n\t    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n\t    labelModel = itemModel.getModel('label');\n\t    hoverLabelModel = itemModel.getModel('emphasis.label');\n\t  }\n\t\n\t  var visualColor = lineData.getItemVisual(idx, 'color');\n\t  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n\t  line.useStyle(zrUtil.defaults({\n\t    strokeNoScale: true,\n\t    fill: 'none',\n\t    stroke: visualColor,\n\t    opacity: visualOpacity\n\t  }, lineStyle));\n\t  line.hoverStyle = hoverLineStyle; // Update symbol\n\t\n\t  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n\t    var symbol = this.childOfName(symbolCategory);\n\t\n\t    if (symbol) {\n\t      symbol.setColor(visualColor);\n\t      symbol.setStyle({\n\t        opacity: visualOpacity\n\t      });\n\t    }\n\t  }, this);\n\t  var showLabel = labelModel.getShallow('show');\n\t  var hoverShowLabel = hoverLabelModel.getShallow('show');\n\t  var label = this.childOfName('label');\n\t  var defaultLabelColor;\n\t  var normalText;\n\t  var emphasisText;\n\t\n\t  if (showLabel || hoverShowLabel) {\n\t    defaultLabelColor = visualColor || '#000';\n\t    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\t\n\t    if (normalText == null) {\n\t      var rawVal = seriesModel.getRawValue(idx);\n\t      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n\t    }\n\t\n\t    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n\t  } // label.afterUpdate = lineAfterUpdate;\n\t\n\t\n\t  if (showLabel) {\n\t    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n\t      text: normalText\n\t    }, {\n\t      autoColor: defaultLabelColor\n\t    });\n\t    label.__textAlign = labelStyle.textAlign;\n\t    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\t\n\t    label.__position = labelModel.get('position') || 'middle';\n\t  } else {\n\t    label.setStyle('text', null);\n\t  }\n\t\n\t  if (hoverShowLabel) {\n\t    // Only these properties supported in this emphasis style here.\n\t    label.hoverStyle = {\n\t      text: emphasisText,\n\t      textFill: hoverLabelModel.getTextColor(true),\n\t      // For merging hover style to normal style, do not use\n\t      // `hoverLabelModel.getFont()` here.\n\t      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n\t      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n\t      fontSize: hoverLabelModel.getShallow('fontSize'),\n\t      fontFamily: hoverLabelModel.getShallow('fontFamily')\n\t    };\n\t  } else {\n\t    label.hoverStyle = {\n\t      text: null\n\t    };\n\t  }\n\t\n\t  label.ignore = !showLabel && !hoverShowLabel;\n\t  graphic.setHoverStyle(this);\n\t};\n\t\n\tlineProto.highlight = function () {\n\t  this.trigger('emphasis');\n\t};\n\t\n\tlineProto.downplay = function () {\n\t  this.trigger('normal');\n\t};\n\t\n\tlineProto.updateLayout = function (lineData, idx) {\n\t  this.setLinePoints(lineData.getItemLayout(idx));\n\t};\n\t\n\tlineProto.setLinePoints = function (points) {\n\t  var linePath = this.childOfName('line');\n\t  setLinePoints(linePath.shape, points);\n\t  linePath.dirty();\n\t};\n\t\n\tzrUtil.inherits(Line, graphic.Group);\n\tvar _default = Line;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar LineGroup = __webpack_require__(767);\n\t\n\t/**\n\t * @module echarts/chart/helper/LineDraw\n\t */\n\t// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\t\n\t/**\n\t * @alias module:echarts/component/marker/LineDraw\n\t * @constructor\n\t */\n\tfunction LineDraw(ctor) {\n\t  this._ctor = ctor || LineGroup;\n\t  this.group = new graphic.Group();\n\t}\n\t\n\tvar lineDrawProto = LineDraw.prototype;\n\t\n\tlineDrawProto.isPersistent = function () {\n\t  return true;\n\t};\n\t/**\n\t * @param {module:echarts/data/List} lineData\n\t */\n\t\n\t\n\tlineDrawProto.updateData = function (lineData) {\n\t  var lineDraw = this;\n\t  var group = lineDraw.group;\n\t  var oldLineData = lineDraw._lineData;\n\t  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n\t  // stream mode to normal mode, where previous elements should be removed.\n\t\n\t  if (!oldLineData) {\n\t    group.removeAll();\n\t  }\n\t\n\t  var seriesScope = makeSeriesScope(lineData);\n\t  lineData.diff(oldLineData).add(function (idx) {\n\t    doAdd(lineDraw, lineData, idx, seriesScope);\n\t  }).update(function (newIdx, oldIdx) {\n\t    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n\t  }).remove(function (idx) {\n\t    group.remove(oldLineData.getItemGraphicEl(idx));\n\t  }).execute();\n\t};\n\t\n\tfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n\t  var itemLayout = lineData.getItemLayout(idx);\n\t\n\t  if (!lineNeedsDraw(itemLayout)) {\n\t    return;\n\t  }\n\t\n\t  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n\t  lineData.setItemGraphicEl(idx, el);\n\t  lineDraw.group.add(el);\n\t}\n\t\n\tfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n\t  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\t\n\t  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n\t    lineDraw.group.remove(itemEl);\n\t    return;\n\t  }\n\t\n\t  if (!itemEl) {\n\t    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n\t  } else {\n\t    itemEl.updateData(newLineData, newIdx, seriesScope);\n\t  }\n\t\n\t  newLineData.setItemGraphicEl(newIdx, itemEl);\n\t  lineDraw.group.add(itemEl);\n\t}\n\t\n\tlineDrawProto.updateLayout = function () {\n\t  var lineData = this._lineData;\n\t  lineData.eachItemGraphicEl(function (el, idx) {\n\t    el.updateLayout(lineData, idx);\n\t  }, this);\n\t};\n\t\n\tlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n\t  this._seriesScope = makeSeriesScope(lineData);\n\t  this._lineData = null;\n\t  this.group.removeAll();\n\t};\n\t\n\tlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n\t  function updateIncrementalAndHover(el) {\n\t    if (!el.isGroup) {\n\t      el.incremental = el.useHoverLayer = true;\n\t    }\n\t  }\n\t\n\t  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n\t    var itemLayout = lineData.getItemLayout(idx);\n\t\n\t    if (lineNeedsDraw(itemLayout)) {\n\t      var el = new this._ctor(lineData, idx, this._seriesScope);\n\t      el.traverse(updateIncrementalAndHover);\n\t      this.group.add(el);\n\t    }\n\t  }\n\t};\n\t\n\tfunction makeSeriesScope(lineData) {\n\t  var hostModel = lineData.hostModel;\n\t  return {\n\t    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n\t    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n\t    labelModel: hostModel.getModel('label'),\n\t    hoverLabelModel: hostModel.getModel('emphasis.label')\n\t  };\n\t}\n\t\n\tlineDrawProto.remove = function () {\n\t  this._clearIncremental();\n\t\n\t  this._incremental = null;\n\t  this.group.removeAll();\n\t};\n\t\n\tlineDrawProto._clearIncremental = function () {\n\t  var incremental = this._incremental;\n\t\n\t  if (incremental) {\n\t    incremental.clearDisplaybles();\n\t  }\n\t};\n\t\n\tfunction isPointNaN(pt) {\n\t  return isNaN(pt[0]) || isNaN(pt[1]);\n\t}\n\t\n\tfunction lineNeedsDraw(pts) {\n\t  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n\t}\n\t\n\tvar _default = LineDraw;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 769:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\t/**\n\t * Line path for bezier and straight line draw\n\t */\n\tvar straightLineProto = graphic.Line.prototype;\n\tvar bezierCurveProto = graphic.BezierCurve.prototype;\n\t\n\tfunction isLine(shape) {\n\t  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n\t}\n\t\n\tvar _default = graphic.extendShape({\n\t  type: 'ec-line',\n\t  style: {\n\t    stroke: '#000',\n\t    fill: null\n\t  },\n\t  shape: {\n\t    x1: 0,\n\t    y1: 0,\n\t    x2: 0,\n\t    y2: 0,\n\t    percent: 1,\n\t    cpx1: null,\n\t    cpy1: null\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n\t  },\n\t  pointAt: function (t) {\n\t    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n\t  },\n\t  tangentAt: function (t) {\n\t    var shape = this.shape;\n\t    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n\t    return vec2.normalize(p, p);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 770:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar _symbol = __webpack_require__(195);\n\t\n\tvar createSymbol = _symbol.createSymbol;\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar parsePercent = _number.parsePercent;\n\t\n\tvar _labelHelper = __webpack_require__(774);\n\t\n\tvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\t\n\t/**\n\t * @module echarts/chart/helper/Symbol\n\t */\n\tfunction getSymbolSize(data, idx) {\n\t  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n\t  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n\t}\n\t\n\tfunction getScale(symbolSize) {\n\t  return [symbolSize[0] / 2, symbolSize[1] / 2];\n\t}\n\t/**\n\t * @constructor\n\t * @alias {module:echarts/chart/helper/Symbol}\n\t * @param {module:echarts/data/List} data\n\t * @param {number} idx\n\t * @extends {module:zrender/graphic/Group}\n\t */\n\t\n\t\n\tfunction SymbolClz(data, idx, seriesScope) {\n\t  graphic.Group.call(this);\n\t  this.updateData(data, idx, seriesScope);\n\t}\n\t\n\tvar symbolProto = SymbolClz.prototype;\n\t\n\tfunction driftSymbol(dx, dy) {\n\t  this.parent.drift(dx, dy);\n\t}\n\t\n\tsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n\t  // Remove paths created before\n\t  this.removeAll();\n\t  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n\t  //     symbolType, -0.5, -0.5, 1, 1, color\n\t  // );\n\t  // If width/height are set too small (e.g., set to 1) on ios10\n\t  // and macOS Sierra, a circle stroke become a rect, no matter what\n\t  // the scale is set. So we set width/height as 2. See #4150.\n\t\n\t  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n\t  symbolPath.attr({\n\t    z2: 100,\n\t    culling: true,\n\t    scale: getScale(symbolSize)\n\t  }); // Rewrite drift method\n\t\n\t  symbolPath.drift = driftSymbol;\n\t  this._symbolType = symbolType;\n\t  this.add(symbolPath);\n\t};\n\t/**\n\t * Stop animation\n\t * @param {boolean} toLastFrame\n\t */\n\t\n\t\n\tsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n\t  this.childAt(0).stopAnimation(toLastFrame);\n\t};\n\t/**\n\t * FIXME:\n\t * Caution: This method breaks the encapsulation of this module,\n\t * but it indeed brings convenience. So do not use the method\n\t * unless you detailedly know all the implements of `Symbol`,\n\t * especially animation.\n\t *\n\t * Get symbol path element.\n\t */\n\t\n\t\n\tsymbolProto.getSymbolPath = function () {\n\t  return this.childAt(0);\n\t};\n\t/**\n\t * Get scale(aka, current symbol size).\n\t * Including the change caused by animation\n\t */\n\t\n\t\n\tsymbolProto.getScale = function () {\n\t  return this.childAt(0).scale;\n\t};\n\t/**\n\t * Highlight symbol\n\t */\n\t\n\t\n\tsymbolProto.highlight = function () {\n\t  this.childAt(0).trigger('emphasis');\n\t};\n\t/**\n\t * Downplay symbol\n\t */\n\t\n\t\n\tsymbolProto.downplay = function () {\n\t  this.childAt(0).trigger('normal');\n\t};\n\t/**\n\t * @param {number} zlevel\n\t * @param {number} z\n\t */\n\t\n\t\n\tsymbolProto.setZ = function (zlevel, z) {\n\t  var symbolPath = this.childAt(0);\n\t  symbolPath.zlevel = zlevel;\n\t  symbolPath.z = z;\n\t};\n\t\n\tsymbolProto.setDraggable = function (draggable) {\n\t  var symbolPath = this.childAt(0);\n\t  symbolPath.draggable = draggable;\n\t  symbolPath.cursor = draggable ? 'move' : 'pointer';\n\t};\n\t/**\n\t * Update symbol properties\n\t * @param {module:echarts/data/List} data\n\t * @param {number} idx\n\t * @param {Object} [seriesScope]\n\t * @param {Object} [seriesScope.itemStyle]\n\t * @param {Object} [seriesScope.hoverItemStyle]\n\t * @param {Object} [seriesScope.symbolRotate]\n\t * @param {Object} [seriesScope.symbolOffset]\n\t * @param {module:echarts/model/Model} [seriesScope.labelModel]\n\t * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n\t * @param {boolean} [seriesScope.hoverAnimation]\n\t * @param {Object} [seriesScope.cursorStyle]\n\t * @param {module:echarts/model/Model} [seriesScope.itemModel]\n\t * @param {string} [seriesScope.symbolInnerColor]\n\t * @param {Object} [seriesScope.fadeIn=false]\n\t */\n\t\n\t\n\tsymbolProto.updateData = function (data, idx, seriesScope) {\n\t  this.silent = false;\n\t  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n\t  var seriesModel = data.hostModel;\n\t  var symbolSize = getSymbolSize(data, idx);\n\t  var isInit = symbolType !== this._symbolType;\n\t\n\t  if (isInit) {\n\t    this._createSymbol(symbolType, data, idx, symbolSize);\n\t  } else {\n\t    var symbolPath = this.childAt(0);\n\t    symbolPath.silent = false;\n\t    graphic.updateProps(symbolPath, {\n\t      scale: getScale(symbolSize)\n\t    }, seriesModel, idx);\n\t  }\n\t\n\t  this._updateCommon(data, idx, symbolSize, seriesScope);\n\t\n\t  if (isInit) {\n\t    var symbolPath = this.childAt(0);\n\t    var fadeIn = seriesScope && seriesScope.fadeIn;\n\t    var target = {\n\t      scale: symbolPath.scale.slice()\n\t    };\n\t    fadeIn && (target.style = {\n\t      opacity: symbolPath.style.opacity\n\t    });\n\t    symbolPath.scale = [0, 0];\n\t    fadeIn && (symbolPath.style.opacity = 0);\n\t    graphic.initProps(symbolPath, target, seriesModel, idx);\n\t  }\n\t\n\t  this._seriesModel = seriesModel;\n\t}; // Update common properties\n\t\n\t\n\tvar normalStyleAccessPath = ['itemStyle'];\n\tvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\tvar normalLabelAccessPath = ['label'];\n\tvar emphasisLabelAccessPath = ['emphasis', 'label'];\n\t/**\n\t * @param {module:echarts/data/List} data\n\t * @param {number} idx\n\t * @param {Array.<number>} symbolSize\n\t * @param {Object} [seriesScope]\n\t */\n\t\n\tsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n\t  var symbolPath = this.childAt(0);\n\t  var seriesModel = data.hostModel;\n\t  var color = data.getItemVisual(idx, 'color'); // Reset style\n\t\n\t  if (symbolPath.type !== 'image') {\n\t    symbolPath.useStyle({\n\t      strokeNoScale: true\n\t    });\n\t  }\n\t\n\t  var itemStyle = seriesScope && seriesScope.itemStyle;\n\t  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n\t  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n\t  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n\t  var labelModel = seriesScope && seriesScope.labelModel;\n\t  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n\t  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\t  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\t\n\t  if (!seriesScope || data.hasItemOption) {\n\t    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n\t    // Because symbol provide setColor individually to set fill and stroke\n\t\n\t    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n\t    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\t    symbolRotate = itemModel.getShallow('symbolRotate');\n\t    symbolOffset = itemModel.getShallow('symbolOffset');\n\t    labelModel = itemModel.getModel(normalLabelAccessPath);\n\t    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n\t    hoverAnimation = itemModel.getShallow('hoverAnimation');\n\t    cursorStyle = itemModel.getShallow('cursor');\n\t  } else {\n\t    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n\t  }\n\t\n\t  var elStyle = symbolPath.style;\n\t  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\t\n\t  if (symbolOffset) {\n\t    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n\t  }\n\t\n\t  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\t\n\t  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n\t  symbolPath.setStyle(itemStyle);\n\t  var opacity = data.getItemVisual(idx, 'opacity');\n\t\n\t  if (opacity != null) {\n\t    elStyle.opacity = opacity;\n\t  }\n\t\n\t  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n\t  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n\t    labelFetcher: seriesModel,\n\t    labelDataIndex: idx,\n\t    defaultText: getLabelDefaultText,\n\t    isRectText: true,\n\t    autoColor: color\n\t  }); // Do not execute util needed.\n\t\n\t  function getLabelDefaultText(idx, opt) {\n\t    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n\t  }\n\t\n\t  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\t  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n\t  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\t\n\t  graphic.setHoverStyle(symbolPath);\n\t  var scale = getScale(symbolSize);\n\t\n\t  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n\t    var onEmphasis = function () {\n\t      var ratio = scale[1] / scale[0];\n\t      this.animateTo({\n\t        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n\t      }, 400, 'elasticOut');\n\t    };\n\t\n\t    var onNormal = function () {\n\t      this.animateTo({\n\t        scale: scale\n\t      }, 400, 'elasticOut');\n\t    };\n\t\n\t    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n\t  }\n\t};\n\t/**\n\t * @param {Function} cb\n\t * @param {Object} [opt]\n\t * @param {Object} [opt.keepLabel=true]\n\t */\n\t\n\t\n\tsymbolProto.fadeOut = function (cb, opt) {\n\t  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\t\n\t  this.silent = symbolPath.silent = true; // Not show text when animating\n\t\n\t  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n\t  graphic.updateProps(symbolPath, {\n\t    style: {\n\t      opacity: 0\n\t    },\n\t    scale: [0, 0]\n\t  }, this._seriesModel, this.dataIndex, cb);\n\t};\n\t\n\tzrUtil.inherits(SymbolClz, graphic.Group);\n\tvar _default = SymbolClz;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 771:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar SymbolClz = __webpack_require__(770);\n\t\n\t/**\n\t * @module echarts/chart/helper/SymbolDraw\n\t */\n\t\n\t/**\n\t * @constructor\n\t * @alias module:echarts/chart/helper/SymbolDraw\n\t * @param {module:zrender/graphic/Group} [symbolCtor]\n\t */\n\tfunction SymbolDraw(symbolCtor) {\n\t  this.group = new graphic.Group();\n\t  this._symbolCtor = symbolCtor || SymbolClz;\n\t}\n\t\n\tvar symbolDrawProto = SymbolDraw.prototype;\n\t\n\tfunction symbolNeedsDraw(data, point, idx, isIgnore) {\n\t  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n\t}\n\t/**\n\t * Update symbols draw by new data\n\t * @param {module:echarts/data/List} data\n\t * @param {Array.<boolean>} [isIgnore]\n\t */\n\t\n\t\n\tsymbolDrawProto.updateData = function (data, isIgnore) {\n\t  var group = this.group;\n\t  var seriesModel = data.hostModel;\n\t  var oldData = this._data;\n\t  var SymbolCtor = this._symbolCtor;\n\t  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n\t  // stream mode to normal mode, where previous elements should be removed.\n\t\n\t  if (!oldData) {\n\t    group.removeAll();\n\t  }\n\t\n\t  data.diff(oldData).add(function (newIdx) {\n\t    var point = data.getItemLayout(newIdx);\n\t\n\t    if (symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n\t      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n\t      symbolEl.attr('position', point);\n\t      data.setItemGraphicEl(newIdx, symbolEl);\n\t      group.add(symbolEl);\n\t    }\n\t  }).update(function (newIdx, oldIdx) {\n\t    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\t    var point = data.getItemLayout(newIdx);\n\t\n\t    if (!symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n\t      group.remove(symbolEl);\n\t      return;\n\t    }\n\t\n\t    if (!symbolEl) {\n\t      symbolEl = new SymbolCtor(data, newIdx);\n\t      symbolEl.attr('position', point);\n\t    } else {\n\t      symbolEl.updateData(data, newIdx, seriesScope);\n\t      graphic.updateProps(symbolEl, {\n\t        position: point\n\t      }, seriesModel);\n\t    } // Add back\n\t\n\t\n\t    group.add(symbolEl);\n\t    data.setItemGraphicEl(newIdx, symbolEl);\n\t  }).remove(function (oldIdx) {\n\t    var el = oldData.getItemGraphicEl(oldIdx);\n\t    el && el.fadeOut(function () {\n\t      group.remove(el);\n\t    });\n\t  }).execute();\n\t  this._data = data;\n\t};\n\t\n\tsymbolDrawProto.isPersistent = function () {\n\t  return true;\n\t};\n\t\n\tsymbolDrawProto.updateLayout = function () {\n\t  var data = this._data;\n\t\n\t  if (data) {\n\t    // Not use animation\n\t    data.eachItemGraphicEl(function (el, idx) {\n\t      var point = data.getItemLayout(idx);\n\t      el.attr('position', point);\n\t    });\n\t  }\n\t};\n\t\n\tsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n\t  this._seriesScope = makeSeriesScope(data);\n\t  this._data = null;\n\t  this.group.removeAll();\n\t};\n\t\n\tsymbolDrawProto.incrementalUpdate = function (taskParams, data, isIgnore) {\n\t  function updateIncrementalAndHover(el) {\n\t    if (!el.isGroup) {\n\t      el.incremental = el.useHoverLayer = true;\n\t    }\n\t  }\n\t\n\t  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n\t    var point = data.getItemLayout(idx);\n\t\n\t    if (symbolNeedsDraw(data, point, idx, isIgnore)) {\n\t      var el = new this._symbolCtor(data, idx, this._seriesScope);\n\t      el.traverse(updateIncrementalAndHover);\n\t      el.attr('position', point);\n\t      this.group.add(el);\n\t      data.setItemGraphicEl(idx, el);\n\t    }\n\t  }\n\t};\n\t\n\tsymbolDrawProto.remove = function (enableAnimation) {\n\t  var group = this.group;\n\t  var data = this._data;\n\t\n\t  if (data) {\n\t    if (enableAnimation) {\n\t      data.eachItemGraphicEl(function (el) {\n\t        el.fadeOut(function () {\n\t          group.remove(el);\n\t        });\n\t      });\n\t    } else {\n\t      group.removeAll();\n\t    }\n\t  }\n\t};\n\t\n\tfunction makeSeriesScope(data) {\n\t  var seriesModel = data.hostModel;\n\t  return {\n\t    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n\t    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n\t    symbolRotate: seriesModel.get('symbolRotate'),\n\t    symbolOffset: seriesModel.get('symbolOffset'),\n\t    hoverAnimation: seriesModel.get('hoverAnimation'),\n\t    labelModel: seriesModel.getModel('label'),\n\t    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n\t    cursorStyle: seriesModel.get('cursor')\n\t  };\n\t}\n\t\n\tvar _default = SymbolDraw;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 772:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar List = __webpack_require__(191);\n\t\n\tvar Graph = __webpack_require__(802);\n\t\n\tvar linkList = __webpack_require__(803);\n\t\n\tvar createDimensions = __webpack_require__(268);\n\t\n\tvar CoordinateSystem = __webpack_require__(189);\n\t\n\tvar createListFromArray = __webpack_require__(410);\n\t\n\tfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n\t  // ??? TODO\n\t  // support dataset?\n\t  var graph = new Graph(directed);\n\t\n\t  for (var i = 0; i < nodes.length; i++) {\n\t    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n\t    nodes[i].id, nodes[i].name, i), i);\n\t  }\n\t\n\t  var linkNameList = [];\n\t  var validEdges = [];\n\t  var linkCount = 0;\n\t\n\t  for (var i = 0; i < edges.length; i++) {\n\t    var link = edges[i];\n\t    var source = link.source;\n\t    var target = link.target; // addEdge may fail when source or target not exists\n\t\n\t    if (graph.addEdge(source, target, linkCount)) {\n\t      validEdges.push(link);\n\t      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n\t      linkCount++;\n\t    }\n\t  }\n\t\n\t  var coordSys = seriesModel.get('coordinateSystem');\n\t  var nodeData;\n\t\n\t  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n\t    nodeData = createListFromArray(nodes, seriesModel);\n\t  } else {\n\t    // FIXME\n\t    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\t\n\t    var dimensionNames = createDimensions(nodes, {\n\t      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n\t    });\n\t    nodeData = new List(dimensionNames, seriesModel);\n\t    nodeData.initData(nodes);\n\t  }\n\t\n\t  var edgeData = new List(['value'], seriesModel);\n\t  edgeData.initData(validEdges, linkNameList);\n\t  beforeLink && beforeLink(nodeData, edgeData);\n\t  linkList({\n\t    mainData: nodeData,\n\t    struct: graph,\n\t    structAttr: 'graph',\n\t    datas: {\n\t      node: nodeData,\n\t      edge: edgeData\n\t    },\n\t    datasAttr: {\n\t      node: 'data',\n\t      edge: 'edgeData'\n\t    }\n\t  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\t\n\t  graph.update();\n\t  return graph;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar List = __webpack_require__(191);\n\t\n\tvar createDimensions = __webpack_require__(268);\n\t\n\tvar _sourceType = __webpack_require__(192);\n\t\n\tvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\t\n\tvar _dimensionHelper = __webpack_require__(269);\n\t\n\tvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar getDataItemValue = _model.getDataItemValue;\n\t\n\tvar CoordinateSystem = __webpack_require__(189);\n\t\n\tvar _referHelper = __webpack_require__(426);\n\t\n\tvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\t\n\tvar Source = __webpack_require__(127);\n\t\n\t/**\n\t * @param {module:echarts/data/Source|Array} source Or raw data.\n\t * @param {module:echarts/model/Series} seriesModel\n\t */\n\tfunction createListFromArray(source, seriesModel) {\n\t  if (!Source.isInstance(source)) {\n\t    source = Source.seriesDataToSource(source);\n\t  }\n\t\n\t  var coordSysName = seriesModel.get('coordinateSystem');\n\t  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n\t  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n\t  var coordSysDimDefs;\n\t\n\t  if (coordSysDefine) {\n\t    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n\t      var dimInfo = {\n\t        name: dim\n\t      };\n\t      var axisModel = coordSysDefine.axisMap.get(dim);\n\t\n\t      if (axisModel) {\n\t        var axisType = axisModel.get('type');\n\t        dimInfo.type = getDimensionTypeByAxis(axisType);\n\t        dimInfo.stackable = isStackable(axisType);\n\t      }\n\t\n\t      return dimInfo;\n\t    });\n\t  }\n\t\n\t  if (!coordSysDimDefs) {\n\t    // Get dimensions from registered coordinate system\n\t    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n\t  }\n\t\n\t  var dimInfoList = createDimensions(source, {\n\t    coordDimensions: coordSysDimDefs\n\t  });\n\t  var firstCategoryDimIndex;\n\t  var hasNameEncode;\n\t  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n\t    var coordDim = dimInfo.coordDim;\n\t    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\t\n\t    if (categoryAxisModel) {\n\t      if (firstCategoryDimIndex == null) {\n\t        firstCategoryDimIndex = dimIndex;\n\t      }\n\t\n\t      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n\t    }\n\t\n\t    if (dimInfo.otherDims.itemName != null) {\n\t      hasNameEncode = true;\n\t    }\n\t  });\n\t\n\t  if (!hasNameEncode && firstCategoryDimIndex != null) {\n\t    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n\t  }\n\t\n\t  var list = new List(dimInfoList, seriesModel);\n\t  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n\t    // Use dataIndex as ordinal value in categoryAxis\n\t    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n\t  } : null;\n\t  list.hasItemOption = false;\n\t  list.initData(source, null, dimValueGetter);\n\t  return list;\n\t}\n\t\n\tfunction isStackable(axisType) {\n\t  return axisType !== 'category' && axisType !== 'time';\n\t}\n\t\n\tfunction isNeedCompleteOrdinalData(source) {\n\t  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n\t    var sampleItem = firstDataNotNull(source.data || []);\n\t    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n\t  }\n\t}\n\t\n\tfunction firstDataNotNull(data) {\n\t  var i = 0;\n\t\n\t  while (i < data.length && data[i] == null) {\n\t    i++;\n\t  }\n\t\n\t  return data[i];\n\t}\n\t\n\tvar _default = createListFromArray;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\t\n\t/**\n\t * @return {string} If large mode changed, return string 'reset';\n\t */\n\tfunction _default() {\n\t  var inner = makeInner();\n\t  return function (seriesModel) {\n\t    var fields = inner(seriesModel);\n\t    var pipelineContext = seriesModel.pipelineContext;\n\t    var originalLarge = fields.large;\n\t    var originalIncremental = fields.incrementalRender;\n\t    var large = fields.large = pipelineContext.large;\n\t    var incremental = fields.incrementalRender = pipelineContext.incrementalRender;\n\t    return (originalLarge ^ large || originalIncremental ^ incremental) && 'reset';\n\t  };\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 774:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _dataProvider = __webpack_require__(128);\n\t\n\tvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\t\n\t/**\n\t * @param {module:echarts/data/List} data\n\t * @param {number} dataIndex\n\t * @return {string} label string. Not null/undefined\n\t */\n\tfunction getDefaultLabel(data, dataIndex) {\n\t  var labelDims = data.mapDimension('defaultedLabel', true);\n\t  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\t\n\t  if (len === 1) {\n\t    return retrieveRawValue(data, dataIndex, labelDims[0]);\n\t  } else if (len) {\n\t    var vals = [];\n\t\n\t    for (var i = 0; i < labelDims.length; i++) {\n\t      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n\t      vals.push(val);\n\t    }\n\t\n\t    return vals.join(' ');\n\t  }\n\t}\n\t\n\texports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n\n/***/ 775:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(421);\n\t\n\t__webpack_require__(776);\n\n/***/ }),\n\n/***/ 411:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar retrieve = _util.retrieve;\n\tvar defaults = _util.defaults;\n\tvar extend = _util.extend;\n\tvar each = _util.each;\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar isRadianAroundZero = _number.isRadianAroundZero;\n\tvar remRadian = _number.remRadian;\n\t\n\tvar _symbol = __webpack_require__(195);\n\t\n\tvar createSymbol = _symbol.createSymbol;\n\t\n\tvar matrixUtil = __webpack_require__(85);\n\t\n\tvar _vector = __webpack_require__(10);\n\t\n\tvar v2ApplyTransform = _vector.applyTransform;\n\tvar PI = Math.PI;\n\t\n\tfunction makeAxisEventDataBase(axisModel) {\n\t  var eventData = {\n\t    componentType: axisModel.mainType\n\t  };\n\t  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n\t  return eventData;\n\t}\n\t/**\n\t * A final axis is translated and rotated from a \"standard axis\".\n\t * So opt.position and opt.rotation is required.\n\t *\n\t * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n\t * for example: (0, 0) ------------> (0, 50)\n\t *\n\t * nameDirection or tickDirection or labelDirection is 1 means tick\n\t * or label is below the standard axis, whereas is -1 means above\n\t * the standard axis. labelOffset means offset between label and axis,\n\t * which is useful when 'onZero', where axisLabel is in the grid and\n\t * label in outside grid.\n\t *\n\t * Tips: like always,\n\t * positive rotation represents anticlockwise, and negative rotation\n\t * represents clockwise.\n\t * The direction of position coordinate is the same as the direction\n\t * of screen coordinate.\n\t *\n\t * Do not need to consider axis 'inverse', which is auto processed by\n\t * axis extent.\n\t *\n\t * @param {module:zrender/container/Group} group\n\t * @param {Object} axisModel\n\t * @param {Object} opt Standard axis parameters.\n\t * @param {Array.<number>} opt.position [x, y]\n\t * @param {number} opt.rotation by radian\n\t * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n\t * @param {number} [opt.tickDirection=1] 1 or -1\n\t * @param {number} [opt.labelDirection=1] 1 or -1\n\t * @param {number} [opt.labelOffset=0] Usefull when onZero.\n\t * @param {string} [opt.axisLabelShow] default get from axisModel.\n\t * @param {string} [opt.axisName] default get from axisModel.\n\t * @param {number} [opt.axisNameAvailableWidth]\n\t * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n\t * @param {number} [opt.labelInterval] Default label interval when label\n\t *                                     interval from model is null or 'auto'.\n\t * @param {number} [opt.strokeContainThreshold] Default label interval when label\n\t * @param {number} [opt.nameTruncateMaxWidth]\n\t */\n\t\n\t\n\tvar AxisBuilder = function (axisModel, opt) {\n\t  /**\n\t   * @readOnly\n\t   */\n\t  this.opt = opt;\n\t  /**\n\t   * @readOnly\n\t   */\n\t\n\t  this.axisModel = axisModel; // Default value\n\t\n\t  defaults(opt, {\n\t    labelOffset: 0,\n\t    nameDirection: 1,\n\t    tickDirection: 1,\n\t    labelDirection: 1,\n\t    silent: true\n\t  });\n\t  /**\n\t   * @readOnly\n\t   */\n\t\n\t  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\t\n\t  var dumbGroup = new graphic.Group({\n\t    position: opt.position.slice(),\n\t    rotation: opt.rotation\n\t  }); // this.group.add(dumbGroup);\n\t  // this._dumbGroup = dumbGroup;\n\t\n\t  dumbGroup.updateTransform();\n\t  this._transform = dumbGroup.transform;\n\t  this._dumbGroup = dumbGroup;\n\t};\n\t\n\tAxisBuilder.prototype = {\n\t  constructor: AxisBuilder,\n\t  hasBuilder: function (name) {\n\t    return !!builders[name];\n\t  },\n\t  add: function (name) {\n\t    builders[name].call(this);\n\t  },\n\t  getGroup: function () {\n\t    return this.group;\n\t  }\n\t};\n\tvar builders = {\n\t  /**\n\t   * @private\n\t   */\n\t  axisLine: function () {\n\t    var opt = this.opt;\n\t    var axisModel = this.axisModel;\n\t\n\t    if (!axisModel.get('axisLine.show')) {\n\t      return;\n\t    }\n\t\n\t    var extent = this.axisModel.axis.getExtent();\n\t    var matrix = this._transform;\n\t    var pt1 = [extent[0], 0];\n\t    var pt2 = [extent[1], 0];\n\t\n\t    if (matrix) {\n\t      v2ApplyTransform(pt1, pt1, matrix);\n\t      v2ApplyTransform(pt2, pt2, matrix);\n\t    }\n\t\n\t    var lineStyle = extend({\n\t      lineCap: 'round'\n\t    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n\t    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\t      // Id for animation\n\t      anid: 'line',\n\t      shape: {\n\t        x1: pt1[0],\n\t        y1: pt1[1],\n\t        x2: pt2[0],\n\t        y2: pt2[1]\n\t      },\n\t      style: lineStyle,\n\t      strokeContainThreshold: opt.strokeContainThreshold || 5,\n\t      silent: true,\n\t      z2: 1\n\t    })));\n\t    var arrows = axisModel.get('axisLine.symbol');\n\t    var arrowSize = axisModel.get('axisLine.symbolSize');\n\t\n\t    if (arrows != null) {\n\t      if (typeof arrows === 'string') {\n\t        // Use the same arrow for start and end point\n\t        arrows = [arrows, arrows];\n\t      }\n\t\n\t      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n\t        // Use the same size for width and height\n\t        arrowSize = [arrowSize, arrowSize];\n\t      }\n\t\n\t      var symbolWidth = arrowSize[0];\n\t      var symbolHeight = arrowSize[1];\n\t      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n\t        if (arrows[index] !== 'none' && arrows[index] != null) {\n\t          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n\t          symbol.attr({\n\t            rotation: item[0],\n\t            position: item[1],\n\t            silent: true\n\t          });\n\t          this.group.add(symbol);\n\t        }\n\t      }, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  axisTickLabel: function () {\n\t    var axisModel = this.axisModel;\n\t    var opt = this.opt;\n\t    var tickEls = buildAxisTick(this, axisModel, opt);\n\t    var labelEls = buildAxisLabel(this, axisModel, opt);\n\t    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  axisName: function () {\n\t    var opt = this.opt;\n\t    var axisModel = this.axisModel;\n\t    var name = retrieve(opt.axisName, axisModel.get('name'));\n\t\n\t    if (!name) {\n\t      return;\n\t    }\n\t\n\t    var nameLocation = axisModel.get('nameLocation');\n\t    var nameDirection = opt.nameDirection;\n\t    var textStyleModel = axisModel.getModel('nameTextStyle');\n\t    var gap = axisModel.get('nameGap') || 0;\n\t    var extent = this.axisModel.axis.getExtent();\n\t    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n\t    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n\t    // Reuse labelOffset.\n\t    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n\t    var labelLayout;\n\t    var nameRotation = axisModel.get('nameRotate');\n\t\n\t    if (nameRotation != null) {\n\t      nameRotation = nameRotation * PI / 180; // To radian.\n\t    }\n\t\n\t    var axisNameAvailableWidth;\n\t\n\t    if (isNameLocationCenter(nameLocation)) {\n\t      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n\t      nameDirection);\n\t    } else {\n\t      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n\t      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\t\n\t      if (axisNameAvailableWidth != null) {\n\t        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n\t        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n\t      }\n\t    }\n\t\n\t    var textFont = textStyleModel.getFont();\n\t    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n\t    var ellipsis = truncateOpt.ellipsis;\n\t    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n\t    // truncate rich text? (consider performance)\n\t\n\t    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n\t      minChar: 2,\n\t      placeholder: truncateOpt.placeholder\n\t    }) : name;\n\t    var tooltipOpt = axisModel.get('tooltip', true);\n\t    var mainType = axisModel.mainType;\n\t    var formatterParams = {\n\t      componentType: mainType,\n\t      name: name,\n\t      $vars: ['name']\n\t    };\n\t    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\t    var textEl = new graphic.Text({\n\t      // Id for animation\n\t      anid: 'name',\n\t      __fullText: name,\n\t      __truncatedText: truncatedText,\n\t      position: pos,\n\t      rotation: labelLayout.rotation,\n\t      silent: isSilent(axisModel),\n\t      z2: 1,\n\t      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n\t        content: name,\n\t        formatter: function () {\n\t          return name;\n\t        },\n\t        formatterParams: formatterParams\n\t      }, tooltipOpt) : null\n\t    });\n\t    graphic.setTextStyle(textEl.style, textStyleModel, {\n\t      text: truncatedText,\n\t      textFont: textFont,\n\t      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n\t      textAlign: labelLayout.textAlign,\n\t      textVerticalAlign: labelLayout.textVerticalAlign\n\t    });\n\t\n\t    if (axisModel.get('triggerEvent')) {\n\t      textEl.eventData = makeAxisEventDataBase(axisModel);\n\t      textEl.eventData.targetType = 'axisName';\n\t      textEl.eventData.name = name;\n\t    } // FIXME\n\t\n\t\n\t    this._dumbGroup.add(textEl);\n\t\n\t    textEl.updateTransform();\n\t    this.group.add(textEl);\n\t    textEl.decomposeTransform();\n\t  }\n\t};\n\t/**\n\t * @public\n\t * @static\n\t * @param {Object} opt\n\t * @param {number} axisRotation in radian\n\t * @param {number} textRotation in radian\n\t * @param {number} direction\n\t * @return {Object} {\n\t *  rotation, // according to axis\n\t *  textAlign,\n\t *  textVerticalAlign\n\t * }\n\t */\n\t\n\tvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n\t  var rotationDiff = remRadian(textRotation - axisRotation);\n\t  var textAlign;\n\t  var textVerticalAlign;\n\t\n\t  if (isRadianAroundZero(rotationDiff)) {\n\t    // Label is parallel with axis line.\n\t    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n\t    textAlign = 'center';\n\t  } else if (isRadianAroundZero(rotationDiff - PI)) {\n\t    // Label is inverse parallel with axis line.\n\t    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n\t    textAlign = 'center';\n\t  } else {\n\t    textVerticalAlign = 'middle';\n\t\n\t    if (rotationDiff > 0 && rotationDiff < PI) {\n\t      textAlign = direction > 0 ? 'right' : 'left';\n\t    } else {\n\t      textAlign = direction > 0 ? 'left' : 'right';\n\t    }\n\t  }\n\t\n\t  return {\n\t    rotation: rotationDiff,\n\t    textAlign: textAlign,\n\t    textVerticalAlign: textVerticalAlign\n\t  };\n\t};\n\t\n\tfunction endTextLayout(opt, textPosition, textRotate, extent) {\n\t  var rotationDiff = remRadian(textRotate - opt.rotation);\n\t  var textAlign;\n\t  var textVerticalAlign;\n\t  var inverse = extent[0] > extent[1];\n\t  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\t\n\t  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n\t    textVerticalAlign = onLeft ? 'bottom' : 'top';\n\t    textAlign = 'center';\n\t  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n\t    textVerticalAlign = onLeft ? 'top' : 'bottom';\n\t    textAlign = 'center';\n\t  } else {\n\t    textVerticalAlign = 'middle';\n\t\n\t    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n\t      textAlign = onLeft ? 'left' : 'right';\n\t    } else {\n\t      textAlign = onLeft ? 'right' : 'left';\n\t    }\n\t  }\n\t\n\t  return {\n\t    rotation: rotationDiff,\n\t    textAlign: textAlign,\n\t    textVerticalAlign: textVerticalAlign\n\t  };\n\t}\n\t\n\tfunction isSilent(axisModel) {\n\t  var tooltipOpt = axisModel.get('tooltip');\n\t  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n\t  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n\t}\n\t\n\tfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n\t  // If min or max are user set, we need to check\n\t  // If the tick on min(max) are overlap on their neighbour tick\n\t  // If they are overlapped, we need to hide the min(max) tick label\n\t  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n\t  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n\t  // Have not consider onBand yet, where tick els is more than label els.\n\t\n\t  labelEls = labelEls || [];\n\t  tickEls = tickEls || [];\n\t  var firstLabel = labelEls[0];\n\t  var nextLabel = labelEls[1];\n\t  var lastLabel = labelEls[labelEls.length - 1];\n\t  var prevLabel = labelEls[labelEls.length - 2];\n\t  var firstTick = tickEls[0];\n\t  var nextTick = tickEls[1];\n\t  var lastTick = tickEls[tickEls.length - 1];\n\t  var prevTick = tickEls[tickEls.length - 2];\n\t\n\t  if (showMinLabel === false) {\n\t    ignoreEl(firstLabel);\n\t    ignoreEl(firstTick);\n\t  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n\t    if (showMinLabel) {\n\t      ignoreEl(nextLabel);\n\t      ignoreEl(nextTick);\n\t    } else {\n\t      ignoreEl(firstLabel);\n\t      ignoreEl(firstTick);\n\t    }\n\t  }\n\t\n\t  if (showMaxLabel === false) {\n\t    ignoreEl(lastLabel);\n\t    ignoreEl(lastTick);\n\t  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n\t    if (showMaxLabel) {\n\t      ignoreEl(prevLabel);\n\t      ignoreEl(prevTick);\n\t    } else {\n\t      ignoreEl(lastLabel);\n\t      ignoreEl(lastTick);\n\t    }\n\t  }\n\t}\n\t\n\tfunction ignoreEl(el) {\n\t  el && (el.ignore = true);\n\t}\n\t\n\tfunction isTwoLabelOverlapped(current, next, labelLayout) {\n\t  // current and next has the same rotation.\n\t  var firstRect = current && current.getBoundingRect().clone();\n\t  var nextRect = next && next.getBoundingRect().clone();\n\t\n\t  if (!firstRect || !nextRect) {\n\t    return;\n\t  } // When checking intersect of two rotated labels, we use mRotationBack\n\t  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\t\n\t\n\t  var mRotationBack = matrixUtil.identity([]);\n\t  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n\t  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n\t  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n\t  return firstRect.intersect(nextRect);\n\t}\n\t\n\tfunction isNameLocationCenter(nameLocation) {\n\t  return nameLocation === 'middle' || nameLocation === 'center';\n\t}\n\t/**\n\t * @static\n\t */\n\t\n\t\n\tvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n\t  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n\t    return false;\n\t  } // FIXME\n\t  // Have not consider label overlap (if label is too long) yet.\n\t\n\t\n\t  var rawTick;\n\t  var scale = axis.scale;\n\t  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n\t};\n\t/**\n\t * @static\n\t */\n\t\n\t\n\tvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n\t  var interval = model.get('interval');\n\t\n\t  if (interval == null || interval == 'auto') {\n\t    interval = labelInterval;\n\t  }\n\t\n\t  return interval;\n\t};\n\t\n\tfunction buildAxisTick(axisBuilder, axisModel, opt) {\n\t  var axis = axisModel.axis;\n\t\n\t  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n\t    return;\n\t  }\n\t\n\t  var tickModel = axisModel.getModel('axisTick');\n\t  var lineStyleModel = tickModel.getModel('lineStyle');\n\t  var tickLen = tickModel.get('length');\n\t  var tickInterval = getInterval(tickModel, opt.labelInterval);\n\t  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n\t  // Corresponds to ticksCoords ?\n\t\n\t  var ticks = axis.scale.getTicks();\n\t  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n\t  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\t  var pt1 = [];\n\t  var pt2 = [];\n\t  var matrix = axisBuilder._transform;\n\t  var tickEls = [];\n\t  var ticksCnt = ticksCoords.length;\n\t\n\t  for (var i = 0; i < ticksCnt; i++) {\n\t    // Only ordinal scale support tick interval\n\t    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n\t      continue;\n\t    }\n\t\n\t    var tickCoord = ticksCoords[i];\n\t    pt1[0] = tickCoord;\n\t    pt1[1] = 0;\n\t    pt2[0] = tickCoord;\n\t    pt2[1] = opt.tickDirection * tickLen;\n\t\n\t    if (matrix) {\n\t      v2ApplyTransform(pt1, pt1, matrix);\n\t      v2ApplyTransform(pt2, pt2, matrix);\n\t    } // Tick line, Not use group transform to have better line draw\n\t\n\t\n\t    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n\t      // Id for animation\n\t      anid: 'tick_' + ticks[i],\n\t      shape: {\n\t        x1: pt1[0],\n\t        y1: pt1[1],\n\t        x2: pt2[0],\n\t        y2: pt2[1]\n\t      },\n\t      style: defaults(lineStyleModel.getLineStyle(), {\n\t        stroke: axisModel.get('axisLine.lineStyle.color')\n\t      }),\n\t      z2: 2,\n\t      silent: true\n\t    }));\n\t    axisBuilder.group.add(tickEl);\n\t    tickEls.push(tickEl);\n\t  }\n\t\n\t  return tickEls;\n\t}\n\t\n\tfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n\t  var axis = axisModel.axis;\n\t  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\t\n\t  if (!show || axis.scale.isBlank()) {\n\t    return;\n\t  }\n\t\n\t  var labelModel = axisModel.getModel('axisLabel');\n\t  var labelMargin = labelModel.get('margin');\n\t  var ticks = axis.scale.getTicks();\n\t  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\t\n\t  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n\t  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n\t  var categoryData = axisModel.getCategories();\n\t  var labelEls = [];\n\t  var silent = isSilent(axisModel);\n\t  var triggerEvent = axisModel.get('triggerEvent');\n\t  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n\t  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\t  each(ticks, function (tickVal, index) {\n\t    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n\t      return;\n\t    }\n\t\n\t    var itemLabelModel = labelModel;\n\t\n\t    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n\t      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n\t    }\n\t\n\t    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n\t    var tickCoord = axis.dataToCoord(tickVal);\n\t    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n\t    var labelStr = axis.scale.getLabel(tickVal);\n\t    var textEl = new graphic.Text({\n\t      // Id for animation\n\t      anid: 'label_' + tickVal,\n\t      position: pos,\n\t      rotation: labelLayout.rotation,\n\t      silent: silent,\n\t      z2: 10\n\t    });\n\t    graphic.setTextStyle(textEl.style, itemLabelModel, {\n\t      text: labels[index],\n\t      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n\t      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n\t      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n\t      // index of axis.data. So tick should not be exposed to user\n\t      // in category axis.\n\t      // (2) Compatible with previous version, which always returns labelStr.\n\t      // But in interval scale labelStr is like '223,445', which maked\n\t      // user repalce ','. So we modify it to return original val but remain\n\t      // it as 'string' to avoid error in replacing.\n\t      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n\t    }); // Pack data for mouse event\n\t\n\t    if (triggerEvent) {\n\t      textEl.eventData = makeAxisEventDataBase(axisModel);\n\t      textEl.eventData.targetType = 'axisLabel';\n\t      textEl.eventData.value = labelStr;\n\t    } // FIXME\n\t\n\t\n\t    axisBuilder._dumbGroup.add(textEl);\n\t\n\t    textEl.updateTransform();\n\t    labelEls.push(textEl);\n\t    axisBuilder.group.add(textEl);\n\t    textEl.decomposeTransform();\n\t  });\n\t  return labelEls;\n\t}\n\t\n\tvar _default = AxisBuilder;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 412:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar axisPointerModelHelper = __webpack_require__(190);\n\t\n\t/**\n\t * Base class of AxisView.\n\t */\n\tvar AxisView = echarts.extendComponentView({\n\t  type: 'axis',\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _axisPointer: null,\n\t\n\t  /**\n\t   * @protected\n\t   * @type {string}\n\t   */\n\t  axisPointerClass: null,\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  render: function (axisModel, ecModel, api, payload) {\n\t    // FIXME\n\t    // This process should proformed after coordinate systems updated\n\t    // (axis scale updated), and should be performed each time update.\n\t    // So put it here temporarily, although it is not appropriate to\n\t    // put a model-writing procedure in `view`.\n\t    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\t    AxisView.superApply(this, 'render', arguments);\n\t    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n\t  },\n\t\n\t  /**\n\t   * Action handler.\n\t   * @public\n\t   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n\t   * @param {module:echarts/model/Global} ecModel\n\t   * @param {module:echarts/ExtensionAPI} api\n\t   * @param {Object} payload\n\t   */\n\t  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n\t    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  remove: function (ecModel, api) {\n\t    var axisPointer = this._axisPointer;\n\t    axisPointer && axisPointer.remove(api);\n\t    AxisView.superApply(this, 'remove', arguments);\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  dispose: function (ecModel, api) {\n\t    disposeAxisPointer(this, api);\n\t    AxisView.superApply(this, 'dispose', arguments);\n\t  }\n\t});\n\t\n\tfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n\t  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\t\n\t  if (!Clazz) {\n\t    return;\n\t  }\n\t\n\t  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n\t  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n\t}\n\t\n\tfunction disposeAxisPointer(axisView, ecModel, api) {\n\t  var axisPointer = axisView._axisPointer;\n\t  axisPointer && axisPointer.dispose(ecModel, api);\n\t  axisView._axisPointer = null;\n\t}\n\t\n\tvar axisPointerClazz = [];\n\t\n\tAxisView.registerAxisPointerClass = function (type, clazz) {\n\t  axisPointerClazz[type] = clazz;\n\t};\n\t\n\tAxisView.getAxisPointerClass = function (type) {\n\t  return type && axisPointerClazz[type];\n\t};\n\t\n\tvar _default = AxisView;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 776:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar AxisBuilder = __webpack_require__(411);\n\t\n\tvar AxisView = __webpack_require__(412);\n\t\n\tvar cartesianAxisHelper = __webpack_require__(413);\n\t\n\tvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n\tvar getInterval = AxisBuilder.getInterval;\n\tvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\tvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n\t//     var alignWithLabel = model.get('alignWithLabel');\n\t//     if (alignWithLabel === 'auto') {\n\t//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n\t//     }\n\t//     return alignWithLabel;\n\t// }\n\t\n\tvar CartesianAxisView = AxisView.extend({\n\t  type: 'cartesianAxis',\n\t  axisPointerClass: 'CartesianAxisPointer',\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  render: function (axisModel, ecModel, api, payload) {\n\t    this.group.removeAll();\n\t    var oldAxisGroup = this._axisGroup;\n\t    this._axisGroup = new graphic.Group();\n\t    this.group.add(this._axisGroup);\n\t\n\t    if (!axisModel.get('show')) {\n\t      return;\n\t    }\n\t\n\t    var gridModel = axisModel.getCoordSysModel();\n\t    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\t    var axisBuilder = new AxisBuilder(axisModel, layout);\n\t    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\t\n\t    this._axisGroup.add(axisBuilder.getGroup());\n\t\n\t    zrUtil.each(selfBuilderAttrs, function (name) {\n\t      if (axisModel.get(name + '.show')) {\n\t        this['_' + name](axisModel, gridModel, layout.labelInterval);\n\t      }\n\t    }, this);\n\t    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\t    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n\t  },\n\t\n\t  /**\n\t   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n\t   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t   * @param {number|Function} labelInterval\n\t   * @private\n\t   */\n\t  _splitLine: function (axisModel, gridModel, labelInterval) {\n\t    var axis = axisModel.axis;\n\t\n\t    if (axis.scale.isBlank()) {\n\t      return;\n\t    }\n\t\n\t    var splitLineModel = axisModel.getModel('splitLine');\n\t    var lineStyleModel = splitLineModel.getModel('lineStyle');\n\t    var lineColors = lineStyleModel.get('color');\n\t    var lineInterval = getInterval(splitLineModel, labelInterval);\n\t    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\t    var gridRect = gridModel.coordinateSystem.getRect();\n\t    var isHorizontal = axis.isHorizontal();\n\t    var lineCount = 0;\n\t    var ticksCoords = axis.getTicksCoords();\n\t    var ticks = axis.scale.getTicks();\n\t    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n\t    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\t    var p1 = [];\n\t    var p2 = []; // Simple optimization\n\t    // Batching the lines if color are the same\n\t\n\t    var lineStyle = lineStyleModel.getLineStyle();\n\t\n\t    for (var i = 0; i < ticksCoords.length; i++) {\n\t      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n\t        continue;\n\t      }\n\t\n\t      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\t\n\t      if (isHorizontal) {\n\t        p1[0] = tickCoord;\n\t        p1[1] = gridRect.y;\n\t        p2[0] = tickCoord;\n\t        p2[1] = gridRect.y + gridRect.height;\n\t      } else {\n\t        p1[0] = gridRect.x;\n\t        p1[1] = tickCoord;\n\t        p2[0] = gridRect.x + gridRect.width;\n\t        p2[1] = tickCoord;\n\t      }\n\t\n\t      var colorIndex = lineCount++ % lineColors.length;\n\t\n\t      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\t        anid: 'line_' + ticks[i],\n\t        shape: {\n\t          x1: p1[0],\n\t          y1: p1[1],\n\t          x2: p2[0],\n\t          y2: p2[1]\n\t        },\n\t        style: zrUtil.defaults({\n\t          stroke: lineColors[colorIndex]\n\t        }, lineStyle),\n\t        silent: true\n\t      })));\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n\t   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t   * @param {number|Function} labelInterval\n\t   * @private\n\t   */\n\t  _splitArea: function (axisModel, gridModel, labelInterval) {\n\t    var axis = axisModel.axis;\n\t\n\t    if (axis.scale.isBlank()) {\n\t      return;\n\t    }\n\t\n\t    var splitAreaModel = axisModel.getModel('splitArea');\n\t    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\t    var areaColors = areaStyleModel.get('color');\n\t    var gridRect = gridModel.coordinateSystem.getRect();\n\t    var ticksCoords = axis.getTicksCoords();\n\t    var ticks = axis.scale.getTicks();\n\t    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n\t    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\t    var count = 0;\n\t    var areaInterval = getInterval(splitAreaModel, labelInterval);\n\t    var areaStyle = areaStyleModel.getAreaStyle();\n\t    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\t    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n\t    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\t\n\t    for (var i = 1; i < ticksCoords.length; i++) {\n\t      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n\t        continue;\n\t      }\n\t\n\t      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\t      var x;\n\t      var y;\n\t      var width;\n\t      var height;\n\t\n\t      if (axis.isHorizontal()) {\n\t        x = prevX;\n\t        y = gridRect.y;\n\t        width = tickCoord - x;\n\t        height = gridRect.height;\n\t      } else {\n\t        x = gridRect.x;\n\t        y = prevY;\n\t        width = gridRect.width;\n\t        height = tickCoord - y;\n\t      }\n\t\n\t      var colorIndex = count++ % areaColors.length;\n\t\n\t      this._axisGroup.add(new graphic.Rect({\n\t        anid: 'area_' + ticks[i],\n\t        shape: {\n\t          x: x,\n\t          y: y,\n\t          width: width,\n\t          height: height\n\t        },\n\t        style: zrUtil.defaults({\n\t          fill: areaColors[colorIndex]\n\t        }, areaStyle),\n\t        silent: true\n\t      }));\n\t\n\t      prevX = x + width;\n\t      prevY = y + height;\n\t    }\n\t  }\n\t});\n\tCartesianAxisView.extend({\n\t  type: 'xAxis'\n\t});\n\tCartesianAxisView.extend({\n\t  type: 'yAxis'\n\t});\n\n/***/ }),\n\n/***/ 413:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\t/**\n\t * @param {Object} opt {labelInside}\n\t * @return {Object} {\n\t *  position, rotation, labelDirection, labelOffset,\n\t *  tickDirection, labelRotate, labelInterval, z2\n\t * }\n\t */\n\tfunction layout(gridModel, axisModel, opt) {\n\t  opt = opt || {};\n\t  var grid = gridModel.coordinateSystem;\n\t  var axis = axisModel.axis;\n\t  var layout = {};\n\t  var rawAxisPosition = axis.position;\n\t  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n\t  var axisDim = axis.dim;\n\t  var rect = grid.getRect();\n\t  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\t  var idx = {\n\t    left: 0,\n\t    right: 1,\n\t    top: 0,\n\t    bottom: 1,\n\t    onZero: 2\n\t  };\n\t  var axisOffset = axisModel.get('offset') || 0;\n\t  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\t\n\t  if (axis.onZero) {\n\t    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n\t    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n\t    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n\t  } // Axis position\n\t\n\t\n\t  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\t\n\t  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\t\n\t  var dirMap = {\n\t    top: -1,\n\t    bottom: 1,\n\t    left: -1,\n\t    right: 1\n\t  };\n\t  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n\t  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\t\n\t  if (axisModel.get('axisTick.inside')) {\n\t    layout.tickDirection = -layout.tickDirection;\n\t  }\n\t\n\t  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n\t    layout.labelDirection = -layout.labelDirection;\n\t  } // Special label rotation\n\t\n\t\n\t  var labelRotate = axisModel.get('axisLabel.rotate');\n\t  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\t\n\t  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\t\n\t  layout.z2 = 1;\n\t  return layout;\n\t}\n\t\n\texports.layout = layout;\n\n/***/ }),\n\n/***/ 414:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar axisPointerModelHelper = __webpack_require__(190);\n\t\n\tvar axisTrigger = __webpack_require__(780);\n\t\n\t__webpack_require__(777);\n\t\n\t__webpack_require__(778);\n\t\n\t__webpack_require__(415);\n\t\n\t// CartesianAxisPointer is not supposed to be required here. But consider\n\t// echarts.simple.js and online build tooltip, which only require gridSimple,\n\t// CartesianAxisPointer should be able to required somewhere.\n\techarts.registerPreprocessor(function (option) {\n\t  // Always has a global axisPointerModel for default setting.\n\t  if (option) {\n\t    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n\t    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n\t    // is not set, remain null/undefined, otherwise it will\n\t    // override existent link setting.\n\t\n\t    if (link && !zrUtil.isArray(link)) {\n\t      option.axisPointer.link = [link];\n\t    }\n\t  }\n\t}); // This process should proformed after coordinate systems created\n\t// and series data processed. So put it on statistic processing stage.\n\t\n\techarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n\t  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n\t  // allAxesInfo should be updated when setOption performed.\n\t  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n\t}); // Broadcast to all views.\n\t\n\techarts.registerAction({\n\t  type: 'updateAxisPointer',\n\t  event: 'updateAxisPointer',\n\t  update: ':updateAxisPointer'\n\t}, axisTrigger);\n\n/***/ }),\n\n/***/ 777:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar AxisPointerModel = echarts.extendComponentModel({\n\t  type: 'axisPointer',\n\t  coordSysAxesInfo: null,\n\t  defaultOption: {\n\t    // 'auto' means that show when triggered by tooltip or handle.\n\t    show: 'auto',\n\t    // 'click' | 'mousemove' | 'none'\n\t    triggerOn: null,\n\t    // set default in AxisPonterView.js\n\t    zlevel: 0,\n\t    z: 50,\n\t    type: 'line',\n\t    // axispointer triggered by tootip determine snap automatically,\n\t    // see `modelHelper`.\n\t    snap: false,\n\t    triggerTooltip: true,\n\t    value: null,\n\t    status: null,\n\t    // Init value depends on whether handle is used.\n\t    // [group0, group1, ...]\n\t    // Each group can be: {\n\t    //      mapper: function () {},\n\t    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n\t    //      xAxisId: ...,\n\t    //      yAxisName: ...,\n\t    //      angleAxisIndex: ...\n\t    // }\n\t    // mapper: can be ignored.\n\t    //      input: {axisInfo, value}\n\t    //      output: {axisInfo, value}\n\t    link: [],\n\t    // Do not set 'auto' here, otherwise global animation: false\n\t    // will not effect at this axispointer.\n\t    animation: null,\n\t    animationDurationUpdate: 200,\n\t    lineStyle: {\n\t      color: '#aaa',\n\t      width: 1,\n\t      type: 'solid'\n\t    },\n\t    shadowStyle: {\n\t      color: 'rgba(150,150,150,0.3)'\n\t    },\n\t    label: {\n\t      show: true,\n\t      formatter: null,\n\t      // string | Function\n\t      precision: 'auto',\n\t      // Or a number like 0, 1, 2 ...\n\t      margin: 3,\n\t      color: '#fff',\n\t      padding: [5, 7, 5, 7],\n\t      backgroundColor: 'auto',\n\t      // default: axis line color\n\t      borderColor: null,\n\t      borderWidth: 0,\n\t      shadowBlur: 3,\n\t      shadowColor: '#aaa' // Considering applicability, common style should\n\t      // better not have shadowOffset.\n\t      // shadowOffsetX: 0,\n\t      // shadowOffsetY: 2\n\t\n\t    },\n\t    handle: {\n\t      show: false,\n\t      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n\t      // jshint ignore:line\n\t      size: 45,\n\t      // handle margin is from symbol center to axis, which is stable when circular move.\n\t      margin: 50,\n\t      // color: '#1b8bbd'\n\t      // color: '#2f4554'\n\t      color: '#333',\n\t      shadowBlur: 3,\n\t      shadowColor: '#aaa',\n\t      shadowOffsetX: 0,\n\t      shadowOffsetY: 2,\n\t      // For mobile performance\n\t      throttle: 40\n\t    }\n\t  }\n\t});\n\tvar _default = AxisPointerModel;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar globalListener = __webpack_require__(417);\n\t\n\tvar AxisPointerView = echarts.extendComponentView({\n\t  type: 'axisPointer',\n\t  render: function (globalAxisPointerModel, ecModel, api) {\n\t    var globalTooltipModel = ecModel.getComponent('tooltip');\n\t    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n\t    // AxisPointerView to be independent to Tooltip.\n\t\n\t    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n\t      // If 'none', it is not controlled by mouse totally.\n\t      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n\t        dispatchAction({\n\t          type: 'updateAxisPointer',\n\t          currTrigger: currTrigger,\n\t          x: e && e.offsetX,\n\t          y: e && e.offsetY\n\t        });\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  remove: function (ecModel, api) {\n\t    globalListener.unregister(api.getZr(), 'axisPointer');\n\t    AxisPointerView.superApply(this._model, 'remove', arguments);\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  dispose: function (ecModel, api) {\n\t    globalListener.unregister('axisPointer', api);\n\t    AxisPointerView.superApply(this._model, 'dispose', arguments);\n\t  }\n\t});\n\tvar _default = AxisPointerView;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 779:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar clazzUtil = __webpack_require__(56);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar axisPointerModelHelper = __webpack_require__(190);\n\t\n\tvar eventTool = __webpack_require__(114);\n\t\n\tvar throttleUtil = __webpack_require__(274);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\tvar inner = makeInner();\n\tvar clone = zrUtil.clone;\n\tvar bind = zrUtil.bind;\n\t/**\n\t * Base axis pointer class in 2D.\n\t * Implemenents {module:echarts/component/axis/IAxisPointer}.\n\t */\n\t\n\tfunction BaseAxisPointer() {}\n\t\n\tBaseAxisPointer.prototype = {\n\t  /**\n\t   * @private\n\t   */\n\t  _group: null,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _lastGraphicKey: null,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _handle: null,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _dragging: false,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _lastValue: null,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _lastStatus: null,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _payloadInfo: null,\n\t\n\t  /**\n\t   * In px, arbitrary value. Do not set too small,\n\t   * no animation is ok for most cases.\n\t   * @protected\n\t   */\n\t  animationThreshold: 15,\n\t\n\t  /**\n\t   * @implement\n\t   */\n\t  render: function (axisModel, axisPointerModel, api, forceRender) {\n\t    var value = axisPointerModel.get('value');\n\t    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n\t    // be replaced when user calling setOption in not merge mode.\n\t\n\t    this._axisModel = axisModel;\n\t    this._axisPointerModel = axisPointerModel;\n\t    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n\t    // So it is power consuming if performing `render` each time,\n\t    // especially on mobile device.\n\t\n\t    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n\t      return;\n\t    }\n\t\n\t    this._lastValue = value;\n\t    this._lastStatus = status;\n\t    var group = this._group;\n\t    var handle = this._handle;\n\t\n\t    if (!status || status === 'hide') {\n\t      // Do not clear here, for animation better.\n\t      group && group.hide();\n\t      handle && handle.hide();\n\t      return;\n\t    }\n\t\n\t    group && group.show();\n\t    handle && handle.show(); // Otherwise status is 'show'\n\t\n\t    var elOption = {};\n\t    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\t\n\t    var graphicKey = elOption.graphicKey;\n\t\n\t    if (graphicKey !== this._lastGraphicKey) {\n\t      this.clear(api);\n\t    }\n\t\n\t    this._lastGraphicKey = graphicKey;\n\t    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\t\n\t    if (!group) {\n\t      group = this._group = new graphic.Group();\n\t      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n\t      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n\t      api.getZr().add(group);\n\t    } else {\n\t      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n\t      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n\t      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n\t    }\n\t\n\t    updateMandatoryProps(group, axisPointerModel, true);\n\t\n\t    this._renderHandle(value);\n\t  },\n\t\n\t  /**\n\t   * @implement\n\t   */\n\t  remove: function (api) {\n\t    this.clear(api);\n\t  },\n\t\n\t  /**\n\t   * @implement\n\t   */\n\t  dispose: function (api) {\n\t    this.clear(api);\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  determineAnimation: function (axisModel, axisPointerModel) {\n\t    var animation = axisPointerModel.get('animation');\n\t    var axis = axisModel.axis;\n\t    var isCategoryAxis = axis.type === 'category';\n\t    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\t\n\t    if (!useSnap && !isCategoryAxis) {\n\t      return false;\n\t    }\n\t\n\t    if (animation === 'auto' || animation == null) {\n\t      var animationThreshold = this.animationThreshold;\n\t\n\t      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n\t        return true;\n\t      } // It is important to auto animation when snap used. Consider if there is\n\t      // a dataZoom, animation will be disabled when too many points exist, while\n\t      // it will be enabled for better visual effect when little points exist.\n\t\n\t\n\t      if (useSnap) {\n\t        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n\t        var axisExtent = axis.getExtent(); // Approximate band width\n\t\n\t        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n\t      }\n\t\n\t      return false;\n\t    }\n\t\n\t    return animation === true;\n\t  },\n\t\n\t  /**\n\t   * add {pointer, label, graphicKey} to elOption\n\t   * @protected\n\t   */\n\t  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n\t    var pointerOption = elOption.pointer;\n\t\n\t    if (pointerOption) {\n\t      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n\t      group.add(pointerEl);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n\t    if (elOption.label) {\n\t      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n\t      group.add(labelEl);\n\t      updateLabelShowHide(labelEl, axisPointerModel);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  updatePointerEl: function (group, elOption, updateProps) {\n\t    var pointerEl = inner(group).pointerEl;\n\t\n\t    if (pointerEl) {\n\t      pointerEl.setStyle(elOption.pointer.style);\n\t      updateProps(pointerEl, {\n\t        shape: elOption.pointer.shape\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n\t    var labelEl = inner(group).labelEl;\n\t\n\t    if (labelEl) {\n\t      labelEl.setStyle(elOption.label.style);\n\t      updateProps(labelEl, {\n\t        // Consider text length change in vertical axis, animation should\n\t        // be used on shape, otherwise the effect will be weird.\n\t        shape: elOption.label.shape,\n\t        position: elOption.label.position\n\t      });\n\t      updateLabelShowHide(labelEl, axisPointerModel);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _renderHandle: function (value) {\n\t    if (this._dragging || !this.updateHandleTransform) {\n\t      return;\n\t    }\n\t\n\t    var axisPointerModel = this._axisPointerModel;\n\t\n\t    var zr = this._api.getZr();\n\t\n\t    var handle = this._handle;\n\t    var handleModel = axisPointerModel.getModel('handle');\n\t    var status = axisPointerModel.get('status');\n\t\n\t    if (!handleModel.get('show') || !status || status === 'hide') {\n\t      handle && zr.remove(handle);\n\t      this._handle = null;\n\t      return;\n\t    }\n\t\n\t    var isInit;\n\t\n\t    if (!this._handle) {\n\t      isInit = true;\n\t      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n\t        cursor: 'move',\n\t        draggable: true,\n\t        onmousemove: function (e) {\n\t          // Fot mobile devicem, prevent screen slider on the button.\n\t          eventTool.stop(e.event);\n\t        },\n\t        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n\t        drift: bind(this._onHandleDragMove, this),\n\t        ondragend: bind(this._onHandleDragEnd, this)\n\t      });\n\t      zr.add(handle);\n\t    }\n\t\n\t    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\t\n\t    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\t    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\t\n\t    var handleSize = handleModel.get('size');\n\t\n\t    if (!zrUtil.isArray(handleSize)) {\n\t      handleSize = [handleSize, handleSize];\n\t    }\n\t\n\t    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\t    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\t\n\t    this._moveHandleToValue(value, isInit);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveHandleToValue: function (value, isInit) {\n\t    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _onHandleDragMove: function (dx, dy) {\n\t    var handle = this._handle;\n\t\n\t    if (!handle) {\n\t      return;\n\t    }\n\t\n\t    this._dragging = true; // Persistent for throttle.\n\t\n\t    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n\t    this._payloadInfo = trans;\n\t    handle.stopAnimation();\n\t    handle.attr(getHandleTransProps(trans));\n\t    inner(handle).lastProp = null;\n\t\n\t    this._doDispatchAxisPointer();\n\t  },\n\t\n\t  /**\n\t   * Throttled method.\n\t   * @private\n\t   */\n\t  _doDispatchAxisPointer: function () {\n\t    var handle = this._handle;\n\t\n\t    if (!handle) {\n\t      return;\n\t    }\n\t\n\t    var payloadInfo = this._payloadInfo;\n\t    var axisModel = this._axisModel;\n\t\n\t    this._api.dispatchAction({\n\t      type: 'updateAxisPointer',\n\t      x: payloadInfo.cursorPoint[0],\n\t      y: payloadInfo.cursorPoint[1],\n\t      tooltipOption: payloadInfo.tooltipOption,\n\t      axesInfo: [{\n\t        axisDim: axisModel.axis.dim,\n\t        axisIndex: axisModel.componentIndex\n\t      }]\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _onHandleDragEnd: function (moveAnimation) {\n\t    this._dragging = false;\n\t    var handle = this._handle;\n\t\n\t    if (!handle) {\n\t      return;\n\t    }\n\t\n\t    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n\t    // axisPointer. So move handle to align the exact value position when\n\t    // drag ended.\n\t\n\t\n\t    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n\t    // button, and will be hidden after finger left handle button.\n\t\n\t\n\t    this._api.dispatchAction({\n\t      type: 'hideTip'\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Should be implemenented by sub-class if support `handle`.\n\t   * @protected\n\t   * @param {number} value\n\t   * @param {module:echarts/model/Model} axisModel\n\t   * @param {module:echarts/model/Model} axisPointerModel\n\t   * @return {Object} {position: [x, y], rotation: 0}\n\t   */\n\t  getHandleTransform: null,\n\t\n\t  /**\n\t   * * Should be implemenented by sub-class if support `handle`.\n\t   * @protected\n\t   * @param {Object} transform {position, rotation}\n\t   * @param {Array.<number>} delta [dx, dy]\n\t   * @param {module:echarts/model/Model} axisModel\n\t   * @param {module:echarts/model/Model} axisPointerModel\n\t   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n\t   */\n\t  updateHandleTransform: null,\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  clear: function (api) {\n\t    this._lastValue = null;\n\t    this._lastStatus = null;\n\t    var zr = api.getZr();\n\t    var group = this._group;\n\t    var handle = this._handle;\n\t\n\t    if (zr && group) {\n\t      this._lastGraphicKey = null;\n\t      group && zr.remove(group);\n\t      handle && zr.remove(handle);\n\t      this._group = null;\n\t      this._handle = null;\n\t      this._payloadInfo = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  doClear: function () {// Implemented by sub-class if necessary.\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   * @param {Array.<number>} xy\n\t   * @param {Array.<number>} wh\n\t   * @param {number} [xDimIndex=0] or 1\n\t   */\n\t  buildLabel: function (xy, wh, xDimIndex) {\n\t    xDimIndex = xDimIndex || 0;\n\t    return {\n\t      x: xy[xDimIndex],\n\t      y: xy[1 - xDimIndex],\n\t      width: wh[xDimIndex],\n\t      height: wh[1 - xDimIndex]\n\t    };\n\t  }\n\t};\n\tBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\t\n\tfunction updateProps(animationModel, moveAnimation, el, props) {\n\t  // Animation optimize.\n\t  if (!propsEqual(inner(el).lastProp, props)) {\n\t    inner(el).lastProp = props;\n\t    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n\t  }\n\t}\n\t\n\tfunction propsEqual(lastProps, newProps) {\n\t  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n\t    var equals = true;\n\t    zrUtil.each(newProps, function (item, key) {\n\t      equals = equals && propsEqual(lastProps[key], item);\n\t    });\n\t    return !!equals;\n\t  } else {\n\t    return lastProps === newProps;\n\t  }\n\t}\n\t\n\tfunction updateLabelShowHide(labelEl, axisPointerModel) {\n\t  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n\t}\n\t\n\tfunction getHandleTransProps(trans) {\n\t  return {\n\t    position: trans.position.slice(),\n\t    rotation: trans.rotation || 0\n\t  };\n\t}\n\t\n\tfunction updateMandatoryProps(group, axisPointerModel, silent) {\n\t  var z = axisPointerModel.get('z');\n\t  var zlevel = axisPointerModel.get('zlevel');\n\t  group && group.traverse(function (el) {\n\t    if (el.type !== 'group') {\n\t      z != null && (el.z = z);\n\t      zlevel != null && (el.zlevel = zlevel);\n\t      el.silent = silent;\n\t    }\n\t  });\n\t}\n\t\n\tclazzUtil.enableClassExtend(BaseAxisPointer);\n\tvar _default = BaseAxisPointer;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar BaseAxisPointer = __webpack_require__(779);\n\t\n\tvar viewHelper = __webpack_require__(418);\n\t\n\tvar cartesianAxisHelper = __webpack_require__(413);\n\t\n\tvar AxisView = __webpack_require__(412);\n\t\n\tvar CartesianAxisPointer = BaseAxisPointer.extend({\n\t  /**\n\t   * @override\n\t   */\n\t  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n\t    var axis = axisModel.axis;\n\t    var grid = axis.grid;\n\t    var axisPointerType = axisPointerModel.get('type');\n\t    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n\t    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\t\n\t    if (axisPointerType && axisPointerType !== 'none') {\n\t      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n\t      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n\t      pointerOption.style = elStyle;\n\t      elOption.graphicKey = pointerOption.type;\n\t      elOption.pointer = pointerOption;\n\t    }\n\t\n\t    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n\t    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  getHandleTransform: function (value, axisModel, axisPointerModel) {\n\t    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n\t      labelInside: false\n\t    });\n\t    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n\t    return {\n\t      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n\t      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n\t    };\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n\t    var axis = axisModel.axis;\n\t    var grid = axis.grid;\n\t    var axisExtent = axis.getGlobalExtent(true);\n\t    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n\t    var dimIndex = axis.dim === 'x' ? 0 : 1;\n\t    var currPosition = transform.position;\n\t    currPosition[dimIndex] += delta[dimIndex];\n\t    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n\t    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\t    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n\t    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n\t    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\t\n\t    var tooltipOptions = [{\n\t      verticalAlign: 'middle'\n\t    }, {\n\t      align: 'center'\n\t    }];\n\t    return {\n\t      position: currPosition,\n\t      rotation: transform.rotation,\n\t      cursorPoint: cursorPoint,\n\t      tooltipOption: tooltipOptions[dimIndex]\n\t    };\n\t  }\n\t});\n\t\n\tfunction getCartesian(grid, axis) {\n\t  var opt = {};\n\t  opt[axis.dim + 'AxisIndex'] = axis.index;\n\t  return grid.getCartesian(opt);\n\t}\n\t\n\tvar pointerShapeBuilder = {\n\t  line: function (axis, pixelValue, otherExtent, elStyle) {\n\t    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n\t    graphic.subPixelOptimizeLine({\n\t      shape: targetShape,\n\t      style: elStyle\n\t    });\n\t    return {\n\t      type: 'Line',\n\t      shape: targetShape\n\t    };\n\t  },\n\t  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n\t    var bandWidth = axis.getBandWidth();\n\t    var span = otherExtent[1] - otherExtent[0];\n\t    return {\n\t      type: 'Rect',\n\t      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n\t    };\n\t  }\n\t};\n\t\n\tfunction getAxisDimIndex(axis) {\n\t  return axis.dim === 'x' ? 0 : 1;\n\t}\n\t\n\tAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\tvar _default = CartesianAxisPointer;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 780:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\t\n\tvar modelHelper = __webpack_require__(190);\n\t\n\tvar findPointFromSeries = __webpack_require__(416);\n\t\n\tvar each = zrUtil.each;\n\tvar curry = zrUtil.curry;\n\tvar inner = makeInner();\n\t/**\n\t * Basic logic: check all axis, if they do not demand show/highlight,\n\t * then hide/downplay them.\n\t *\n\t * @param {Object} coordSysAxesInfo\n\t * @param {Object} payload\n\t * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n\t * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n\t *              trigger axisPointer and tooltip.\n\t * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n\t *              trigger axisPointer and tooltip.\n\t * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n\t * @param {Object} [payload.dataIndex] finder, restrict target axes.\n\t * @param {Object} [payload.axesInfo] finder, restrict target axes.\n\t *        [{\n\t *          axisDim: 'x'|'y'|'angle'|...,\n\t *          axisIndex: ...,\n\t *          value: ...\n\t *        }, ...]\n\t * @param {Function} [payload.dispatchAction]\n\t * @param {Object} [payload.tooltipOption]\n\t * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n\t *        which can be specified in dispatchAction\n\t * @param {module:echarts/model/Global} ecModel\n\t * @param {module:echarts/ExtensionAPI} api\n\t * @return {Object} content of event obj for echarts.connect.\n\t */\n\t\n\tfunction _default(payload, ecModel, api) {\n\t  var currTrigger = payload.currTrigger;\n\t  var point = [payload.x, payload.y];\n\t  var finder = payload;\n\t  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n\t  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n\t  // See #6121. But we are not able to reproduce it yet.\n\t\n\t  if (!coordSysAxesInfo) {\n\t    return;\n\t  }\n\t\n\t  if (illegalPoint(point)) {\n\t    // Used in the default behavior of `connection`: use the sample seriesIndex\n\t    // and dataIndex. And also used in the tooltipView trigger.\n\t    point = findPointFromSeries({\n\t      seriesIndex: finder.seriesIndex,\n\t      // Do not use dataIndexInside from other ec instance.\n\t      // FIXME: auto detect it?\n\t      dataIndex: finder.dataIndex\n\t    }, ecModel).point;\n\t  }\n\t\n\t  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n\t  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n\t  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n\t  // and dataIndex.\n\t\n\t  var inputAxesInfo = finder.axesInfo;\n\t  var axesInfo = coordSysAxesInfo.axesInfo;\n\t  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n\t  var outputFinder = {};\n\t  var showValueMap = {};\n\t  var dataByCoordSys = {\n\t    list: [],\n\t    map: {}\n\t  };\n\t  var updaters = {\n\t    showPointer: curry(showPointer, showValueMap),\n\t    showTooltip: curry(showTooltip, dataByCoordSys)\n\t  }; // Process for triggered axes.\n\t\n\t  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n\t    // If a point given, it must be contained by the coordinate system.\n\t    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\t    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n\t      var axis = axisInfo.axis;\n\t      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\t\n\t      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n\t        var val = inputAxisInfo && inputAxisInfo.value;\n\t\n\t        if (val == null && !isIllegalPoint) {\n\t          val = axis.pointToData(point);\n\t        }\n\t\n\t        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n\t      }\n\t    });\n\t  }); // Process for linked axes.\n\t\n\t  var linkTriggers = {};\n\t  each(axesInfo, function (tarAxisInfo, tarKey) {\n\t    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\t\n\t    if (linkGroup && !showValueMap[tarKey]) {\n\t      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n\t        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\t\n\t        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n\t          var val = srcValItem.value;\n\t          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n\t          linkTriggers[tarAxisInfo.key] = val;\n\t        }\n\t      });\n\t    }\n\t  });\n\t  each(linkTriggers, function (val, tarKey) {\n\t    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n\t  });\n\t  updateModelActually(showValueMap, axesInfo, outputFinder);\n\t  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n\t  dispatchHighDownActually(axesInfo, dispatchAction, api);\n\t  return outputFinder;\n\t}\n\t\n\tfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n\t  var axis = axisInfo.axis;\n\t\n\t  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n\t    return;\n\t  }\n\t\n\t  if (!axisInfo.involveSeries) {\n\t    updaters.showPointer(axisInfo, newValue);\n\t    return;\n\t  } // Heavy calculation. So put it after axis.containData checking.\n\t\n\t\n\t  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n\t  var payloadBatch = payloadInfo.payloadBatch;\n\t  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n\t  // By defualt use the first involved series data as a sample to connect.\n\t\n\t  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n\t    zrUtil.extend(outputFinder, payloadBatch[0]);\n\t  } // If no linkSource input, this process is for collecting link\n\t  // target, where snap should not be accepted.\n\t\n\t\n\t  if (!dontSnap && axisInfo.snap) {\n\t    if (axis.containData(snapToValue) && snapToValue != null) {\n\t      newValue = snapToValue;\n\t    }\n\t  }\n\t\n\t  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n\t  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\t\n\t  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n\t}\n\t\n\tfunction buildPayloadsBySeries(value, axisInfo) {\n\t  var axis = axisInfo.axis;\n\t  var dim = axis.dim;\n\t  var snapToValue = value;\n\t  var payloadBatch = [];\n\t  var minDist = Number.MAX_VALUE;\n\t  var minDiff = -1;\n\t  each(axisInfo.seriesModels, function (series, idx) {\n\t    var dataDim = series.getData().mapDimension(dim, true);\n\t    var seriesNestestValue;\n\t    var dataIndices;\n\t\n\t    if (series.getAxisTooltipData) {\n\t      var result = series.getAxisTooltipData(dataDim, value, axis);\n\t      dataIndices = result.dataIndices;\n\t      seriesNestestValue = result.nestestValue;\n\t    } else {\n\t      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n\t      // when data length is not same.\n\t      false, axis.type === 'category' ? 0.5 : null);\n\t\n\t      if (!dataIndices.length) {\n\t        return;\n\t      }\n\t\n\t      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n\t    }\n\t\n\t    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n\t      return;\n\t    }\n\t\n\t    var diff = value - seriesNestestValue;\n\t    var dist = Math.abs(diff); // Consider category case\n\t\n\t    if (dist <= minDist) {\n\t      if (dist < minDist || diff >= 0 && minDiff < 0) {\n\t        minDist = dist;\n\t        minDiff = diff;\n\t        snapToValue = seriesNestestValue;\n\t        payloadBatch.length = 0;\n\t      }\n\t\n\t      each(dataIndices, function (dataIndex) {\n\t        payloadBatch.push({\n\t          seriesIndex: series.seriesIndex,\n\t          dataIndexInside: dataIndex,\n\t          dataIndex: series.getData().getRawIndex(dataIndex)\n\t        });\n\t      });\n\t    }\n\t  });\n\t  return {\n\t    payloadBatch: payloadBatch,\n\t    snapToValue: snapToValue\n\t  };\n\t}\n\t\n\tfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n\t  showValueMap[axisInfo.key] = {\n\t    value: value,\n\t    payloadBatch: payloadBatch\n\t  };\n\t}\n\t\n\tfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n\t  var payloadBatch = payloadInfo.payloadBatch;\n\t  var axis = axisInfo.axis;\n\t  var axisModel = axis.model;\n\t  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n\t  // whose length will be used to judge whether dispatch action.\n\t\n\t  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n\t    return;\n\t  }\n\t\n\t  var coordSysModel = axisInfo.coordSys.model;\n\t  var coordSysKey = modelHelper.makeKey(coordSysModel);\n\t  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\t\n\t  if (!coordSysItem) {\n\t    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n\t      coordSysId: coordSysModel.id,\n\t      coordSysIndex: coordSysModel.componentIndex,\n\t      coordSysType: coordSysModel.type,\n\t      coordSysMainType: coordSysModel.mainType,\n\t      dataByAxis: []\n\t    };\n\t    dataByCoordSys.list.push(coordSysItem);\n\t  }\n\t\n\t  coordSysItem.dataByAxis.push({\n\t    axisDim: axis.dim,\n\t    axisIndex: axisModel.componentIndex,\n\t    axisType: axisModel.type,\n\t    axisId: axisModel.id,\n\t    value: value,\n\t    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n\t    // depends that all models have been updated. So it should not be performed\n\t    // here. Considering axisPointerModel used here is volatile, which is hard\n\t    // to be retrieve in TooltipView, we prepare parameters here.\n\t    valueLabelOpt: {\n\t      precision: axisPointerModel.get('label.precision'),\n\t      formatter: axisPointerModel.get('label.formatter')\n\t    },\n\t    seriesDataIndices: payloadBatch.slice()\n\t  });\n\t}\n\t\n\tfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n\t  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\t\n\t  each(axesInfo, function (axisInfo, key) {\n\t    var option = axisInfo.axisPointerModel.option;\n\t    var valItem = showValueMap[key];\n\t\n\t    if (valItem) {\n\t      !axisInfo.useHandle && (option.status = 'show');\n\t      option.value = valItem.value; // For label formatter param and highlight.\n\t\n\t      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n\t    } // When always show (e.g., handle used), remain\n\t    // original value and status.\n\t    else {\n\t        // If hide, value still need to be set, consider\n\t        // click legend to toggle axis blank.\n\t        !axisInfo.useHandle && (option.status = 'hide');\n\t      } // If status is 'hide', should be no info in payload.\n\t\n\t\n\t    option.status === 'show' && outputAxesInfo.push({\n\t      axisDim: axisInfo.axis.dim,\n\t      axisIndex: axisInfo.axis.model.componentIndex,\n\t      value: option.value\n\t    });\n\t  });\n\t}\n\t\n\tfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n\t  // Basic logic: If no showTip required, hideTip will be dispatched.\n\t  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n\t    dispatchAction({\n\t      type: 'hideTip'\n\t    });\n\t    return;\n\t  } // In most case only one axis (or event one series is used). It is\n\t  // convinient to fetch payload.seriesIndex and payload.dataIndex\n\t  // dirtectly. So put the first seriesIndex and dataIndex of the first\n\t  // axis on the payload.\n\t\n\t\n\t  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\t  dispatchAction({\n\t    type: 'showTip',\n\t    escapeConnect: true,\n\t    x: point[0],\n\t    y: point[1],\n\t    tooltipOption: payload.tooltipOption,\n\t    position: payload.position,\n\t    dataIndexInside: sampleItem.dataIndexInside,\n\t    dataIndex: sampleItem.dataIndex,\n\t    seriesIndex: sampleItem.seriesIndex,\n\t    dataByCoordSys: dataByCoordSys.list\n\t  });\n\t}\n\t\n\tfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n\t  // FIXME\n\t  // highlight status modification shoule be a stage of main process?\n\t  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\t  var zr = api.getZr();\n\t  var highDownKey = 'axisPointerLastHighlights';\n\t  var lastHighlights = inner(zr)[highDownKey] || {};\n\t  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n\t  // Build hash map and remove duplicate incidentally.\n\t\n\t  each(axesInfo, function (axisInfo, key) {\n\t    var option = axisInfo.axisPointerModel.option;\n\t    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n\t      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n\t      newHighlights[key] = batchItem;\n\t    });\n\t  }); // Diff.\n\t\n\t  var toHighlight = [];\n\t  var toDownplay = [];\n\t  zrUtil.each(lastHighlights, function (batchItem, key) {\n\t    !newHighlights[key] && toDownplay.push(batchItem);\n\t  });\n\t  zrUtil.each(newHighlights, function (batchItem, key) {\n\t    !lastHighlights[key] && toHighlight.push(batchItem);\n\t  });\n\t  toDownplay.length && api.dispatchAction({\n\t    type: 'downplay',\n\t    escapeConnect: true,\n\t    batch: toDownplay\n\t  });\n\t  toHighlight.length && api.dispatchAction({\n\t    type: 'highlight',\n\t    escapeConnect: true,\n\t    batch: toHighlight\n\t  });\n\t}\n\t\n\tfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n\t  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n\t    var inputAxisInfo = inputAxesInfo[i];\n\t\n\t    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n\t      return inputAxisInfo;\n\t    }\n\t  }\n\t}\n\t\n\tfunction makeMapperParam(axisInfo) {\n\t  var axisModel = axisInfo.axis.model;\n\t  var item = {};\n\t  var dim = item.axisDim = axisInfo.axis.dim;\n\t  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n\t  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n\t  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n\t  return item;\n\t}\n\t\n\tfunction illegalPoint(point) {\n\t  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\t/**\n\t * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n\t * @param {module:echarts/model/Global} ecModel\n\t * @return {Object} {point: [x, y], el: ...} point Will not be null.\n\t */\n\tfunction _default(finder, ecModel) {\n\t  var point = [];\n\t  var seriesIndex = finder.seriesIndex;\n\t  var seriesModel;\n\t\n\t  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n\t    return {\n\t      point: []\n\t    };\n\t  }\n\t\n\t  var data = seriesModel.getData();\n\t  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\t\n\t  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n\t    return {\n\t      point: []\n\t    };\n\t  }\n\t\n\t  var el = data.getItemGraphicEl(dataIndex);\n\t  var coordSys = seriesModel.coordinateSystem;\n\t\n\t  if (seriesModel.getTooltipPosition) {\n\t    point = seriesModel.getTooltipPosition(dataIndex) || [];\n\t  } else if (coordSys && coordSys.dataToPoint) {\n\t    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n\t      return data.mapDimension(dim);\n\t    }), dataIndex, true)) || [];\n\t  } else if (el) {\n\t    // Use graphic bounding rect\n\t    var rect = el.getBoundingRect().clone();\n\t    rect.applyTransform(el.transform);\n\t    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n\t  }\n\t\n\t  return {\n\t    point: point,\n\t    el: el\n\t  };\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 417:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\tvar inner = makeInner();\n\tvar each = zrUtil.each;\n\t/**\n\t * @param {string} key\n\t * @param {module:echarts/ExtensionAPI} api\n\t * @param {Function} handler\n\t *      param: {string} currTrigger\n\t *      param: {Array.<number>} point\n\t */\n\t\n\tfunction register(key, api, handler) {\n\t  if (env.node) {\n\t    return;\n\t  }\n\t\n\t  var zr = api.getZr();\n\t  inner(zr).records || (inner(zr).records = {});\n\t  initGlobalListeners(zr, api);\n\t  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n\t  record.handler = handler;\n\t}\n\t\n\tfunction initGlobalListeners(zr, api) {\n\t  if (inner(zr).initialized) {\n\t    return;\n\t  }\n\t\n\t  inner(zr).initialized = true;\n\t  useHandler('click', zrUtil.curry(doEnter, 'click'));\n\t  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\t\n\t  useHandler('globalout', onLeave);\n\t\n\t  function useHandler(eventType, cb) {\n\t    zr.on(eventType, function (e) {\n\t      var dis = makeDispatchAction(api);\n\t      each(inner(zr).records, function (record) {\n\t        record && cb(record, e, dis.dispatchAction);\n\t      });\n\t      dispatchTooltipFinally(dis.pendings, api);\n\t    });\n\t  }\n\t}\n\t\n\tfunction dispatchTooltipFinally(pendings, api) {\n\t  var showLen = pendings.showTip.length;\n\t  var hideLen = pendings.hideTip.length;\n\t  var actuallyPayload;\n\t\n\t  if (showLen) {\n\t    actuallyPayload = pendings.showTip[showLen - 1];\n\t  } else if (hideLen) {\n\t    actuallyPayload = pendings.hideTip[hideLen - 1];\n\t  }\n\t\n\t  if (actuallyPayload) {\n\t    actuallyPayload.dispatchAction = null;\n\t    api.dispatchAction(actuallyPayload);\n\t  }\n\t}\n\t\n\tfunction onLeave(record, e, dispatchAction) {\n\t  record.handler('leave', null, dispatchAction);\n\t}\n\t\n\tfunction doEnter(currTrigger, record, e, dispatchAction) {\n\t  record.handler(currTrigger, e, dispatchAction);\n\t}\n\t\n\tfunction makeDispatchAction(api) {\n\t  var pendings = {\n\t    showTip: [],\n\t    hideTip: []\n\t  }; // FIXME\n\t  // better approach?\n\t  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n\t  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n\t  // So we have to add \"final stage\" to merge those dispatched actions.\n\t\n\t  var dispatchAction = function (payload) {\n\t    var pendingList = pendings[payload.type];\n\t\n\t    if (pendingList) {\n\t      pendingList.push(payload);\n\t    } else {\n\t      payload.dispatchAction = dispatchAction;\n\t      api.dispatchAction(payload);\n\t    }\n\t  };\n\t\n\t  return {\n\t    dispatchAction: dispatchAction,\n\t    pendings: pendings\n\t  };\n\t}\n\t/**\n\t * @param {string} key\n\t * @param {module:echarts/ExtensionAPI} api\n\t */\n\t\n\t\n\tfunction unregister(key, api) {\n\t  if (env.node) {\n\t    return;\n\t  }\n\t\n\t  var zr = api.getZr();\n\t  var record = (inner(zr).records || {})[key];\n\t\n\t  if (record) {\n\t    inner(zr).records[key] = null;\n\t  }\n\t}\n\t\n\texports.register = register;\n\texports.unregister = unregister;\n\n/***/ }),\n\n/***/ 190:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar each = zrUtil.each;\n\tvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n\t// allAxesInfo should be updated when setOption performed.\n\t\n\tfunction collect(ecModel, api) {\n\t  var result = {\n\t    /**\n\t     * key: makeKey(axis.model)\n\t     * value: {\n\t     *      axis,\n\t     *      coordSys,\n\t     *      axisPointerModel,\n\t     *      triggerTooltip,\n\t     *      involveSeries,\n\t     *      snap,\n\t     *      seriesModels,\n\t     *      seriesDataCount\n\t     * }\n\t     */\n\t    axesInfo: {},\n\t    seriesInvolved: false,\n\t\n\t    /**\n\t     * key: makeKey(coordSys.model)\n\t     * value: Object: key makeKey(axis.model), value: axisInfo\n\t     */\n\t    coordSysAxesInfo: {},\n\t    coordSysMap: {}\n\t  };\n\t  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\t\n\t  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\t  return result;\n\t}\n\t\n\tfunction collectAxesInfo(result, ecModel, api) {\n\t  var globalTooltipModel = ecModel.getComponent('tooltip');\n\t  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\t\n\t  var linksOption = globalAxisPointerModel.get('link', true) || [];\n\t  var linkGroups = []; // Collect axes info.\n\t\n\t  each(api.getCoordinateSystems(), function (coordSys) {\n\t    // Some coordinate system do not support axes, like geo.\n\t    if (!coordSys.axisPointerEnabled) {\n\t      return;\n\t    }\n\t\n\t    var coordSysKey = makeKey(coordSys.model);\n\t    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n\t    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n\t    // for user. So we enable seting tooltip on coordSys model.\n\t\n\t    var coordSysModel = coordSys.model;\n\t    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\t    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n\t    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\t\n\t    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n\t    // show but axisPointer will show as normal.\n\t    && baseTooltipModel.get('show')) {\n\t      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n\t      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n\t      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n\t      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n\t      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\t\n\t      if (triggerAxis || cross) {\n\t        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n\t      }\n\t\n\t      if (cross) {\n\t        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n\t      }\n\t    } // fromTooltip: true | false | 'cross'\n\t    // triggerTooltip: true | false | null\n\t\n\t\n\t    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n\t      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\t      var axisPointerShow = axisPointerModel.get('show');\n\t\n\t      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n\t        return;\n\t      }\n\t\n\t      if (triggerTooltip == null) {\n\t        triggerTooltip = axisPointerModel.get('triggerTooltip');\n\t      }\n\t\n\t      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n\t      var snap = axisPointerModel.get('snap');\n\t      var key = makeKey(axis.model);\n\t      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\t\n\t      var axisInfo = result.axesInfo[key] = {\n\t        key: key,\n\t        axis: axis,\n\t        coordSys: coordSys,\n\t        axisPointerModel: axisPointerModel,\n\t        triggerTooltip: triggerTooltip,\n\t        involveSeries: involveSeries,\n\t        snap: snap,\n\t        useHandle: isHandleTrigger(axisPointerModel),\n\t        seriesModels: []\n\t      };\n\t      axesInfoInCoordSys[key] = axisInfo;\n\t      result.seriesInvolved |= involveSeries;\n\t      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\t\n\t      if (groupIndex != null) {\n\t        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n\t          axesInfo: {}\n\t        });\n\t        linkGroup.axesInfo[key] = axisInfo;\n\t        linkGroup.mapper = linksOption[groupIndex].mapper;\n\t        axisInfo.linkGroup = linkGroup;\n\t      }\n\t    }\n\t  });\n\t}\n\t\n\tfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n\t  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n\t  var volatileOption = {};\n\t  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n\t    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n\t  }); // category axis do not auto snap, otherwise some tick that do not\n\t  // has value can not be hovered. value/time/log axis default snap if\n\t  // triggered from tooltip and trigger tooltip.\n\t\n\t  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n\t  // Only these properties can be overrided from tooltip to axisPointer.\n\t\n\t  if (tooltipAxisPointerModel.get('type') === 'cross') {\n\t    volatileOption.type = 'line';\n\t  }\n\t\n\t  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\t\n\t  labelOption.show == null && (labelOption.show = false);\n\t\n\t  if (fromTooltip === 'cross') {\n\t    // When 'cross', both axes show labels.\n\t    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n\t    // (cross style is dashed by default)\n\t\n\t    if (!triggerTooltip) {\n\t      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n\t      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n\t    }\n\t  }\n\t\n\t  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n\t}\n\t\n\tfunction collectSeriesInfo(result, ecModel) {\n\t  // Prepare data for axis trigger\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n\t    var coordSys = seriesModel.coordinateSystem;\n\t    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n\t    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\t\n\t    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n\t      return;\n\t    }\n\t\n\t    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n\t      var axis = axisInfo.axis;\n\t\n\t      if (coordSys.getAxis(axis.dim) === axis) {\n\t        axisInfo.seriesModels.push(seriesModel);\n\t        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n\t        axisInfo.seriesDataCount += seriesModel.getData().count();\n\t      }\n\t    });\n\t  }, this);\n\t}\n\t/**\n\t * For example:\n\t * {\n\t *     axisPointer: {\n\t *         links: [{\n\t *             xAxisIndex: [2, 4],\n\t *             yAxisIndex: 'all'\n\t *         }, {\n\t *             xAxisId: ['a5', 'a7'],\n\t *             xAxisName: 'xxx'\n\t *         }]\n\t *     }\n\t * }\n\t */\n\t\n\t\n\tfunction getLinkGroupIndex(linksOption, axis) {\n\t  var axisModel = axis.model;\n\t  var dim = axis.dim;\n\t\n\t  for (var i = 0; i < linksOption.length; i++) {\n\t    var linkOption = linksOption[i] || {};\n\t\n\t    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n\t      return i;\n\t    }\n\t  }\n\t}\n\t\n\tfunction checkPropInLink(linkPropValue, axisPropValue) {\n\t  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n\t}\n\t\n\tfunction fixValue(axisModel) {\n\t  var axisInfo = getAxisInfo(axisModel);\n\t\n\t  if (!axisInfo) {\n\t    return;\n\t  }\n\t\n\t  var axisPointerModel = axisInfo.axisPointerModel;\n\t  var scale = axisInfo.axis.scale;\n\t  var option = axisPointerModel.option;\n\t  var status = axisPointerModel.get('status');\n\t  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\t\n\t  if (value != null) {\n\t    value = scale.parse(value);\n\t  }\n\t\n\t  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n\t  // and status should be initialized.\n\t\n\t  if (status == null) {\n\t    option.status = useHandle ? 'show' : 'hide';\n\t  }\n\t\n\t  var extent = scale.getExtent().slice();\n\t  extent[0] > extent[1] && extent.reverse();\n\t\n\t  if ( // Pick a value on axis when initializing.\n\t  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n\t  // where we should re-pick a value to keep `handle` displaying normally.\n\t  || value > extent[1]) {\n\t    // Make handle displayed on the end of the axis when init, which looks better.\n\t    value = extent[1];\n\t  }\n\t\n\t  if (value < extent[0]) {\n\t    value = extent[0];\n\t  }\n\t\n\t  option.value = value;\n\t\n\t  if (useHandle) {\n\t    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n\t  }\n\t}\n\t\n\tfunction getAxisInfo(axisModel) {\n\t  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n\t  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n\t}\n\t\n\tfunction getAxisPointerModel(axisModel) {\n\t  var axisInfo = getAxisInfo(axisModel);\n\t  return axisInfo && axisInfo.axisPointerModel;\n\t}\n\t\n\tfunction isHandleTrigger(axisPointerModel) {\n\t  return !!axisPointerModel.get('handle.show');\n\t}\n\t/**\n\t * @param {module:echarts/model/Model} model\n\t * @return {string} unique key\n\t */\n\t\n\t\n\tfunction makeKey(model) {\n\t  return model.type + '||' + model.id;\n\t}\n\t\n\texports.collect = collect;\n\texports.fixValue = fixValue;\n\texports.getAxisInfo = getAxisInfo;\n\texports.getAxisPointerModel = getAxisPointerModel;\n\texports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 418:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar textContain = __webpack_require__(113);\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\tvar matrix = __webpack_require__(85);\n\t\n\tvar axisHelper = __webpack_require__(92);\n\t\n\tvar AxisBuilder = __webpack_require__(411);\n\t\n\t/**\n\t * @param {module:echarts/model/Model} axisPointerModel\n\t */\n\tfunction buildElStyle(axisPointerModel) {\n\t  var axisPointerType = axisPointerModel.get('type');\n\t  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n\t  var style;\n\t\n\t  if (axisPointerType === 'line') {\n\t    style = styleModel.getLineStyle();\n\t    style.fill = null;\n\t  } else if (axisPointerType === 'shadow') {\n\t    style = styleModel.getAreaStyle();\n\t    style.stroke = null;\n\t  }\n\t\n\t  return style;\n\t}\n\t/**\n\t * @param {Function} labelPos {align, verticalAlign, position}\n\t */\n\t\n\t\n\tfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n\t  var value = axisPointerModel.get('value');\n\t  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n\t    precision: axisPointerModel.get('label.precision'),\n\t    formatter: axisPointerModel.get('label.formatter')\n\t  });\n\t  var labelModel = axisPointerModel.getModel('label');\n\t  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\t  var font = labelModel.getFont();\n\t  var textRect = textContain.getBoundingRect(text, font);\n\t  var position = labelPos.position;\n\t  var width = textRect.width + paddings[1] + paddings[3];\n\t  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\t\n\t  var align = labelPos.align;\n\t  align === 'right' && (position[0] -= width);\n\t  align === 'center' && (position[0] -= width / 2);\n\t  var verticalAlign = labelPos.verticalAlign;\n\t  verticalAlign === 'bottom' && (position[1] -= height);\n\t  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\t\n\t  confineInContainer(position, width, height, api);\n\t  var bgColor = labelModel.get('backgroundColor');\n\t\n\t  if (!bgColor || bgColor === 'auto') {\n\t    bgColor = axisModel.get('axisLine.lineStyle.color');\n\t  }\n\t\n\t  elOption.label = {\n\t    shape: {\n\t      x: 0,\n\t      y: 0,\n\t      width: width,\n\t      height: height,\n\t      r: labelModel.get('borderRadius')\n\t    },\n\t    position: position.slice(),\n\t    // TODO: rich\n\t    style: {\n\t      text: text,\n\t      textFont: font,\n\t      textFill: labelModel.getTextColor(),\n\t      textPosition: 'inside',\n\t      fill: bgColor,\n\t      stroke: labelModel.get('borderColor') || 'transparent',\n\t      lineWidth: labelModel.get('borderWidth') || 0,\n\t      shadowBlur: labelModel.get('shadowBlur'),\n\t      shadowColor: labelModel.get('shadowColor'),\n\t      shadowOffsetX: labelModel.get('shadowOffsetX'),\n\t      shadowOffsetY: labelModel.get('shadowOffsetY')\n\t    },\n\t    // Lable should be over axisPointer.\n\t    z2: 10\n\t  };\n\t} // Do not overflow ec container\n\t\n\t\n\tfunction confineInContainer(position, width, height, api) {\n\t  var viewWidth = api.getWidth();\n\t  var viewHeight = api.getHeight();\n\t  position[0] = Math.min(position[0] + width, viewWidth) - width;\n\t  position[1] = Math.min(position[1] + height, viewHeight) - height;\n\t  position[0] = Math.max(position[0], 0);\n\t  position[1] = Math.max(position[1], 0);\n\t}\n\t/**\n\t * @param {number} value\n\t * @param {module:echarts/coord/Axis} axis\n\t * @param {module:echarts/model/Global} ecModel\n\t * @param {Object} opt\n\t * @param {Array.<Object>} seriesDataIndices\n\t * @param {number|string} opt.precision 'auto' or a number\n\t * @param {string|Function} opt.formatter label formatter\n\t */\n\t\n\t\n\tfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n\t  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n\t  // helps to debounce when when moving label.\n\t  value, {\n\t    precision: opt.precision\n\t  });\n\t  var formatter = opt.formatter;\n\t\n\t  if (formatter) {\n\t    var params = {\n\t      value: axisHelper.getAxisRawValue(axis, value),\n\t      seriesData: []\n\t    };\n\t    zrUtil.each(seriesDataIndices, function (idxItem) {\n\t      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n\t      var dataIndex = idxItem.dataIndexInside;\n\t      var dataParams = series && series.getDataParams(dataIndex);\n\t      dataParams && params.seriesData.push(dataParams);\n\t    });\n\t\n\t    if (zrUtil.isString(formatter)) {\n\t      text = formatter.replace('{value}', text);\n\t    } else if (zrUtil.isFunction(formatter)) {\n\t      text = formatter(params);\n\t    }\n\t  }\n\t\n\t  return text;\n\t}\n\t/**\n\t * @param {module:echarts/coord/Axis} axis\n\t * @param {number} value\n\t * @param {Object} layoutInfo {\n\t *  rotation, position, labelOffset, labelDirection, labelMargin\n\t * }\n\t */\n\t\n\t\n\tfunction getTransformedPosition(axis, value, layoutInfo) {\n\t  var transform = matrix.create();\n\t  matrix.rotate(transform, transform, layoutInfo.rotation);\n\t  matrix.translate(transform, transform, layoutInfo.position);\n\t  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n\t}\n\t\n\tfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n\t  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n\t  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n\t  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n\t    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n\t    align: textLayout.textAlign,\n\t    verticalAlign: textLayout.textVerticalAlign\n\t  });\n\t}\n\t/**\n\t * @param {Array.<number>} p1\n\t * @param {Array.<number>} p2\n\t * @param {number} [xDimIndex=0] or 1\n\t */\n\t\n\t\n\tfunction makeLineShape(p1, p2, xDimIndex) {\n\t  xDimIndex = xDimIndex || 0;\n\t  return {\n\t    x1: p1[xDimIndex],\n\t    y1: p1[1 - xDimIndex],\n\t    x2: p2[xDimIndex],\n\t    y2: p2[1 - xDimIndex]\n\t  };\n\t}\n\t/**\n\t * @param {Array.<number>} xy\n\t * @param {Array.<number>} wh\n\t * @param {number} [xDimIndex=0] or 1\n\t */\n\t\n\t\n\tfunction makeRectShape(xy, wh, xDimIndex) {\n\t  xDimIndex = xDimIndex || 0;\n\t  return {\n\t    x: xy[xDimIndex],\n\t    y: xy[1 - xDimIndex],\n\t    width: wh[xDimIndex],\n\t    height: wh[1 - xDimIndex]\n\t  };\n\t}\n\t\n\tfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n\t  return {\n\t    cx: cx,\n\t    cy: cy,\n\t    r0: r0,\n\t    r: r,\n\t    startAngle: startAngle,\n\t    endAngle: endAngle,\n\t    clockwise: true\n\t  };\n\t}\n\t\n\texports.buildElStyle = buildElStyle;\n\texports.buildLabelElOption = buildLabelElOption;\n\texports.getValueLabel = getValueLabel;\n\texports.getTransformedPosition = getTransformedPosition;\n\texports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\n\texports.makeLineShape = makeLineShape;\n\texports.makeRectShape = makeRectShape;\n\texports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 781:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(782);\n\t\n\t__webpack_require__(415);\n\t\n\t__webpack_require__(414);\n\n/***/ }),\n\n/***/ 782:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\t__webpack_require__(797);\n\t\n\t__webpack_require__(775);\n\t\n\t// Grid view\n\techarts.extendComponentView({\n\t  type: 'grid',\n\t  render: function (gridModel, ecModel) {\n\t    this.group.removeAll();\n\t\n\t    if (gridModel.get('show')) {\n\t      this.group.add(new graphic.Rect({\n\t        shape: gridModel.coordinateSystem.getRect(),\n\t        style: zrUtil.defaults({\n\t          fill: gridModel.get('backgroundColor')\n\t        }, gridModel.getItemStyle()),\n\t        silent: true,\n\t        z2: -1\n\t      }));\n\t    }\n\t  }\n\t});\n\techarts.registerPreprocessor(function (option) {\n\t  // Only create grid when need\n\t  if (option.xAxis && option.yAxis && !option.grid) {\n\t    option.grid = {};\n\t  }\n\t});\n\n/***/ }),\n\n/***/ 783:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Eventful = __webpack_require__(115);\n\t\n\tvar eventTool = __webpack_require__(114);\n\t\n\tvar interactionMutex = __webpack_require__(785);\n\t\n\t/**\n\t * @alias module:echarts/component/helper/RoamController\n\t * @constructor\n\t * @mixin {module:zrender/mixin/Eventful}\n\t *\n\t * @param {module:zrender/zrender~ZRender} zr\n\t */\n\tfunction RoamController(zr) {\n\t  /**\n\t   * @type {Function}\n\t   */\n\t  this.pointerChecker;\n\t  /**\n\t   * @type {module:zrender}\n\t   */\n\t\n\t  this._zr = zr;\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t  this._opt = {}; // Avoid two roamController bind the same handler\n\t\n\t  var bind = zrUtil.bind;\n\t  var mousedownHandler = bind(mousedown, this);\n\t  var mousemoveHandler = bind(mousemove, this);\n\t  var mouseupHandler = bind(mouseup, this);\n\t  var mousewheelHandler = bind(mousewheel, this);\n\t  var pinchHandler = bind(pinch, this);\n\t  Eventful.call(this);\n\t  /**\n\t   * @param {Function} pointerChecker\n\t   *                   input: x, y\n\t   *                   output: boolean\n\t   */\n\t\n\t  this.setPointerChecker = function (pointerChecker) {\n\t    this.pointerChecker = pointerChecker;\n\t  };\n\t  /**\n\t   * Notice: only enable needed types. For example, if 'zoom'\n\t   * is not needed, 'zoom' should not be enabled, otherwise\n\t   * default mousewheel behaviour (scroll page) will be disabled.\n\t   *\n\t   * @param  {boolean|string} [controlType=true] Specify the control type,\n\t   *                          which can be null/undefined or true/false\n\t   *                          or 'pan/move' or 'zoom'/'scale'\n\t   * @param {Object} [opt]\n\t   * @param {Object} [opt.zoomOnMouseWheel=true]\n\t   * @param {Object} [opt.moveOnMouseMove=true]\n\t   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n\t   */\n\t\n\t\n\t  this.enable = function (controlType, opt) {\n\t    // Disable previous first\n\t    this.disable();\n\t    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n\t      zoomOnMouseWheel: true,\n\t      moveOnMouseMove: true,\n\t      preventDefaultMouseMove: true\n\t    });\n\t\n\t    if (controlType == null) {\n\t      controlType = true;\n\t    }\n\t\n\t    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n\t      zr.on('mousedown', mousedownHandler);\n\t      zr.on('mousemove', mousemoveHandler);\n\t      zr.on('mouseup', mouseupHandler);\n\t    }\n\t\n\t    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n\t      zr.on('mousewheel', mousewheelHandler);\n\t      zr.on('pinch', pinchHandler);\n\t    }\n\t  };\n\t\n\t  this.disable = function () {\n\t    zr.off('mousedown', mousedownHandler);\n\t    zr.off('mousemove', mousemoveHandler);\n\t    zr.off('mouseup', mouseupHandler);\n\t    zr.off('mousewheel', mousewheelHandler);\n\t    zr.off('pinch', pinchHandler);\n\t  };\n\t\n\t  this.dispose = this.disable;\n\t\n\t  this.isDragging = function () {\n\t    return this._dragging;\n\t  };\n\t\n\t  this.isPinching = function () {\n\t    return this._pinching;\n\t  };\n\t}\n\t\n\tzrUtil.mixin(RoamController, Eventful);\n\t\n\tfunction mousedown(e) {\n\t  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n\t    return;\n\t  }\n\t\n\t  var x = e.offsetX;\n\t  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n\t  // Mouse can be out of target when mouse moving.\n\t\n\t  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n\t    this._x = x;\n\t    this._y = y;\n\t    this._dragging = true;\n\t  }\n\t}\n\t\n\tfunction mousemove(e) {\n\t  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n\t    return;\n\t  }\n\t\n\t  var x = e.offsetX;\n\t  var y = e.offsetY;\n\t  var oldX = this._x;\n\t  var oldY = this._y;\n\t  var dx = x - oldX;\n\t  var dy = y - oldY;\n\t  this._x = x;\n\t  this._y = y;\n\t  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n\t  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n\t}\n\t\n\tfunction mouseup(e) {\n\t  if (!eventTool.notLeftMouse(e)) {\n\t    this._dragging = false;\n\t  }\n\t}\n\t\n\tfunction mousewheel(e) {\n\t  // wheelDelta maybe -0 in chrome mac.\n\t  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n\t    return;\n\t  } // Convenience:\n\t  // Mac and VM Windows on Mac: scroll up: zoom out.\n\t  // Windows: scroll up: zoom in.\n\t\n\t\n\t  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n\t  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n\t}\n\t\n\tfunction pinch(e) {\n\t  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n\t    return;\n\t  }\n\t\n\t  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n\t  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n\t}\n\t\n\tfunction zoom(e, zoomDelta, zoomX, zoomY) {\n\t  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n\t    // When mouse is out of roamController rect,\n\t    // default befavoius should not be be disabled, otherwise\n\t    // page sliding is disabled, contrary to expectation.\n\t    eventTool.stop(e.event);\n\t    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n\t  }\n\t}\n\t\n\tfunction checkKeyBinding(roamController, prop, e) {\n\t  var setting = roamController._opt[prop];\n\t  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n\t}\n\t\n\tvar _default = RoamController;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 784:\n/***/ (function(module, exports) {\n\n\tvar IRRELEVANT_EXCLUDES = {\n\t  'axisPointer': 1,\n\t  'tooltip': 1,\n\t  'brush': 1\n\t};\n\t/**\n\t * Avoid that: mouse click on a elements that is over geo or graph,\n\t * but roam is triggered.\n\t */\n\t\n\tfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n\t  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\t\n\t  var coordSys = model && model.coordinateSystem;\n\t  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n\t}\n\t\n\texports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ 785:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar ATTR = '\\0_ec_interaction_mutex';\n\t\n\tfunction take(zr, resourceKey, userKey) {\n\t  var store = getStore(zr);\n\t  store[resourceKey] = userKey;\n\t}\n\t\n\tfunction release(zr, resourceKey, userKey) {\n\t  var store = getStore(zr);\n\t  var uKey = store[resourceKey];\n\t\n\t  if (uKey === userKey) {\n\t    store[resourceKey] = null;\n\t  }\n\t}\n\t\n\tfunction isTaken(zr, resourceKey) {\n\t  return !!getStore(zr)[resourceKey];\n\t}\n\t\n\tfunction getStore(zr) {\n\t  return zr[ATTR] || (zr[ATTR] = {});\n\t}\n\t/**\n\t * payload: {\n\t *     type: 'takeGlobalCursor',\n\t *     key: 'dataZoomSelect', or 'brush', or ...,\n\t *         If no userKey, release global cursor.\n\t * }\n\t */\n\t\n\t\n\techarts.registerAction({\n\t  type: 'takeGlobalCursor',\n\t  event: 'globalCursorTaken',\n\t  update: 'update'\n\t}, function () {});\n\texports.take = take;\n\texports.release = release;\n\texports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ 786:\n/***/ (function(module, exports) {\n\n\t/**\n\t * For geo and graph.\n\t *\n\t * @param {Object} controllerHost\n\t * @param {module:zrender/Element} controllerHost.target\n\t */\n\tfunction updateViewOnPan(controllerHost, dx, dy) {\n\t  var target = controllerHost.target;\n\t  var pos = target.position;\n\t  pos[0] += dx;\n\t  pos[1] += dy;\n\t  target.dirty();\n\t}\n\t/**\n\t * For geo and graph.\n\t *\n\t * @param {Object} controllerHost\n\t * @param {module:zrender/Element} controllerHost.target\n\t * @param {number} controllerHost.zoom\n\t * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n\t */\n\t\n\t\n\tfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n\t  var target = controllerHost.target;\n\t  var zoomLimit = controllerHost.zoomLimit;\n\t  var pos = target.position;\n\t  var scale = target.scale;\n\t  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n\t  newZoom *= zoomDelta;\n\t\n\t  if (zoomLimit) {\n\t    var zoomMin = zoomLimit.min || 0;\n\t    var zoomMax = zoomLimit.max || Infinity;\n\t    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n\t  }\n\t\n\t  var zoomScale = newZoom / controllerHost.zoom;\n\t  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\t\n\t  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n\t  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n\t  scale[0] *= zoomScale;\n\t  scale[1] *= zoomScale;\n\t  target.dirty();\n\t}\n\t\n\texports.updateViewOnPan = updateViewOnPan;\n\texports.updateViewOnZoom = updateViewOnZoom;\n\n/***/ }),\n\n/***/ 787:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\t__webpack_require__(414);\n\t\n\t__webpack_require__(789);\n\t\n\t__webpack_require__(790);\n\t\n\t// FIXME Better way to pack data in graphic element\n\t\n\t/**\n\t * @action\n\t * @property {string} type\n\t * @property {number} seriesIndex\n\t * @property {number} dataIndex\n\t * @property {number} [x]\n\t * @property {number} [y]\n\t */\n\techarts.registerAction({\n\t  type: 'showTip',\n\t  event: 'showTip',\n\t  update: 'tooltip:manuallyShowTip'\n\t}, // noop\n\tfunction () {});\n\techarts.registerAction({\n\t  type: 'hideTip',\n\t  event: 'hideTip',\n\t  update: 'tooltip:manuallyHideTip'\n\t}, // noop\n\tfunction () {});\n\n/***/ }),\n\n/***/ 788:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar zrColor = __webpack_require__(165);\n\t\n\tvar eventUtil = __webpack_require__(114);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\tvar each = zrUtil.each;\n\tvar toCamelCase = formatUtil.toCamelCase;\n\tvar vendors = ['', '-webkit-', '-moz-', '-o-'];\n\tvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\t/**\n\t * @param {number} duration\n\t * @return {string}\n\t * @inner\n\t */\n\t\n\tfunction assembleTransition(duration) {\n\t  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n\t  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n\t  return zrUtil.map(vendors, function (vendorPrefix) {\n\t    return vendorPrefix + 'transition:' + transitionText;\n\t  }).join(';');\n\t}\n\t/**\n\t * @param {Object} textStyle\n\t * @return {string}\n\t * @inner\n\t */\n\t\n\t\n\tfunction assembleFont(textStyleModel) {\n\t  var cssText = [];\n\t  var fontSize = textStyleModel.get('fontSize');\n\t  var color = textStyleModel.getTextColor();\n\t  color && cssText.push('color:' + color);\n\t  cssText.push('font:' + textStyleModel.getFont());\n\t  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\t  each(['decoration', 'align'], function (name) {\n\t    var val = textStyleModel.get(name);\n\t    val && cssText.push('text-' + name + ':' + val);\n\t  });\n\t  return cssText.join(';');\n\t}\n\t/**\n\t * @param {Object} tooltipModel\n\t * @return {string}\n\t * @inner\n\t */\n\t\n\t\n\tfunction assembleCssText(tooltipModel) {\n\t  var cssText = [];\n\t  var transitionDuration = tooltipModel.get('transitionDuration');\n\t  var backgroundColor = tooltipModel.get('backgroundColor');\n\t  var textStyleModel = tooltipModel.getModel('textStyle');\n\t  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\t\n\t  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\t\n\t  if (backgroundColor) {\n\t    if (env.canvasSupported) {\n\t      cssText.push('background-Color:' + backgroundColor);\n\t    } else {\n\t      // for ie\n\t      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n\t      cssText.push('filter:alpha(opacity=70)');\n\t    }\n\t  } // Border style\n\t\n\t\n\t  each(['width', 'color', 'radius'], function (name) {\n\t    var borderName = 'border-' + name;\n\t    var camelCase = toCamelCase(borderName);\n\t    var val = tooltipModel.get(camelCase);\n\t    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n\t  }); // Text style\n\t\n\t  cssText.push(assembleFont(textStyleModel)); // Padding\n\t\n\t  if (padding != null) {\n\t    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n\t  }\n\t\n\t  return cssText.join(';') + ';';\n\t}\n\t/**\n\t * @alias module:echarts/component/tooltip/TooltipContent\n\t * @constructor\n\t */\n\t\n\t\n\tfunction TooltipContent(container, api) {\n\t  if (env.wxa) {\n\t    return null;\n\t  }\n\t\n\t  var el = document.createElement('div');\n\t  var zr = this._zr = api.getZr();\n\t  this.el = el;\n\t  this._x = api.getWidth() / 2;\n\t  this._y = api.getHeight() / 2;\n\t  container.appendChild(el);\n\t  this._container = container;\n\t  this._show = false;\n\t  /**\n\t   * @private\n\t   */\n\t\n\t  this._hideTimeout;\n\t  var self = this;\n\t\n\t  el.onmouseenter = function () {\n\t    // clear the timeout in hideLater and keep showing tooltip\n\t    if (self._enterable) {\n\t      clearTimeout(self._hideTimeout);\n\t      self._show = true;\n\t    }\n\t\n\t    self._inContent = true;\n\t  };\n\t\n\t  el.onmousemove = function (e) {\n\t    e = e || window.event;\n\t\n\t    if (!self._enterable) {\n\t      // Try trigger zrender event to avoid mouse\n\t      // in and out shape too frequently\n\t      var handler = zr.handler;\n\t      eventUtil.normalizeEvent(container, e, true);\n\t      handler.dispatch('mousemove', e);\n\t    }\n\t  };\n\t\n\t  el.onmouseleave = function () {\n\t    if (self._enterable) {\n\t      if (self._show) {\n\t        self.hideLater(self._hideDelay);\n\t      }\n\t    }\n\t\n\t    self._inContent = false;\n\t  };\n\t}\n\t\n\tTooltipContent.prototype = {\n\t  constructor: TooltipContent,\n\t\n\t  /**\n\t   * @private\n\t   * @type {boolean}\n\t   */\n\t  _enterable: true,\n\t\n\t  /**\n\t   * Update when tooltip is rendered\n\t   */\n\t  update: function () {\n\t    // FIXME\n\t    // Move this logic to ec main?\n\t    var container = this._container;\n\t    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n\t    var domStyle = container.style;\n\t\n\t    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n\t      domStyle.position = 'relative';\n\t    } // Hide the tooltip\n\t    // PENDING\n\t    // this.hide();\n\t\n\t  },\n\t  show: function (tooltipModel) {\n\t    clearTimeout(this._hideTimeout);\n\t    var el = this.el;\n\t    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n\t    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n\t    el.style.display = el.innerHTML ? 'block' : 'none';\n\t    this._show = true;\n\t  },\n\t  setContent: function (content) {\n\t    this.el.innerHTML = content == null ? '' : content;\n\t  },\n\t  setEnterable: function (enterable) {\n\t    this._enterable = enterable;\n\t  },\n\t  getSize: function () {\n\t    var el = this.el;\n\t    return [el.clientWidth, el.clientHeight];\n\t  },\n\t  moveTo: function (x, y) {\n\t    // xy should be based on canvas root. But tooltipContent is\n\t    // the sibling of canvas root. So padding of ec container\n\t    // should be considered here.\n\t    var zr = this._zr;\n\t    var viewportRootOffset;\n\t\n\t    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n\t      x += viewportRootOffset.offsetLeft;\n\t      y += viewportRootOffset.offsetTop;\n\t    }\n\t\n\t    var style = this.el.style;\n\t    style.left = x + 'px';\n\t    style.top = y + 'px';\n\t    this._x = x;\n\t    this._y = y;\n\t  },\n\t  hide: function () {\n\t    this.el.style.display = 'none';\n\t    this._show = false;\n\t  },\n\t  hideLater: function (time) {\n\t    if (this._show && !(this._inContent && this._enterable)) {\n\t      if (time) {\n\t        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\t\n\t        this._show = false;\n\t        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n\t      } else {\n\t        this.hide();\n\t      }\n\t    }\n\t  },\n\t  isShow: function () {\n\t    return this._show;\n\t  }\n\t};\n\tvar _default = TooltipContent;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 789:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar _default = echarts.extendComponentModel({\n\t  type: 'tooltip',\n\t  dependencies: ['axisPointer'],\n\t  defaultOption: {\n\t    zlevel: 0,\n\t    z: 8,\n\t    show: true,\n\t    // tooltip主体内容\n\t    showContent: true,\n\t    // 'trigger' only works on coordinate system.\n\t    // 'item' | 'axis' | 'none'\n\t    trigger: 'item',\n\t    // 'click' | 'mousemove' | 'none'\n\t    triggerOn: 'mousemove|click',\n\t    alwaysShowContent: false,\n\t    displayMode: 'single',\n\t    // 'single' | 'multipleByCoordSys'\n\t    // 位置 {Array} | {Function}\n\t    // position: null\n\t    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n\t    // align: null,\n\t    // verticalAlign: null,\n\t    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n\t    confine: false,\n\t    // 内容格式器：{string}（Template） ¦ {Function}\n\t    // formatter: null\n\t    showDelay: 0,\n\t    // 隐藏延迟，单位ms\n\t    hideDelay: 100,\n\t    // 动画变换时间，单位s\n\t    transitionDuration: 0.4,\n\t    enterable: false,\n\t    // 提示背景颜色，默认为透明度为0.7的黑色\n\t    backgroundColor: 'rgba(50,50,50,0.7)',\n\t    // 提示边框颜色\n\t    borderColor: '#333',\n\t    // 提示边框圆角，单位px，默认为4\n\t    borderRadius: 4,\n\t    // 提示边框线宽，单位px，默认为0（无边框）\n\t    borderWidth: 0,\n\t    // 提示内边距，单位px，默认各方向内边距为5，\n\t    // 接受数组分别设定上右下左边距，同css\n\t    padding: 5,\n\t    // Extra css text\n\t    extraCssText: '',\n\t    // 坐标轴指示器，坐标轴触发有效\n\t    axisPointer: {\n\t      // 默认为直线\n\t      // 可选为：'line' | 'shadow' | 'cross'\n\t      type: 'line',\n\t      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n\t      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n\t      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n\t      // 极坐标系会默认选择 angle 轴\n\t      axis: 'auto',\n\t      animation: 'auto',\n\t      animationDurationUpdate: 200,\n\t      animationEasingUpdate: 'exponentialOut',\n\t      crossStyle: {\n\t        color: '#999',\n\t        width: 1,\n\t        type: 'dashed',\n\t        // TODO formatter\n\t        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n\t        // otherwise it will always override those styles on option.axisPointer.\n\t\n\t      }\n\t    },\n\t    textStyle: {\n\t      color: '#fff',\n\t      fontSize: 14\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 790:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar echarts = __webpack_require__(27);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar TooltipContent = __webpack_require__(788);\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar findPointFromSeries = __webpack_require__(416);\n\t\n\tvar layoutUtil = __webpack_require__(76);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar globalListener = __webpack_require__(417);\n\t\n\tvar axisHelper = __webpack_require__(92);\n\t\n\tvar axisPointerViewHelper = __webpack_require__(418);\n\t\n\tvar bind = zrUtil.bind;\n\tvar each = zrUtil.each;\n\tvar parsePercent = numberUtil.parsePercent;\n\tvar proxyRect = new graphic.Rect({\n\t  shape: {\n\t    x: -1,\n\t    y: -1,\n\t    width: 2,\n\t    height: 2\n\t  }\n\t});\n\t\n\tvar _default = echarts.extendComponentView({\n\t  type: 'tooltip',\n\t  init: function (ecModel, api) {\n\t    if (env.node) {\n\t      return;\n\t    }\n\t\n\t    var tooltipContent = new TooltipContent(api.getDom(), api);\n\t    this._tooltipContent = tooltipContent;\n\t  },\n\t  render: function (tooltipModel, ecModel, api) {\n\t    if (env.node || env.wxa) {\n\t      return;\n\t    } // Reset\n\t\n\t\n\t    this.group.removeAll();\n\t    /**\n\t     * @private\n\t     * @type {module:echarts/component/tooltip/TooltipModel}\n\t     */\n\t\n\t    this._tooltipModel = tooltipModel;\n\t    /**\n\t     * @private\n\t     * @type {module:echarts/model/Global}\n\t     */\n\t\n\t    this._ecModel = ecModel;\n\t    /**\n\t     * @private\n\t     * @type {module:echarts/ExtensionAPI}\n\t     */\n\t\n\t    this._api = api;\n\t    /**\n\t     * Should be cleaned when render.\n\t     * @private\n\t     * @type {Array.<Array.<Object>>}\n\t     */\n\t\n\t    this._lastDataByCoordSys = null;\n\t    /**\n\t     * @private\n\t     * @type {boolean}\n\t     */\n\t\n\t    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\t    var tooltipContent = this._tooltipContent;\n\t    tooltipContent.update();\n\t    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\t\n\t    this._initGlobalListener();\n\t\n\t    this._keepShow();\n\t  },\n\t  _initGlobalListener: function () {\n\t    var tooltipModel = this._tooltipModel;\n\t    var triggerOn = tooltipModel.get('triggerOn');\n\t    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n\t      // If 'none', it is not controlled by mouse totally.\n\t      if (triggerOn !== 'none') {\n\t        if (triggerOn.indexOf(currTrigger) >= 0) {\n\t          this._tryShow(e, dispatchAction);\n\t        } else if (currTrigger === 'leave') {\n\t          this._hide(dispatchAction);\n\t        }\n\t      }\n\t    }, this));\n\t  },\n\t  _keepShow: function () {\n\t    var tooltipModel = this._tooltipModel;\n\t    var ecModel = this._ecModel;\n\t    var api = this._api; // Try to keep the tooltip show when refreshing\n\t\n\t    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n\t    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n\t    // which is not expected.\n\t    && tooltipModel.get('triggerOn') !== 'none') {\n\t      var self = this;\n\t      clearTimeout(this._refreshUpdateTimeout);\n\t      this._refreshUpdateTimeout = setTimeout(function () {\n\t        // Show tip next tick after other charts are rendered\n\t        // In case highlight action has wrong result\n\t        // FIXME\n\t        self.manuallyShowTip(tooltipModel, ecModel, api, {\n\t          x: self._lastX,\n\t          y: self._lastY\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Show tip manually by\n\t   * dispatchAction({\n\t   *     type: 'showTip',\n\t   *     x: 10,\n\t   *     y: 10\n\t   * });\n\t   * Or\n\t   * dispatchAction({\n\t   *      type: 'showTip',\n\t   *      seriesIndex: 0,\n\t   *      dataIndex or dataIndexInside or name\n\t   * });\n\t   *\n\t   *  TODO Batch\n\t   */\n\t  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n\t    if (payload.from === this.uid || env.node) {\n\t      return;\n\t    }\n\t\n\t    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\t\n\t    this._ticket = ''; // When triggered from axisPointer.\n\t\n\t    var dataByCoordSys = payload.dataByCoordSys;\n\t\n\t    if (payload.tooltip && payload.x != null && payload.y != null) {\n\t      var el = proxyRect;\n\t      el.position = [payload.x, payload.y];\n\t      el.update();\n\t      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\t\n\t      this._tryShow({\n\t        offsetX: payload.x,\n\t        offsetY: payload.y,\n\t        target: el\n\t      }, dispatchAction);\n\t    } else if (dataByCoordSys) {\n\t      this._tryShow({\n\t        offsetX: payload.x,\n\t        offsetY: payload.y,\n\t        position: payload.position,\n\t        event: {},\n\t        dataByCoordSys: payload.dataByCoordSys,\n\t        tooltipOption: payload.tooltipOption\n\t      }, dispatchAction);\n\t    } else if (payload.seriesIndex != null) {\n\t      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n\t        return;\n\t      }\n\t\n\t      var pointInfo = findPointFromSeries(payload, ecModel);\n\t      var cx = pointInfo.point[0];\n\t      var cy = pointInfo.point[1];\n\t\n\t      if (cx != null && cy != null) {\n\t        this._tryShow({\n\t          offsetX: cx,\n\t          offsetY: cy,\n\t          position: payload.position,\n\t          target: pointInfo.el,\n\t          event: {}\n\t        }, dispatchAction);\n\t      }\n\t    } else if (payload.x != null && payload.y != null) {\n\t      // FIXME\n\t      // should wrap dispatchAction like `axisPointer/globalListener` ?\n\t      api.dispatchAction({\n\t        type: 'updateAxisPointer',\n\t        x: payload.x,\n\t        y: payload.y\n\t      });\n\t\n\t      this._tryShow({\n\t        offsetX: payload.x,\n\t        offsetY: payload.y,\n\t        position: payload.position,\n\t        target: api.getZr().findHover(payload.x, payload.y).target,\n\t        event: {}\n\t      }, dispatchAction);\n\t    }\n\t  },\n\t  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n\t    var tooltipContent = this._tooltipContent;\n\t\n\t    if (!this._alwaysShowContent && this._tooltipModel) {\n\t      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n\t    }\n\t\n\t    this._lastX = this._lastY = null;\n\t\n\t    if (payload.from !== this.uid) {\n\t      this._hide(makeDispatchAction(payload, api));\n\t    }\n\t  },\n\t  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n\t  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n\t  // and tooltip.\n\t  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n\t    var seriesIndex = payload.seriesIndex;\n\t    var dataIndex = payload.dataIndex;\n\t    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\t\n\t    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n\t      return;\n\t    }\n\t\n\t    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\t\n\t    if (!seriesModel) {\n\t      return;\n\t    }\n\t\n\t    var data = seriesModel.getData();\n\t    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\t\n\t    if (tooltipModel.get('trigger') !== 'axis') {\n\t      return;\n\t    }\n\t\n\t    api.dispatchAction({\n\t      type: 'updateAxisPointer',\n\t      seriesIndex: seriesIndex,\n\t      dataIndex: dataIndex,\n\t      position: payload.position\n\t    });\n\t    return true;\n\t  },\n\t  _tryShow: function (e, dispatchAction) {\n\t    var el = e.target;\n\t    var tooltipModel = this._tooltipModel;\n\t\n\t    if (!tooltipModel) {\n\t      return;\n\t    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\t\n\t\n\t    this._lastX = e.offsetX;\n\t    this._lastY = e.offsetY;\n\t    var dataByCoordSys = e.dataByCoordSys;\n\t\n\t    if (dataByCoordSys && dataByCoordSys.length) {\n\t      this._showAxisTooltip(dataByCoordSys, e);\n\t    } // Always show item tooltip if mouse is on the element with dataIndex\n\t    else if (el && el.dataIndex != null) {\n\t        this._lastDataByCoordSys = null;\n\t\n\t        this._showSeriesItemTooltip(e, el, dispatchAction);\n\t      } // Tooltip provided directly. Like legend.\n\t      else if (el && el.tooltip) {\n\t          this._lastDataByCoordSys = null;\n\t\n\t          this._showComponentItemTooltip(e, el, dispatchAction);\n\t        } else {\n\t          this._lastDataByCoordSys = null;\n\t\n\t          this._hide(dispatchAction);\n\t        }\n\t  },\n\t  _showOrMove: function (tooltipModel, cb) {\n\t    // showDelay is used in this case: tooltip.enterable is set\n\t    // as true. User intent to move mouse into tooltip and click\n\t    // something. `showDelay` makes it easyer to enter the content\n\t    // but tooltip do not move immediately.\n\t    var delay = tooltipModel.get('showDelay');\n\t    cb = zrUtil.bind(cb, this);\n\t    clearTimeout(this._showTimout);\n\t    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n\t  },\n\t  _showAxisTooltip: function (dataByCoordSys, e) {\n\t    var ecModel = this._ecModel;\n\t    var globalTooltipModel = this._tooltipModel;\n\t    var point = [e.offsetX, e.offsetY];\n\t    var singleDefaultHTML = [];\n\t    var singleParamsList = [];\n\t    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n\t    each(dataByCoordSys, function (itemCoordSys) {\n\t      // var coordParamList = [];\n\t      // var coordDefaultHTML = [];\n\t      // var coordTooltipModel = buildTooltipModel([\n\t      //     e.tooltipOption,\n\t      //     itemCoordSys.tooltipOption,\n\t      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n\t      //     globalTooltipModel\n\t      // ]);\n\t      // var displayMode = coordTooltipModel.get('displayMode');\n\t      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\t      each(itemCoordSys.dataByAxis, function (item) {\n\t        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n\t        var axisValue = item.value;\n\t        var seriesDefaultHTML = [];\n\t\n\t        if (!axisModel || axisValue == null) {\n\t          return;\n\t        }\n\t\n\t        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n\t        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n\t          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n\t          var dataIndex = idxItem.dataIndexInside;\n\t          var dataParams = series && series.getDataParams(dataIndex);\n\t          dataParams.axisDim = item.axisDim;\n\t          dataParams.axisIndex = item.axisIndex;\n\t          dataParams.axisType = item.axisType;\n\t          dataParams.axisId = item.axisId;\n\t          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n\t          dataParams.axisValueLabel = valueLabel;\n\t\n\t          if (dataParams) {\n\t            singleParamsList.push(dataParams);\n\t            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n\t          }\n\t        }); // Default tooltip content\n\t        // FIXME\n\t        // (1) shold be the first data which has name?\n\t        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\t\n\t        var firstLine = valueLabel;\n\t        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n\t      });\n\t    }, this); // In most case, the second axis is shown upper than the first one.\n\t\n\t    singleDefaultHTML.reverse();\n\t    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\t    var positionExpr = e.position;\n\t\n\t    this._showOrMove(singleTooltipModel, function () {\n\t      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n\t        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n\t      } else {\n\t        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n\t      }\n\t    }); // Do not trigger events here, because this branch only be entered\n\t    // from dispatchAction.\n\t\n\t  },\n\t  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n\t    var ecModel = this._ecModel; // Use dataModel in element if possible\n\t    // Used when mouseover on a element like markPoint or edge\n\t    // In which case, the data is not main data in series.\n\t\n\t    var seriesIndex = el.seriesIndex;\n\t    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\t\n\t    var dataModel = el.dataModel || seriesModel;\n\t    var dataIndex = el.dataIndex;\n\t    var dataType = el.dataType;\n\t    var data = dataModel.getData();\n\t    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n\t    var tooltipTrigger = tooltipModel.get('trigger');\n\t\n\t    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n\t      return;\n\t    }\n\t\n\t    var params = dataModel.getDataParams(dataIndex, dataType);\n\t    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n\t    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\t\n\t    this._showOrMove(tooltipModel, function () {\n\t      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n\t    }); // FIXME\n\t    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\t\n\t\n\t    dispatchAction({\n\t      type: 'showTip',\n\t      dataIndexInside: dataIndex,\n\t      dataIndex: data.getRawIndex(dataIndex),\n\t      seriesIndex: seriesIndex,\n\t      from: this.uid\n\t    });\n\t  },\n\t  _showComponentItemTooltip: function (e, el, dispatchAction) {\n\t    var tooltipOpt = el.tooltip;\n\t\n\t    if (typeof tooltipOpt === 'string') {\n\t      var content = tooltipOpt;\n\t      tooltipOpt = {\n\t        content: content,\n\t        // Fixed formatter\n\t        formatter: content\n\t      };\n\t    }\n\t\n\t    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n\t    var defaultHtml = subTooltipModel.get('content');\n\t    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n\t    // only works on cooridinate system. In fact, we have not found case\n\t    // that requires setting `trigger` nothing on component yet.\n\t\n\t    this._showOrMove(subTooltipModel, function () {\n\t      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n\t    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\t\n\t\n\t    dispatchAction({\n\t      type: 'showTip',\n\t      from: this.uid\n\t    });\n\t  },\n\t  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n\t    // Reset ticket\n\t    this._ticket = '';\n\t\n\t    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n\t      return;\n\t    }\n\t\n\t    var tooltipContent = this._tooltipContent;\n\t    var formatter = tooltipModel.get('formatter');\n\t    positionExpr = positionExpr || tooltipModel.get('position');\n\t    var html = defaultHtml;\n\t\n\t    if (formatter && typeof formatter === 'string') {\n\t      html = formatUtil.formatTpl(formatter, params, true);\n\t    } else if (typeof formatter === 'function') {\n\t      var callback = bind(function (cbTicket, html) {\n\t        if (cbTicket === this._ticket) {\n\t          tooltipContent.setContent(html);\n\t\n\t          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n\t        }\n\t      }, this);\n\t      this._ticket = asyncTicket;\n\t      html = formatter(params, asyncTicket, callback);\n\t    }\n\t\n\t    tooltipContent.setContent(html);\n\t    tooltipContent.show(tooltipModel);\n\t\n\t    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n\t  },\n\t\n\t  /**\n\t   * @param  {string|Function|Array.<number>|Object} positionExpr\n\t   * @param  {number} x Mouse x\n\t   * @param  {number} y Mouse y\n\t   * @param  {boolean} confine Whether confine tooltip content in view rect.\n\t   * @param  {Object|<Array.<Object>} params\n\t   * @param  {module:zrender/Element} el target element\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @return {Array.<number>}\n\t   */\n\t  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n\t    var viewWidth = this._api.getWidth();\n\t\n\t    var viewHeight = this._api.getHeight();\n\t\n\t    positionExpr = positionExpr || tooltipModel.get('position');\n\t    var contentSize = content.getSize();\n\t    var align = tooltipModel.get('align');\n\t    var vAlign = tooltipModel.get('verticalAlign');\n\t    var rect = el && el.getBoundingRect().clone();\n\t    el && rect.applyTransform(el.transform);\n\t\n\t    if (typeof positionExpr === 'function') {\n\t      // Callback of position can be an array or a string specify the position\n\t      positionExpr = positionExpr([x, y], params, content.el, rect, {\n\t        viewSize: [viewWidth, viewHeight],\n\t        contentSize: contentSize.slice()\n\t      });\n\t    }\n\t\n\t    if (zrUtil.isArray(positionExpr)) {\n\t      x = parsePercent(positionExpr[0], viewWidth);\n\t      y = parsePercent(positionExpr[1], viewHeight);\n\t    } else if (zrUtil.isObject(positionExpr)) {\n\t      positionExpr.width = contentSize[0];\n\t      positionExpr.height = contentSize[1];\n\t      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n\t        width: viewWidth,\n\t        height: viewHeight\n\t      });\n\t      x = layoutRect.x;\n\t      y = layoutRect.y;\n\t      align = null; // When positionExpr is left/top/right/bottom,\n\t      // align and verticalAlign will not work.\n\t\n\t      vAlign = null;\n\t    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n\t    else if (typeof positionExpr === 'string' && el) {\n\t        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n\t        x = pos[0];\n\t        y = pos[1];\n\t      } else {\n\t        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n\t        x = pos[0];\n\t        y = pos[1];\n\t      }\n\t\n\t    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n\t    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\t\n\t    if (tooltipModel.get('confine')) {\n\t      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n\t      x = pos[0];\n\t      y = pos[1];\n\t    }\n\t\n\t    content.moveTo(x, y);\n\t  },\n\t  // FIXME\n\t  // Should we remove this but leave this to user?\n\t  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n\t    var lastCoordSys = this._lastDataByCoordSys;\n\t    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n\t    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n\t      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n\t      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n\t      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n\t      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\t      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n\t        var thisItem = thisDataByAxis[indexAxis] || {};\n\t        var lastIndices = lastItem.seriesDataIndices || [];\n\t        var newIndices = thisItem.seriesDataIndices || [];\n\t        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n\t        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n\t          var newIdxItem = newIndices[j];\n\t          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n\t        });\n\t      });\n\t    });\n\t    this._lastDataByCoordSys = dataByCoordSys;\n\t    return !!contentNotChanged;\n\t  },\n\t  _hide: function (dispatchAction) {\n\t    // Do not directly hideLater here, because this behavior may be prevented\n\t    // in dispatchAction when showTip is dispatched.\n\t    // FIXME\n\t    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n\t    this._lastDataByCoordSys = null;\n\t    dispatchAction({\n\t      type: 'hideTip',\n\t      from: this.uid\n\t    });\n\t  },\n\t  dispose: function (ecModel, api) {\n\t    if (env.node) {\n\t      return;\n\t    }\n\t\n\t    this._tooltipContent.hide();\n\t\n\t    globalListener.unregister('itemTooltip', api);\n\t  }\n\t});\n\t/**\n\t * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n\t * From top to bottom. (the last one should be globalTooltipModel);\n\t */\n\t\n\t\n\tfunction buildTooltipModel(modelCascade) {\n\t  var resultModel = modelCascade.pop();\n\t\n\t  while (modelCascade.length) {\n\t    var tooltipOpt = modelCascade.pop();\n\t\n\t    if (tooltipOpt) {\n\t      if (Model.isInstance(tooltipOpt)) {\n\t        tooltipOpt = tooltipOpt.get('tooltip', true);\n\t      } // In each data item tooltip can be simply write:\n\t      // {\n\t      //  value: 10,\n\t      //  tooltip: 'Something you need to know'\n\t      // }\n\t\n\t\n\t      if (typeof tooltipOpt === 'string') {\n\t        tooltipOpt = {\n\t          formatter: tooltipOpt\n\t        };\n\t      }\n\t\n\t      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n\t    }\n\t  }\n\t\n\t  return resultModel;\n\t}\n\t\n\tfunction makeDispatchAction(payload, api) {\n\t  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n\t}\n\t\n\tfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n\t  var size = getOuterSize(el);\n\t  var width = size.width;\n\t  var height = size.height;\n\t\n\t  if (gapH != null) {\n\t    if (x + width + gapH > viewWidth) {\n\t      x -= width + gapH;\n\t    } else {\n\t      x += gapH;\n\t    }\n\t  }\n\t\n\t  if (gapV != null) {\n\t    if (y + height + gapV > viewHeight) {\n\t      y -= height + gapV;\n\t    } else {\n\t      y += gapV;\n\t    }\n\t  }\n\t\n\t  return [x, y];\n\t}\n\t\n\tfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n\t  var size = getOuterSize(el);\n\t  var width = size.width;\n\t  var height = size.height;\n\t  x = Math.min(x + width, viewWidth) - width;\n\t  y = Math.min(y + height, viewHeight) - height;\n\t  x = Math.max(x, 0);\n\t  y = Math.max(y, 0);\n\t  return [x, y];\n\t}\n\t\n\tfunction getOuterSize(el) {\n\t  var width = el.clientWidth;\n\t  var height = el.clientHeight; // Consider browser compatibility.\n\t  // IE8 does not support getComputedStyle.\n\t\n\t  if (document.defaultView && document.defaultView.getComputedStyle) {\n\t    var stl = document.defaultView.getComputedStyle(el);\n\t\n\t    if (stl) {\n\t      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n\t      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n\t    }\n\t  }\n\t\n\t  return {\n\t    width: width,\n\t    height: height\n\t  };\n\t}\n\t\n\tfunction calcTooltipPosition(position, rect, contentSize) {\n\t  var domWidth = contentSize[0];\n\t  var domHeight = contentSize[1];\n\t  var gap = 5;\n\t  var x = 0;\n\t  var y = 0;\n\t  var rectWidth = rect.width;\n\t  var rectHeight = rect.height;\n\t\n\t  switch (position) {\n\t    case 'inside':\n\t      x = rect.x + rectWidth / 2 - domWidth / 2;\n\t      y = rect.y + rectHeight / 2 - domHeight / 2;\n\t      break;\n\t\n\t    case 'top':\n\t      x = rect.x + rectWidth / 2 - domWidth / 2;\n\t      y = rect.y - domHeight - gap;\n\t      break;\n\t\n\t    case 'bottom':\n\t      x = rect.x + rectWidth / 2 - domWidth / 2;\n\t      y = rect.y + rectHeight + gap;\n\t      break;\n\t\n\t    case 'left':\n\t      x = rect.x - domWidth - gap;\n\t      y = rect.y + rectHeight / 2 - domHeight / 2;\n\t      break;\n\t\n\t    case 'right':\n\t      x = rect.x + rectWidth + gap;\n\t      y = rect.y + rectHeight / 2 - domHeight / 2;\n\t  }\n\t\n\t  return [x, y];\n\t}\n\t\n\tfunction isCenterAlign(align) {\n\t  return align === 'center' || align === 'middle';\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n\t// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n\t// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n\t// declaration is behind of the using position (for example in `Model.extent`,\n\t// And tools like rollup can not analysis the dependency if not import).\n\tvar dev; // In browser\n\t\n\tif (typeof window !== 'undefined') {\n\t  dev = window.__DEV__;\n\t} // In node\n\telse if (typeof global !== 'undefined') {\n\t    dev = global.__DEV__;\n\t  }\n\t\n\tif (typeof dev === 'undefined') {\n\t  dev = true;\n\t}\n\t\n\tvar __DEV__ = dev;\n\texports.__DEV__ = __DEV__;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 419:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\tvar axisHelper = __webpack_require__(92);\n\t\n\tvar linearMap = numberUtil.linearMap;\n\t\n\tfunction fixExtentWithBands(extent, nTick) {\n\t  var size = extent[1] - extent[0];\n\t  var len = nTick;\n\t  var margin = size / len / 2;\n\t  extent[0] += margin;\n\t  extent[1] -= margin;\n\t}\n\t\n\tvar normalizedExtent = [0, 1];\n\t/**\n\t * @name module:echarts/coord/CartesianAxis\n\t * @constructor\n\t */\n\t\n\tvar Axis = function (dim, scale, extent) {\n\t  /**\n\t   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n\t   * @type {string}\n\t   */\n\t  this.dim = dim;\n\t  /**\n\t   * Axis scale\n\t   * @type {module:echarts/coord/scale/*}\n\t   */\n\t\n\t  this.scale = scale;\n\t  /**\n\t   * @type {Array.<number>}\n\t   * @private\n\t   */\n\t\n\t  this._extent = extent || [0, 0];\n\t  /**\n\t   * @type {boolean}\n\t   */\n\t\n\t  this.inverse = false;\n\t  /**\n\t   * Usually true when axis has a ordinal scale\n\t   * @type {boolean}\n\t   */\n\t\n\t  this.onBand = false;\n\t  /**\n\t   * @private\n\t   * @type {number}\n\t   */\n\t\n\t  this._labelInterval;\n\t};\n\t\n\tAxis.prototype = {\n\t  constructor: Axis,\n\t\n\t  /**\n\t   * If axis extent contain given coord\n\t   * @param {number} coord\n\t   * @return {boolean}\n\t   */\n\t  contain: function (coord) {\n\t    var extent = this._extent;\n\t    var min = Math.min(extent[0], extent[1]);\n\t    var max = Math.max(extent[0], extent[1]);\n\t    return coord >= min && coord <= max;\n\t  },\n\t\n\t  /**\n\t   * If axis extent contain given data\n\t   * @param {number} data\n\t   * @return {boolean}\n\t   */\n\t  containData: function (data) {\n\t    return this.contain(this.dataToCoord(data));\n\t  },\n\t\n\t  /**\n\t   * Get coord extent.\n\t   * @return {Array.<number>}\n\t   */\n\t  getExtent: function () {\n\t    return this._extent.slice();\n\t  },\n\t\n\t  /**\n\t   * Get precision used for formatting\n\t   * @param {Array.<number>} [dataExtent]\n\t   * @return {number}\n\t   */\n\t  getPixelPrecision: function (dataExtent) {\n\t    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n\t  },\n\t\n\t  /**\n\t   * Set coord extent\n\t   * @param {number} start\n\t   * @param {number} end\n\t   */\n\t  setExtent: function (start, end) {\n\t    var extent = this._extent;\n\t    extent[0] = start;\n\t    extent[1] = end;\n\t  },\n\t\n\t  /**\n\t   * Convert data to coord. Data is the rank if it has a ordinal scale\n\t   * @param {number} data\n\t   * @param  {boolean} clamp\n\t   * @return {number}\n\t   */\n\t  dataToCoord: function (data, clamp) {\n\t    var extent = this._extent;\n\t    var scale = this.scale;\n\t    data = scale.normalize(data);\n\t\n\t    if (this.onBand && scale.type === 'ordinal') {\n\t      extent = extent.slice();\n\t      fixExtentWithBands(extent, scale.count());\n\t    }\n\t\n\t    return linearMap(data, normalizedExtent, extent, clamp);\n\t  },\n\t\n\t  /**\n\t   * Convert coord to data. Data is the rank if it has a ordinal scale\n\t   * @param {number} coord\n\t   * @param  {boolean} clamp\n\t   * @return {number}\n\t   */\n\t  coordToData: function (coord, clamp) {\n\t    var extent = this._extent;\n\t    var scale = this.scale;\n\t\n\t    if (this.onBand && scale.type === 'ordinal') {\n\t      extent = extent.slice();\n\t      fixExtentWithBands(extent, scale.count());\n\t    }\n\t\n\t    var t = linearMap(coord, extent, normalizedExtent, clamp);\n\t    return this.scale.scale(t);\n\t  },\n\t\n\t  /**\n\t   * Convert pixel point to data in axis\n\t   * @param {Array.<number>} point\n\t   * @param  {boolean} clamp\n\t   * @return {number} data\n\t   */\n\t  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<number>}\n\t   */\n\t  getTicksCoords: function (alignWithLabel) {\n\t    if (this.onBand && !alignWithLabel) {\n\t      var bands = this.getBands();\n\t      var coords = [];\n\t\n\t      for (var i = 0; i < bands.length; i++) {\n\t        coords.push(bands[i][0]);\n\t      }\n\t\n\t      if (bands[i - 1]) {\n\t        coords.push(bands[i - 1][1]);\n\t      }\n\t\n\t      return coords;\n\t    } else {\n\t      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Coords of labels are on the ticks or on the middle of bands\n\t   * @return {Array.<number>}\n\t   */\n\t  getLabelsCoords: function () {\n\t    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n\t  },\n\t\n\t  /**\n\t   * Get bands.\n\t   *\n\t   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n\t   * |---1---|---2---|---3---|---4---|.\n\t   *\n\t   * @return {Array}\n\t   */\n\t  // FIXME Situation when labels is on ticks\n\t  getBands: function () {\n\t    var extent = this.getExtent();\n\t    var bands = [];\n\t    var len = this.scale.count();\n\t    var start = extent[0];\n\t    var end = extent[1];\n\t    var span = end - start;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n\t    }\n\t\n\t    return bands;\n\t  },\n\t\n\t  /**\n\t   * Get width of band\n\t   * @return {number}\n\t   */\n\t  getBandWidth: function () {\n\t    var axisExtent = this._extent;\n\t    var dataExtent = this.scale.getExtent();\n\t    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\t\n\t    len === 0 && (len = 1);\n\t    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\t    return Math.abs(size) / len;\n\t  },\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {boolean} Is horizontal\n\t   */\n\t  isHorizontal: null,\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {number} Get axis rotate, by degree.\n\t   */\n\t  getRotate: null,\n\t\n\t  /**\n\t   * Get interval of the axis label.\n\t   * To get precise result, at least one of `getRotate` and `isHorizontal`\n\t   * should be implemented.\n\t   * @return {number}\n\t   */\n\t  getLabelInterval: function () {\n\t    var labelInterval = this._labelInterval;\n\t\n\t    if (!labelInterval) {\n\t      var axisModel = this.model;\n\t      var labelModel = axisModel.getModel('axisLabel');\n\t      labelInterval = labelModel.get('interval');\n\t\n\t      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n\t        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n\t      }\n\t\n\t      this._labelInterval = labelInterval;\n\t    }\n\t\n\t    return labelInterval;\n\t  }\n\t};\n\tvar _default = Axis;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 791:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar vector = __webpack_require__(10);\n\t\n\tvar matrix = __webpack_require__(85);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar Transformable = __webpack_require__(362);\n\t\n\t/**\n\t * Simple view coordinate system\n\t * Mapping given x, y to transformd view x, y\n\t */\n\tvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\t\n\tfunction TransformDummy() {\n\t  Transformable.call(this);\n\t}\n\t\n\tzrUtil.mixin(TransformDummy, Transformable);\n\t\n\tfunction View(name) {\n\t  /**\n\t   * @type {string}\n\t   */\n\t  this.name = name;\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t  this.zoomLimit;\n\t  Transformable.call(this);\n\t  this._roamTransformable = new TransformDummy();\n\t  this._rawTransformable = new TransformDummy();\n\t  this._center;\n\t  this._zoom;\n\t}\n\t\n\tView.prototype = {\n\t  constructor: View,\n\t  type: 'view',\n\t\n\t  /**\n\t   * @param {Array.<string>}\n\t   * @readOnly\n\t   */\n\t  dimensions: ['x', 'y'],\n\t\n\t  /**\n\t   * Set bounding rect\n\t   * @param {number} x\n\t   * @param {number} y\n\t   * @param {number} width\n\t   * @param {number} height\n\t   */\n\t  // PENDING to getRect\n\t  setBoundingRect: function (x, y, width, height) {\n\t    this._rect = new BoundingRect(x, y, width, height);\n\t    return this._rect;\n\t  },\n\t\n\t  /**\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  // PENDING to getRect\n\t  getBoundingRect: function () {\n\t    return this._rect;\n\t  },\n\t\n\t  /**\n\t   * @param {number} x\n\t   * @param {number} y\n\t   * @param {number} width\n\t   * @param {number} height\n\t   */\n\t  setViewRect: function (x, y, width, height) {\n\t    this.transformTo(x, y, width, height);\n\t    this._viewRect = new BoundingRect(x, y, width, height);\n\t  },\n\t\n\t  /**\n\t   * Transformed to particular position and size\n\t   * @param {number} x\n\t   * @param {number} y\n\t   * @param {number} width\n\t   * @param {number} height\n\t   */\n\t  transformTo: function (x, y, width, height) {\n\t    var rect = this.getBoundingRect();\n\t    var rawTransform = this._rawTransformable;\n\t    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n\t    rawTransform.decomposeTransform();\n\t\n\t    this._updateTransform();\n\t  },\n\t\n\t  /**\n\t   * Set center of view\n\t   * @param {Array.<number>} [centerCoord]\n\t   */\n\t  setCenter: function (centerCoord) {\n\t    if (!centerCoord) {\n\t      return;\n\t    }\n\t\n\t    this._center = centerCoord;\n\t\n\t    this._updateCenterAndZoom();\n\t  },\n\t\n\t  /**\n\t   * @param {number} zoom\n\t   */\n\t  setZoom: function (zoom) {\n\t    zoom = zoom || 1;\n\t    var zoomLimit = this.zoomLimit;\n\t\n\t    if (zoomLimit) {\n\t      if (zoomLimit.max != null) {\n\t        zoom = Math.min(zoomLimit.max, zoom);\n\t      }\n\t\n\t      if (zoomLimit.min != null) {\n\t        zoom = Math.max(zoomLimit.min, zoom);\n\t      }\n\t    }\n\t\n\t    this._zoom = zoom;\n\t\n\t    this._updateCenterAndZoom();\n\t  },\n\t\n\t  /**\n\t   * Get default center without roam\n\t   */\n\t  getDefaultCenter: function () {\n\t    // Rect before any transform\n\t    var rawRect = this.getBoundingRect();\n\t    var cx = rawRect.x + rawRect.width / 2;\n\t    var cy = rawRect.y + rawRect.height / 2;\n\t    return [cx, cy];\n\t  },\n\t  getCenter: function () {\n\t    return this._center || this.getDefaultCenter();\n\t  },\n\t  getZoom: function () {\n\t    return this._zoom || 1;\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<number}\n\t   */\n\t  getRoamTransform: function () {\n\t    return this._roamTransformable.getLocalTransform();\n\t  },\n\t\n\t  /**\n\t   * Remove roam\n\t   */\n\t  _updateCenterAndZoom: function () {\n\t    // Must update after view transform updated\n\t    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\t\n\t    var roamTransform = this._roamTransformable;\n\t    var defaultCenter = this.getDefaultCenter();\n\t    var center = this.getCenter();\n\t    var zoom = this.getZoom();\n\t    center = vector.applyTransform([], center, rawTransformMatrix);\n\t    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n\t    roamTransform.origin = center;\n\t    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n\t    roamTransform.scale = [zoom, zoom];\n\t\n\t    this._updateTransform();\n\t  },\n\t\n\t  /**\n\t   * Update transform from roam and mapLocation\n\t   * @private\n\t   */\n\t  _updateTransform: function () {\n\t    var roamTransformable = this._roamTransformable;\n\t    var rawTransformable = this._rawTransformable;\n\t    rawTransformable.parent = roamTransformable;\n\t    roamTransformable.updateTransform();\n\t    rawTransformable.updateTransform();\n\t    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n\t    this._rawTransform = rawTransformable.getLocalTransform();\n\t    this.invTransform = this.invTransform || [];\n\t    matrix.invert(this.invTransform, this.transform);\n\t    this.decomposeTransform();\n\t  },\n\t\n\t  /**\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  getViewRect: function () {\n\t    return this._viewRect;\n\t  },\n\t\n\t  /**\n\t   * Get view rect after roam transform\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  getViewRectAfterRoam: function () {\n\t    var rect = this.getBoundingRect().clone();\n\t    rect.applyTransform(this.transform);\n\t    return rect;\n\t  },\n\t\n\t  /**\n\t   * Convert a single (lon, lat) data item to (x, y) point.\n\t   * @param {Array.<number>} data\n\t   * @param {boolean} noRoam\n\t   * @param {Array.<number>} [out]\n\t   * @return {Array.<number>}\n\t   */\n\t  dataToPoint: function (data, noRoam, out) {\n\t    var transform = noRoam ? this._rawTransform : this.transform;\n\t    out = out || [];\n\t    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n\t  },\n\t\n\t  /**\n\t   * Convert a (x, y) point to (lon, lat) data\n\t   * @param {Array.<number>} point\n\t   * @return {Array.<number>}\n\t   */\n\t  pointToData: function (point) {\n\t    var invTransform = this.invTransform;\n\t    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n\t  },\n\t\n\t  /**\n\t   * @implements\n\t   * see {module:echarts/CoodinateSystem}\n\t   */\n\t  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\t\n\t  /**\n\t   * @implements\n\t   * see {module:echarts/CoodinateSystem}\n\t   */\n\t  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\t\n\t  /**\n\t   * @implements\n\t   * see {module:echarts/CoodinateSystem}\n\t   */\n\t  containPoint: function (point) {\n\t    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n\t  }\n\t  /**\n\t   * @return {number}\n\t   */\n\t  // getScalarScale: function () {\n\t  //     // Use determinant square root of transform to mutiply scalar\n\t  //     var m = this.transform;\n\t  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n\t  //     return det;\n\t  // }\n\t\n\t};\n\tzrUtil.mixin(View, Transformable);\n\t\n\tfunction doConvert(methodName, ecModel, finder, value) {\n\t  var seriesModel = finder.seriesModel;\n\t  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\t\n\t  return coordSys === this ? coordSys[methodName](value) : null;\n\t}\n\t\n\tvar _default = View;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 792:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar defaultOption = {\n\t  show: true,\n\t  zlevel: 0,\n\t  // 一级层叠\n\t  z: 0,\n\t  // 二级层叠\n\t  // 反向坐标轴\n\t  inverse: false,\n\t  // 坐标轴名字，默认为空\n\t  name: '',\n\t  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n\t  nameLocation: 'end',\n\t  // 坐标轴名字旋转，degree。\n\t  nameRotate: null,\n\t  // Adapt to axis rotate, when nameLocation is 'middle'.\n\t  nameTruncate: {\n\t    maxWidth: null,\n\t    ellipsis: '...',\n\t    placeholder: '.'\n\t  },\n\t  // 坐标轴文字样式，默认取全局样式\n\t  nameTextStyle: {},\n\t  // 文字与轴线距离\n\t  nameGap: 15,\n\t  silent: false,\n\t  // Default false to support tooltip.\n\t  triggerEvent: false,\n\t  // Default false to avoid legacy user event listener fail.\n\t  tooltip: {\n\t    show: false\n\t  },\n\t  axisPointer: {},\n\t  // 坐标轴线\n\t  axisLine: {\n\t    // 默认显示，属性show控制显示与否\n\t    show: true,\n\t    onZero: true,\n\t    onZeroAxisIndex: null,\n\t    // 属性lineStyle控制线条样式\n\t    lineStyle: {\n\t      color: '#333',\n\t      width: 1,\n\t      type: 'solid'\n\t    },\n\t    // 坐标轴两端的箭头\n\t    symbol: ['none', 'none'],\n\t    symbolSize: [10, 15]\n\t  },\n\t  // 坐标轴小标记\n\t  axisTick: {\n\t    // 属性show控制显示与否，默认显示\n\t    show: true,\n\t    // 控制小标记是否在grid里\n\t    inside: false,\n\t    // 属性length控制线长\n\t    length: 5,\n\t    // 属性lineStyle控制线条样式\n\t    lineStyle: {\n\t      width: 1\n\t    }\n\t  },\n\t  // 坐标轴文本标签，详见axis.axisLabel\n\t  axisLabel: {\n\t    show: true,\n\t    // 控制文本标签是否在grid里\n\t    inside: false,\n\t    rotate: 0,\n\t    showMinLabel: null,\n\t    // true | false | null (auto)\n\t    showMaxLabel: null,\n\t    // true | false | null (auto)\n\t    margin: 8,\n\t    // formatter: null,\n\t    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n\t    fontSize: 12\n\t  },\n\t  // 分隔线\n\t  splitLine: {\n\t    // 默认显示，属性show控制显示与否\n\t    show: true,\n\t    // 属性lineStyle（详见lineStyle）控制线条样式\n\t    lineStyle: {\n\t      color: ['#ccc'],\n\t      width: 1,\n\t      type: 'solid'\n\t    }\n\t  },\n\t  // 分隔区域\n\t  splitArea: {\n\t    // 默认不显示，属性show控制显示与否\n\t    show: false,\n\t    // 属性areaStyle（详见areaStyle）控制区域样式\n\t    areaStyle: {\n\t      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n\t    }\n\t  }\n\t};\n\tvar axisDefault = {};\n\taxisDefault.categoryAxis = zrUtil.merge({\n\t  // 类目起始和结束两端空白策略\n\t  boundaryGap: true,\n\t  // Set false to faster category collection.\n\t  // Only usefull in the case like: category is\n\t  // ['2012-01-01', '2012-01-02', ...], where the input\n\t  // data has been ensured not duplicate and is large data.\n\t  // null means \"auto\":\n\t  // if axis.data provided, do not deduplication,\n\t  // else do deduplication.\n\t  deduplication: null,\n\t  // splitArea: {\n\t  // show: false\n\t  // },\n\t  splitLine: {\n\t    show: false\n\t  },\n\t  // 坐标轴小标记\n\t  axisTick: {\n\t    // If tick is align with label when boundaryGap is true\n\t    alignWithLabel: false,\n\t    interval: 'auto'\n\t  },\n\t  // 坐标轴文本标签，详见axis.axisLabel\n\t  axisLabel: {\n\t    interval: 'auto'\n\t  }\n\t}, defaultOption);\n\taxisDefault.valueAxis = zrUtil.merge({\n\t  // 数值起始和结束两端空白策略\n\t  boundaryGap: [0, 0],\n\t  // TODO\n\t  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n\t  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n\t  // min: null,\n\t  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n\t  // max: null,\n\t  // Readonly prop, specifies start value of the range when using data zoom.\n\t  // rangeStart: null\n\t  // Readonly prop, specifies end value of the range when using data zoom.\n\t  // rangeEnd: null\n\t  // 脱离0值比例，放大聚焦到最终_min，_max区间\n\t  // scale: false,\n\t  // 分割段数，默认为5\n\t  splitNumber: 5 // Minimum interval\n\t  // minInterval: null\n\t  // maxInterval: null\n\t\n\t}, defaultOption); // FIXME\n\t\n\taxisDefault.timeAxis = zrUtil.defaults({\n\t  scale: true,\n\t  min: 'dataMin',\n\t  max: 'dataMax'\n\t}, axisDefault.valueAxis);\n\taxisDefault.logAxis = zrUtil.defaults({\n\t  scale: true,\n\t  logBase: 10\n\t}, axisDefault.valueAxis);\n\tvar _default = axisDefault;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar textContain = __webpack_require__(113);\n\t\n\tvar OrdinalScale = __webpack_require__(821);\n\t\n\tvar IntervalScale = __webpack_require__(272);\n\t\n\tvar Scale = __webpack_require__(193);\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\tvar _barGrid = __webpack_require__(807);\n\t\n\tvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\t\n\t__webpack_require__(822);\n\t\n\t__webpack_require__(820);\n\t\n\t/**\n\t * Get axis scale extent before niced.\n\t * Item of returned array can only be number (including Infinity and NaN).\n\t */\n\tfunction getScaleExtent(scale, model) {\n\t  var scaleType = scale.type;\n\t  var min = model.getMin();\n\t  var max = model.getMax();\n\t  var fixMin = min != null;\n\t  var fixMax = max != null;\n\t  var originalExtent = scale.getExtent();\n\t  var axisDataLen;\n\t  var boundaryGap;\n\t  var span;\n\t\n\t  if (scaleType === 'ordinal') {\n\t    axisDataLen = model.getCategories().length;\n\t  } else {\n\t    boundaryGap = model.get('boundaryGap');\n\t\n\t    if (!zrUtil.isArray(boundaryGap)) {\n\t      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n\t    }\n\t\n\t    if (typeof boundaryGap[0] === 'boolean') {\n\t      boundaryGap = [0, 0];\n\t    }\n\t\n\t    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n\t    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n\t    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n\t  } // Notice: When min/max is not set (that is, when there are null/undefined,\n\t  // which is the most common case), these cases should be ensured:\n\t  // (1) For 'ordinal', show all axis.data.\n\t  // (2) For others:\n\t  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n\t  //      disabled).\n\t  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n\t  //      be the result that originalExtent enlarged by boundaryGap.\n\t  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\t  // FIXME\n\t  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n\t  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n\t  // that the results processed by boundaryGap are positive/negative?\n\t\n\t\n\t  if (min == null) {\n\t    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n\t  }\n\t\n\t  if (max == null) {\n\t    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n\t  }\n\t\n\t  if (min === 'dataMin') {\n\t    min = originalExtent[0];\n\t  } else if (typeof min === 'function') {\n\t    min = min({\n\t      min: originalExtent[0],\n\t      max: originalExtent[1]\n\t    });\n\t  }\n\t\n\t  if (max === 'dataMax') {\n\t    max = originalExtent[1];\n\t  } else if (typeof max === 'function') {\n\t    max = max({\n\t      min: originalExtent[0],\n\t      max: originalExtent[1]\n\t    });\n\t  }\n\t\n\t  (min == null || !isFinite(min)) && (min = NaN);\n\t  (max == null || !isFinite(max)) && (max = NaN);\n\t  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\t\n\t  if (model.getNeedCrossZero()) {\n\t    // Axis is over zero and min is not set\n\t    if (min > 0 && max > 0 && !fixMin) {\n\t      min = 0;\n\t    } // Axis is under zero and max is not set\n\t\n\t\n\t    if (min < 0 && max < 0 && !fixMax) {\n\t      max = 0;\n\t    }\n\t  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n\t  // is base axis\n\t\n\t\n\t  var ecModel = model.ecModel;\n\t\n\t  if (ecModel) {\n\t    var isBaseAxisAndHasBarSeries = zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n\t      return seriesModel.getBaseAxis() === model.axis;\n\t    }).length > 0;\n\t\n\t    if ((scaleType === 'time' || scaleType === 'interval') && isBaseAxisAndHasBarSeries) {\n\t      // Adjust axis min and max to account for overflow\n\t      var adjustedScale = adjustScaleForOverflow(min, max, model);\n\t      min = adjustedScale.min;\n\t      max = adjustedScale.max;\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t}\n\t\n\tfunction adjustScaleForOverflow(min, max, model) {\n\t  var ecModel = model.ecModel; // Get Axis Length\n\t\n\t  var axisExtent = model.axis.getExtent();\n\t  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\t\n\t  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n\t    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n\t  })); // Get bars on current base axis and calculate min and max overflow\n\t\n\t  var baseAxisKey = model.axis.dim + model.axis.index;\n\t  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\t\n\t  if (barsOnCurrentAxis === undefined) {\n\t    return {\n\t      min: min,\n\t      max: max\n\t    };\n\t  }\n\t\n\t  var minOverflow = Infinity;\n\t  zrUtil.each(barsOnCurrentAxis, function (item) {\n\t    minOverflow = Math.min(item.offset, minOverflow);\n\t  });\n\t  var maxOverflow = -Infinity;\n\t  zrUtil.each(barsOnCurrentAxis, function (item) {\n\t    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n\t  });\n\t  var totalOverFlow = Math.abs(minOverflow) + maxOverflow; // Calulate required buffer based on old range and overflow\n\t\n\t  var oldRange = max - min;\n\t  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n\t  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n\t  max += overflowBuffer * (maxOverflow / totalOverFlow);\n\t  min -= overflowBuffer * (minOverflow / totalOverFlow);\n\t  return {\n\t    min: min,\n\t    max: max\n\t  };\n\t}\n\t\n\tfunction niceScaleExtent(scale, model) {\n\t  var extent = getScaleExtent(scale, model);\n\t  var fixMin = model.getMin() != null;\n\t  var fixMax = model.getMax() != null;\n\t  var splitNumber = model.get('splitNumber');\n\t\n\t  if (scale.type === 'log') {\n\t    scale.base = model.get('logBase');\n\t  }\n\t\n\t  var scaleType = scale.type;\n\t  scale.setExtent(extent[0], extent[1]);\n\t  scale.niceExtent({\n\t    splitNumber: splitNumber,\n\t    fixMin: fixMin,\n\t    fixMax: fixMax,\n\t    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n\t    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n\t  }); // If some one specified the min, max. And the default calculated interval\n\t  // is not good enough. He can specify the interval. It is often appeared\n\t  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n\t  // to be 60.\n\t  // FIXME\n\t\n\t  var interval = model.get('interval');\n\t\n\t  if (interval != null) {\n\t    scale.setInterval && scale.setInterval(interval);\n\t  }\n\t}\n\t/**\n\t * @param {module:echarts/model/Model} model\n\t * @param {string} [axisType] Default retrieve from model.type\n\t * @return {module:echarts/scale/*}\n\t */\n\t\n\t\n\tfunction createScaleByModel(model, axisType) {\n\t  axisType = axisType || model.get('type');\n\t\n\t  if (axisType) {\n\t    switch (axisType) {\n\t      // Buildin scale\n\t      case 'category':\n\t        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\t\n\t      case 'value':\n\t        return new IntervalScale();\n\t      // Extended scale, like time and log\n\t\n\t      default:\n\t        return (Scale.getClass(axisType) || IntervalScale).create(model);\n\t    }\n\t  }\n\t}\n\t/**\n\t * Check if the axis corss 0\n\t */\n\t\n\t\n\tfunction ifAxisCrossZero(axis) {\n\t  var dataExtent = axis.scale.getExtent();\n\t  var min = dataExtent[0];\n\t  var max = dataExtent[1];\n\t  return !(min > 0 && max > 0 || min < 0 && max < 0);\n\t}\n\t/**\n\t * @param {Array.<number>} tickCoords In axis self coordinate.\n\t * @param {Array.<string>} labels\n\t * @param {string} font\n\t * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n\t * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n\t  var textSpaceTakenRect;\n\t  var autoLabelInterval = 0;\n\t  var accumulatedLabelInterval = 0;\n\t  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n\t  var step = 1;\n\t\n\t  if (labels.length > 40) {\n\t    // Simple optimization for large amount of labels\n\t    step = Math.floor(labels.length / 40);\n\t  }\n\t\n\t  for (var i = 0; i < tickCoords.length; i += step) {\n\t    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n\t    // and each distance from axis line yet.\n\t\n\t    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n\t    rect.x += tickCoord * Math.cos(rotation);\n\t    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\t\n\t    rect.width *= 1.3;\n\t    rect.height *= 1.3;\n\t\n\t    if (!textSpaceTakenRect) {\n\t      textSpaceTakenRect = rect.clone();\n\t    } // There is no space for current label;\n\t    else if (textSpaceTakenRect.intersect(rect)) {\n\t        accumulatedLabelInterval++;\n\t        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n\t      } else {\n\t        textSpaceTakenRect.union(rect); // Reset\n\t\n\t        accumulatedLabelInterval = 0;\n\t      }\n\t  }\n\t\n\t  if (autoLabelInterval === 0 && step > 1) {\n\t    return step;\n\t  }\n\t\n\t  return (autoLabelInterval + 1) * step - 1;\n\t}\n\t/**\n\t * @param {Object} axis\n\t * @param {Function} labelFormatter\n\t * @return {Array.<string>}\n\t */\n\t\n\t\n\tfunction getFormattedLabels(axis, labelFormatter) {\n\t  var scale = axis.scale;\n\t  var labels = scale.getTicksLabels();\n\t  var ticks = scale.getTicks();\n\t\n\t  if (typeof labelFormatter === 'string') {\n\t    labelFormatter = function (tpl) {\n\t      return function (val) {\n\t        return tpl.replace('{value}', val != null ? val : '');\n\t      };\n\t    }(labelFormatter); // Consider empty array\n\t\n\t\n\t    return zrUtil.map(labels, labelFormatter);\n\t  } else if (typeof labelFormatter === 'function') {\n\t    return zrUtil.map(ticks, function (tick, idx) {\n\t      return labelFormatter(getAxisRawValue(axis, tick), idx);\n\t    }, this);\n\t  } else {\n\t    return labels;\n\t  }\n\t}\n\t\n\tfunction getAxisRawValue(axis, value) {\n\t  // In category axis with data zoom, tick is not the original\n\t  // index of axis.data. So tick should not be exposed to user\n\t  // in category axis.\n\t  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n\t}\n\t\n\texports.getScaleExtent = getScaleExtent;\n\texports.adjustScaleForOverflow = adjustScaleForOverflow;\n\texports.niceScaleExtent = niceScaleExtent;\n\texports.createScaleByModel = createScaleByModel;\n\texports.ifAxisCrossZero = ifAxisCrossZero;\n\texports.getAxisLabelInterval = getAxisLabelInterval;\n\texports.getFormattedLabels = getFormattedLabels;\n\texports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 420:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar axisHelper = __webpack_require__(92);\n\t\n\tvar _default = {\n\t  /**\n\t   * Format labels\n\t   * @return {Array.<string>}\n\t   */\n\t  getFormattedLabels: function () {\n\t    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} origin\n\t   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n\t   */\n\t  getMin: function (origin) {\n\t    var option = this.option;\n\t    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\t\n\t    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n\t      min = this.axis.scale.parse(min);\n\t    }\n\t\n\t    return min;\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} origin\n\t   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n\t   */\n\t  getMax: function (origin) {\n\t    var option = this.option;\n\t    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\t\n\t    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n\t      max = this.axis.scale.parse(max);\n\t    }\n\t\n\t    return max;\n\t  },\n\t\n\t  /**\n\t   * @return {boolean}\n\t   */\n\t  getNeedCrossZero: function () {\n\t    var option = this.option;\n\t    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n\t  },\n\t\n\t  /**\n\t   * Should be implemented by each axis model if necessary.\n\t   * @return {module:echarts/model/Component} coordinate system model\n\t   */\n\t  getCoordSysModel: zrUtil.noop,\n\t\n\t  /**\n\t   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n\t   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n\t   */\n\t  setRange: function (rangeStart, rangeEnd) {\n\t    this.option.rangeStart = rangeStart;\n\t    this.option.rangeEnd = rangeEnd;\n\t  },\n\t\n\t  /**\n\t   * Reset range\n\t   */\n\t  resetRange: function () {\n\t    // rangeStart and rangeEnd is readonly.\n\t    this.option.rangeStart = this.option.rangeEnd = null;\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 793:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar axisDefault = __webpack_require__(792);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\tvar _layout = __webpack_require__(76);\n\t\n\tvar getLayoutParams = _layout.getLayoutParams;\n\tvar mergeLayoutParam = _layout.mergeLayoutParam;\n\t\n\tvar OrdinalMeta = __webpack_require__(422);\n\t\n\t// FIXME axisType is fixed ?\n\tvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\t/**\n\t * Generate sub axis model class\n\t * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n\t * @param {module:echarts/model/Component} BaseAxisModelClass\n\t * @param {Function} axisTypeDefaulter\n\t * @param {Object} [extraDefaultOption]\n\t */\n\t\n\tfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\t  zrUtil.each(AXIS_TYPES, function (axisType) {\n\t    BaseAxisModelClass.extend({\n\t      /**\n\t       * @readOnly\n\t       */\n\t      type: axisName + 'Axis.' + axisType,\n\t      mergeDefaultAndTheme: function (option, ecModel) {\n\t        var layoutMode = this.layoutMode;\n\t        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n\t        var themeModel = ecModel.getTheme();\n\t        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n\t        zrUtil.merge(option, this.getDefaultOption());\n\t        option.type = axisTypeDefaulter(axisName, option);\n\t\n\t        if (layoutMode) {\n\t          mergeLayoutParam(option, inputPositionParams, layoutMode);\n\t        }\n\t      },\n\t\n\t      /**\n\t       * @override\n\t       */\n\t      optionUpdated: function () {\n\t        var thisOption = this.option;\n\t\n\t        if (thisOption.type === 'category') {\n\t          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n\t        }\n\t      },\n\t\n\t      /**\n\t       * Should not be called before all of 'getInitailData' finished.\n\t       * Because categories are collected during initializing data.\n\t       */\n\t      getCategories: function () {\n\t        // FIXME\n\t        // warning if called before all of 'getInitailData' finished.\n\t        if (this.option.type === 'category') {\n\t          return this.__ordinalMeta.categories;\n\t        }\n\t      },\n\t      getOrdinalMeta: function () {\n\t        return this.__ordinalMeta;\n\t      },\n\t      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n\t    });\n\t  });\n\t  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 794:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Axis = __webpack_require__(419);\n\t\n\t/**\n\t * Extend axis 2d\n\t * @constructor module:echarts/coord/cartesian/Axis2D\n\t * @extends {module:echarts/coord/cartesian/Axis}\n\t * @param {string} dim\n\t * @param {*} scale\n\t * @param {Array.<number>} coordExtent\n\t * @param {string} axisType\n\t * @param {string} position\n\t */\n\tvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n\t  Axis.call(this, dim, scale, coordExtent);\n\t  /**\n\t   * Axis type\n\t   *  - 'category'\n\t   *  - 'value'\n\t   *  - 'time'\n\t   *  - 'log'\n\t   * @type {string}\n\t   */\n\t\n\t  this.type = axisType || 'value';\n\t  /**\n\t   * Axis position\n\t   *  - 'top'\n\t   *  - 'bottom'\n\t   *  - 'left'\n\t   *  - 'right'\n\t   */\n\t\n\t  this.position = position || 'bottom';\n\t};\n\t\n\tAxis2D.prototype = {\n\t  constructor: Axis2D,\n\t\n\t  /**\n\t   * Index of axis, can be used as key\n\t   */\n\t  index: 0,\n\t\n\t  /**\n\t   * If axis is on the zero position of the other axis\n\t   * @type {boolean}\n\t   */\n\t  onZero: false,\n\t\n\t  /**\n\t   * Axis model\n\t   * @param {module:echarts/coord/cartesian/AxisModel}\n\t   */\n\t  model: null,\n\t  isHorizontal: function () {\n\t    var position = this.position;\n\t    return position === 'top' || position === 'bottom';\n\t  },\n\t\n\t  /**\n\t   * Each item cooresponds to this.getExtent(), which\n\t   * means globalExtent[0] may greater than globalExtent[1],\n\t   * unless `asc` is input.\n\t   *\n\t   * @param {boolean} [asc]\n\t   * @return {Array.<number>}\n\t   */\n\t  getGlobalExtent: function (asc) {\n\t    var ret = this.getExtent();\n\t    ret[0] = this.toGlobalCoord(ret[0]);\n\t    ret[1] = this.toGlobalCoord(ret[1]);\n\t    asc && ret[0] > ret[1] && ret.reverse();\n\t    return ret;\n\t  },\n\t  getOtherAxis: function () {\n\t    this.grid.getOtherAxis();\n\t  },\n\t\n\t  /**\n\t   * If label is ignored.\n\t   * Automatically used when axis is category and label can not be all shown\n\t   * @param  {number}  idx\n\t   * @return {boolean}\n\t   */\n\t  isLabelIgnored: function (idx) {\n\t    if (this.type === 'category') {\n\t      var labelInterval = this.getLabelInterval();\n\t      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  pointToData: function (point, clamp) {\n\t    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n\t  },\n\t\n\t  /**\n\t   * Transform global coord to local coord,\n\t   * i.e. var localCoord = axis.toLocalCoord(80);\n\t   * designate by module:echarts/coord/cartesian/Grid.\n\t   * @type {Function}\n\t   */\n\t  toLocalCoord: null,\n\t\n\t  /**\n\t   * Transform global coord to local coord,\n\t   * i.e. var globalCoord = axis.toLocalCoord(40);\n\t   * designate by module:echarts/coord/cartesian/Grid.\n\t   * @type {Function}\n\t   */\n\t  toGlobalCoord: null\n\t};\n\tzrUtil.inherits(Axis2D, Axis);\n\tvar _default = Axis2D;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\tvar axisModelCreator = __webpack_require__(793);\n\t\n\tvar axisModelCommonMixin = __webpack_require__(420);\n\t\n\tvar AxisModel = ComponentModel.extend({\n\t  type: 'cartesian2dAxis',\n\t\n\t  /**\n\t   * @type {module:echarts/coord/cartesian/Axis2D}\n\t   */\n\t  axis: null,\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  init: function () {\n\t    AxisModel.superApply(this, 'init', arguments);\n\t    this.resetRange();\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  mergeOption: function () {\n\t    AxisModel.superApply(this, 'mergeOption', arguments);\n\t    this.resetRange();\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  restoreData: function () {\n\t    AxisModel.superApply(this, 'restoreData', arguments);\n\t    this.resetRange();\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   * @return {module:echarts/model/Component}\n\t   */\n\t  getCoordSysModel: function () {\n\t    return this.ecModel.queryComponents({\n\t      mainType: 'grid',\n\t      index: this.option.gridIndex,\n\t      id: this.option.gridId\n\t    })[0];\n\t  }\n\t});\n\t\n\tfunction getAxisType(axisDim, option) {\n\t  // Default axis with data is category axis\n\t  return option.type || (option.data ? 'category' : 'value');\n\t}\n\t\n\tzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\tvar extraOption = {\n\t  // gridIndex: 0,\n\t  // gridId: '',\n\t  // Offset is for multiple axis on the same position\n\t  offset: 0\n\t};\n\taxisModelCreator('x', AxisModel, getAxisType, extraOption);\n\taxisModelCreator('y', AxisModel, getAxisType, extraOption);\n\tvar _default = AxisModel;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 795:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\t/**\n\t * Cartesian coordinate system\n\t * @module  echarts/coord/Cartesian\n\t *\n\t */\n\tfunction dimAxisMapper(dim) {\n\t  return this._axes[dim];\n\t}\n\t/**\n\t * @alias module:echarts/coord/Cartesian\n\t * @constructor\n\t */\n\t\n\t\n\tvar Cartesian = function (name) {\n\t  this._axes = {};\n\t  this._dimList = [];\n\t  /**\n\t   * @type {string}\n\t   */\n\t\n\t  this.name = name || '';\n\t};\n\t\n\tCartesian.prototype = {\n\t  constructor: Cartesian,\n\t  type: 'cartesian',\n\t\n\t  /**\n\t   * Get axis\n\t   * @param  {number|string} dim\n\t   * @return {module:echarts/coord/Cartesian~Axis}\n\t   */\n\t  getAxis: function (dim) {\n\t    return this._axes[dim];\n\t  },\n\t\n\t  /**\n\t   * Get axes list\n\t   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n\t   */\n\t  getAxes: function () {\n\t    return zrUtil.map(this._dimList, dimAxisMapper, this);\n\t  },\n\t\n\t  /**\n\t   * Get axes list by given scale type\n\t   */\n\t  getAxesByScale: function (scaleType) {\n\t    scaleType = scaleType.toLowerCase();\n\t    return zrUtil.filter(this.getAxes(), function (axis) {\n\t      return axis.scale.type === scaleType;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Add axis\n\t   * @param {module:echarts/coord/Cartesian.Axis}\n\t   */\n\t  addAxis: function (axis) {\n\t    var dim = axis.dim;\n\t    this._axes[dim] = axis;\n\t\n\t    this._dimList.push(dim);\n\t  },\n\t\n\t  /**\n\t   * Convert data to coord in nd space\n\t   * @param {Array.<number>|Object.<string, number>} val\n\t   * @return {Array.<number>|Object.<string, number>}\n\t   */\n\t  dataToCoord: function (val) {\n\t    return this._dataCoordConvert(val, 'dataToCoord');\n\t  },\n\t\n\t  /**\n\t   * Convert coord in nd space to data\n\t   * @param  {Array.<number>|Object.<string, number>} val\n\t   * @return {Array.<number>|Object.<string, number>}\n\t   */\n\t  coordToData: function (val) {\n\t    return this._dataCoordConvert(val, 'coordToData');\n\t  },\n\t  _dataCoordConvert: function (input, method) {\n\t    var dimList = this._dimList;\n\t    var output = input instanceof Array ? [] : {};\n\t\n\t    for (var i = 0; i < dimList.length; i++) {\n\t      var dim = dimList[i];\n\t      var axis = this._axes[dim];\n\t      output[dim] = axis[method](input[dim]);\n\t    }\n\t\n\t    return output;\n\t  }\n\t};\n\tvar _default = Cartesian;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 796:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Cartesian = __webpack_require__(795);\n\t\n\tfunction Cartesian2D(name) {\n\t  Cartesian.call(this, name);\n\t}\n\t\n\tCartesian2D.prototype = {\n\t  constructor: Cartesian2D,\n\t  type: 'cartesian2d',\n\t\n\t  /**\n\t   * @type {Array.<string>}\n\t   * @readOnly\n\t   */\n\t  dimensions: ['x', 'y'],\n\t\n\t  /**\n\t   * Base axis will be used on stacking.\n\t   *\n\t   * @return {module:echarts/coord/cartesian/Axis2D}\n\t   */\n\t  getBaseAxis: function () {\n\t    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n\t  },\n\t\n\t  /**\n\t   * If contain point\n\t   * @param {Array.<number>} point\n\t   * @return {boolean}\n\t   */\n\t  containPoint: function (point) {\n\t    var axisX = this.getAxis('x');\n\t    var axisY = this.getAxis('y');\n\t    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n\t  },\n\t\n\t  /**\n\t   * If contain data\n\t   * @param {Array.<number>} data\n\t   * @return {boolean}\n\t   */\n\t  containData: function (data) {\n\t    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n\t  },\n\t\n\t  /**\n\t   * @param {Array.<number>} data\n\t   * @param {Array.<number>} out\n\t   * @return {Array.<number>}\n\t   */\n\t  dataToPoint: function (data, reserved, out) {\n\t    var xAxis = this.getAxis('x');\n\t    var yAxis = this.getAxis('y');\n\t    out = out || [];\n\t    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n\t    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n\t    return out;\n\t  },\n\t\n\t  /**\n\t   * @param {Array.<number>} data\n\t   * @param {Array.<number>} out\n\t   * @return {Array.<number>}\n\t   */\n\t  clampData: function (data, out) {\n\t    var xAxisExtent = this.getAxis('x').scale.getExtent();\n\t    var yAxisExtent = this.getAxis('y').scale.getExtent();\n\t    out = out || [];\n\t    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n\t    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n\t    return out;\n\t  },\n\t\n\t  /**\n\t   * @param {Array.<number>} point\n\t   * @param {Array.<number>} out\n\t   * @return {Array.<number>}\n\t   */\n\t  pointToData: function (point, out) {\n\t    var xAxis = this.getAxis('x');\n\t    var yAxis = this.getAxis('y');\n\t    out = out || [];\n\t    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n\t    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n\t    return out;\n\t  },\n\t\n\t  /**\n\t   * Get other axis\n\t   * @param {module:echarts/coord/cartesian/Axis2D} axis\n\t   */\n\t  getOtherAxis: function (axis) {\n\t    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n\t  }\n\t};\n\tzrUtil.inherits(Cartesian2D, Cartesian);\n\tvar _default = Cartesian2D;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 797:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar _layout = __webpack_require__(76);\n\t\n\tvar getLayoutRect = _layout.getLayoutRect;\n\t\n\tvar axisHelper = __webpack_require__(92);\n\t\n\tvar Cartesian2D = __webpack_require__(796);\n\t\n\tvar Axis2D = __webpack_require__(794);\n\t\n\tvar CoordinateSystem = __webpack_require__(189);\n\t\n\t__webpack_require__(798);\n\t\n\t/**\n\t * Grid is a region which contains at most 4 cartesian systems\n\t *\n\t * TODO Default cartesian\n\t */\n\t// Depends on GridModel, AxisModel, which performs preprocess.\n\tvar each = zrUtil.each;\n\tvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n\tvar niceScaleExtent = axisHelper.niceScaleExtent;\n\t/**\n\t * Check if the axis is used in the specified grid\n\t * @inner\n\t */\n\t\n\tfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n\t  return axisModel.getCoordSysModel() === gridModel;\n\t}\n\t\n\tfunction rotateTextRect(textRect, rotate) {\n\t  var rotateRadians = rotate * Math.PI / 180;\n\t  var boundingBox = textRect.plain();\n\t  var beforeWidth = boundingBox.width;\n\t  var beforeHeight = boundingBox.height;\n\t  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n\t  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n\t  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n\t  return rotatedRect;\n\t}\n\t\n\tfunction getLabelUnionRect(axis) {\n\t  var axisModel = axis.model;\n\t  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n\t  var axisLabelModel = axisModel.getModel('axisLabel');\n\t  var rect;\n\t  var step = 1;\n\t  var labelCount = labels.length;\n\t\n\t  if (labelCount > 40) {\n\t    // Simple optimization for large amount of labels\n\t    step = Math.ceil(labelCount / 40);\n\t  }\n\t\n\t  for (var i = 0; i < labelCount; i += step) {\n\t    if (!axis.isLabelIgnored(i)) {\n\t      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n\t      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n\t      rect ? rect.union(singleRect) : rect = singleRect;\n\t    }\n\t  }\n\t\n\t  return rect;\n\t}\n\t\n\tfunction Grid(gridModel, ecModel, api) {\n\t  /**\n\t   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n\t   * @private\n\t   */\n\t  this._coordsMap = {};\n\t  /**\n\t   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n\t   * @private\n\t   */\n\t\n\t  this._coordsList = [];\n\t  /**\n\t   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n\t   * @private\n\t   */\n\t\n\t  this._axesMap = {};\n\t  /**\n\t   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n\t   * @private\n\t   */\n\t\n\t  this._axesList = [];\n\t\n\t  this._initCartesian(gridModel, ecModel, api);\n\t\n\t  this.model = gridModel;\n\t}\n\t\n\tvar gridProto = Grid.prototype;\n\tgridProto.type = 'grid';\n\tgridProto.axisPointerEnabled = true;\n\t\n\tgridProto.getRect = function () {\n\t  return this._rect;\n\t};\n\t\n\tgridProto.update = function (ecModel, api) {\n\t  var axesMap = this._axesMap;\n\t\n\t  this._updateScale(ecModel, this.model);\n\t\n\t  each(axesMap.x, function (xAxis) {\n\t    niceScaleExtent(xAxis.scale, xAxis.model);\n\t  });\n\t  each(axesMap.y, function (yAxis) {\n\t    niceScaleExtent(yAxis.scale, yAxis.model);\n\t  });\n\t  each(axesMap.x, function (xAxis) {\n\t    fixAxisOnZero(axesMap, 'y', xAxis);\n\t  });\n\t  each(axesMap.y, function (yAxis) {\n\t    fixAxisOnZero(axesMap, 'x', yAxis);\n\t  }); // Resize again if containLabel is enabled\n\t  // FIXME It may cause getting wrong grid size in data processing stage\n\t\n\t  this.resize(this.model, api);\n\t};\n\t\n\tfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n\t  // onZero can not be enabled in these two situations:\n\t  // 1. When any other axis is a category axis.\n\t  // 2. When no axis is cross 0 point.\n\t  var axes = axesMap[otherAxisDim];\n\t\n\t  if (!axis.onZero) {\n\t    return;\n\t  }\n\t\n\t  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\t\n\t  if (onZeroAxisIndex != null) {\n\t    var otherAxis = axes[onZeroAxisIndex];\n\t\n\t    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n\t      axis.onZero = false;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  for (var idx in axes) {\n\t    if (axes.hasOwnProperty(idx)) {\n\t      var otherAxis = axes[idx];\n\t\n\t      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n\t        onZeroAxisIndex = +idx;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  if (onZeroAxisIndex == null) {\n\t    axis.onZero = false;\n\t  }\n\t\n\t  axis.onZeroAxisIndex = onZeroAxisIndex;\n\t}\n\t\n\tfunction canNotOnZeroToAxis(axis) {\n\t  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n\t}\n\t/**\n\t * Resize the grid\n\t * @param {module:echarts/coord/cartesian/GridModel} gridModel\n\t * @param {module:echarts/ExtensionAPI} api\n\t */\n\t\n\t\n\tgridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\t  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n\t    width: api.getWidth(),\n\t    height: api.getHeight()\n\t  });\n\t  this._rect = gridRect;\n\t  var axesList = this._axesList;\n\t  adjustAxes(); // Minus label size\n\t\n\t  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n\t    each(axesList, function (axis) {\n\t      if (!axis.model.get('axisLabel.inside')) {\n\t        var labelUnionRect = getLabelUnionRect(axis);\n\t\n\t        if (labelUnionRect) {\n\t          var dim = axis.isHorizontal() ? 'height' : 'width';\n\t          var margin = axis.model.get('axisLabel.margin');\n\t          gridRect[dim] -= labelUnionRect[dim] + margin;\n\t\n\t          if (axis.position === 'top') {\n\t            gridRect.y += labelUnionRect.height + margin;\n\t          } else if (axis.position === 'left') {\n\t            gridRect.x += labelUnionRect.width + margin;\n\t          }\n\t        }\n\t      }\n\t    });\n\t    adjustAxes();\n\t  }\n\t\n\t  function adjustAxes() {\n\t    each(axesList, function (axis) {\n\t      var isHorizontal = axis.isHorizontal();\n\t      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n\t      var idx = axis.inverse ? 1 : 0;\n\t      axis.setExtent(extent[idx], extent[1 - idx]);\n\t      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n\t    });\n\t  }\n\t};\n\t/**\n\t * @param {string} axisType\n\t * @param {number} [axisIndex]\n\t */\n\t\n\t\n\tgridProto.getAxis = function (axisType, axisIndex) {\n\t  var axesMapOnDim = this._axesMap[axisType];\n\t\n\t  if (axesMapOnDim != null) {\n\t    if (axisIndex == null) {\n\t      // Find first axis\n\t      for (var name in axesMapOnDim) {\n\t        if (axesMapOnDim.hasOwnProperty(name)) {\n\t          return axesMapOnDim[name];\n\t        }\n\t      }\n\t    }\n\t\n\t    return axesMapOnDim[axisIndex];\n\t  }\n\t};\n\t/**\n\t * @return {Array.<module:echarts/coord/Axis>}\n\t */\n\t\n\t\n\tgridProto.getAxes = function () {\n\t  return this._axesList.slice();\n\t};\n\t/**\n\t * Usage:\n\t *      grid.getCartesian(xAxisIndex, yAxisIndex);\n\t *      grid.getCartesian(xAxisIndex);\n\t *      grid.getCartesian(null, yAxisIndex);\n\t *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n\t *\n\t * @param {number|Object} [xAxisIndex]\n\t * @param {number} [yAxisIndex]\n\t */\n\t\n\t\n\tgridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n\t  if (xAxisIndex != null && yAxisIndex != null) {\n\t    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n\t    return this._coordsMap[key];\n\t  }\n\t\n\t  if (zrUtil.isObject(xAxisIndex)) {\n\t    yAxisIndex = xAxisIndex.yAxisIndex;\n\t    xAxisIndex = xAxisIndex.xAxisIndex;\n\t  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\t\n\t\n\t  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n\t    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n\t      return coordList[i];\n\t    }\n\t  }\n\t};\n\t\n\tgridProto.getCartesians = function () {\n\t  return this._coordsList.slice();\n\t};\n\t/**\n\t * @implements\n\t * see {module:echarts/CoodinateSystem}\n\t */\n\t\n\t\n\tgridProto.convertToPixel = function (ecModel, finder, value) {\n\t  var target = this._findConvertTarget(ecModel, finder);\n\t\n\t  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n\t};\n\t/**\n\t * @implements\n\t * see {module:echarts/CoodinateSystem}\n\t */\n\t\n\t\n\tgridProto.convertFromPixel = function (ecModel, finder, value) {\n\t  var target = this._findConvertTarget(ecModel, finder);\n\t\n\t  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n\t};\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tgridProto._findConvertTarget = function (ecModel, finder) {\n\t  var seriesModel = finder.seriesModel;\n\t  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n\t  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n\t  var gridModel = finder.gridModel;\n\t  var coordsList = this._coordsList;\n\t  var cartesian;\n\t  var axis;\n\t\n\t  if (seriesModel) {\n\t    cartesian = seriesModel.coordinateSystem;\n\t    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n\t  } else if (xAxisModel && yAxisModel) {\n\t    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n\t  } else if (xAxisModel) {\n\t    axis = this.getAxis('x', xAxisModel.componentIndex);\n\t  } else if (yAxisModel) {\n\t    axis = this.getAxis('y', yAxisModel.componentIndex);\n\t  } // Lowest priority.\n\t  else if (gridModel) {\n\t      var grid = gridModel.coordinateSystem;\n\t\n\t      if (grid === this) {\n\t        cartesian = this._coordsList[0];\n\t      }\n\t    }\n\t\n\t  return {\n\t    cartesian: cartesian,\n\t    axis: axis\n\t  };\n\t};\n\t/**\n\t * @implements\n\t * see {module:echarts/CoodinateSystem}\n\t */\n\t\n\t\n\tgridProto.containPoint = function (point) {\n\t  var coord = this._coordsList[0];\n\t\n\t  if (coord) {\n\t    return coord.containPoint(point);\n\t  }\n\t};\n\t/**\n\t * Initialize cartesian coordinate systems\n\t * @private\n\t */\n\t\n\t\n\tgridProto._initCartesian = function (gridModel, ecModel, api) {\n\t  var axisPositionUsed = {\n\t    left: false,\n\t    right: false,\n\t    top: false,\n\t    bottom: false\n\t  };\n\t  var axesMap = {\n\t    x: {},\n\t    y: {}\n\t  };\n\t  var axesCount = {\n\t    x: 0,\n\t    y: 0\n\t  }; /// Create axis\n\t\n\t  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n\t  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\t\n\t  if (!axesCount.x || !axesCount.y) {\n\t    // Roll back when there no either x or y axis\n\t    this._axesMap = {};\n\t    this._axesList = [];\n\t    return;\n\t  }\n\t\n\t  this._axesMap = axesMap; /// Create cartesian2d\n\t\n\t  each(axesMap.x, function (xAxis, xAxisIndex) {\n\t    each(axesMap.y, function (yAxis, yAxisIndex) {\n\t      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n\t      var cartesian = new Cartesian2D(key);\n\t      cartesian.grid = this;\n\t      cartesian.model = gridModel;\n\t      this._coordsMap[key] = cartesian;\n\t\n\t      this._coordsList.push(cartesian);\n\t\n\t      cartesian.addAxis(xAxis);\n\t      cartesian.addAxis(yAxis);\n\t    }, this);\n\t  }, this);\n\t\n\t  function createAxisCreator(axisType) {\n\t    return function (axisModel, idx) {\n\t      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n\t        return;\n\t      }\n\t\n\t      var axisPosition = axisModel.get('position');\n\t\n\t      if (axisType === 'x') {\n\t        // Fix position\n\t        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n\t          // Default bottom of X\n\t          axisPosition = 'bottom';\n\t\n\t          if (axisPositionUsed[axisPosition]) {\n\t            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n\t          }\n\t        }\n\t      } else {\n\t        // Fix position\n\t        if (axisPosition !== 'left' && axisPosition !== 'right') {\n\t          // Default left of Y\n\t          axisPosition = 'left';\n\t\n\t          if (axisPositionUsed[axisPosition]) {\n\t            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n\t          }\n\t        }\n\t      }\n\t\n\t      axisPositionUsed[axisPosition] = true;\n\t      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n\t      var isCategory = axis.type === 'category';\n\t      axis.onBand = isCategory && axisModel.get('boundaryGap');\n\t      axis.inverse = axisModel.get('inverse');\n\t      axis.onZero = axisModel.get('axisLine.onZero');\n\t      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\t\n\t      axisModel.axis = axis; // Inject axisModel into axis\n\t\n\t      axis.model = axisModel; // Inject grid info axis\n\t\n\t      axis.grid = this; // Index of axis, can be used as key\n\t\n\t      axis.index = idx;\n\t\n\t      this._axesList.push(axis);\n\t\n\t      axesMap[axisType][idx] = axis;\n\t      axesCount[axisType]++;\n\t    };\n\t  }\n\t};\n\t/**\n\t * Update cartesian properties from series\n\t * @param  {module:echarts/model/Option} option\n\t * @private\n\t */\n\t\n\t\n\tgridProto._updateScale = function (ecModel, gridModel) {\n\t  // Reset scale\n\t  zrUtil.each(this._axesList, function (axis) {\n\t    axis.scale.setExtent(Infinity, -Infinity);\n\t  });\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    if (isCartesian2D(seriesModel)) {\n\t      var axesModels = findAxesModels(seriesModel, ecModel);\n\t      var xAxisModel = axesModels[0];\n\t      var yAxisModel = axesModels[1];\n\t\n\t      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n\t        return;\n\t      }\n\t\n\t      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n\t      var data = seriesModel.getData();\n\t      var xAxis = cartesian.getAxis('x');\n\t      var yAxis = cartesian.getAxis('y');\n\t\n\t      if (data.type === 'list') {\n\t        unionExtent(data, xAxis, seriesModel);\n\t        unionExtent(data, yAxis, seriesModel);\n\t      }\n\t    }\n\t  }, this);\n\t\n\t  function unionExtent(data, axis, seriesModel) {\n\t    each(data.mapDimension(axis.dim, true), function (dim) {\n\t      axis.scale.unionExtentFromData(data, dim);\n\t    });\n\t  }\n\t};\n\t/**\n\t * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n\t * @return {Object} {baseAxes: [], otherAxes: []}\n\t */\n\t\n\t\n\tgridProto.getTooltipAxes = function (dim) {\n\t  var baseAxes = [];\n\t  var otherAxes = [];\n\t  each(this.getCartesians(), function (cartesian) {\n\t    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n\t    var otherAxis = cartesian.getOtherAxis(baseAxis);\n\t    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n\t    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n\t  });\n\t  return {\n\t    baseAxes: baseAxes,\n\t    otherAxes: otherAxes\n\t  };\n\t};\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction updateAxisTransform(axis, coordBase) {\n\t  var axisExtent = axis.getExtent();\n\t  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\t\n\t  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n\t    return coord + coordBase;\n\t  } : function (coord) {\n\t    return axisExtentSum - coord + coordBase;\n\t  };\n\t  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n\t    return coord - coordBase;\n\t  } : function (coord) {\n\t    return axisExtentSum - coord + coordBase;\n\t  };\n\t}\n\t\n\tvar axesTypes = ['xAxis', 'yAxis'];\n\t/**\n\t * @inner\n\t */\n\t\n\tfunction findAxesModels(seriesModel, ecModel) {\n\t  return zrUtil.map(axesTypes, function (axisType) {\n\t    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\t    return axisModel;\n\t  });\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction isCartesian2D(seriesModel) {\n\t  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n\t}\n\t\n\tGrid.create = function (ecModel, api) {\n\t  var grids = [];\n\t  ecModel.eachComponent('grid', function (gridModel, idx) {\n\t    var grid = new Grid(gridModel, ecModel, api);\n\t    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n\t    // should be performed in create stage.\n\t\n\t    grid.resize(gridModel, api, true);\n\t    gridModel.coordinateSystem = grid;\n\t    grids.push(grid);\n\t  }); // Inject the coordinateSystems into seriesModel\n\t\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    if (!isCartesian2D(seriesModel)) {\n\t      return;\n\t    }\n\t\n\t    var axesModels = findAxesModels(seriesModel, ecModel);\n\t    var xAxisModel = axesModels[0];\n\t    var yAxisModel = axesModels[1];\n\t    var gridModel = xAxisModel.getCoordSysModel();\n\t    var grid = gridModel.coordinateSystem;\n\t    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n\t  });\n\t  return grids;\n\t}; // For deciding which dimensions to use when creating list data\n\t\n\t\n\tGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\tCoordinateSystem.register('cartesian2d', Grid);\n\tvar _default = Grid;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 798:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(421);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\t// Grid 是在有直角坐标系的时候必须要存在的\n\t// 所以这里也要被 Cartesian2D 依赖\n\tvar _default = ComponentModel.extend({\n\t  type: 'grid',\n\t  dependencies: ['xAxis', 'yAxis'],\n\t  layoutMode: 'box',\n\t\n\t  /**\n\t   * @type {module:echarts/coord/cartesian/Grid}\n\t   */\n\t  coordinateSystem: null,\n\t  defaultOption: {\n\t    show: false,\n\t    zlevel: 0,\n\t    z: 0,\n\t    left: '10%',\n\t    top: 60,\n\t    right: '10%',\n\t    bottom: 60,\n\t    // If grid size contain label\n\t    containLabel: false,\n\t    // width: {totalWidth} - left - right,\n\t    // height: {totalHeight} - top - bottom,\n\t    backgroundColor: 'rgba(0,0,0,0)',\n\t    borderWidth: 1,\n\t    borderColor: '#ccc'\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 799:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar bbox = __webpack_require__(358);\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar polygonContain = __webpack_require__(1497);\n\t\n\t/**\n\t * @module echarts/coord/geo/Region\n\t */\n\t\n\t/**\n\t * @param {string} name\n\t * @param {Array} geometries\n\t * @param {Array.<number>} cp\n\t */\n\tfunction Region(name, geometries, cp) {\n\t  /**\n\t   * @type {string}\n\t   * @readOnly\n\t   */\n\t  this.name = name;\n\t  /**\n\t   * @type {Array.<Array>}\n\t   * @readOnly\n\t   */\n\t\n\t  this.geometries = geometries;\n\t\n\t  if (!cp) {\n\t    var rect = this.getBoundingRect();\n\t    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n\t  } else {\n\t    cp = [cp[0], cp[1]];\n\t  }\n\t  /**\n\t   * @type {Array.<number>}\n\t   */\n\t\n\t\n\t  this.center = cp;\n\t}\n\t\n\tRegion.prototype = {\n\t  constructor: Region,\n\t  properties: null,\n\t\n\t  /**\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  getBoundingRect: function () {\n\t    var rect = this._rect;\n\t\n\t    if (rect) {\n\t      return rect;\n\t    }\n\t\n\t    var MAX_NUMBER = Number.MAX_VALUE;\n\t    var min = [MAX_NUMBER, MAX_NUMBER];\n\t    var max = [-MAX_NUMBER, -MAX_NUMBER];\n\t    var min2 = [];\n\t    var max2 = [];\n\t    var geometries = this.geometries;\n\t\n\t    for (var i = 0; i < geometries.length; i++) {\n\t      // Only support polygon\n\t      if (geometries[i].type !== 'polygon') {\n\t        continue;\n\t      } // Doesn't consider hole\n\t\n\t\n\t      var exterior = geometries[i].exterior;\n\t      bbox.fromPoints(exterior, min2, max2);\n\t      vec2.min(min, min, min2);\n\t      vec2.max(max, max, max2);\n\t    } // No data\n\t\n\t\n\t    if (i === 0) {\n\t      min[0] = min[1] = max[0] = max[1] = 0;\n\t    }\n\t\n\t    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t  },\n\t\n\t  /**\n\t   * @param {<Array.<number>} coord\n\t   * @return {boolean}\n\t   */\n\t  contain: function (coord) {\n\t    var rect = this.getBoundingRect();\n\t    var geometries = this.geometries;\n\t\n\t    if (!rect.contain(coord[0], coord[1])) {\n\t      return false;\n\t    }\n\t\n\t    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n\t      // Only support polygon.\n\t      if (geometries[i].type !== 'polygon') {\n\t        continue;\n\t      }\n\t\n\t      var exterior = geometries[i].exterior;\n\t      var interiors = geometries[i].interiors;\n\t\n\t      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n\t        // Not in the region if point is in the hole.\n\t        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n\t          if (polygonContain.contain(interiors[k])) {\n\t            continue loopGeo;\n\t          }\n\t        }\n\t\n\t        return true;\n\t      }\n\t    }\n\t\n\t    return false;\n\t  },\n\t  transformTo: function (x, y, width, height) {\n\t    var rect = this.getBoundingRect();\n\t    var aspect = rect.width / rect.height;\n\t\n\t    if (!width) {\n\t      width = aspect * height;\n\t    } else if (!height) {\n\t      height = width / aspect;\n\t    }\n\t\n\t    var target = new BoundingRect(x, y, width, height);\n\t    var transform = rect.calculateTransform(target);\n\t    var geometries = this.geometries;\n\t\n\t    for (var i = 0; i < geometries.length; i++) {\n\t      // Only support polygon.\n\t      if (geometries[i].type !== 'polygon') {\n\t        continue;\n\t      }\n\t\n\t      var exterior = geometries[i].exterior;\n\t      var interiors = geometries[i].interiors;\n\t\n\t      for (var p = 0; p < exterior.length; p++) {\n\t        vec2.applyTransform(exterior[p], exterior[p], transform);\n\t      }\n\t\n\t      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n\t        for (var p = 0; p < interiors[h].length; p++) {\n\t          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n\t        }\n\t      }\n\t    }\n\t\n\t    rect = this._rect;\n\t    rect.copy(target); // Update center\n\t\n\t    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n\t  }\n\t};\n\tvar _default = Region;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 800:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Region = __webpack_require__(799);\n\t\n\t/**\n\t * Parse and decode geo json\n\t * @module echarts/coord/geo/parseGeoJson\n\t */\n\tfunction decode(json) {\n\t  if (!json.UTF8Encoding) {\n\t    return json;\n\t  }\n\t\n\t  var encodeScale = json.UTF8Scale;\n\t\n\t  if (encodeScale == null) {\n\t    encodeScale = 1024;\n\t  }\n\t\n\t  var features = json.features;\n\t\n\t  for (var f = 0; f < features.length; f++) {\n\t    var feature = features[f];\n\t    var geometry = feature.geometry;\n\t    var coordinates = geometry.coordinates;\n\t    var encodeOffsets = geometry.encodeOffsets;\n\t\n\t    for (var c = 0; c < coordinates.length; c++) {\n\t      var coordinate = coordinates[c];\n\t\n\t      if (geometry.type === 'Polygon') {\n\t        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n\t      } else if (geometry.type === 'MultiPolygon') {\n\t        for (var c2 = 0; c2 < coordinate.length; c2++) {\n\t          var polygon = coordinate[c2];\n\t          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n\t        }\n\t      }\n\t    }\n\t  } // Has been decoded\n\t\n\t\n\t  json.UTF8Encoding = false;\n\t  return json;\n\t}\n\t\n\tfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n\t  var result = [];\n\t  var prevX = encodeOffsets[0];\n\t  var prevY = encodeOffsets[1];\n\t\n\t  for (var i = 0; i < coordinate.length; i += 2) {\n\t    var x = coordinate.charCodeAt(i) - 64;\n\t    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\t\n\t    x = x >> 1 ^ -(x & 1);\n\t    y = y >> 1 ^ -(y & 1); // Delta deocding\n\t\n\t    x += prevX;\n\t    y += prevY;\n\t    prevX = x;\n\t    prevY = y; // Dequantize\n\t\n\t    result.push([x / encodeScale, y / encodeScale]);\n\t  }\n\t\n\t  return result;\n\t}\n\t/**\n\t * @alias module:echarts/coord/geo/parseGeoJson\n\t * @param {Object} geoJson\n\t * @return {module:zrender/container/Group}\n\t */\n\t\n\t\n\tfunction _default(geoJson) {\n\t  decode(geoJson);\n\t  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n\t    // Output of mapshaper may have geometry null\n\t    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n\t  }), function (featureObj) {\n\t    var properties = featureObj.properties;\n\t    var geo = featureObj.geometry;\n\t    var coordinates = geo.coordinates;\n\t    var geometries = [];\n\t\n\t    if (geo.type === 'Polygon') {\n\t      geometries.push({\n\t        type: 'polygon',\n\t        // According to the GeoJSON specification.\n\t        // First must be exterior, and the rest are all interior(holes).\n\t        exterior: coordinates[0],\n\t        interiors: coordinates.slice(1)\n\t      });\n\t    }\n\t\n\t    if (geo.type === 'MultiPolygon') {\n\t      zrUtil.each(coordinates, function (item) {\n\t        if (item[0]) {\n\t          geometries.push({\n\t            type: 'polygon',\n\t            exterior: item[0],\n\t            interiors: item.slice(1)\n\t          });\n\t        }\n\t      });\n\t    }\n\t\n\t    var region = new Region(properties.name, geometries, properties.cp);\n\t    region.properties = properties;\n\t    return region;\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 801:\n/***/ (function(module, exports) {\n\n\tfunction defaultKeyGetter(item) {\n\t  return item;\n\t}\n\t/**\n\t * @param {Array} oldArr\n\t * @param {Array} newArr\n\t * @param {Function} oldKeyGetter\n\t * @param {Function} newKeyGetter\n\t * @param {Object} [context] Can be visited by this.context in callback.\n\t */\n\t\n\t\n\tfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n\t  this._old = oldArr;\n\t  this._new = newArr;\n\t  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n\t  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\t  this.context = context;\n\t}\n\t\n\tDataDiffer.prototype = {\n\t  constructor: DataDiffer,\n\t\n\t  /**\n\t   * Callback function when add a data\n\t   */\n\t  add: function (func) {\n\t    this._add = func;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Callback function when update a data\n\t   */\n\t  update: function (func) {\n\t    this._update = func;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Callback function when remove a data\n\t   */\n\t  remove: function (func) {\n\t    this._remove = func;\n\t    return this;\n\t  },\n\t  execute: function () {\n\t    var oldArr = this._old;\n\t    var newArr = this._new;\n\t    var oldDataIndexMap = {};\n\t    var newDataIndexMap = {};\n\t    var oldDataKeyArr = [];\n\t    var newDataKeyArr = [];\n\t    var i;\n\t    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n\t    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n\t    // when duplicate keys exists (consider newDataIndex.pop() below).\n\t    // For performance consideration, these code below do not look neat.\n\t\n\t    for (i = 0; i < oldArr.length; i++) {\n\t      var key = oldDataKeyArr[i];\n\t      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\t\n\t      if (idx != null) {\n\t        // Consider there is duplicate key (for example, use dataItem.name as key).\n\t        // We should make sure every item in newArr and oldArr can be visited.\n\t        var len = idx.length;\n\t\n\t        if (len) {\n\t          len === 1 && (newDataIndexMap[key] = null);\n\t          idx = idx.unshift();\n\t        } else {\n\t          newDataIndexMap[key] = null;\n\t        }\n\t\n\t        this._update && this._update(idx, i);\n\t      } else {\n\t        this._remove && this._remove(i);\n\t      }\n\t    }\n\t\n\t    for (var i = 0; i < newDataKeyArr.length; i++) {\n\t      var key = newDataKeyArr[i];\n\t\n\t      if (newDataIndexMap.hasOwnProperty(key)) {\n\t        var idx = newDataIndexMap[key];\n\t\n\t        if (idx == null) {\n\t          continue;\n\t        } // idx can never be empty array here. see 'set null' logic above.\n\t\n\t\n\t        if (!idx.length) {\n\t          this._add && this._add(idx);\n\t        } else {\n\t          for (var j = 0, len = idx.length; j < len; j++) {\n\t            this._add && this._add(idx[j]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n\t  for (var i = 0; i < arr.length; i++) {\n\t    // Add prefix to avoid conflict with Object.prototype.\n\t    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n\t    var existence = map[key];\n\t\n\t    if (existence == null) {\n\t      keyArr.push(key);\n\t      map[key] = i;\n\t    } else {\n\t      if (!existence.length) {\n\t        map[key] = existence = [existence];\n\t      }\n\t\n\t      existence.push(i);\n\t    }\n\t  }\n\t}\n\t\n\tvar _default = DataDiffer;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 802:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar _clazz = __webpack_require__(56);\n\t\n\tvar enableClassCheck = _clazz.enableClassCheck;\n\t\n\t/**\n\t * Graph data structure\n\t *\n\t * @module echarts/data/Graph\n\t * @author Yi Shen(https://www.github.com/pissang)\n\t */\n\t// id may be function name of Object, add a prefix to avoid this problem.\n\tfunction generateNodeKey(id) {\n\t  return '_EC_' + id;\n\t}\n\t/**\n\t * @alias module:echarts/data/Graph\n\t * @constructor\n\t * @param {boolean} directed\n\t */\n\t\n\t\n\tvar Graph = function (directed) {\n\t  /**\n\t   * 是否是有向图\n\t   * @type {boolean}\n\t   * @private\n\t   */\n\t  this._directed = directed || false;\n\t  /**\n\t   * @type {Array.<module:echarts/data/Graph.Node>}\n\t   * @readOnly\n\t   */\n\t\n\t  this.nodes = [];\n\t  /**\n\t   * @type {Array.<module:echarts/data/Graph.Edge>}\n\t   * @readOnly\n\t   */\n\t\n\t  this.edges = [];\n\t  /**\n\t   * @type {Object.<string, module:echarts/data/Graph.Node>}\n\t   * @private\n\t   */\n\t\n\t  this._nodesMap = {};\n\t  /**\n\t   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n\t   * @private\n\t   */\n\t\n\t  this._edgesMap = {};\n\t  /**\n\t   * @type {module:echarts/data/List}\n\t   * @readOnly\n\t   */\n\t\n\t  this.data;\n\t  /**\n\t   * @type {module:echarts/data/List}\n\t   * @readOnly\n\t   */\n\t\n\t  this.edgeData;\n\t};\n\t\n\tvar graphProto = Graph.prototype;\n\t/**\n\t * @type {string}\n\t */\n\t\n\tgraphProto.type = 'graph';\n\t/**\n\t * If is directed graph\n\t * @return {boolean}\n\t */\n\t\n\tgraphProto.isDirected = function () {\n\t  return this._directed;\n\t};\n\t/**\n\t * Add a new node\n\t * @param {string} id\n\t * @param {number} [dataIndex]\n\t */\n\t\n\t\n\tgraphProto.addNode = function (id, dataIndex) {\n\t  id = id || '' + dataIndex;\n\t  var nodesMap = this._nodesMap;\n\t\n\t  if (nodesMap[generateNodeKey(id)]) {\n\t    return;\n\t  }\n\t\n\t  var node = new Node(id, dataIndex);\n\t  node.hostGraph = this;\n\t  this.nodes.push(node);\n\t  nodesMap[generateNodeKey(id)] = node;\n\t  return node;\n\t};\n\t/**\n\t * Get node by data index\n\t * @param  {number} dataIndex\n\t * @return {module:echarts/data/Graph~Node}\n\t */\n\t\n\t\n\tgraphProto.getNodeByIndex = function (dataIndex) {\n\t  var rawIdx = this.data.getRawIndex(dataIndex);\n\t  return this.nodes[rawIdx];\n\t};\n\t/**\n\t * Get node by id\n\t * @param  {string} id\n\t * @return {module:echarts/data/Graph.Node}\n\t */\n\t\n\t\n\tgraphProto.getNodeById = function (id) {\n\t  return this._nodesMap[generateNodeKey(id)];\n\t};\n\t/**\n\t * Add a new edge\n\t * @param {number|string|module:echarts/data/Graph.Node} n1\n\t * @param {number|string|module:echarts/data/Graph.Node} n2\n\t * @param {number} [dataIndex=-1]\n\t * @return {module:echarts/data/Graph.Edge}\n\t */\n\t\n\t\n\tgraphProto.addEdge = function (n1, n2, dataIndex) {\n\t  var nodesMap = this._nodesMap;\n\t  var edgesMap = this._edgesMap; // PNEDING\n\t\n\t  if (typeof n1 === 'number') {\n\t    n1 = this.nodes[n1];\n\t  }\n\t\n\t  if (typeof n2 === 'number') {\n\t    n2 = this.nodes[n2];\n\t  }\n\t\n\t  if (!Node.isInstance(n1)) {\n\t    n1 = nodesMap[generateNodeKey(n1)];\n\t  }\n\t\n\t  if (!Node.isInstance(n2)) {\n\t    n2 = nodesMap[generateNodeKey(n2)];\n\t  }\n\t\n\t  if (!n1 || !n2) {\n\t    return;\n\t  }\n\t\n\t  var key = n1.id + '-' + n2.id; // PENDING\n\t\n\t  if (edgesMap[key]) {\n\t    return;\n\t  }\n\t\n\t  var edge = new Edge(n1, n2, dataIndex);\n\t  edge.hostGraph = this;\n\t\n\t  if (this._directed) {\n\t    n1.outEdges.push(edge);\n\t    n2.inEdges.push(edge);\n\t  }\n\t\n\t  n1.edges.push(edge);\n\t\n\t  if (n1 !== n2) {\n\t    n2.edges.push(edge);\n\t  }\n\t\n\t  this.edges.push(edge);\n\t  edgesMap[key] = edge;\n\t  return edge;\n\t};\n\t/**\n\t * Get edge by data index\n\t * @param  {number} dataIndex\n\t * @return {module:echarts/data/Graph~Node}\n\t */\n\t\n\t\n\tgraphProto.getEdgeByIndex = function (dataIndex) {\n\t  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n\t  return this.edges[rawIdx];\n\t};\n\t/**\n\t * Get edge by two linked nodes\n\t * @param  {module:echarts/data/Graph.Node|string} n1\n\t * @param  {module:echarts/data/Graph.Node|string} n2\n\t * @return {module:echarts/data/Graph.Edge}\n\t */\n\t\n\t\n\tgraphProto.getEdge = function (n1, n2) {\n\t  if (Node.isInstance(n1)) {\n\t    n1 = n1.id;\n\t  }\n\t\n\t  if (Node.isInstance(n2)) {\n\t    n2 = n2.id;\n\t  }\n\t\n\t  var edgesMap = this._edgesMap;\n\t\n\t  if (this._directed) {\n\t    return edgesMap[n1 + '-' + n2];\n\t  } else {\n\t    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n\t  }\n\t};\n\t/**\n\t * Iterate all nodes\n\t * @param  {Function} cb\n\t * @param  {*} [context]\n\t */\n\t\n\t\n\tgraphProto.eachNode = function (cb, context) {\n\t  var nodes = this.nodes;\n\t  var len = nodes.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (nodes[i].dataIndex >= 0) {\n\t      cb.call(context, nodes[i], i);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Iterate all edges\n\t * @param  {Function} cb\n\t * @param  {*} [context]\n\t */\n\t\n\t\n\tgraphProto.eachEdge = function (cb, context) {\n\t  var edges = this.edges;\n\t  var len = edges.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n\t      cb.call(context, edges[i], i);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Breadth first traverse\n\t * @param {Function} cb\n\t * @param {module:echarts/data/Graph.Node} startNode\n\t * @param {string} [direction='none'] 'none'|'in'|'out'\n\t * @param {*} [context]\n\t */\n\t\n\t\n\tgraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n\t  if (!Node.isInstance(startNode)) {\n\t    startNode = this._nodesMap[generateNodeKey(startNode)];\n\t  }\n\t\n\t  if (!startNode) {\n\t    return;\n\t  }\n\t\n\t  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\t\n\t  for (var i = 0; i < this.nodes.length; i++) {\n\t    this.nodes[i].__visited = false;\n\t  }\n\t\n\t  if (cb.call(context, startNode, null)) {\n\t    return;\n\t  }\n\t\n\t  var queue = [startNode];\n\t\n\t  while (queue.length) {\n\t    var currentNode = queue.shift();\n\t    var edges = currentNode[edgeType];\n\t\n\t    for (var i = 0; i < edges.length; i++) {\n\t      var e = edges[i];\n\t      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\t\n\t      if (!otherNode.__visited) {\n\t        if (cb.call(context, otherNode, currentNode)) {\n\t          // Stop traversing\n\t          return;\n\t        }\n\t\n\t        queue.push(otherNode);\n\t        otherNode.__visited = true;\n\t      }\n\t    }\n\t  }\n\t}; // TODO\n\t// graphProto.depthFirstTraverse = function (\n\t//     cb, startNode, direction, context\n\t// ) {\n\t// };\n\t// Filter update\n\t\n\t\n\tgraphProto.update = function () {\n\t  var data = this.data;\n\t  var edgeData = this.edgeData;\n\t  var nodes = this.nodes;\n\t  var edges = this.edges;\n\t\n\t  for (var i = 0, len = nodes.length; i < len; i++) {\n\t    nodes[i].dataIndex = -1;\n\t  }\n\t\n\t  for (var i = 0, len = data.count(); i < len; i++) {\n\t    nodes[data.getRawIndex(i)].dataIndex = i;\n\t  }\n\t\n\t  edgeData.filterSelf(function (idx) {\n\t    var edge = edges[edgeData.getRawIndex(idx)];\n\t    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n\t  }); // Update edge\n\t\n\t  for (var i = 0, len = edges.length; i < len; i++) {\n\t    edges[i].dataIndex = -1;\n\t  }\n\t\n\t  for (var i = 0, len = edgeData.count(); i < len; i++) {\n\t    edges[edgeData.getRawIndex(i)].dataIndex = i;\n\t  }\n\t};\n\t/**\n\t * @return {module:echarts/data/Graph}\n\t */\n\t\n\t\n\tgraphProto.clone = function () {\n\t  var graph = new Graph(this._directed);\n\t  var nodes = this.nodes;\n\t  var edges = this.edges;\n\t\n\t  for (var i = 0; i < nodes.length; i++) {\n\t    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n\t  }\n\t\n\t  for (var i = 0; i < edges.length; i++) {\n\t    var e = edges[i];\n\t    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n\t  }\n\t\n\t  return graph;\n\t};\n\t/**\n\t * @alias module:echarts/data/Graph.Node\n\t */\n\t\n\t\n\tfunction Node(id, dataIndex) {\n\t  /**\n\t  * @type {string}\n\t  */\n\t  this.id = id == null ? '' : id;\n\t  /**\n\t  * @type {Array.<module:echarts/data/Graph.Edge>}\n\t  */\n\t\n\t  this.inEdges = [];\n\t  /**\n\t  * @type {Array.<module:echarts/data/Graph.Edge>}\n\t  */\n\t\n\t  this.outEdges = [];\n\t  /**\n\t  * @type {Array.<module:echarts/data/Graph.Edge>}\n\t  */\n\t\n\t  this.edges = [];\n\t  /**\n\t   * @type {module:echarts/data/Graph}\n\t   */\n\t\n\t  this.hostGraph;\n\t  /**\n\t   * @type {number}\n\t   */\n\t\n\t  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n\t}\n\t\n\tNode.prototype = {\n\t  constructor: Node,\n\t\n\t  /**\n\t   * @return {number}\n\t   */\n\t  degree: function () {\n\t    return this.edges.length;\n\t  },\n\t\n\t  /**\n\t   * @return {number}\n\t   */\n\t  inDegree: function () {\n\t    return this.inEdges.length;\n\t  },\n\t\n\t  /**\n\t  * @return {number}\n\t  */\n\t  outDegree: function () {\n\t    return this.outEdges.length;\n\t  },\n\t\n\t  /**\n\t   * @param {string} [path]\n\t   * @return {module:echarts/model/Model}\n\t   */\n\t  getModel: function (path) {\n\t    if (this.dataIndex < 0) {\n\t      return;\n\t    }\n\t\n\t    var graph = this.hostGraph;\n\t    var itemModel = graph.data.getItemModel(this.dataIndex);\n\t    return itemModel.getModel(path);\n\t  }\n\t};\n\t/**\n\t * 图边\n\t * @alias module:echarts/data/Graph.Edge\n\t * @param {module:echarts/data/Graph.Node} n1\n\t * @param {module:echarts/data/Graph.Node} n2\n\t * @param {number} [dataIndex=-1]\n\t */\n\t\n\tfunction Edge(n1, n2, dataIndex) {\n\t  /**\n\t   * 节点1，如果是有向图则为源节点\n\t   * @type {module:echarts/data/Graph.Node}\n\t   */\n\t  this.node1 = n1;\n\t  /**\n\t   * 节点2，如果是有向图则为目标节点\n\t   * @type {module:echarts/data/Graph.Node}\n\t   */\n\t\n\t  this.node2 = n2;\n\t  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n\t}\n\t/**\n\t * @param {string} [path]\n\t * @return {module:echarts/model/Model}\n\t */\n\t\n\t\n\tEdge.prototype.getModel = function (path) {\n\t  if (this.dataIndex < 0) {\n\t    return;\n\t  }\n\t\n\t  var graph = this.hostGraph;\n\t  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n\t  return itemModel.getModel(path);\n\t};\n\t\n\tvar createGraphDataProxyMixin = function (hostName, dataName) {\n\t  return {\n\t    /**\n\t     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n\t     * @return {number}\n\t     */\n\t    getValue: function (dimension) {\n\t      var data = this[hostName][dataName];\n\t      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n\t    },\n\t\n\t    /**\n\t     * @param {Object|string} key\n\t     * @param {*} [value]\n\t     */\n\t    setVisual: function (key, value) {\n\t      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n\t    },\n\t\n\t    /**\n\t     * @param {string} key\n\t     * @return {boolean}\n\t     */\n\t    getVisual: function (key, ignoreParent) {\n\t      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n\t    },\n\t\n\t    /**\n\t     * @param {Object} layout\n\t     * @return {boolean} [merge=false]\n\t     */\n\t    setLayout: function (layout, merge) {\n\t      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n\t    },\n\t\n\t    /**\n\t     * @return {Object}\n\t     */\n\t    getLayout: function () {\n\t      return this[hostName][dataName].getItemLayout(this.dataIndex);\n\t    },\n\t\n\t    /**\n\t     * @return {module:zrender/Element}\n\t     */\n\t    getGraphicEl: function () {\n\t      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n\t    },\n\t\n\t    /**\n\t     * @return {number}\n\t     */\n\t    getRawIndex: function () {\n\t      return this[hostName][dataName].getRawIndex(this.dataIndex);\n\t    }\n\t  };\n\t};\n\t\n\tzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\n\tzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\n\tGraph.Node = Node;\n\tGraph.Edge = Edge;\n\tenableClassCheck(Node);\n\tenableClassCheck(Edge);\n\tvar _default = Graph;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 191:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar DataDiffer = __webpack_require__(801);\n\t\n\tvar Source = __webpack_require__(127);\n\t\n\tvar _dataProvider = __webpack_require__(128);\n\t\n\tvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\n\tvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\t\n\tvar _dimensionHelper = __webpack_require__(269);\n\t\n\tvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\t\n\t/**\n\t * List for data storage\n\t * @module echarts/data/List\n\t */\n\tvar isObject = zrUtil.isObject;\n\tvar UNDEFINED = 'undefined';\n\tvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n\t// which will cause weird udpate animation.\n\t\n\tvar ID_PREFIX = 'e\\0\\0';\n\tvar dataCtors = {\n\t  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n\t  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n\t  // Ordinal data type can be string or int\n\t  'ordinal': Array,\n\t  'number': Array,\n\t  'time': Array\n\t};\n\t\n\tfunction getIndicesCtor(list) {\n\t  var CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\n\t  var CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array; // The possible max value in this._indicies is always this._rawCount despite of filtering.\n\t\n\t  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n\t}\n\t\n\tfunction cloneChunk(originalChunk) {\n\t  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\t\n\t  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n\t}\n\t\n\tvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\t\n\tfunction transferProperties(a, b) {\n\t  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n\t    if (b.hasOwnProperty(propName)) {\n\t      a[propName] = b[propName];\n\t    }\n\t  });\n\t  a.__wrappedMethods = b.__wrappedMethods;\n\t}\n\t/**\n\t * @constructor\n\t * @alias module:echarts/data/List\n\t *\n\t * @param {Array.<string|Object>} dimensions\n\t *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n\t *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n\t *      Spetial fields: {\n\t *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n\t *      }\n\t * @param {module:echarts/model/Model} hostModel\n\t */\n\t\n\t\n\tvar List = function (dimensions, hostModel) {\n\t  dimensions = dimensions || ['x', 'y'];\n\t  var dimensionInfos = {};\n\t  var dimensionNames = [];\n\t\n\t  for (var i = 0; i < dimensions.length; i++) {\n\t    var dimensionName;\n\t    var dimensionInfo = {};\n\t\n\t    if (typeof dimensions[i] === 'string') {\n\t      dimensionName = dimensions[i];\n\t      dimensionInfo = {\n\t        name: dimensionName,\n\t        coordDim: dimensionName,\n\t        coordDimIndex: 0,\n\t        stackable: false,\n\t        // Type can be 'float', 'int', 'number'\n\t        // Default is float64\n\t        type: 'float'\n\t      };\n\t    } else {\n\t      dimensionInfo = dimensions[i];\n\t      dimensionName = dimensionInfo.name;\n\t      dimensionInfo.type = dimensionInfo.type || 'float';\n\t\n\t      if (!dimensionInfo.coordDim) {\n\t        dimensionInfo.coordDim = dimensionName;\n\t        dimensionInfo.coordDimIndex = 0;\n\t      }\n\t    }\n\t\n\t    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n\t    dimensionNames.push(dimensionName);\n\t    dimensionInfos[dimensionName] = dimensionInfo;\n\t    dimensionInfo.index = i;\n\t  }\n\t  /**\n\t   * @readOnly\n\t   * @type {Array.<string>}\n\t   */\n\t\n\t\n\t  this.dimensions = dimensionNames;\n\t  /**\n\t   * Infomation of each data dimension, like data type.\n\t   * @type {Object}\n\t   */\n\t\n\t  this._dimensionInfos = dimensionInfos;\n\t  /**\n\t   * @type {module:echarts/model/Model}\n\t   */\n\t\n\t  this.hostModel = hostModel;\n\t  /**\n\t   * @type {module:echarts/model/Model}\n\t   */\n\t\n\t  this.dataType;\n\t  /**\n\t   * Indices stores the indices of data subset after filtered.\n\t   * This data subset will be used in chart.\n\t   * @type {Array.<number>}\n\t   * @readOnly\n\t   */\n\t\n\t  this._indices = null;\n\t  this._count = 0;\n\t  this._rawCount = 0;\n\t  /**\n\t   * Data storage\n\t   * @type {Object.<key, Array.<TypedArray|Array>>}\n\t   * @private\n\t   */\n\t\n\t  this._storage = {};\n\t  /**\n\t   * @type {Array.<string>}\n\t   */\n\t\n\t  this._nameList = [];\n\t  /**\n\t   * @type {Array.<string>}\n\t   */\n\t\n\t  this._idList = [];\n\t  /**\n\t   * Models of data option is stored sparse for optimizing memory cost\n\t   * @type {Array.<module:echarts/model/Model>}\n\t   * @private\n\t   */\n\t\n\t  this._optionModels = [];\n\t  /**\n\t   * @param {module:echarts/data/List}\n\t   */\n\t\n\t  this.stackedOn = null;\n\t  /**\n\t   * Global visual properties after visual coding\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._visual = {};\n\t  /**\n\t   * Globel layout properties.\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._layout = {};\n\t  /**\n\t   * Item visual properties after visual coding\n\t   * @type {Array.<Object>}\n\t   * @private\n\t   */\n\t\n\t  this._itemVisuals = [];\n\t  /**\n\t   * Key: visual type, Value: boolean\n\t   * @type {Object}\n\t   * @readOnly\n\t   */\n\t\n\t  this.hasItemVisual = {};\n\t  /**\n\t   * Item layout properties after layout\n\t   * @type {Array.<Object>}\n\t   * @private\n\t   */\n\t\n\t  this._itemLayouts = [];\n\t  /**\n\t   * Graphic elemnents\n\t   * @type {Array.<module:zrender/Element>}\n\t   * @private\n\t   */\n\t\n\t  this._graphicEls = [];\n\t  /**\n\t   * Max size of each chunk.\n\t   * @type {number}\n\t   * @private\n\t   */\n\t\n\t  this._chunkSize = 1e5;\n\t  /**\n\t   * @type {number}\n\t   * @private\n\t   */\n\t\n\t  this._chunkCount = 0;\n\t  /**\n\t   * @type {Array.<Array|Object>}\n\t   * @private\n\t   */\n\t\n\t  this._rawData;\n\t  /**\n\t   * Raw extent will not be cloned, but only transfered.\n\t   * It will not be calculated util needed.\n\t   * key: dim,\n\t   * value: {end: number, extent: Array.<number>}\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._rawExtent = {};\n\t  /**\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._extent = {};\n\t  /**\n\t   * key: dim\n\t   * value: extent\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._approximateExtent = {};\n\t  /**\n\t   * Cache summary info for fast visit. See \"dimensionHelper\".\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._dimensionsSummary = summarizeDimensions(this);\n\t};\n\t\n\tvar listProto = List.prototype;\n\tlistProto.type = 'list';\n\t/**\n\t * If each data item has it's own option\n\t * @type {boolean}\n\t */\n\t\n\tlistProto.hasItemOption = true;\n\t/**\n\t * Get dimension name\n\t * @param {string|number} dim\n\t *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n\t *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n\t * @return {string} Concrete dim name.\n\t */\n\t\n\tlistProto.getDimension = function (dim) {\n\t  if (!isNaN(dim)) {\n\t    dim = this.dimensions[dim] || dim;\n\t  }\n\t\n\t  return dim;\n\t};\n\t/**\n\t * Get type and stackable info of particular dimension\n\t * @param {string|number} dim\n\t *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n\t *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n\t */\n\t\n\t\n\tlistProto.getDimensionInfo = function (dim) {\n\t  // Do not clone, because there may be categories in dimInfo.\n\t  return this._dimensionInfos[this.getDimension(dim)];\n\t};\n\t/**\n\t * @return {Array.<string>} concrete dimension name list on coord.\n\t */\n\t\n\t\n\tlistProto.getDimensionsOnCoord = function () {\n\t  return this._dimensionsSummary.dataDimsOnCoord.slice();\n\t};\n\t/**\n\t * @param {string} coordDim\n\t * @param {number|Array} [idx=0] A coordDim may map to more than one data dim.\n\t *        If idx is `true`, return a array of all mapped dims.\n\t * @return {string|Array.<string>} concrete data dim.\n\t *        If idx is number, and not found, return null/undefined.\n\t *        If idx is `true`, and not found, return empty array.\n\t */\n\t\n\t\n\tlistProto.mapDimension = function (coordDim, idx) {\n\t  var dims = this._dimensionsSummary.encode[coordDim];\n\t  return idx === true ? dims && dims.slice() || [] : dims ? dims[idx || 0] : null;\n\t};\n\t/**\n\t * Initialize from data\n\t * @param {Array.<Object|number|Array>} data source or data or data provider.\n\t * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n\t *        defualt label/tooltip.\n\t *        A name can be specified in encode.itemName,\n\t *        or dataItem.name (only for series option data),\n\t *        or provided in nameList from outside.\n\t * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n\t */\n\t\n\t\n\tlistProto.initData = function (data, nameList, dimValueGetter) {\n\t  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\t\n\t  if (notProvider) {\n\t    data = new DefaultDataProvider(data, this.dimensions.length);\n\t  }\n\t\n\t  this._rawData = data; // Clear\n\t\n\t  this._storage = {};\n\t  this._indices = null;\n\t  this._nameList = nameList || [];\n\t  this._idList = [];\n\t  this._nameRepeatCount = {};\n\t\n\t  if (!dimValueGetter) {\n\t    this.hasItemOption = false;\n\t  }\n\t  /**\n\t   * @readOnly\n\t   */\n\t\n\t\n\t  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\t\n\t  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\t\n\t  this._rawExtent = {};\n\t\n\t  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\t\n\t\n\t  if (data.pure) {\n\t    this.hasItemOption = false;\n\t  }\n\t};\n\t\n\tlistProto.getProvider = function () {\n\t  return this._rawData;\n\t};\n\t\n\tlistProto.appendData = function (data) {\n\t  var rawData = this._rawData;\n\t  var start = this.count();\n\t  rawData.appendData(data);\n\t  var end = rawData.count();\n\t\n\t  if (!rawData.persistent) {\n\t    end += start;\n\t  }\n\t\n\t  this._initDataFromProvider(start, end);\n\t};\n\t\n\tlistProto._initDataFromProvider = function (start, end) {\n\t  // Optimize.\n\t  if (start >= end) {\n\t    return;\n\t  }\n\t\n\t  var chunkSize = this._chunkSize;\n\t  var rawData = this._rawData;\n\t  var storage = this._storage;\n\t  var dimensions = this.dimensions;\n\t  var dimensionInfoMap = this._dimensionInfos;\n\t  var nameList = this._nameList;\n\t  var idList = this._idList;\n\t  var rawExtent = this._rawExtent;\n\t  var nameRepeatCount = this._nameRepeatCount = {};\n\t  var nameDimIdx;\n\t  var chunkCount = this._chunkCount;\n\t  var lastChunkIndex = chunkCount - 1;\n\t\n\t  for (var i = 0; i < dimensions.length; i++) {\n\t    var dim = dimensions[i];\n\t\n\t    if (!rawExtent[dim]) {\n\t      rawExtent[dim] = [Infinity, -Infinity];\n\t    }\n\t\n\t    var dimInfo = dimensionInfoMap[dim];\n\t\n\t    if (dimInfo.otherDims.itemName === 0) {\n\t      nameDimIdx = this._nameDimIdx = i;\n\t    }\n\t\n\t    if (dimInfo.otherDims.itemId === 0) {\n\t      this._idDimIdx = i;\n\t    }\n\t\n\t    var DataCtor = dataCtors[dimInfo.type];\n\t\n\t    if (!storage[dim]) {\n\t      storage[dim] = [];\n\t    }\n\t\n\t    var resizeChunkArray = storage[dim][lastChunkIndex];\n\t\n\t    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n\t      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n\t      // within the initial chunkSize.\n\t\n\t      for (var j = 0; j < resizeChunkArray.length; j++) {\n\t        newStore[j] = resizeChunkArray[j];\n\t      }\n\t\n\t      storage[dim][lastChunkIndex] = newStore;\n\t    } // Create new chunks.\n\t\n\t\n\t    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n\t      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n\t    }\n\t\n\t    this._chunkCount = storage[dim].length;\n\t  }\n\t\n\t  for (var idx = start; idx < end; idx++) {\n\t    // NOTICE: Try not to write things into dataItem\n\t    var dataItem = rawData.getItem(idx); // Each data item is value\n\t    // [1, 2]\n\t    // 2\n\t    // Bar chart, line chart which uses category axis\n\t    // only gives the 'y' value. 'x' value is the indices of category\n\t    // Use a tempValue to normalize the value to be a (x, y) value\n\t\n\t    var chunkIndex = Math.floor(idx / chunkSize);\n\t    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\t\n\t    for (var k = 0; k < dimensions.length; k++) {\n\t      var dim = dimensions[k];\n\t      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\t\n\t      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\t\n\t      dimStorage[chunkOffset] = val;\n\t\n\t      if (val < rawExtent[dim][0]) {\n\t        rawExtent[dim][0] = val;\n\t      }\n\t\n\t      if (val > rawExtent[dim][1]) {\n\t        rawExtent[dim][1] = val;\n\t      }\n\t    } // ??? FIXME not check by pure but sourceFormat?\n\t    // TODO refactor these logic.\n\t\n\t\n\t    if (!rawData.pure) {\n\t      var name = nameList[idx];\n\t\n\t      if (dataItem && !name) {\n\t        if (nameDimIdx != null) {\n\t          name = this._getNameFromStore(idx);\n\t        } else if (dataItem.name != null) {\n\t          // There is no other place to persistent dataItem.name,\n\t          // so save it to nameList.\n\t          nameList[idx] = name = dataItem.name;\n\t        }\n\t      } // Try using the id in option\n\t      // id or name is used on dynamical data, mapping old and new items.\n\t\n\t\n\t      var id = dataItem == null ? null : dataItem.id;\n\t\n\t      if (id == null && name != null) {\n\t        // Use name as id and add counter to avoid same name\n\t        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n\t        id = name;\n\t\n\t        if (nameRepeatCount[name] > 0) {\n\t          id += '__ec__' + nameRepeatCount[name];\n\t        }\n\t\n\t        nameRepeatCount[name]++;\n\t      }\n\t\n\t      id != null && (idList[idx] = id);\n\t    }\n\t  }\n\t\n\t  if (!rawData.persistent && rawData.clean) {\n\t    // Clean unused data if data source is typed array.\n\t    rawData.clean();\n\t  }\n\t\n\t  this._rawCount = this._count = end; // Reset data extent\n\t\n\t  this._extent = {};\n\t}; // TODO refactor\n\t\n\t\n\tlistProto._getNameFromStore = function (rawIndex) {\n\t  var nameDimIdx = this._nameDimIdx;\n\t\n\t  if (nameDimIdx != null) {\n\t    var chunkSize = this._chunkSize;\n\t    var chunkIndex = Math.floor(rawIndex / chunkSize);\n\t    var chunkOffset = rawIndex % chunkSize;\n\t    var dim = this.dimensions[nameDimIdx];\n\t    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\t\n\t    if (ordinalMeta) {\n\t      return ordinalMeta.categories[rawIndex];\n\t    } else {\n\t      var chunk = this._storage[dim][chunkIndex];\n\t      return chunk && chunk[chunkOffset];\n\t    }\n\t  }\n\t}; // TODO refactor\n\t\n\t\n\tlistProto._getIdFromStore = function (rawIndex) {\n\t  var idDimIdx = this._idDimIdx;\n\t\n\t  if (idDimIdx != null) {\n\t    var chunkSize = this._chunkSize;\n\t    var chunkIndex = Math.floor(rawIndex / chunkSize);\n\t    var chunkOffset = rawIndex % chunkSize;\n\t    var dim = this.dimensions[idDimIdx];\n\t    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\t\n\t    if (ordinalMeta) {\n\t      return ordinalMeta.categories[rawIndex];\n\t    } else {\n\t      var chunk = this._storage[dim][chunkIndex];\n\t      return chunk && chunk[chunkOffset];\n\t    }\n\t  }\n\t};\n\t/**\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.count = function () {\n\t  return this._count;\n\t};\n\t\n\tlistProto.getIndices = function () {\n\t  if (this._indices) {\n\t    var Ctor = this._indices.constructor;\n\t    return new Ctor(this._indices.buffer, 0, this._count);\n\t  }\n\t\n\t  var Ctor = getIndicesCtor(this);\n\t  var arr = new Ctor(this.count());\n\t\n\t  for (var i = 0; i < arr.length; i++) {\n\t    arr[i] = i;\n\t  }\n\t\n\t  return arr;\n\t};\n\t/**\n\t * Get value. Return NaN if idx is out of range.\n\t * @param {string} dim Dim must be concrete name.\n\t * @param {number} idx\n\t * @param {boolean} stack\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.get = function (dim, idx, stack) {\n\t  if (!(idx >= 0 && idx < this._count)) {\n\t    return NaN;\n\t  }\n\t\n\t  var storage = this._storage;\n\t\n\t  if (!storage[dim]) {\n\t    // TODO Warn ?\n\t    return NaN;\n\t  }\n\t\n\t  idx = this.getRawIndex(idx);\n\t  var chunkIndex = Math.floor(idx / this._chunkSize);\n\t  var chunkOffset = idx % this._chunkSize;\n\t  var chunkStore = storage[dim][chunkIndex];\n\t  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n\t\n\t  if (stack) {\n\t    var dimensionInfo = this._dimensionInfos[dim];\n\t\n\t    if (dimensionInfo && dimensionInfo.stackable) {\n\t      var stackedOn = this.stackedOn;\n\t\n\t      while (stackedOn) {\n\t        // Get no stacked data of stacked on\n\t        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\t\n\t        if (value >= 0 && stackedValue > 0 || // Positive stack\n\t        value <= 0 && stackedValue < 0 // Negative stack\n\t        ) {\n\t            value += stackedValue;\n\t          }\n\t\n\t        stackedOn = stackedOn.stackedOn;\n\t      }\n\t    }\n\t  }\n\t\n\t  return value;\n\t}; // FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n\t// Hack a much simpler _getFast\n\t\n\t\n\tlistProto._getFast = function (dim, rawIdx) {\n\t  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n\t  var chunkOffset = rawIdx % this._chunkSize;\n\t  var chunkStore = this._storage[dim][chunkIndex];\n\t  return chunkStore[chunkOffset];\n\t};\n\t/**\n\t * Get value for multi dimensions.\n\t * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n\t * @param {number} idx\n\t * @param {boolean} stack\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.getValues = function (dimensions, idx, stack) {\n\t  var values = [];\n\t\n\t  if (!zrUtil.isArray(dimensions)) {\n\t    stack = idx;\n\t    idx = dimensions;\n\t    dimensions = this.dimensions;\n\t  }\n\t\n\t  for (var i = 0, len = dimensions.length; i < len; i++) {\n\t    values.push(this.get(dimensions[i], idx, stack));\n\t  }\n\t\n\t  return values;\n\t};\n\t/**\n\t * If value is NaN. Inlcuding '-'\n\t * Only check the coord dimensions.\n\t * @param {string} dim\n\t * @param {number} idx\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.hasValue = function (idx) {\n\t  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n\t  var dimensionInfos = this._dimensionInfos;\n\t\n\t  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n\t    if ( // Ordinal type can be string or number\n\t    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n\t    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t/**\n\t * Get extent of data in one dimension\n\t * @param {string} dim\n\t * @param {boolean} stack\n\t */\n\t\n\t\n\tlistProto.getDataExtent = function (dim, stack) {\n\t  // Make sure use concrete dim as cache name.\n\t  dim = this.getDimension(dim);\n\t  var dimData = this._storage[dim];\n\t  var initialExtent = [Infinity, -Infinity];\n\t  stack = (stack || false) && this.isStacked(dim);\n\t\n\t  if (!dimData) {\n\t    return initialExtent;\n\t  } // Make more strict checkings to ensure hitting cache.\n\t\n\t\n\t  var currEnd = this.count();\n\t  var cacheName = [dim, !!stack].join('_'); // Consider the most cases when using data zoom, `getDataExtent`\n\t  // happened before filtering. We cache raw extent, which is not\n\t  // necessary to be cleared and recalculated when restore data.\n\t\n\t  var useRaw = !this._indices && !stack;\n\t  var dimExtent;\n\t\n\t  if (useRaw) {\n\t    return this._rawExtent[dim].slice();\n\t  }\n\t\n\t  dimExtent = this._extent[cacheName];\n\t\n\t  if (dimExtent) {\n\t    return dimExtent.slice();\n\t  }\n\t\n\t  dimExtent = initialExtent;\n\t  var min = dimExtent[0];\n\t  var max = dimExtent[1];\n\t\n\t  for (var i = 0; i < currEnd; i++) {\n\t    var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n\t    value < min && (min = value);\n\t    value > max && (max = value);\n\t  }\n\t\n\t  dimExtent = [min, max];\n\t  this._extent[cacheName] = dimExtent;\n\t  return dimExtent;\n\t};\n\t/**\n\t * Optimize for the scenario that data is filtered by a given extent.\n\t * Consider that if data amount is more than hundreds of thousand,\n\t * extent calculation will cost more than 10ms and the cache will\n\t * be erased because of the filtering.\n\t */\n\t\n\t\n\tlistProto.getApproximateExtent = function (dim, stack) {\n\t  dim = this.getDimension(dim);\n\t  return this._approximateExtent[dim] || this.getDataExtent(dim, stack);\n\t};\n\t\n\tlistProto.setApproximateExtent = function (extent, dim, stack) {\n\t  dim = this.getDimension(dim);\n\t  this._approximateExtent[dim] = extent.slice();\n\t};\n\t\n\tlistProto.isStacked = function (concreteDim) {\n\t  var dimensionInfo = this._dimensionInfos[concreteDim];\n\t  return dimensionInfo && dimensionInfo.stackable && this.stackedOn;\n\t};\n\t/**\n\t * Get sum of data in one dimension\n\t * @param {string} dim\n\t * @param {boolean} stack\n\t */\n\t\n\t\n\tlistProto.getSum = function (dim, stack) {\n\t  var dimData = this._storage[dim];\n\t  var sum = 0;\n\t\n\t  if (dimData) {\n\t    for (var i = 0, len = this.count(); i < len; i++) {\n\t      var value = this.get(dim, i, stack);\n\t\n\t      if (!isNaN(value)) {\n\t        sum += value;\n\t      }\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t/**\n\t * Retreive the index with given value\n\t * @param {number} idx\n\t * @param {number} value\n\t * @return {number}\n\t */\n\t// FIXME Precision of float value\n\t\n\t\n\tlistProto.indexOf = function (dim, value) {\n\t  var storage = this._storage;\n\t  var dimData = storage[dim];\n\t  var chunkSize = this._chunkSize;\n\t\n\t  if (dimData) {\n\t    for (var i = 0, len = this.count(); i < len; i++) {\n\t      var chunkIndex = Math.floor(i / chunkSize);\n\t      var chunkOffset = i % chunkSize;\n\t\n\t      if (dimData[chunkIndex][chunkOffset] === value) {\n\t        return i;\n\t      }\n\t    }\n\t  }\n\t\n\t  return -1;\n\t};\n\t/**\n\t * Retreive the index with given name\n\t * @param {number} idx\n\t * @param {number} name\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.indexOfName = function (name) {\n\t  for (var i = 0, len = this.count(); i < len; i++) {\n\t    if (this.getName(i) === name) {\n\t      return i;\n\t    }\n\t  }\n\t\n\t  return -1;\n\t};\n\t/**\n\t * Retreive the index with given raw data index\n\t * @param {number} idx\n\t * @param {number} name\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.indexOfRawIndex = function (rawIndex) {\n\t  if (!this._indices) {\n\t    return rawIndex;\n\t  }\n\t\n\t  if (rawIndex >= this._rawCount || rawIndex < 0) {\n\t    return -1;\n\t  } // Indices are ascending\n\t\n\t\n\t  var indices = this._indices; // If rawIndex === dataIndex\n\t\n\t  var rawDataIndex = indices[rawIndex];\n\t\n\t  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n\t    return rawIndex;\n\t  }\n\t\n\t  var left = 0;\n\t  var right = this._count - 1;\n\t\n\t  while (left <= right) {\n\t    var mid = (left + right) / 2 | 0;\n\t\n\t    if (indices[mid] < rawIndex) {\n\t      left = mid + 1;\n\t    } else if (indices[mid] > rawIndex) {\n\t      right = mid - 1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t\n\t  return -1;\n\t};\n\t/**\n\t * Retreive the index of nearest value\n\t * @param {string} dim\n\t * @param {number} value\n\t * @param {boolean} stack If given value is after stacked\n\t * @param {number} [maxDistance=Infinity]\n\t * @return {Array.<number>} Considere multiple points has the same value.\n\t */\n\t\n\t\n\tlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n\t  var storage = this._storage;\n\t  var dimData = storage[dim];\n\t  var nearestIndices = [];\n\t\n\t  if (!dimData) {\n\t    return nearestIndices;\n\t  }\n\t\n\t  if (maxDistance == null) {\n\t    maxDistance = Infinity;\n\t  }\n\t\n\t  var minDist = Number.MAX_VALUE;\n\t  var minDiff = -1;\n\t\n\t  for (var i = 0, len = this.count(); i < len; i++) {\n\t    var diff = value - this.get(dim, i, stack);\n\t    var dist = Math.abs(diff);\n\t\n\t    if (diff <= maxDistance && dist <= minDist) {\n\t      // For the case of two data are same on xAxis, which has sequence data.\n\t      // Show the nearest index\n\t      // https://github.com/ecomfe/echarts/issues/2869\n\t      if (dist < minDist || diff >= 0 && minDiff < 0) {\n\t        minDist = dist;\n\t        minDiff = diff;\n\t        nearestIndices.length = 0;\n\t      }\n\t\n\t      nearestIndices.push(i);\n\t    }\n\t  }\n\t\n\t  return nearestIndices;\n\t};\n\t/**\n\t * Get raw data index\n\t * @param {number} idx\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.getRawIndex = getRawIndexWithoutIndices;\n\t\n\tfunction getRawIndexWithoutIndices(idx) {\n\t  return idx;\n\t}\n\t\n\tfunction getRawIndexWithIndices(idx) {\n\t  if (idx < this._count && idx >= 0) {\n\t    return this._indices[idx];\n\t  }\n\t\n\t  return -1;\n\t}\n\t/**\n\t * Get raw data item\n\t * @param {number} idx\n\t * @return {number}\n\t */\n\t\n\t\n\tlistProto.getRawDataItem = function (idx) {\n\t  if (!this._rawData.persistent) {\n\t    var val = [];\n\t\n\t    for (var i = 0; i < this.dimensions.length; i++) {\n\t      var dim = this.dimensions[i];\n\t      val.push(this.get(dim, idx));\n\t    }\n\t\n\t    return val;\n\t  } else {\n\t    return this._rawData.getItem(this.getRawIndex(idx));\n\t  }\n\t};\n\t/**\n\t * @param {number} idx\n\t * @param {boolean} [notDefaultIdx=false]\n\t * @return {string}\n\t */\n\t\n\t\n\tlistProto.getName = function (idx) {\n\t  var rawIndex = this.getRawIndex(idx);\n\t  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n\t};\n\t/**\n\t * @param {number} idx\n\t * @param {boolean} [notDefaultIdx=false]\n\t * @return {string}\n\t */\n\t\n\t\n\tlistProto.getId = function (idx) {\n\t  return getId(this, this.getRawIndex(idx));\n\t};\n\t\n\tfunction getId(list, rawIndex) {\n\t  var id = list._idList[rawIndex];\n\t\n\t  if (id == null) {\n\t    id = list._getIdFromStore(rawIndex);\n\t  }\n\t\n\t  if (id == null) {\n\t    // FIXME Check the usage in graph, should not use prefix.\n\t    id = ID_PREFIX + rawIndex;\n\t  }\n\t\n\t  return id;\n\t}\n\t\n\tfunction normalizeDimensions(dimensions) {\n\t  if (!zrUtil.isArray(dimensions)) {\n\t    dimensions = [dimensions];\n\t  }\n\t\n\t  return dimensions;\n\t}\n\t\n\tfunction validateDimensions(list, dims) {\n\t  for (var i = 0; i < dims.length; i++) {\n\t    // stroage may be empty when no data, so use\n\t    // dimensionInfos to check.\n\t    if (!list._dimensionInfos[dims[i]]) {\n\t      console.error('Unkown dimension ' + dims[i]);\n\t    }\n\t  }\n\t}\n\t/**\n\t * Data iteration\n\t * @param {string|Array.<string>}\n\t * @param {Function} cb\n\t * @param {boolean} [stack=false]\n\t * @param {*} [context=this]\n\t *\n\t * @example\n\t *  list.each('x', function (x, idx) {});\n\t *  list.each(['x', 'y'], function (x, y, idx) {});\n\t *  list.each(function (idx) {})\n\t */\n\t\n\t\n\tlistProto.each = function (dims, cb, stack, context) {\n\t  'use strict';\n\t\n\t  if (!this._count) {\n\t    return;\n\t  }\n\t\n\t  if (typeof dims === 'function') {\n\t    context = stack;\n\t    stack = cb;\n\t    cb = dims;\n\t    dims = [];\n\t  }\n\t\n\t  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\t  var dimSize = dims.length;\n\t  context = context || this;\n\t\n\t  for (var i = 0; i < this.count(); i++) {\n\t    // Simple optimization\n\t    switch (dimSize) {\n\t      case 0:\n\t        cb.call(context, i);\n\t        break;\n\t\n\t      case 1:\n\t        cb.call(context, this.get(dims[0], i, stack), i);\n\t        break;\n\t\n\t      case 2:\n\t        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n\t        break;\n\t\n\t      default:\n\t        var k = 0;\n\t        var value = [];\n\t\n\t        for (; k < dimSize; k++) {\n\t          value[k] = this.get(dims[k], i, stack);\n\t        } // Index\n\t\n\t\n\t        value[k] = i;\n\t        cb.apply(context, value);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Data filter\n\t * @param {string|Array.<string>}\n\t * @param {Function} cb\n\t * @param {boolean} [stack=false]\n\t * @param {*} [context=this]\n\t */\n\t\n\t\n\tlistProto.filterSelf = function (dimensions, cb, stack, context) {\n\t  'use strict';\n\t\n\t  if (!this._count) {\n\t    return;\n\t  }\n\t\n\t  if (typeof dimensions === 'function') {\n\t    context = stack;\n\t    stack = cb;\n\t    cb = dimensions;\n\t    dimensions = [];\n\t  }\n\t\n\t  stack = stack || false;\n\t  context = context || this;\n\t  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n\t  var count = this.count();\n\t  var Ctor = getIndicesCtor(this);\n\t  var newIndices = new Ctor(count);\n\t  var value = [];\n\t  var dimSize = dimensions.length;\n\t  var offset = 0;\n\t  var dim0 = dimensions[0];\n\t\n\t  for (var i = 0; i < count; i++) {\n\t    var keep;\n\t    var rawIdx = this.getRawIndex(i); // Simple optimization\n\t\n\t    if (dimSize === 0) {\n\t      keep = cb.call(context, i);\n\t    } else if (dimSize === 1) {\n\t      var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIdx);\n\t      keep = cb.call(context, val, i);\n\t    } else {\n\t      for (var k = 0; k < dimSize; k++) {\n\t        value[k] = stack ? this.get(dimensions[k], i, true) : this._getFast(dim0, rawIdx);\n\t      }\n\t\n\t      value[k] = i;\n\t      keep = cb.apply(context, value);\n\t    }\n\t\n\t    if (keep) {\n\t      newIndices[offset++] = rawIdx;\n\t    }\n\t  } // Set indices after filtered.\n\t\n\t\n\t  if (offset < count) {\n\t    this._indices = newIndices;\n\t  }\n\t\n\t  this._count = offset; // Reset data extent\n\t\n\t  this._extent = {};\n\t  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n\t  return this;\n\t};\n\t/**\n\t * Select data in range. (For optimization of filter)\n\t * (Manually inline code, support 5 million data filtering in data zoom.)\n\t */\n\t\n\t\n\tlistProto.selectRange = function (range, stack) {\n\t  'use strict';\n\t\n\t  if (!this._count) {\n\t    return;\n\t  }\n\t\n\t  stack = stack || false;\n\t  var dimensions = [];\n\t\n\t  for (var dim in range) {\n\t    if (range.hasOwnProperty(dim)) {\n\t      dimensions.push(dim);\n\t    }\n\t  }\n\t\n\t  var dimSize = dimensions.length;\n\t\n\t  if (!dimSize) {\n\t    return;\n\t  }\n\t\n\t  var originalCount = this.count();\n\t  var Ctor = getIndicesCtor(this);\n\t  var newIndices = new Ctor(originalCount);\n\t  var offset = 0;\n\t  var dim0 = dimensions[0];\n\t  var min = range[dim0][0];\n\t  var max = range[dim0][1];\n\t  var quickFinished = false;\n\t\n\t  if (!this._indices && !stack) {\n\t    // Extreme optimization for common case. About 2x faster in chrome.\n\t    var idx = 0;\n\t\n\t    if (dimSize === 1) {\n\t      var dimStorage = this._storage[dimensions[0]];\n\t\n\t      for (var k = 0; k < this._chunkCount; k++) {\n\t        var chunkStorage = dimStorage[k];\n\t        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\t\n\t        for (var i = 0; i < len; i++) {\n\t          var val = chunkStorage[i];\n\t\n\t          if (val >= min && val <= max) {\n\t            newIndices[offset++] = idx;\n\t          }\n\t\n\t          idx++;\n\t        }\n\t      }\n\t\n\t      quickFinished = true;\n\t    } else if (dimSize === 2) {\n\t      var dimStorage = this._storage[dim0];\n\t      var dimStorage2 = this._storage[dimensions[1]];\n\t      var min2 = range[dimensions[1]][0];\n\t      var max2 = range[dimensions[1]][1];\n\t\n\t      for (var k = 0; k < this._chunkCount; k++) {\n\t        var chunkStorage = dimStorage[k];\n\t        var chunkStorage2 = dimStorage2[k];\n\t        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\t\n\t        for (var i = 0; i < len; i++) {\n\t          var val = chunkStorage[i];\n\t          var val2 = chunkStorage2[i];\n\t\n\t          if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n\t            newIndices[offset++] = idx;\n\t          }\n\t\n\t          idx++;\n\t        }\n\t      }\n\t\n\t      quickFinished = true;\n\t    }\n\t  }\n\t\n\t  if (!quickFinished) {\n\t    if (dimSize === 1) {\n\t      stack = stack || this.isStacked(dim0);\n\t\n\t      for (var i = 0; i < originalCount; i++) {\n\t        var rawIndex = this.getRawIndex(i);\n\t        var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\t\n\t        if (val >= min && val <= max) {\n\t          newIndices[offset++] = rawIndex;\n\t        }\n\t      }\n\t    } else {\n\t      for (var i = 0; i < originalCount; i++) {\n\t        var keep = true;\n\t        var rawIndex = this.getRawIndex(i);\n\t\n\t        for (var k = 0; k < dimSize; k++) {\n\t          var dimk = dimensions[k];\n\t          var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\t\n\t          if (val < range[dimk][0] || val > range[dimk][1]) {\n\t            keep = false;\n\t          }\n\t        }\n\t\n\t        if (keep) {\n\t          newIndices[offset++] = this.getRawIndex(i);\n\t        }\n\t      }\n\t    }\n\t  } // Set indices after filtered.\n\t\n\t\n\t  if (offset < originalCount) {\n\t    this._indices = newIndices;\n\t  }\n\t\n\t  this._count = offset; // Reset data extent\n\t\n\t  this._extent = {};\n\t  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n\t  return this;\n\t};\n\t/**\n\t * Data mapping to a plain array\n\t * @param {string|Array.<string>} [dimensions]\n\t * @param {Function} cb\n\t * @param {boolean} [stack=false]\n\t * @param {*} [context=this]\n\t * @return {Array}\n\t */\n\t\n\t\n\tlistProto.mapArray = function (dimensions, cb, stack, context) {\n\t  'use strict';\n\t\n\t  if (typeof dimensions === 'function') {\n\t    context = stack;\n\t    stack = cb;\n\t    cb = dimensions;\n\t    dimensions = [];\n\t  }\n\t\n\t  var result = [];\n\t  this.each(dimensions, function () {\n\t    result.push(cb && cb.apply(this, arguments));\n\t  }, stack, context);\n\t  return result;\n\t}; // Data in excludeDimensions is copied, otherwise transfered.\n\t\n\t\n\tfunction cloneListForMapAndSample(original, excludeDimensions) {\n\t  var allDimensions = original.dimensions;\n\t  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\t\n\t  transferProperties(list, original);\n\t  var storage = list._storage = {};\n\t  var originalStorage = original._storage; // Init storage\n\t\n\t  for (var i = 0; i < allDimensions.length; i++) {\n\t    var dim = allDimensions[i];\n\t\n\t    if (originalStorage[dim]) {\n\t      storage[dim] = zrUtil.indexOf(excludeDimensions, dim) >= 0 ? cloneDimStore(originalStorage[dim]) // Direct reference for other dimensions\n\t      : originalStorage[dim];\n\t    }\n\t  }\n\t\n\t  return list;\n\t}\n\t\n\tfunction cloneDimStore(originalDimStore) {\n\t  var newDimStore = new Array(originalDimStore.length);\n\t\n\t  for (var j = 0; j < originalDimStore.length; j++) {\n\t    newDimStore[j] = cloneChunk(originalDimStore[j]);\n\t  }\n\t\n\t  return newDimStore;\n\t}\n\t/**\n\t * Data mapping to a new List with given dimensions\n\t * @param {string|Array.<string>} dimensions\n\t * @param {Function} cb\n\t * @param {boolean} [stack=false]\n\t * @param {*} [context=this]\n\t * @return {Array}\n\t */\n\t\n\t\n\tlistProto.map = function (dimensions, cb, stack, context) {\n\t  'use strict';\n\t\n\t  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n\t  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n\t  // So we can reference to the same value\n\t\n\t  list._indices = this._indices;\n\t  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n\t  var storage = list._storage;\n\t  var tmpRetValue = [];\n\t  var chunkSize = this._chunkSize;\n\t  var dimSize = dimensions.length;\n\t  var dataCount = this.count();\n\t  var values = [];\n\t\n\t  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n\t    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n\t      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex, stack);\n\t    }\n\t\n\t    values[dimSize] = dataIndex;\n\t    var retValue = cb && cb.apply(context, values);\n\t\n\t    if (retValue != null) {\n\t      // a number or string (in oridinal dimension)?\n\t      if (typeof retValue !== 'object') {\n\t        tmpRetValue[0] = retValue;\n\t        retValue = tmpRetValue;\n\t      }\n\t\n\t      var rawIndex = this.getRawIndex(dataIndex);\n\t      var chunkIndex = Math.floor(rawIndex / chunkSize);\n\t      var chunkOffset = rawIndex % chunkSize;\n\t\n\t      for (var i = 0; i < retValue.length; i++) {\n\t        var dim = dimensions[i];\n\t        var dimStore = storage[dim];\n\t\n\t        if (dimStore) {\n\t          dimStore[chunkIndex][chunkOffset] = retValue[i];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return list;\n\t};\n\t/**\n\t * Large data down sampling on given dimension\n\t * @param {string} dimension\n\t * @param {number} rate\n\t * @param {Function} sampleValue\n\t * @param {Function} sampleIndex Sample index for name and id\n\t */\n\t\n\t\n\tlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n\t  var list = cloneListForMapAndSample(this, [dimension]);\n\t  var targetStorage = list._storage;\n\t  var frameValues = [];\n\t  var frameSize = Math.floor(1 / rate);\n\t  var dimStore = targetStorage[dimension];\n\t  var len = this.count();\n\t  var chunkSize = this._chunkSize;\n\t  var newIndices = new (getIndicesCtor(this))(len);\n\t  var offset = 0;\n\t\n\t  for (var i = 0; i < len; i += frameSize) {\n\t    // Last frame\n\t    if (frameSize > len - i) {\n\t      frameSize = len - i;\n\t      frameValues.length = frameSize;\n\t    }\n\t\n\t    for (var k = 0; k < frameSize; k++) {\n\t      var dataIdx = this.getRawIndex(i + k);\n\t      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n\t      var originalChunkOffset = dataIdx % chunkSize;\n\t      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n\t    }\n\t\n\t    var value = sampleValue(frameValues);\n\t    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n\t    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n\t    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\t\n\t    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\t    newIndices[offset++] = sampleFrameIdx;\n\t  }\n\t\n\t  list._count = offset;\n\t  list._indices = newIndices;\n\t  list.getRawIndex = getRawIndexWithIndices;\n\t  return list;\n\t};\n\t/**\n\t * Get model of one data item.\n\t *\n\t * @param {number} idx\n\t */\n\t// FIXME Model proxy ?\n\t\n\t\n\tlistProto.getItemModel = function (idx) {\n\t  var hostModel = this.hostModel;\n\t  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n\t};\n\t/**\n\t * Create a data differ\n\t * @param {module:echarts/data/List} otherList\n\t * @return {module:echarts/data/DataDiffer}\n\t */\n\t\n\t\n\tlistProto.diff = function (otherList) {\n\t  var thisList = this;\n\t  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n\t    return getId(otherList, idx);\n\t  }, function (idx) {\n\t    return getId(thisList, idx);\n\t  });\n\t};\n\t/**\n\t * Get visual property.\n\t * @param {string} key\n\t */\n\t\n\t\n\tlistProto.getVisual = function (key) {\n\t  var visual = this._visual;\n\t  return visual && visual[key];\n\t};\n\t/**\n\t * Set visual property\n\t * @param {string|Object} key\n\t * @param {*} [value]\n\t *\n\t * @example\n\t *  setVisual('color', color);\n\t *  setVisual({\n\t *      'color': color\n\t *  });\n\t */\n\t\n\t\n\tlistProto.setVisual = function (key, val) {\n\t  if (isObject(key)) {\n\t    for (var name in key) {\n\t      if (key.hasOwnProperty(name)) {\n\t        this.setVisual(name, key[name]);\n\t      }\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  this._visual = this._visual || {};\n\t  this._visual[key] = val;\n\t};\n\t/**\n\t * Set layout property.\n\t * @param {string|Object} key\n\t * @param {*} [val]\n\t */\n\t\n\t\n\tlistProto.setLayout = function (key, val) {\n\t  if (isObject(key)) {\n\t    for (var name in key) {\n\t      if (key.hasOwnProperty(name)) {\n\t        this.setLayout(name, key[name]);\n\t      }\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  this._layout[key] = val;\n\t};\n\t/**\n\t * Get layout property.\n\t * @param  {string} key.\n\t * @return {*}\n\t */\n\t\n\t\n\tlistProto.getLayout = function (key) {\n\t  return this._layout[key];\n\t};\n\t/**\n\t * Get layout of single data item\n\t * @param {number} idx\n\t */\n\t\n\t\n\tlistProto.getItemLayout = function (idx) {\n\t  return this._itemLayouts[idx];\n\t};\n\t/**\n\t * Set layout of single data item\n\t * @param {number} idx\n\t * @param {Object} layout\n\t * @param {boolean=} [merge=false]\n\t */\n\t\n\t\n\tlistProto.setItemLayout = function (idx, layout, merge) {\n\t  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n\t};\n\t/**\n\t * Clear all layout of single data item\n\t */\n\t\n\t\n\tlistProto.clearItemLayouts = function () {\n\t  this._itemLayouts.length = 0;\n\t};\n\t/**\n\t * Get visual property of single data item\n\t * @param {number} idx\n\t * @param {string} key\n\t * @param {boolean} [ignoreParent=false]\n\t */\n\t\n\t\n\tlistProto.getItemVisual = function (idx, key, ignoreParent) {\n\t  var itemVisual = this._itemVisuals[idx];\n\t  var val = itemVisual && itemVisual[key];\n\t\n\t  if (val == null && !ignoreParent) {\n\t    // Use global visual property\n\t    return this.getVisual(key);\n\t  }\n\t\n\t  return val;\n\t};\n\t/**\n\t * Set visual property of single data item\n\t *\n\t * @param {number} idx\n\t * @param {string|Object} key\n\t * @param {*} [value]\n\t *\n\t * @example\n\t *  setItemVisual(0, 'color', color);\n\t *  setItemVisual(0, {\n\t *      'color': color\n\t *  });\n\t */\n\t\n\t\n\tlistProto.setItemVisual = function (idx, key, value) {\n\t  var itemVisual = this._itemVisuals[idx] || {};\n\t  var hasItemVisual = this.hasItemVisual;\n\t  this._itemVisuals[idx] = itemVisual;\n\t\n\t  if (isObject(key)) {\n\t    for (var name in key) {\n\t      if (key.hasOwnProperty(name)) {\n\t        itemVisual[name] = key[name];\n\t        hasItemVisual[name] = true;\n\t      }\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  itemVisual[key] = value;\n\t  hasItemVisual[key] = true;\n\t};\n\t/**\n\t * Clear itemVisuals and list visual.\n\t */\n\t\n\t\n\tlistProto.clearAllVisual = function () {\n\t  this._visual = {};\n\t  this._itemVisuals = [];\n\t  this.hasItemVisual = {};\n\t};\n\t\n\tvar setItemDataAndSeriesIndex = function (child) {\n\t  child.seriesIndex = this.seriesIndex;\n\t  child.dataIndex = this.dataIndex;\n\t  child.dataType = this.dataType;\n\t};\n\t/**\n\t * Set graphic element relative to data. It can be set as null\n\t * @param {number} idx\n\t * @param {module:zrender/Element} [el]\n\t */\n\t\n\t\n\tlistProto.setItemGraphicEl = function (idx, el) {\n\t  var hostModel = this.hostModel;\n\t\n\t  if (el) {\n\t    // Add data index and series index for indexing the data by element\n\t    // Useful in tooltip\n\t    el.dataIndex = idx;\n\t    el.dataType = this.dataType;\n\t    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\t\n\t    if (el.type === 'group') {\n\t      el.traverse(setItemDataAndSeriesIndex, el);\n\t    }\n\t  }\n\t\n\t  this._graphicEls[idx] = el;\n\t};\n\t/**\n\t * @param {number} idx\n\t * @return {module:zrender/Element}\n\t */\n\t\n\t\n\tlistProto.getItemGraphicEl = function (idx) {\n\t  return this._graphicEls[idx];\n\t};\n\t/**\n\t * @param {Function} cb\n\t * @param {*} context\n\t */\n\t\n\t\n\tlistProto.eachItemGraphicEl = function (cb, context) {\n\t  zrUtil.each(this._graphicEls, function (el, idx) {\n\t    if (el) {\n\t      cb && cb.call(context, el, idx);\n\t    }\n\t  });\n\t};\n\t/**\n\t * Shallow clone a new list except visual and layout properties, and graph elements.\n\t * New list only change the indices.\n\t */\n\t\n\t\n\tlistProto.cloneShallow = function (list) {\n\t  if (!list) {\n\t    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n\t    list = new List(dimensionInfoList, this.hostModel);\n\t  } // FIXME\n\t\n\t\n\t  list._storage = this._storage;\n\t  transferProperties(list, this); // Clone will not change the data extent and indices\n\t\n\t  if (this._indices) {\n\t    var Ctor = this._indices.constructor;\n\t    list._indices = new Ctor(this._indices);\n\t  } else {\n\t    list._indices = null;\n\t  }\n\t\n\t  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n\t  list._extent = zrUtil.clone(this._extent);\n\t  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n\t  return list;\n\t};\n\t/**\n\t * Wrap some method to add more feature\n\t * @param {string} methodName\n\t * @param {Function} injectFunction\n\t */\n\t\n\t\n\tlistProto.wrapMethod = function (methodName, injectFunction) {\n\t  var originalMethod = this[methodName];\n\t\n\t  if (typeof originalMethod !== 'function') {\n\t    return;\n\t  }\n\t\n\t  this.__wrappedMethods = this.__wrappedMethods || [];\n\t\n\t  this.__wrappedMethods.push(methodName);\n\t\n\t  this[methodName] = function () {\n\t    var res = originalMethod.apply(this, arguments);\n\t    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n\t  };\n\t}; // Methods that create a new list based on this list should be listed here.\n\t// Notice that those method should `RETURN` the new list.\n\t\n\t\n\tlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\t\n\tlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\n\tvar _default = List;\n\tmodule.exports = _default;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar createHashMap = _util.createHashMap;\n\tvar isObject = _util.isObject;\n\tvar map = _util.map;\n\t\n\t/**\n\t * @constructor\n\t * @param {Object} [opt]\n\t * @param {Object} [opt.categories=[]]\n\t * @param {Object} [opt.needCollect=false]\n\t * @param {Object} [opt.deduplication=false]\n\t */\n\tfunction OrdinalMeta(opt) {\n\t  /**\n\t   * @readOnly\n\t   * @type {Array.<string>}\n\t   */\n\t  this.categories = opt.categories || [];\n\t  /**\n\t   * @private\n\t   * @type {boolean}\n\t   */\n\t\n\t  this._needCollect = opt.needCollect;\n\t  /**\n\t   * @private\n\t   * @type {boolean}\n\t   */\n\t\n\t  this._deduplication = opt.deduplication;\n\t  /**\n\t   * @private\n\t   * @type {boolean}\n\t   */\n\t\n\t  this._map;\n\t}\n\t/**\n\t * @param {module:echarts/model/Model} axisModel\n\t * @return {module:echarts/data/OrdinalMeta}\n\t */\n\t\n\t\n\tOrdinalMeta.createByAxisModel = function (axisModel) {\n\t  var option = axisModel.option;\n\t  var data = option.data;\n\t  var categories = data && map(data, getName);\n\t  return new OrdinalMeta({\n\t    categories: categories,\n\t    needCollect: !categories,\n\t    // deduplication is default in axis.\n\t    deduplication: option.dedplication !== false\n\t  });\n\t};\n\t\n\tvar proto = OrdinalMeta.prototype;\n\t/**\n\t * @param {string} category\n\t * @return {number} ordinal\n\t */\n\t\n\tproto.getOrdinal = function (category) {\n\t  return getOrCreateMap(this).get(category);\n\t};\n\t/**\n\t * @param {*} category\n\t * @return {number} The ordinal. If not found, return NaN.\n\t */\n\t\n\t\n\tproto.parseAndCollect = function (category) {\n\t  var index;\n\t  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n\t  // This feature is only supported when !needCollect, because we should\n\t  // consider a common case: a value is 2017, which is a number but is\n\t  // expected to be tread as a category. This case usually happen in dataset,\n\t  // where it happent to be no need of the index feature.\n\t\n\t  if (typeof category !== 'string' && !needCollect) {\n\t    return category;\n\t  } // Optimize for the scenario:\n\t  // category is ['2012-01-01', '2012-01-02', ...], where the input\n\t  // data has been ensured not duplicate and is large data.\n\t  // Notice, if a dataset dimension provide categroies, usually echarts\n\t  // should remove duplication except user tell echarts dont do that\n\t  // (set axis.deduplication = false), because echarts do not know whether\n\t  // the values in the category dimension has duplication (consider the\n\t  // parallel-aqi example)\n\t\n\t\n\t  if (needCollect && !this._deduplication) {\n\t    index = this.categories.length;\n\t    this.categories[index] = category;\n\t    return index;\n\t  }\n\t\n\t  var map = getOrCreateMap(this);\n\t  index = map.get(category);\n\t\n\t  if (index == null) {\n\t    if (needCollect) {\n\t      index = this.categories.length;\n\t      this.categories[index] = category;\n\t      map.set(category, index);\n\t    } else {\n\t      index = NaN;\n\t    }\n\t  }\n\t\n\t  return index;\n\t}; // Consider big data, do not create map until needed.\n\t\n\t\n\tfunction getOrCreateMap(ordinalMeta) {\n\t  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n\t}\n\t\n\tfunction getName(obj) {\n\t  if (isObject(obj) && obj.value != null) {\n\t    return obj.value;\n\t  } else {\n\t    return obj + '';\n\t  }\n\t}\n\t\n\tvar _default = OrdinalMeta;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar createHashMap = _util.createHashMap;\n\tvar isTypedArray = _util.isTypedArray;\n\t\n\tvar _clazz = __webpack_require__(56);\n\t\n\tvar enableClassCheck = _clazz.enableClassCheck;\n\t\n\tvar _sourceType = __webpack_require__(192);\n\t\n\tvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\tvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\tvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\n\tvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\n\tvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\t\n\t/**\n\t * [sourceFormat]\n\t *\n\t * + \"original\":\n\t * This format is only used in series.data, where\n\t * itemStyle can be specified in data item.\n\t *\n\t * + \"arrayRows\":\n\t * [\n\t *     ['product', 'score', 'amount'],\n\t *     ['Matcha Latte', 89.3, 95.8],\n\t *     ['Milk Tea', 92.1, 89.4],\n\t *     ['Cheese Cocoa', 94.4, 91.2],\n\t *     ['Walnut Brownie', 85.4, 76.9]\n\t * ]\n\t *\n\t * + \"objectRows\":\n\t * [\n\t *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n\t *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n\t *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n\t *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n\t * ]\n\t *\n\t * + \"keyedColumns\":\n\t * {\n\t *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n\t *     'count': [823, 235, 1042, 988],\n\t *     'score': [95.8, 81.4, 91.2, 76.9]\n\t * }\n\t *\n\t * + \"typedArray\"\n\t *\n\t * + \"unknown\"\n\t */\n\t\n\t/**\n\t * @constructor\n\t * @param {Object} fields\n\t * @param {string} fields.sourceFormat\n\t * @param {Array|Object} fields.fromDataset\n\t * @param {Array|Object} [fields.data]\n\t * @param {string} [seriesLayoutBy='column']\n\t * @param {Array.<Object|string>} [dimensionsDefine]\n\t * @param {Objet|HashMap} [encodeDefine]\n\t * @param {number} [startIndex=0]\n\t * @param {number} [dimensionsDetectCount]\n\t */\n\tfunction Source(fields) {\n\t  /**\n\t   * @type {boolean}\n\t   */\n\t  this.fromDataset = fields.fromDataset;\n\t  /**\n\t   * Not null/undefined.\n\t   * @type {Array|Object}\n\t   */\n\t\n\t  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n\t  /**\n\t   * See also \"detectSourceFormat\".\n\t   * Not null/undefined.\n\t   * @type {string}\n\t   */\n\t\n\t  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n\t  /**\n\t   * 'row' or 'column'\n\t   * Not null/undefined.\n\t   * @type {string} seriesLayoutBy\n\t   */\n\t\n\t  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n\t  /**\n\t   * dimensions definition in option.\n\t   * can be null/undefined.\n\t   * @type {Array.<Object|string>}\n\t   */\n\t\n\t  this.dimensionsDefine = fields.dimensionsDefine;\n\t  /**\n\t   * encode definition in option.\n\t   * can be null/undefined.\n\t   * @type {Objet|HashMap}\n\t   */\n\t\n\t  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n\t  /**\n\t   * Not null/undefined, uint.\n\t   * @type {number}\n\t   */\n\t\n\t  this.startIndex = fields.startIndex || 0;\n\t  /**\n\t   * Can be null/undefined (when unknown), uint.\n\t   * @type {number}\n\t   */\n\t\n\t  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n\t}\n\t/**\n\t * Wrap original series data for some compatibility cases.\n\t */\n\t\n\t\n\tSource.seriesDataToSource = function (data) {\n\t  return new Source({\n\t    data: data,\n\t    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n\t    fromDataset: false\n\t  });\n\t};\n\t\n\tenableClassCheck(Source);\n\tvar _default = Source;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar createHashMap = _util.createHashMap;\n\tvar each = _util.each;\n\tvar isString = _util.isString;\n\tvar defaults = _util.defaults;\n\tvar extend = _util.extend;\n\tvar isObject = _util.isObject;\n\tvar clone = _util.clone;\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar normalizeToArray = _model.normalizeToArray;\n\t\n\tvar _sourceHelper = __webpack_require__(270);\n\t\n\tvar guessOrdinal = _sourceHelper.guessOrdinal;\n\t\n\tvar Source = __webpack_require__(127);\n\t\n\tvar _dimensionHelper = __webpack_require__(269);\n\t\n\tvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\t\n\t/**\n\t * @deprecated\n\t * Use `echarts/data/helper/createDimensions` instead.\n\t */\n\t\n\t/**\n\t * @see {module:echarts/test/ut/spec/data/completeDimensions}\n\t *\n\t * Complete the dimensions array, by user defined `dimension` and `encode`,\n\t * and guessing from the data structure.\n\t * If no 'value' dimension specified, the first no-named dimension will be\n\t * named as 'value'.\n\t *\n\t * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n\t *      provides not only dim template, but also default order.\n\t *      properties: 'name', 'type', 'displayName'.\n\t *      `name` of each item provides default coord name.\n\t *      [{dimsDef: [string...]}, ...] can be specified to give names.\n\t *      [{ordinalMeta}] can be specified.\n\t * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n\t * @param {Object} [opt]\n\t * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n\t *      For example: ['asdf', {name, type}, ...].\n\t * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n\t * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n\t * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n\t *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n\t *                      If not specified, extra dim names will be:\n\t *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n\t * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n\t * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n\t * @return {Array.<Object>} [{\n\t *      name: string mandatory,\n\t *      displayName: string, the origin name in dimsDef, see source helper.\n\t *                 If displayName given, the tooltip will displayed vertically.\n\t *      coordDim: string mandatory,\n\t *      isSysCoord: boolean True if the coord is from sys dimension.\n\t *      coordDimIndex: number mandatory,\n\t *      type: string optional,\n\t *      otherDims: { never null/undefined\n\t *          tooltip: number optional,\n\t *          label: number optional,\n\t *          itemName: number optional,\n\t *          seriesName: number optional,\n\t *      },\n\t *      isExtraCoord: boolean true or undefined.\n\t *      other props ...\n\t * }]\n\t */\n\tfunction completeDimensions(sysDims, source, opt) {\n\t  if (!Source.isInstance(source)) {\n\t    source = Source.seriesDataToSource(source);\n\t  }\n\t\n\t  opt = opt || {};\n\t  sysDims = (sysDims || []).slice();\n\t  var dimsDef = (opt.dimsDef || []).slice();\n\t  var encodeDef = createHashMap(opt.encodeDef);\n\t  var dataDimNameMap = createHashMap();\n\t  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\t\n\t  var result = [];\n\t  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\t\n\t  for (var i = 0; i < dimCount; i++) {\n\t    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n\t      name: dimsDef[i]\n\t    });\n\t    var userDimName = dimDefItem.name;\n\t    var resultItem = result[i] = {\n\t      otherDims: {}\n\t    }; // Name will be applied later for avoiding duplication.\n\t\n\t    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n\t      // Only if `series.dimensions` is defined in option\n\t      // displayName, will be set, and dimension will be diplayed vertically in\n\t      // tooltip by default.\n\t      resultItem.name = resultItem.displayName = userDimName;\n\t      dataDimNameMap.set(userDimName, i);\n\t    }\n\t\n\t    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n\t    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n\t  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\t\n\t\n\t  encodeDef.each(function (dataDims, coordDim) {\n\t    dataDims = normalizeToArray(dataDims).slice();\n\t    var validDataDims = encodeDef.set(coordDim, []);\n\t    each(dataDims, function (resultDimIdx, idx) {\n\t      // The input resultDimIdx can be dim name or index.\n\t      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\t\n\t      if (resultDimIdx != null && resultDimIdx < dimCount) {\n\t        validDataDims[idx] = resultDimIdx;\n\t        applyDim(result[resultDimIdx], coordDim, idx);\n\t      }\n\t    });\n\t  }); // Apply templetes and default order from `sysDims`.\n\t\n\t  var availDimIdx = 0;\n\t  each(sysDims, function (sysDimItem, sysDimIndex) {\n\t    var coordDim;\n\t    var sysDimItem;\n\t    var sysDimItemDimsDef;\n\t    var sysDimItemOtherDims;\n\t\n\t    if (isString(sysDimItem)) {\n\t      coordDim = sysDimItem;\n\t      sysDimItem = {};\n\t    } else {\n\t      coordDim = sysDimItem.name;\n\t      var ordinalMeta = sysDimItem.ordinalMeta;\n\t      sysDimItem.ordinalMeta = null;\n\t      sysDimItem = clone(sysDimItem);\n\t      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\t\n\t      sysDimItemDimsDef = sysDimItem.dimsDef;\n\t      sysDimItemOtherDims = sysDimItem.otherDims;\n\t      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n\t    }\n\t\n\t    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\t\n\t    if (!dataDims.length) {\n\t      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n\t        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n\t          availDimIdx++;\n\t        }\n\t\n\t        availDimIdx < result.length && dataDims.push(availDimIdx++);\n\t      }\n\t    } // Apply templates.\n\t\n\t\n\t    each(dataDims, function (resultDimIdx, coordDimIndex) {\n\t      var resultItem = result[resultDimIdx];\n\t      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\t\n\t      if (resultItem.name == null && sysDimItemDimsDef) {\n\t        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n\t      }\n\t\n\t      resultItem.isSysCoord = true; // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\t\n\t      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n\t    });\n\t  });\n\t\n\t  function applyDim(resultItem, coordDim, coordDimIndex) {\n\t    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n\t      resultItem.otherDims[coordDim] = coordDimIndex;\n\t    } else {\n\t      resultItem.coordDim = coordDim;\n\t      resultItem.coordDimIndex = coordDimIndex;\n\t      coordDimNameMap.set(coordDim, true);\n\t    }\n\t  } // Make sure the first extra dim is 'value'.\n\t\n\t\n\t  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\t\n\t  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n\t    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n\t    var coordDim = resultItem.coordDim;\n\t    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n\t    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\t\n\t    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n\t      resultItem.type = 'ordinal';\n\t    }\n\t  }\n\t\n\t  return result;\n\t} // ??? TODO\n\t// Originally detect dimCount by data[0]. Should we\n\t// optimize it to only by sysDims and dimensions and encode.\n\t// So only necessary dims will be initialized.\n\t// But\n\t// (1) custom series should be considered. where other dims\n\t// may be visited.\n\t// (2) sometimes user need to calcualte bubble size or use visualMap\n\t// on other dimensions besides coordSys needed.\n\t\n\t\n\tfunction getDimCount(source, sysDims, dimsDef, dimCount) {\n\t  if (dimCount == null) {\n\t    dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length);\n\t    each(sysDims, function (sysDimItem) {\n\t      var sysDimItemDimsDef = sysDimItem.dimsDef;\n\t      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n\t    });\n\t  }\n\t\n\t  return dimCount;\n\t}\n\t\n\tfunction genName(name, map, fromZero) {\n\t  if (fromZero || map.get(name) != null) {\n\t    var i = 0;\n\t\n\t    while (map.get(name + i) != null) {\n\t      i++;\n\t    }\n\t\n\t    name += i;\n\t  }\n\t\n\t  map.set(name, true);\n\t  return name;\n\t}\n\t\n\tvar _default = completeDimensions;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 268:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar completeDimensions = __webpack_require__(423);\n\t\n\t/**\n\t * Substitute `completeDimensions`.\n\t * `completeDimensions` is to be deprecated.\n\t */\n\t\n\t/**\n\t * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n\t * @param {Object|Array} [opt]\n\t * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n\t * @param {number} [opt.dimensionsCount]\n\t * @param {string} [opt.extraPrefix]\n\t * @param {boolean} [opt.extraFromZero]\n\t * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n\t * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n\t * @return {Array.<Object>} dimensionsInfo\n\t */\n\tfunction _default(source, opt) {\n\t  opt = opt || {};\n\t  return completeDimensions(opt.coordDimensions || [], source, {\n\t    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n\t    encodeDef: opt.encodeDefine || source.encodeDefine,\n\t    dimCount: opt.dimensionsCount,\n\t    extraPrefix: opt.extraPrefix,\n\t    extraFromZero: opt.extraFromZero\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar isTypedArray = _util.isTypedArray;\n\tvar extend = _util.extend;\n\tvar assert = _util.assert;\n\tvar each = _util.each;\n\tvar isObject = _util.isObject;\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar getDataItemValue = _model.getDataItemValue;\n\tvar isDataItemOption = _model.isDataItemOption;\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar parseDate = _number.parseDate;\n\t\n\tvar Source = __webpack_require__(127);\n\t\n\tvar _sourceType = __webpack_require__(192);\n\t\n\tvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\n\tvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\n\tvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\tvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\t\n\t// TODO\n\t// ??? refactor? check the outer usage of data provider.\n\t// merge with defaultDimValueGetter?\n\t\n\t/**\n\t * If normal array used, mutable chunk size is supported.\n\t * If typed array used, chunk size must be fixed.\n\t */\n\tfunction DefaultDataProvider(source, dimSize) {\n\t  if (!Source.isInstance(source)) {\n\t    source = Source.seriesDataToSource(source);\n\t  }\n\t\n\t  this._source = source;\n\t  var data = this._data = source.data;\n\t  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\t\n\t  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n\t    this._offset = 0;\n\t    this._dimSize = dimSize;\n\t    this._data = data;\n\t  }\n\t\n\t  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n\t  extend(this, methods);\n\t}\n\t\n\tvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\t\n\tproviderProto.pure = false; // If data is persistent and will not be released after use.\n\t\n\tproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\t\n\tproviderProto.getSource = function () {\n\t  return this._source;\n\t};\n\t\n\tvar providerMethods = {\n\t  'arrayRows_column': {\n\t    pure: true,\n\t    count: function () {\n\t      return Math.max(0, this._data.length - this._source.startIndex);\n\t    },\n\t    getItem: function (idx) {\n\t      return this._data[idx + this._source.startIndex];\n\t    },\n\t    appendData: appendDataSimply\n\t  },\n\t  'arrayRows_row': {\n\t    pure: true,\n\t    count: function () {\n\t      var row = this._data[0];\n\t      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n\t    },\n\t    getItem: function (idx) {\n\t      idx += this._source.startIndex;\n\t      var item = [];\n\t      var data = this._data;\n\t\n\t      for (var i = 0; i < data.length; i++) {\n\t        var row = data[i];\n\t        item.push(row ? row[idx] : null);\n\t      }\n\t\n\t      return item;\n\t    },\n\t    appendData: function () {\n\t      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n\t    }\n\t  },\n\t  'objectRows': {\n\t    pure: true,\n\t    count: countSimply,\n\t    getItem: getItemSimply,\n\t    appendData: appendDataSimply\n\t  },\n\t  'keyedColumns': {\n\t    pure: true,\n\t    count: function () {\n\t      var dimName = this._source.dimensionsDefine[0].name;\n\t      var col = this._data[dimName];\n\t      return col ? col.length : 0;\n\t    },\n\t    getItem: function (idx) {\n\t      var item = [];\n\t      var dims = this._source.dimensionsDefine;\n\t\n\t      for (var i = 0; i < dims.length; i++) {\n\t        var col = this._data[dims[i].name];\n\t        item.push(col ? col[idx] : null);\n\t      }\n\t\n\t      return item;\n\t    },\n\t    appendData: function (newData) {\n\t      var data = this._data;\n\t      each(newData, function (newCol, key) {\n\t        var oldCol = data[key] || (data[key] = []);\n\t\n\t        for (var i = 0; i < (newCol || []).length; i++) {\n\t          oldCol.push(newCol[i]);\n\t        }\n\t      });\n\t    }\n\t  },\n\t  'original': {\n\t    count: countSimply,\n\t    getItem: getItemSimply,\n\t    appendData: appendDataSimply\n\t  },\n\t  'typedArray': {\n\t    persistent: false,\n\t    pure: true,\n\t    count: function () {\n\t      return this._data ? this._data.length / this._dimSize : 0;\n\t    },\n\t    getItem: function (idx) {\n\t      idx = idx - this._offset;\n\t      var item = [];\n\t      var offset = this._dimSize * idx;\n\t\n\t      for (var i = 0; i < this._dimSize; i++) {\n\t        item[i] = this._data[offset + i];\n\t      }\n\t\n\t      return item;\n\t    },\n\t    appendData: function (newData) {\n\t      this._data = newData;\n\t    },\n\t    // Clean self if data is already used.\n\t    clean: function () {\n\t      // PENDING\n\t      this._offset += this.count();\n\t      this._data = null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction countSimply() {\n\t  return this._data.length;\n\t}\n\t\n\tfunction getItemSimply(idx) {\n\t  return this._data[idx];\n\t}\n\t\n\tfunction appendDataSimply(newData) {\n\t  for (var i = 0; i < newData.length; i++) {\n\t    this._data.push(newData[i]);\n\t  }\n\t}\n\t\n\tvar rawValueGetters = {\n\t  arrayRows: getRawValueSimply,\n\t  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n\t    return dimIndex != null ? dataItem[dimName] : dataItem;\n\t  },\n\t  keyedColumns: getRawValueSimply,\n\t  original: function (dataItem, dataIndex, dimIndex, dimName) {\n\t    // FIXME\n\t    // In some case (markpoint in geo (geo-map.html)), dataItem\n\t    // is {coord: [...]}\n\t    var value = getDataItemValue(dataItem);\n\t    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n\t  },\n\t  typedArray: getRawValueSimply\n\t};\n\t\n\tfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n\t  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n\t}\n\t\n\tvar defaultDimValueGetters = {\n\t  arrayRows: getDimValueSimply,\n\t  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n\t    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n\t  },\n\t  keyedColumns: getDimValueSimply,\n\t  original: function (dataItem, dimName, dataIndex, dimIndex) {\n\t    // Performance sensitive, do not use modelUtil.getDataItemValue.\n\t    // If dataItem is an plain object with no value field, the var `value`\n\t    // will be assigned with the object, but it will be tread correctly\n\t    // in the `convertDataValue`.\n\t    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\t\n\t    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n\t      this.hasItemOption = true;\n\t    }\n\t\n\t    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n\t    : value, this._dimensionInfos[dimName]);\n\t  },\n\t  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n\t    return dataItem[dimIndex];\n\t  }\n\t};\n\t\n\tfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n\t  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n\t}\n\t/**\n\t * This helper method convert value in data.\n\t * @param {string|number|Date} value\n\t * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n\t *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n\t */\n\t\n\t\n\tfunction converDataValue(value, dimInfo) {\n\t  // Performance sensitive.\n\t  var dimType = dimInfo && dimInfo.type;\n\t\n\t  if (dimType === 'ordinal') {\n\t    // If given value is a category string\n\t    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n\t    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n\t  }\n\t\n\t  if (dimType === 'time' // spead up when using timestamp\n\t  && typeof value !== 'number' && value != null && value !== '-') {\n\t    value = +parseDate(value);\n\t  } // dimType defaults 'number'.\n\t  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n\t  // parse to NaN.\n\t\n\t\n\t  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n\t  // If object, also parse to NaN\n\t  : +value;\n\t} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n\t// Consider persistent.\n\t// Caution: why use raw value to display on label or tooltip?\n\t// A reason is to avoid format. For example time value we do not know\n\t// how to format is expected. More over, if stack is used, calculated\n\t// value may be 0.91000000001, which have brings trouble to display.\n\t// TODO: consider how to treat null/undefined/NaN when display?\n\t\n\t/**\n\t * @param {module:echarts/data/List} data\n\t * @param {number} dataIndex\n\t * @param {string|number} [dim] dimName or dimIndex\n\t * @return {Array.<number>|string|number} can be null/undefined.\n\t */\n\t\n\t\n\tfunction retrieveRawValue(data, dataIndex, dim) {\n\t  if (!data) {\n\t    return;\n\t  } // Consider data may be not persistent.\n\t\n\t\n\t  var dataItem = data.getRawDataItem(dataIndex);\n\t\n\t  if (dataItem == null) {\n\t    return;\n\t  }\n\t\n\t  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\t  var dimName;\n\t  var dimIndex;\n\t  var dimInfo = data.getDimensionInfo(dim);\n\t\n\t  if (dimInfo) {\n\t    dimName = dimInfo.name;\n\t    dimIndex = dimInfo.index;\n\t  }\n\t\n\t  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n\t}\n\t/**\n\t * Compatible with some cases (in pie, map) like:\n\t * data: [{name: 'xx', value: 5, selected: true}, ...]\n\t * where only sourceFormat is 'original' and 'objectRows' supported.\n\t *\n\t * ??? TODO\n\t * Supported detail options in data item when using 'arrayRows'.\n\t *\n\t * @param {module:echarts/data/List} data\n\t * @param {number} dataIndex\n\t * @param {string} attr like 'selected'\n\t */\n\t\n\t\n\tfunction retrieveRawAttr(data, dataIndex, attr) {\n\t  if (!data) {\n\t    return;\n\t  }\n\t\n\t  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\t\n\t  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n\t    return;\n\t  }\n\t\n\t  var dataItem = data.getRawDataItem(dataIndex);\n\t\n\t  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n\t    dataItem = null;\n\t  }\n\t\n\t  if (dataItem) {\n\t    return dataItem[attr];\n\t  }\n\t}\n\t\n\texports.DefaultDataProvider = DefaultDataProvider;\n\texports.defaultDimValueGetters = defaultDimValueGetters;\n\texports.retrieveRawValue = retrieveRawValue;\n\texports.retrieveRawAttr = retrieveRawAttr;\n\n/***/ }),\n\n/***/ 269:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar each = _util.each;\n\tvar createHashMap = _util.createHashMap;\n\tvar assert = _util.assert;\n\t\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\tvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\t\n\tfunction summarizeDimensions(data) {\n\t  var summary = {};\n\t  var encode = summary.encode = {};\n\t  var coordDimMap = summary.coordDimMap = createHashMap();\n\t  var defaultedLabel = [];\n\t  each(data.dimensions, function (dimName) {\n\t    var dimItem = data.getDimensionInfo(dimName);\n\t    var coordDim = dimItem.coordDim;\n\t\n\t    if (coordDim) {\n\t      var coordDimArr = encode[coordDim];\n\t\n\t      if (!encode.hasOwnProperty(coordDim)) {\n\t        coordDimArr = encode[coordDim] = [];\n\t      }\n\t\n\t      coordDimArr[dimItem.coordDimIndex] = dimName;\n\t\n\t      if (dimItem.isSysCoord && mayLabelDimType(dimItem.type)) {\n\t        // Use the last coord dim (and label friendly) as default label,\n\t        // because both show x, y on label is not look good, and usually\n\t        // y axis is more focusd conventionally.\n\t        defaultedLabel[0] = dimName;\n\t      }\n\t\n\t      coordDimMap.set(coordDim, 1);\n\t    }\n\t\n\t    OTHER_DIMENSIONS.each(function (v, otherDim) {\n\t      var otherDimArr = encode[otherDim];\n\t\n\t      if (!encode.hasOwnProperty(otherDim)) {\n\t        otherDimArr = encode[otherDim] = [];\n\t      }\n\t\n\t      var dimIndex = dimItem.otherDims[otherDim];\n\t\n\t      if (dimIndex != null && dimIndex !== false) {\n\t        otherDimArr[dimIndex] = dimItem.name;\n\t      }\n\t    });\n\t  });\n\t  var dataDimsOnCoord = [];\n\t  coordDimMap.each(function (v, coordDim) {\n\t    dataDimsOnCoord = dataDimsOnCoord.concat(encode[coordDim]);\n\t  });\n\t  summary.dataDimsOnCoord = dataDimsOnCoord;\n\t  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n\t  // in this way. Use label.formatter instead. May be remove this approach someday.\n\t\n\t  if (encodeLabel && encodeLabel.length) {\n\t    defaultedLabel = encodeLabel.slice();\n\t  }\n\t\n\t  var defaultedTooltip = defaultedLabel.slice();\n\t  var encodeTooltip = encode.tooltip;\n\t\n\t  if (encodeTooltip && encodeTooltip.length) {\n\t    defaultedTooltip = encodeTooltip.slice();\n\t  }\n\t\n\t  encode.defaultedLabel = defaultedLabel;\n\t  encode.defaultedTooltip = defaultedTooltip;\n\t  return summary;\n\t}\n\t\n\tfunction getDimensionTypeByAxis(axisType) {\n\t  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n\t}\n\t\n\tfunction mayLabelDimType(dimType) {\n\t  // In most cases, ordinal and time do not suitable for label.\n\t  // Ordinal info can be displayed on axis. Time is too long.\n\t  return !(dimType === 'ordinal' || dimType === 'time');\n\t} // function findTheLastDimMayLabel(data) {\n\t//     // Get last value dim\n\t//     var dimensions = data.dimensions.slice();\n\t//     var valueType;\n\t//     var valueDim;\n\t//     while (dimensions.length && (\n\t//         valueDim = dimensions.pop(),\n\t//         valueType = data.getDimensionInfo(valueDim).type,\n\t//         valueType === 'ordinal' || valueType === 'time'\n\t//     )) {} // jshint ignore:line\n\t//     return valueDim;\n\t// }\n\t\n\t\n\texports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\n\texports.summarizeDimensions = summarizeDimensions;\n\texports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n/***/ }),\n\n/***/ 803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\t/**\n\t * Link lists and struct (graph or tree)\n\t */\n\tvar each = zrUtil.each;\n\tvar DATAS = '\\0__link_datas';\n\tvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n\t// In most case, either list or its shallow clones (see list.cloneShallow)\n\t// is active in echarts process. So considering heap memory consumption,\n\t// we do not clone tree or graph, but share them among list and its shallow clones.\n\t// But in some rare case, we have to keep old list (like do animation in chart). So\n\t// please take care that both the old list and the new list share the same tree/graph.\n\t\n\t/**\n\t * @param {Object} opt\n\t * @param {module:echarts/data/List} opt.mainData\n\t * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n\t * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n\t * @param {Object} [opt.datas] {dataType: data},\n\t *                 like: {node: nodeList, edge: edgeList}.\n\t *                 Should contain mainData.\n\t * @param {Object} [opt.datasAttr] {dataType: attr},\n\t *                 designation: struct[datasAttr[dataType]] = list;\n\t */\n\t\n\tfunction linkList(opt) {\n\t  var mainData = opt.mainData;\n\t  var datas = opt.datas;\n\t\n\t  if (!datas) {\n\t    datas = {\n\t      main: mainData\n\t    };\n\t    opt.datasAttr = {\n\t      main: 'data'\n\t    };\n\t  }\n\t\n\t  opt.datas = opt.mainData = null;\n\t  linkAll(mainData, datas, opt); // Porxy data original methods.\n\t\n\t  each(datas, function (data) {\n\t    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n\t      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n\t    });\n\t  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\t\n\t  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n\t  // another changable methods, which may bring about dead lock.\n\t\n\t  each(mainData.CHANGABLE_METHODS, function (methodName) {\n\t    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n\t  }); // Make sure datas contains mainData.\n\t\n\t  zrUtil.assert(datas[mainData.dataType] === mainData);\n\t}\n\t\n\tfunction transferInjection(opt, res) {\n\t  if (isMainData(this)) {\n\t    // Transfer datas to new main data.\n\t    var datas = zrUtil.extend({}, this[DATAS]);\n\t    datas[this.dataType] = res;\n\t    linkAll(res, datas, opt);\n\t  } else {\n\t    // Modify the reference in main data to point newData.\n\t    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n\t  }\n\t\n\t  return res;\n\t}\n\t\n\tfunction changeInjection(opt, res) {\n\t  opt.struct && opt.struct.update(this);\n\t  return res;\n\t}\n\t\n\tfunction cloneShallowInjection(opt, res) {\n\t  // cloneShallow, which brings about some fragilities, may be inappropriate\n\t  // to be exposed as an API. So for implementation simplicity we can make\n\t  // the restriction that cloneShallow of not-mainData should not be invoked\n\t  // outside, but only be invoked here.\n\t  each(res[DATAS], function (data, dataType) {\n\t    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n\t  });\n\t  return res;\n\t}\n\t/**\n\t * Supplement method to List.\n\t *\n\t * @public\n\t * @param {string} [dataType] If not specified, return mainData.\n\t * @return {module:echarts/data/List}\n\t */\n\t\n\t\n\tfunction getLinkedData(dataType) {\n\t  var mainData = this[MAIN_DATA];\n\t  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n\t}\n\t\n\tfunction isMainData(data) {\n\t  return data[MAIN_DATA] === data;\n\t}\n\t\n\tfunction linkAll(mainData, datas, opt) {\n\t  mainData[DATAS] = {};\n\t  each(datas, function (data, dataType) {\n\t    linkSingle(data, dataType, mainData, opt);\n\t  });\n\t}\n\t\n\tfunction linkSingle(data, dataType, mainData, opt) {\n\t  mainData[DATAS][dataType] = data;\n\t  data[MAIN_DATA] = mainData;\n\t  data.dataType = dataType;\n\t\n\t  if (opt.struct) {\n\t    data[opt.structAttr] = opt.struct;\n\t    opt.struct[opt.datasAttr[dataType]] = data;\n\t  } // Supplement method.\n\t\n\t\n\t  data.getLinkedData = getLinkedData;\n\t}\n\t\n\tvar _default = linkList;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 270:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\tvar getDataItemValue = _model.getDataItemValue;\n\t\n\tvar _referHelper = __webpack_require__(426);\n\t\n\tvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar createHashMap = _util.createHashMap;\n\tvar each = _util.each;\n\tvar map = _util.map;\n\tvar isArray = _util.isArray;\n\tvar isString = _util.isString;\n\tvar isObject = _util.isObject;\n\tvar isTypedArray = _util.isTypedArray;\n\tvar isArrayLike = _util.isArrayLike;\n\tvar extend = _util.extend;\n\tvar assert = _util.assert;\n\t\n\tvar Source = __webpack_require__(127);\n\t\n\tvar _sourceType = __webpack_require__(192);\n\t\n\tvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\tvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\n\tvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\tvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\tvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\n\tvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\n\tvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\tvar inner = makeInner();\n\t/**\n\t * @see {module:echarts/data/Source}\n\t * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n\t * @return {string} sourceFormat\n\t */\n\t\n\tfunction detectSourceFormat(datasetModel) {\n\t  var data = datasetModel.option.source;\n\t  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\t\n\t  if (isTypedArray(data)) {\n\t    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n\t  } else if (isArray(data)) {\n\t    // FIXME Whether tolerate null in top level array?\n\t    for (var i = 0, len = data.length; i < len; i++) {\n\t      var item = data[i];\n\t\n\t      if (item == null) {\n\t        continue;\n\t      } else if (isArray(item)) {\n\t        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n\t        break;\n\t      } else if (isObject(item)) {\n\t        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n\t        break;\n\t      }\n\t    }\n\t  } else if (isObject(data)) {\n\t    for (var key in data) {\n\t      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n\t        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n\t        break;\n\t      }\n\t    }\n\t  } else if (data != null) {\n\t    throw new Error('Invalid data');\n\t  }\n\t\n\t  inner(datasetModel).sourceFormat = sourceFormat;\n\t}\n\t/**\n\t * [Scenarios]:\n\t * (1) Provide source data directly:\n\t *     series: {\n\t *         encode: {...},\n\t *         dimensions: [...]\n\t *         seriesLayoutBy: 'row',\n\t *         data: [[...]]\n\t *     }\n\t * (2) Refer to datasetModel.\n\t *     series: [{\n\t *         encode: {...}\n\t *         // Ignore datasetIndex means `datasetIndex: 0`\n\t *         // and the dimensions defination in dataset is used\n\t *     }, {\n\t *         encode: {...},\n\t *         seriesLayoutBy: 'column',\n\t *         datasetIndex: 1\n\t *     }]\n\t *\n\t * Get data from series itself or datset.\n\t * @return {module:echarts/data/Source} source\n\t */\n\t\n\t\n\tfunction getSource(seriesModel) {\n\t  return inner(seriesModel).source;\n\t}\n\t/**\n\t * MUST be called before mergeOption of all series.\n\t * @param {module:echarts/model/Global} ecModel\n\t */\n\t\n\t\n\tfunction resetSourceDefaulter(ecModel) {\n\t  // `datasetMap` is used to make default encode.\n\t  inner(ecModel).datasetMap = createHashMap();\n\t}\n\t/**\n\t * [Caution]:\n\t * MUST be called after series option merged and\n\t * before \"series.getInitailData()\" called.\n\t *\n\t * [The rule of making default encode]:\n\t * Category axis (if exists) alway map to the first dimension.\n\t * Each other axis occupies a subsequent dimension.\n\t *\n\t * [Why make default encode]:\n\t * Simplify the typing of encode in option, avoiding the case like that:\n\t * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n\t * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n\t *\n\t * @param {module:echarts/model/Series} seriesModel\n\t */\n\t\n\t\n\tfunction prepareSource(seriesModel) {\n\t  var seriesOption = seriesModel.option;\n\t  var data = seriesOption.data;\n\t  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n\t  var fromDataset = false;\n\t  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n\t  var sourceHeader = seriesOption.sourceHeader;\n\t  var dimensionsDefine = seriesOption.dimensions;\n\t  var datasetModel = getDatasetModel(seriesModel);\n\t\n\t  if (datasetModel) {\n\t    var datasetOption = datasetModel.option;\n\t    data = datasetOption.source;\n\t    sourceFormat = inner(datasetModel).sourceFormat;\n\t    fromDataset = true; // These settings from series has higher priority.\n\t\n\t    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n\t    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n\t    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n\t  }\n\t\n\t  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\t\n\t  var encodeDefine = seriesOption.encode;\n\t\n\t  if (!encodeDefine && datasetModel) {\n\t    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n\t  }\n\t\n\t  inner(seriesModel).source = new Source({\n\t    data: data,\n\t    fromDataset: fromDataset,\n\t    seriesLayoutBy: seriesLayoutBy,\n\t    sourceFormat: sourceFormat,\n\t    dimensionsDefine: completeResult.dimensionsDefine,\n\t    startIndex: completeResult.startIndex,\n\t    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n\t    encodeDefine: encodeDefine\n\t  });\n\t} // return {startIndex, dimensionsDefine, dimensionsCount}\n\t\n\t\n\tfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n\t  if (!data) {\n\t    return {\n\t      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n\t    };\n\t  }\n\t\n\t  var dimensionsDetectCount;\n\t  var startIndex;\n\t  var findPotentialName;\n\t\n\t  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n\t    // Rule: Most of the first line are string: it is header.\n\t    // Caution: consider a line with 5 string and 1 number,\n\t    // it still can not be sure it is a head, because the\n\t    // 5 string may be 5 values of category columns.\n\t    if (sourceHeader === 'auto' || sourceHeader == null) {\n\t      arrayRowsTravelFirst(function (val) {\n\t        // '-' is regarded as null/undefined.\n\t        if (val != null && val !== '-') {\n\t          if (isString(val)) {\n\t            startIndex == null && (startIndex = 1);\n\t          } else {\n\t            startIndex = 0;\n\t          }\n\t        } // 10 is an experience number, avoid long loop.\n\t\n\t      }, seriesLayoutBy, data, 10);\n\t    } else {\n\t      startIndex = sourceHeader ? 1 : 0;\n\t    }\n\t\n\t    if (!dimensionsDefine && startIndex === 1) {\n\t      dimensionsDefine = [];\n\t      arrayRowsTravelFirst(function (val, index) {\n\t        dimensionsDefine[index] = val != null ? val : '';\n\t      }, seriesLayoutBy, data);\n\t    }\n\t\n\t    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n\t  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n\t    if (!dimensionsDefine) {\n\t      dimensionsDefine = objectRowsCollectDimensions(data);\n\t      findPotentialName = true;\n\t    }\n\t  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n\t    if (!dimensionsDefine) {\n\t      dimensionsDefine = [];\n\t      findPotentialName = true;\n\t      each(data, function (colArr, key) {\n\t        dimensionsDefine.push(key);\n\t      });\n\t    }\n\t  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n\t    var value0 = getDataItemValue(data[0]);\n\t    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n\t  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\t\n\t  var potentialNameDimIndex;\n\t\n\t  if (findPotentialName) {\n\t    each(dimensionsDefine, function (dim, idx) {\n\t      if ((isObject(dim) ? dim.name : dim) === 'name') {\n\t        potentialNameDimIndex = idx;\n\t      }\n\t    });\n\t  }\n\t\n\t  return {\n\t    startIndex: startIndex,\n\t    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n\t    dimensionsDetectCount: dimensionsDetectCount,\n\t    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\t\n\t  };\n\t} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n\t// which is reasonable. But dimension name is duplicated.\n\t// Returns undefined or an array contains only object without null/undefiend or string.\n\t\n\t\n\tfunction normalizeDimensionsDefine(dimensionsDefine) {\n\t  if (!dimensionsDefine) {\n\t    // The meaning of null/undefined is different from empty array.\n\t    return;\n\t  }\n\t\n\t  var nameMap = createHashMap();\n\t  return map(dimensionsDefine, function (item, index) {\n\t    item = extend({}, isObject(item) ? item : {\n\t      name: item\n\t    }); // User can set null in dimensions.\n\t    // We dont auto specify name, othewise a given name may\n\t    // cause it be refered unexpectedly.\n\t\n\t    if (item.name == null) {\n\t      return item;\n\t    } // Also consider number form like 2012.\n\t\n\t\n\t    item.name += ''; // User may also specify displayName.\n\t    // displayName will always exists except user not\n\t    // specified or dim name is not specified or detected.\n\t    // (A auto generated dim name will not be used as\n\t    // displayName).\n\t\n\t    if (item.displayName == null) {\n\t      item.displayName = item.name;\n\t    }\n\t\n\t    var exist = nameMap.get(item.name);\n\t\n\t    if (!exist) {\n\t      nameMap.set(item.name, {\n\t        count: 1\n\t      });\n\t    } else {\n\t      item.name += '-' + exist.count++;\n\t    }\n\t\n\t    return item;\n\t  });\n\t}\n\t\n\tfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n\t  maxLoop == null && (maxLoop = Infinity);\n\t\n\t  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n\t    for (var i = 0; i < data.length && i < maxLoop; i++) {\n\t      cb(data[i] ? data[i][0] : null, i);\n\t    }\n\t  } else {\n\t    var value0 = data[0] || [];\n\t\n\t    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n\t      cb(value0[i], i);\n\t    }\n\t  }\n\t}\n\t\n\tfunction objectRowsCollectDimensions(data) {\n\t  var firstIndex = 0;\n\t  var obj;\n\t\n\t  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\t\n\t\n\t  if (obj) {\n\t    var dimensions = [];\n\t    each(obj, function (value, key) {\n\t      dimensions.push(key);\n\t    });\n\t    return dimensions;\n\t  }\n\t} // ??? TODO merge to completedimensions, where also has\n\t// default encode making logic. And the default rule\n\t// should depends on series? consider 'map'.\n\t\n\t\n\tfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n\t  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n\t  var encode = {}; // var encodeTooltip = [];\n\t  // var encodeLabel = [];\n\t\n\t  var encodeItemName = [];\n\t  var encodeSeriesName = [];\n\t  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n\t  // Consider the case: 'map' series is based on geo coordSys,\n\t  // 'graph', 'heatmap' can be based on cartesian. But can not\n\t  // give default rule simply here.\n\t\n\t  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n\t  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n\t  // dimension as the \"value\" dimension, or other default\n\t  // processes respectively.\n\t\n\t  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n\t    var ecModel = seriesModel.ecModel;\n\t    var datasetMap = inner(ecModel).datasetMap;\n\t    var key = datasetModel.uid + '_' + seriesLayoutBy;\n\t    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n\t      categoryWayDim: 1,\n\t      valueWayDim: 0\n\t    }); // TODO\n\t    // Auto detect first time axis and do arrangement.\n\t\n\t    each(coordSysDefine.coordSysDims, function (coordDim) {\n\t      // In value way.\n\t      if (coordSysDefine.firstCategoryDimIndex == null) {\n\t        var dataDim = datasetRecord.valueWayDim++;\n\t        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n\t        // especially when encode x y specified.\n\t        // consider: when mutiple series share one dimension\n\t        // category axis, series name should better use\n\t        // the other dimsion name. On the other hand, use\n\t        // both dimensions name.\n\t\n\t        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n\t        // encodeLabel.push(dataDim);\n\t      } // In category way, category axis.\n\t      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n\t          encode[coordDim] = 0;\n\t          encodeItemName.push(0);\n\t        } // In category way, non-category axis.\n\t        else {\n\t            var dataDim = datasetRecord.categoryWayDim++;\n\t            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n\t            // encodeLabel.push(dataDim);\n\t\n\t            encodeSeriesName.push(dataDim);\n\t          }\n\t    });\n\t  } // Do not make a complex rule! Hard to code maintain and not necessary.\n\t  // ??? TODO refactor: provide by series itself.\n\t  // [{name: ..., value: ...}, ...] like:\n\t  else if (nSeriesMap.get(seriesType) != null) {\n\t      // Find the first not ordinal. (5 is an experience value)\n\t      var firstNotOrdinal;\n\t\n\t      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n\t        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n\t          firstNotOrdinal = i;\n\t        }\n\t      }\n\t\n\t      if (firstNotOrdinal != null) {\n\t        encode.value = firstNotOrdinal;\n\t        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n\t        // So we dont set encodeLabel here.\n\t\n\t        encodeSeriesName.push(nameDimIndex);\n\t        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n\t      }\n\t    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n\t  // encodeLabel.length && (encode.label = encodeLabel);\n\t\n\t\n\t  encodeItemName.length && (encode.itemName = encodeItemName);\n\t  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n\t  return encode;\n\t}\n\t/**\n\t * If return null/undefined, indicate that should not use datasetModel.\n\t */\n\t\n\t\n\tfunction getDatasetModel(seriesModel) {\n\t  var option = seriesModel.option; // Caution: consider the scenario:\n\t  // A dataset is declared and a series is not expected to use the dataset,\n\t  // and at the beginning `setOption({series: { noData })` (just prepare other\n\t  // option but no data), then `setOption({series: {data: [...]}); In this case,\n\t  // the user should set an empty array to avoid that dataset is used by default.\n\t\n\t  var thisData = option.data;\n\t\n\t  if (!thisData) {\n\t    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n\t  }\n\t}\n\t/**\n\t * The rule should not be complex, otherwise user might not\n\t * be able to known where the data is wrong.\n\t * The code is ugly, but how to make it neat?\n\t *\n\t * @param {module:echars/data/Source} source\n\t * @param {number} dimIndex\n\t * @return {boolean} Whether ordinal.\n\t */\n\t\n\t\n\tfunction guessOrdinal(source, dimIndex) {\n\t  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n\t} // dimIndex may be overflow source data.\n\t\n\t\n\tfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n\t  var result; // Experience value.\n\t\n\t  var maxLoop = 5;\n\t\n\t  if (isTypedArray(data)) {\n\t    return false;\n\t  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n\t  // always exists in source.\n\t\n\t\n\t  var dimName;\n\t\n\t  if (dimensionsDefine) {\n\t    dimName = dimensionsDefine[dimIndex];\n\t    dimName = isObject(dimName) ? dimName.name : dimName;\n\t  }\n\t\n\t  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n\t    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n\t      var sample = data[dimIndex];\n\t\n\t      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n\t        if ((result = detectValue(sample[startIndex + i])) != null) {\n\t          return result;\n\t        }\n\t      }\n\t    } else {\n\t      for (var i = 0; i < data.length && i < maxLoop; i++) {\n\t        var row = data[startIndex + i];\n\t\n\t        if (row && (result = detectValue(row[dimIndex])) != null) {\n\t          return result;\n\t        }\n\t      }\n\t    }\n\t  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n\t    if (!dimName) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < data.length && i < maxLoop; i++) {\n\t      var item = data[i];\n\t\n\t      if (item && (result = detectValue(item[dimName])) != null) {\n\t        return result;\n\t      }\n\t    }\n\t  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n\t    if (!dimName) {\n\t      return;\n\t    }\n\t\n\t    var sample = data[dimName];\n\t\n\t    if (!sample || isTypedArray(sample)) {\n\t      return false;\n\t    }\n\t\n\t    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n\t      if ((result = detectValue(sample[i])) != null) {\n\t        return result;\n\t      }\n\t    }\n\t  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n\t    for (var i = 0; i < data.length && i < maxLoop; i++) {\n\t      var item = data[i];\n\t      var val = getDataItemValue(item);\n\t\n\t      if (!isArray(val)) {\n\t        return false;\n\t      }\n\t\n\t      if ((result = detectValue(val[dimIndex])) != null) {\n\t        return result;\n\t      }\n\t    }\n\t  }\n\t\n\t  function detectValue(val) {\n\t    // Consider usage convenience, '1', '2' will be treated as \"number\".\n\t    // `isFinit('')` get `true`.\n\t    if (val != null && isFinite(val) && val !== '') {\n\t      return false;\n\t    } else if (isString(val) && val !== '-') {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\texports.detectSourceFormat = detectSourceFormat;\n\texports.getSource = getSource;\n\texports.resetSourceDefaulter = resetSourceDefaulter;\n\texports.prepareSource = prepareSource;\n\texports.guessOrdinal = guessOrdinal;\n\n/***/ }),\n\n/***/ 192:\n/***/ (function(module, exports) {\n\n\t// Avoid typo.\n\tvar SOURCE_FORMAT_ORIGINAL = 'original';\n\tvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\n\tvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\n\tvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\n\tvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\t\n\tvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\n\tvar SERIES_LAYOUT_BY_COLUMN = 'column';\n\tvar SERIES_LAYOUT_BY_ROW = 'row';\n\texports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\n\texports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\n\texports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\n\texports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\n\texports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\n\texports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\n\texports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\n\texports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrender = __webpack_require__(573);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar colorTool = __webpack_require__(165);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar timsort = __webpack_require__(359);\n\t\n\tvar Eventful = __webpack_require__(115);\n\t\n\tvar GlobalModel = __webpack_require__(424);\n\t\n\tvar ExtensionAPI = __webpack_require__(407);\n\t\n\tvar CoordinateSystemManager = __webpack_require__(189);\n\t\n\tvar OptionManager = __webpack_require__(809);\n\t\n\tvar backwardCompat = __webpack_require__(818);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\tvar SeriesModel = __webpack_require__(810);\n\t\n\tvar ComponentView = __webpack_require__(827);\n\t\n\tvar ChartView = __webpack_require__(826);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\tvar _throttle = __webpack_require__(274);\n\t\n\tvar throttle = _throttle.throttle;\n\t\n\tvar seriesColor = __webpack_require__(829);\n\t\n\tvar aria = __webpack_require__(828);\n\t\n\tvar loadingDefault = __webpack_require__(808);\n\t\n\tvar Scheduler = __webpack_require__(823);\n\t\n\tvar lightTheme = __webpack_require__(825);\n\t\n\tvar darkTheme = __webpack_require__(824);\n\t\n\t/*!\n\t * ECharts, a free, powerful charting and visualization library.\n\t *\n\t * Copyright (c) 2017, Baidu Inc.\n\t * All rights reserved.\n\t *\n\t * LICENSE\n\t * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n\t */\n\tvar assert = zrUtil.assert;\n\tvar each = zrUtil.each;\n\tvar isFunction = zrUtil.isFunction;\n\tvar isObject = zrUtil.isObject;\n\tvar parseClassType = ComponentModel.parseClassType;\n\tvar version = '4.0.2';\n\tvar dependencies = {\n\t  zrender: '4.0.1'\n\t};\n\tvar TEST_FRAME_REMAIN_TIME = 1;\n\tvar PRIORITY_PROCESSOR_FILTER = 1000;\n\tvar PRIORITY_PROCESSOR_STATISTIC = 5000;\n\tvar PRIORITY_VISUAL_LAYOUT = 1000;\n\tvar PRIORITY_VISUAL_GLOBAL = 2000;\n\tvar PRIORITY_VISUAL_CHART = 3000;\n\tvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n\t// necessary?\n\t\n\tvar PRIORITY_VISUAL_BRUSH = 5000;\n\tvar PRIORITY = {\n\t  PROCESSOR: {\n\t    FILTER: PRIORITY_PROCESSOR_FILTER,\n\t    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n\t  },\n\t  VISUAL: {\n\t    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n\t    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n\t    CHART: PRIORITY_VISUAL_CHART,\n\t    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n\t    BRUSH: PRIORITY_VISUAL_BRUSH\n\t  }\n\t}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n\t// where they must not be invoked nestedly, except the only case: invoke\n\t// dispatchAction with updateMethod \"none\" in main process.\n\t// This flag is used to carry out this rule.\n\t// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\t\n\tvar IN_MAIN_PROCESS = '__flagInMainProcess';\n\tvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n\tvar OPTION_UPDATED = '__optionUpdated';\n\tvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\t\n\tfunction createRegisterEventWithLowercaseName(method) {\n\t  return function (eventName, handler, context) {\n\t    // Event name is all lowercase\n\t    eventName = eventName && eventName.toLowerCase();\n\t    Eventful.prototype[method].call(this, eventName, handler, context);\n\t  };\n\t}\n\t/**\n\t * @module echarts~MessageCenter\n\t */\n\t\n\t\n\tfunction MessageCenter() {\n\t  Eventful.call(this);\n\t}\n\t\n\tMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n\tMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n\tMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n\tzrUtil.mixin(MessageCenter, Eventful);\n\t/**\n\t * @module echarts~ECharts\n\t */\n\t\n\tfunction ECharts(dom, theme, opts) {\n\t  opts = opts || {}; // Get theme by name\n\t\n\t  if (typeof theme === 'string') {\n\t    theme = themeStorage[theme];\n\t  }\n\t  /**\n\t   * @type {string}\n\t   */\n\t\n\t\n\t  this.id;\n\t  /**\n\t   * Group id\n\t   * @type {string}\n\t   */\n\t\n\t  this.group;\n\t  /**\n\t   * @type {HTMLElement}\n\t   * @private\n\t   */\n\t\n\t  this._dom = dom;\n\t  var defaultRenderer = 'canvas';\n\t\n\t  /**\n\t   * @type {module:zrender/ZRender}\n\t   * @private\n\t   */\n\t  var zr = this._zr = zrender.init(dom, {\n\t    renderer: opts.renderer || defaultRenderer,\n\t    devicePixelRatio: opts.devicePixelRatio,\n\t    width: opts.width,\n\t    height: opts.height\n\t  });\n\t  /**\n\t   * Expect 60 pfs.\n\t   * @type {Function}\n\t   * @private\n\t   */\n\t\n\t  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n\t  var theme = zrUtil.clone(theme);\n\t  theme && backwardCompat(theme, true);\n\t  /**\n\t   * @type {Object}\n\t   * @private\n\t   */\n\t\n\t  this._theme = theme;\n\t  /**\n\t   * @type {Array.<module:echarts/view/Chart>}\n\t   * @private\n\t   */\n\t\n\t  this._chartsViews = [];\n\t  /**\n\t   * @type {Object.<string, module:echarts/view/Chart>}\n\t   * @private\n\t   */\n\t\n\t  this._chartsMap = {};\n\t  /**\n\t   * @type {Array.<module:echarts/view/Component>}\n\t   * @private\n\t   */\n\t\n\t  this._componentsViews = [];\n\t  /**\n\t   * @type {Object.<string, module:echarts/view/Component>}\n\t   * @private\n\t   */\n\t\n\t  this._componentsMap = {};\n\t  /**\n\t   * @type {module:echarts/CoordinateSystem}\n\t   * @private\n\t   */\n\t\n\t  this._coordSysMgr = new CoordinateSystemManager();\n\t  /**\n\t   * @type {module:echarts/ExtensionAPI}\n\t   * @private\n\t   */\n\t\n\t  var api = this._api = createExtensionAPI(this);\n\t  /**\n\t   * @type {module:echarts/stream/Scheduler}\n\t   */\n\t\n\t  this._scheduler = new Scheduler(this, api);\n\t  Eventful.call(this);\n\t  /**\n\t   * @type {module:echarts~MessageCenter}\n\t   * @private\n\t   */\n\t\n\t  this._messageCenter = new MessageCenter(); // this._scheduler = new Scheduler();\n\t  // Init mouse events\n\t\n\t  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\t\n\t\n\t  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\t\n\t  this._pendingActions = []; // Sort on demand\n\t\n\t  function prioritySortFunc(a, b) {\n\t    return a.__prio - b.__prio;\n\t  }\n\t\n\t  timsort(visualFuncs, prioritySortFunc);\n\t  timsort(dataProcessorFuncs, prioritySortFunc);\n\t  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\t\n\t  zrUtil.setAsPrimitive(this);\n\t}\n\t\n\tvar echartsProto = ECharts.prototype;\n\t\n\techartsProto._onframe = function () {\n\t  if (this._disposed) {\n\t    return;\n\t  }\n\t\n\t  var scheduler = this._scheduler; // Lazy update\n\t\n\t  if (this[OPTION_UPDATED]) {\n\t    var silent = this[OPTION_UPDATED].silent;\n\t    this[IN_MAIN_PROCESS] = true;\n\t    prepare(this);\n\t    updateMethods.update.call(this);\n\t    this[IN_MAIN_PROCESS] = false;\n\t    this[OPTION_UPDATED] = false;\n\t    flushPendingActions.call(this, silent);\n\t    triggerUpdatedEvent.call(this, silent);\n\t  } // Avoid do both lazy update and progress in one frame.\n\t  else if (scheduler.unfinished) {\n\t      // Stream progress.\n\t      var remainTime = TEST_FRAME_REMAIN_TIME;\n\t      var ecModel = this._model;\n\t      var api = this._api;\n\t      scheduler.unfinished = false;\n\t\n\t      do {\n\t        var startTime = +new Date();\n\t        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\t\n\t        scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel);\n\t        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n\t        // each frame is not a good user experience. So we follow the rule that\n\t        // the extent of the coordinate system is determin in the first frame (the\n\t        // frame is executed immedietely after task reset.\n\t        // this._coordSysMgr.update(ecModel, api);\n\t        // console.log('--- ec frame visual ---', remainTime);\n\t\n\t        scheduler.performVisualTasks(visualFuncs, ecModel);\n\t        renderSeries(this, this._model, api, 'remain');\n\t        remainTime -= +new Date() - startTime;\n\t      } while (remainTime > 0 && scheduler.unfinished);\n\t\n\t      if (!scheduler.unfinished) {\n\t        this._zr && this._zr.flush();\n\t        this.trigger('finished');\n\t      } // Else, zr flushing be ensue within the same frame,\n\t      // because zr flushing is after onframe event.\n\t\n\t    }\n\t};\n\t/**\n\t * @return {HTMLElement}\n\t */\n\t\n\t\n\techartsProto.getDom = function () {\n\t  return this._dom;\n\t};\n\t/**\n\t * @return {module:zrender~ZRender}\n\t */\n\t\n\t\n\techartsProto.getZr = function () {\n\t  return this._zr;\n\t};\n\t/**\n\t * Usage:\n\t * chart.setOption(option, notMerge, lazyUpdate);\n\t * chart.setOption(option, {\n\t *     notMerge: ...,\n\t *     lazyUpdate: ...,\n\t *     silent: ...\n\t * });\n\t *\n\t * @param {Object} option\n\t * @param {Object|boolean} [opts] opts or notMerge.\n\t * @param {boolean} [opts.notMerge=false]\n\t * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n\t */\n\t\n\t\n\techartsProto.setOption = function (option, notMerge, lazyUpdate) {\n\t  var silent;\n\t\n\t  if (isObject(notMerge)) {\n\t    lazyUpdate = notMerge.lazyUpdate;\n\t    silent = notMerge.silent;\n\t    notMerge = notMerge.notMerge;\n\t  }\n\t\n\t  this[IN_MAIN_PROCESS] = true;\n\t\n\t  if (!this._model || notMerge) {\n\t    var optionManager = new OptionManager(this._api);\n\t    var theme = this._theme;\n\t    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n\t    ecModel.scheduler = this._scheduler;\n\t    ecModel.init(null, null, theme, optionManager);\n\t  }\n\t\n\t  this._model.setOption(option, optionPreprocessorFuncs);\n\t\n\t  if (lazyUpdate) {\n\t    this[OPTION_UPDATED] = {\n\t      silent: silent\n\t    };\n\t    this[IN_MAIN_PROCESS] = false;\n\t  } else {\n\t    prepare(this);\n\t    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n\t    // fetched after `setOption`.\n\t\n\t    this._zr.flush();\n\t\n\t    this[OPTION_UPDATED] = false;\n\t    this[IN_MAIN_PROCESS] = false;\n\t    flushPendingActions.call(this, silent);\n\t    triggerUpdatedEvent.call(this, silent);\n\t  }\n\t};\n\t/**\n\t * @DEPRECATED\n\t */\n\t\n\t\n\techartsProto.setTheme = function () {\n\t  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n\t};\n\t/**\n\t * @return {module:echarts/model/Global}\n\t */\n\t\n\t\n\techartsProto.getModel = function () {\n\t  return this._model;\n\t};\n\t/**\n\t * @return {Object}\n\t */\n\t\n\t\n\techartsProto.getOption = function () {\n\t  return this._model && this._model.getOption();\n\t};\n\t/**\n\t * @return {number}\n\t */\n\t\n\t\n\techartsProto.getWidth = function () {\n\t  return this._zr.getWidth();\n\t};\n\t/**\n\t * @return {number}\n\t */\n\t\n\t\n\techartsProto.getHeight = function () {\n\t  return this._zr.getHeight();\n\t};\n\t/**\n\t * @return {number}\n\t */\n\t\n\t\n\techartsProto.getDevicePixelRatio = function () {\n\t  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n\t};\n\t/**\n\t * Get canvas which has all thing rendered\n\t * @param {Object} opts\n\t * @param {string} [opts.backgroundColor]\n\t * @return {string}\n\t */\n\t\n\t\n\techartsProto.getRenderedCanvas = function (opts) {\n\t  if (!env.canvasSupported) {\n\t    return;\n\t  }\n\t\n\t  opts = opts || {};\n\t  opts.pixelRatio = opts.pixelRatio || 1;\n\t  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n\t  var zr = this._zr;\n\t  var list = zr.storage.getDisplayList(); // Stop animations\n\t\n\t  zrUtil.each(list, function (el) {\n\t    el.stopAnimation(true);\n\t  });\n\t  return zr.painter.getRenderedCanvas(opts);\n\t};\n\t/**\n\t * Get svg data url\n\t * @return {string}\n\t */\n\t\n\t\n\techartsProto.getSvgDataUrl = function () {\n\t  if (!env.svgSupported) {\n\t    return;\n\t  }\n\t\n\t  var zr = this._zr;\n\t  var list = zr.storage.getDisplayList(); // Stop animations\n\t\n\t  zrUtil.each(list, function (el) {\n\t    el.stopAnimation(true);\n\t  });\n\t  return zr.painter.pathToSvg();\n\t};\n\t/**\n\t * @return {string}\n\t * @param {Object} opts\n\t * @param {string} [opts.type='png']\n\t * @param {string} [opts.pixelRatio=1]\n\t * @param {string} [opts.backgroundColor]\n\t * @param {string} [opts.excludeComponents]\n\t */\n\t\n\t\n\techartsProto.getDataURL = function (opts) {\n\t  opts = opts || {};\n\t  var excludeComponents = opts.excludeComponents;\n\t  var ecModel = this._model;\n\t  var excludesComponentViews = [];\n\t  var self = this;\n\t  each(excludeComponents, function (componentType) {\n\t    ecModel.eachComponent({\n\t      mainType: componentType\n\t    }, function (component) {\n\t      var view = self._componentsMap[component.__viewId];\n\t\n\t      if (!view.group.ignore) {\n\t        excludesComponentViews.push(view);\n\t        view.group.ignore = true;\n\t      }\n\t    });\n\t  });\n\t  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n\t  each(excludesComponentViews, function (view) {\n\t    view.group.ignore = false;\n\t  });\n\t  return url;\n\t};\n\t/**\n\t * @return {string}\n\t * @param {Object} opts\n\t * @param {string} [opts.type='png']\n\t * @param {string} [opts.pixelRatio=1]\n\t * @param {string} [opts.backgroundColor]\n\t */\n\t\n\t\n\techartsProto.getConnectedDataURL = function (opts) {\n\t  if (!env.canvasSupported) {\n\t    return;\n\t  }\n\t\n\t  var groupId = this.group;\n\t  var mathMin = Math.min;\n\t  var mathMax = Math.max;\n\t  var MAX_NUMBER = Infinity;\n\t\n\t  if (connectedGroups[groupId]) {\n\t    var left = MAX_NUMBER;\n\t    var top = MAX_NUMBER;\n\t    var right = -MAX_NUMBER;\n\t    var bottom = -MAX_NUMBER;\n\t    var canvasList = [];\n\t    var dpr = opts && opts.pixelRatio || 1;\n\t    zrUtil.each(instances, function (chart, id) {\n\t      if (chart.group === groupId) {\n\t        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n\t        var boundingRect = chart.getDom().getBoundingClientRect();\n\t        left = mathMin(boundingRect.left, left);\n\t        top = mathMin(boundingRect.top, top);\n\t        right = mathMax(boundingRect.right, right);\n\t        bottom = mathMax(boundingRect.bottom, bottom);\n\t        canvasList.push({\n\t          dom: canvas,\n\t          left: boundingRect.left,\n\t          top: boundingRect.top\n\t        });\n\t      }\n\t    });\n\t    left *= dpr;\n\t    top *= dpr;\n\t    right *= dpr;\n\t    bottom *= dpr;\n\t    var width = right - left;\n\t    var height = bottom - top;\n\t    var targetCanvas = zrUtil.createCanvas();\n\t    targetCanvas.width = width;\n\t    targetCanvas.height = height;\n\t    var zr = zrender.init(targetCanvas);\n\t    each(canvasList, function (item) {\n\t      var img = new graphic.Image({\n\t        style: {\n\t          x: item.left * dpr - left,\n\t          y: item.top * dpr - top,\n\t          image: item.dom\n\t        }\n\t      });\n\t      zr.add(img);\n\t    });\n\t    zr.refreshImmediately();\n\t    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n\t  } else {\n\t    return this.getDataURL(opts);\n\t  }\n\t};\n\t/**\n\t * Convert from logical coordinate system to pixel coordinate system.\n\t * See CoordinateSystem#convertToPixel.\n\t * @param {string|Object} finder\n\t *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t *        If Object, could contain some of these properties below:\n\t *        {\n\t *            seriesIndex / seriesId / seriesName,\n\t *            geoIndex / geoId, geoName,\n\t *            bmapIndex / bmapId / bmapName,\n\t *            xAxisIndex / xAxisId / xAxisName,\n\t *            yAxisIndex / yAxisId / yAxisName,\n\t *            gridIndex / gridId / gridName,\n\t *            ... (can be extended)\n\t *        }\n\t * @param {Array|number} value\n\t * @return {Array|number} result\n\t */\n\t\n\t\n\techartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\t/**\n\t * Convert from pixel coordinate system to logical coordinate system.\n\t * See CoordinateSystem#convertFromPixel.\n\t * @param {string|Object} finder\n\t *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t *        If Object, could contain some of these properties below:\n\t *        {\n\t *            seriesIndex / seriesId / seriesName,\n\t *            geoIndex / geoId / geoName,\n\t *            bmapIndex / bmapId / bmapName,\n\t *            xAxisIndex / xAxisId / xAxisName,\n\t *            yAxisIndex / yAxisId / yAxisName\n\t *            gridIndex / gridId / gridName,\n\t *            ... (can be extended)\n\t *        }\n\t * @param {Array|number} value\n\t * @return {Array|number} result\n\t */\n\t\n\techartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\t\n\tfunction doConvertPixel(methodName, finder, value) {\n\t  var ecModel = this._model;\n\t\n\t  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\t\n\t  var result;\n\t  finder = modelUtil.parseFinder(ecModel, finder);\n\t\n\t  for (var i = 0; i < coordSysList.length; i++) {\n\t    var coordSys = coordSysList[i];\n\t\n\t    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n\t      return result;\n\t    }\n\t  }\n\t}\n\t/**\n\t * Is the specified coordinate systems or components contain the given pixel point.\n\t * @param {string|Object} finder\n\t *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t *        If Object, could contain some of these properties below:\n\t *        {\n\t *            seriesIndex / seriesId / seriesName,\n\t *            geoIndex / geoId / geoName,\n\t *            bmapIndex / bmapId / bmapName,\n\t *            xAxisIndex / xAxisId / xAxisName,\n\t *            yAxisIndex / yAxisId / yAxisName,\n\t *            gridIndex / gridId / gridName,\n\t *            ... (can be extended)\n\t *        }\n\t * @param {Array|number} value\n\t * @return {boolean} result\n\t */\n\t\n\t\n\techartsProto.containPixel = function (finder, value) {\n\t  var ecModel = this._model;\n\t  var result;\n\t  finder = modelUtil.parseFinder(ecModel, finder);\n\t  zrUtil.each(finder, function (models, key) {\n\t    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n\t      var coordSys = model.coordinateSystem;\n\t\n\t      if (coordSys && coordSys.containPoint) {\n\t        result |= !!coordSys.containPoint(value);\n\t      } else if (key === 'seriesModels') {\n\t        var view = this._chartsMap[model.__viewId];\n\t\n\t        if (view && view.containPoint) {\n\t          result |= view.containPoint(value, model);\n\t        } else {}\n\t      } else {}\n\t    }, this);\n\t  }, this);\n\t  return !!result;\n\t};\n\t/**\n\t * Get visual from series or data.\n\t * @param {string|Object} finder\n\t *        If string, e.g., 'series', means {seriesIndex: 0}.\n\t *        If Object, could contain some of these properties below:\n\t *        {\n\t *            seriesIndex / seriesId / seriesName,\n\t *            dataIndex / dataIndexInside\n\t *        }\n\t *        If dataIndex is not specified, series visual will be fetched,\n\t *        but not data item visual.\n\t *        If all of seriesIndex, seriesId, seriesName are not specified,\n\t *        visual will be fetched from first series.\n\t * @param {string} visualType 'color', 'symbol', 'symbolSize'\n\t */\n\t\n\t\n\techartsProto.getVisual = function (finder, visualType) {\n\t  var ecModel = this._model;\n\t  finder = modelUtil.parseFinder(ecModel, finder, {\n\t    defaultMainType: 'series'\n\t  });\n\t  var seriesModel = finder.seriesModel;\n\t  var data = seriesModel.getData();\n\t  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n\t  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n\t};\n\t/**\n\t * Get view of corresponding component model\n\t * @param  {module:echarts/model/Component} componentModel\n\t * @return {module:echarts/view/Component}\n\t */\n\t\n\t\n\techartsProto.getViewOfComponentModel = function (componentModel) {\n\t  return this._componentsMap[componentModel.__viewId];\n\t};\n\t/**\n\t * Get view of corresponding series model\n\t * @param  {module:echarts/model/Series} seriesModel\n\t * @return {module:echarts/view/Chart}\n\t */\n\t\n\t\n\techartsProto.getViewOfSeriesModel = function (seriesModel) {\n\t  return this._chartsMap[seriesModel.__viewId];\n\t};\n\t\n\tvar updateMethods = {\n\t  prepareAndUpdate: function (payload) {\n\t    prepare(this);\n\t    updateMethods.update.call(this, payload);\n\t  },\n\t\n\t  /**\n\t   * @param {Object} payload\n\t   * @private\n\t   */\n\t  update: function (payload) {\n\t    // console.profile && console.profile('update');\n\t    var ecModel = this._model;\n\t    var api = this._api;\n\t    var zr = this._zr;\n\t    var coordSysMgr = this._coordSysMgr;\n\t    var scheduler = this._scheduler; // update before setOption\n\t\n\t    if (!ecModel) {\n\t      return;\n\t    }\n\t\n\t    ecModel.restoreData(payload);\n\t    scheduler.performSeriesTasks(ecModel); // TODO\n\t    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n\t    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\t    // Create new coordinate system each update\n\t    // In LineView may save the old coordinate system and use it to get the orignal point\n\t\n\t    coordSysMgr.create(ecModel, api);\n\t    scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel, payload); // Current stream render is not supported in data process. So we can update\n\t    // stream modes after data processing, where the filtered data is used to\n\t    // deteming whether use progressive rendering.\n\t\n\t    updateStreamModes(this, ecModel);\n\t    stackSeriesData(ecModel);\n\t    coordSysMgr.update(ecModel, api);\n\t    clearColorPalette(ecModel);\n\t    scheduler.performVisualTasks(visualFuncs, ecModel, payload);\n\t    render(this, ecModel, api, payload); // Set background\n\t\n\t    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\t    var painter = zr.painter; // TODO all use clearColor ?\n\t\n\t    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n\t      zr.configLayer(0, {\n\t        clearColor: backgroundColor\n\t      });\n\t    } else {\n\t      // In IE8\n\t      if (!env.canvasSupported) {\n\t        var colorArr = colorTool.parse(backgroundColor);\n\t        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\t\n\t        if (colorArr[3] === 0) {\n\t          backgroundColor = 'transparent';\n\t        }\n\t      }\n\t\n\t      if (backgroundColor.colorStops || backgroundColor.image) {\n\t        // Gradient background\n\t        // FIXME Fixed layer？\n\t        zr.configLayer(0, {\n\t          clearColor: backgroundColor\n\t        });\n\t        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\t        this._dom.style.background = 'transparent';\n\t      } else {\n\t        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n\t          zr.configLayer(0, {\n\t            clearColor: null\n\t          });\n\t        }\n\t\n\t        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\t        this._dom.style.background = backgroundColor;\n\t      }\n\t    }\n\t\n\t    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n\t  },\n\t\n\t  /**\n\t   * @param {Object} payload\n\t   * @private\n\t   */\n\t  updateTransform: function (payload) {\n\t    var ecModel = this._model;\n\t    var ecIns = this;\n\t    var api = this._api; // update before setOption\n\t\n\t    if (!ecModel) {\n\t      return;\n\t    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\t\n\t\n\t    var componentDirtyList = [];\n\t    ecModel.eachComponent(function (componentType, componentModel) {\n\t      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\t\n\t      if (componentView && componentView.__alive) {\n\t        if (componentView.updateTransform) {\n\t          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n\t          result && result.update && componentDirtyList.push(componentView);\n\t        } else {\n\t          componentDirtyList.push(componentView);\n\t        }\n\t      }\n\t    });\n\t    var seriesDirtyMap = zrUtil.createHashMap();\n\t    ecModel.eachSeries(function (seriesModel) {\n\t      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\t\n\t      if (chartView.updateTransform) {\n\t        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n\t        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n\t      } else {\n\t        seriesDirtyMap.set(seriesModel.uid, 1);\n\t      }\n\t    });\n\t    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\t    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n\t\n\t    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n\t      setDirty: true,\n\t      dirtyMap: seriesDirtyMap\n\t    }); // Currently, not call render of components. Geo render cost a lot.\n\t    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\t\n\t\n\t    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n\t    performPostUpdateFuncs(ecModel, this._api);\n\t  },\n\t\n\t  /**\n\t   * @param {Object} payload\n\t   * @private\n\t   */\n\t  updateView: function (payload) {\n\t    var ecModel = this._model; // update before setOption\n\t\n\t    if (!ecModel) {\n\t      return;\n\t    }\n\t\n\t    ChartView.markUpdateMethod(payload, 'updateView');\n\t    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\t\n\t    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n\t      setDirty: true\n\t    });\n\t\n\t    render(this, this._model, this._api, payload);\n\t    performPostUpdateFuncs(ecModel, this._api);\n\t  },\n\t\n\t  /**\n\t   * @param {Object} payload\n\t   * @private\n\t   */\n\t  updateVisual: function (payload) {\n\t    updateMethods.update.call(this, payload); // var ecModel = this._model;\n\t    // // update before setOption\n\t    // if (!ecModel) {\n\t    //     return;\n\t    // }\n\t    // ChartView.markUpdateMethod(payload, 'updateVisual');\n\t    // clearColorPalette(ecModel);\n\t    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\t    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {visualType: 'visual', setDirty: true});\n\t    // render(this, this._model, this._api, payload);\n\t    // performPostUpdateFuncs(ecModel, this._api);\n\t  },\n\t\n\t  /**\n\t   * @param {Object} payload\n\t   * @private\n\t   */\n\t  updateLayout: function (payload) {\n\t    updateMethods.update.call(this, payload); // var ecModel = this._model;\n\t    // // update before setOption\n\t    // if (!ecModel) {\n\t    //     return;\n\t    // }\n\t    // ChartView.markUpdateMethod(payload, 'updateLayout');\n\t    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\t    // // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n\t    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {setDirty: true});\n\t    // render(this, this._model, this._api, payload);\n\t    // performPostUpdateFuncs(ecModel, this._api);\n\t  }\n\t};\n\t\n\tfunction prepare(ecIns) {\n\t  var ecModel = ecIns._model;\n\t  var scheduler = ecIns._scheduler;\n\t  scheduler.restorePipelines(ecModel);\n\t  scheduler.prepareStageTasks(dataProcessorFuncs);\n\t  scheduler.prepareStageTasks(visualFuncs);\n\t  prepareView(ecIns, 'component', ecModel, scheduler);\n\t  prepareView(ecIns, 'chart', ecModel, scheduler);\n\t  scheduler.plan();\n\t}\n\t/**\n\t * @private\n\t */\n\t\n\t\n\tfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n\t  var ecModel = ecIns._model; // broadcast\n\t\n\t  if (!mainType) {\n\t    // FIXME\n\t    // Chart will not be update directly here, except set dirty.\n\t    // But there is no such scenario now.\n\t    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n\t    return;\n\t  }\n\t\n\t  var query = {};\n\t  query[mainType + 'Id'] = payload[mainType + 'Id'];\n\t  query[mainType + 'Index'] = payload[mainType + 'Index'];\n\t  query[mainType + 'Name'] = payload[mainType + 'Name'];\n\t  var condition = {\n\t    mainType: mainType,\n\t    query: query\n\t  };\n\t  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\t  // If dispatchAction before setOption, do nothing.\n\t\n\t  ecModel && ecModel.eachComponent(condition, function (model, index) {\n\t    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n\t  }, ecIns);\n\t\n\t  function callView(view) {\n\t    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n\t  }\n\t}\n\t/**\n\t * Resize the chart\n\t * @param {Object} opts\n\t * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n\t * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n\t * @param {boolean} [opts.silent=false]\n\t */\n\t\n\t\n\techartsProto.resize = function (opts) {\n\t  this._zr.resize(opts);\n\t\n\t  var ecModel = this._model; // Resize loading effect\n\t\n\t  this._loadingFX && this._loadingFX.resize();\n\t\n\t  if (!ecModel) {\n\t    return;\n\t  }\n\t\n\t  var optionChanged = ecModel.resetOption('media');\n\t  refresh(this, optionChanged, opts && opts.silent);\n\t};\n\t\n\tfunction refresh(ecIns, needPrepare, silent) {\n\t  ecIns[IN_MAIN_PROCESS] = true;\n\t  needPrepare && prepare(ecIns);\n\t  updateMethods.update.call(ecIns);\n\t  ecIns[IN_MAIN_PROCESS] = false;\n\t  flushPendingActions.call(ecIns, silent);\n\t  triggerUpdatedEvent.call(ecIns, silent);\n\t}\n\t\n\tfunction updateStreamModes(ecIns, ecModel) {\n\t  var chartsMap = ecIns._chartsMap;\n\t  var scheduler = ecIns._scheduler;\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n\t  });\n\t}\n\t/**\n\t * Show loading effect\n\t * @param  {string} [name='default']\n\t * @param  {Object} [cfg]\n\t */\n\t\n\t\n\techartsProto.showLoading = function (name, cfg) {\n\t  if (isObject(name)) {\n\t    cfg = name;\n\t    name = '';\n\t  }\n\t\n\t  name = name || 'default';\n\t  this.hideLoading();\n\t\n\t  if (!loadingEffects[name]) {\n\t    return;\n\t  }\n\t\n\t  var el = loadingEffects[name](this._api, cfg);\n\t  var zr = this._zr;\n\t  this._loadingFX = el;\n\t  zr.add(el);\n\t};\n\t/**\n\t * Hide loading effect\n\t */\n\t\n\t\n\techartsProto.hideLoading = function () {\n\t  this._loadingFX && this._zr.remove(this._loadingFX);\n\t  this._loadingFX = null;\n\t};\n\t/**\n\t * @param {Object} eventObj\n\t * @return {Object}\n\t */\n\t\n\t\n\techartsProto.makeActionFromEvent = function (eventObj) {\n\t  var payload = zrUtil.extend({}, eventObj);\n\t  payload.type = eventActionMap[eventObj.type];\n\t  return payload;\n\t};\n\t/**\n\t * @pubilc\n\t * @param {Object} payload\n\t * @param {string} [payload.type] Action type\n\t * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n\t * @param {boolean} [opt.silent=false] Whether trigger events.\n\t * @param {boolean} [opt.flush=undefined]\n\t *                  true: Flush immediately, and then pixel in canvas can be fetched\n\t *                      immediately. Caution: it might affect performance.\n\t *                  false: Not not flush.\n\t *                  undefined: Auto decide whether perform flush.\n\t */\n\t\n\t\n\techartsProto.dispatchAction = function (payload, opt) {\n\t  if (!isObject(opt)) {\n\t    opt = {\n\t      silent: !!opt\n\t    };\n\t  }\n\t\n\t  if (!actions[payload.type]) {\n\t    return;\n\t  } // Avoid dispatch action before setOption. Especially in `connect`.\n\t\n\t\n\t  if (!this._model) {\n\t    return;\n\t  } // May dispatchAction in rendering procedure\n\t\n\t\n\t  if (this[IN_MAIN_PROCESS]) {\n\t    this._pendingActions.push(payload);\n\t\n\t    return;\n\t  }\n\t\n\t  doDispatchAction.call(this, payload, opt.silent);\n\t\n\t  if (opt.flush) {\n\t    this._zr.flush(true);\n\t  } else if (opt.flush !== false && env.browser.weChat) {\n\t    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n\t    // hang when sliding page (on touch event), which cause that zr does not\n\t    // refresh util user interaction finished, which is not expected.\n\t    // But `dispatchAction` may be called too frequently when pan on touch\n\t    // screen, which impacts performance if do not throttle them.\n\t    this._throttledZrFlush();\n\t  }\n\t\n\t  flushPendingActions.call(this, opt.silent);\n\t  triggerUpdatedEvent.call(this, opt.silent);\n\t};\n\t\n\tfunction doDispatchAction(payload, silent) {\n\t  var payloadType = payload.type;\n\t  var escapeConnect = payload.escapeConnect;\n\t  var actionWrap = actions[payloadType];\n\t  var actionInfo = actionWrap.actionInfo;\n\t  var cptType = (actionInfo.update || 'update').split(':');\n\t  var updateMethod = cptType.pop();\n\t  cptType = cptType[0] != null && parseClassType(cptType[0]);\n\t  this[IN_MAIN_PROCESS] = true;\n\t  var payloads = [payload];\n\t  var batched = false; // Batch action\n\t\n\t  if (payload.batch) {\n\t    batched = true;\n\t    payloads = zrUtil.map(payload.batch, function (item) {\n\t      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n\t      item.batch = null;\n\t      return item;\n\t    });\n\t  }\n\t\n\t  var eventObjBatch = [];\n\t  var eventObj;\n\t  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\t  each(payloads, function (batchItem) {\n\t    // Action can specify the event by return it.\n\t    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\t\n\t    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\t\n\t    eventObj.type = actionInfo.event || eventObj.type;\n\t    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\t\n\t    if (isHighDown) {\n\t      // method, payload, mainType, subType\n\t      updateDirectly(this, updateMethod, batchItem, 'series');\n\t    } else if (cptType) {\n\t      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n\t    }\n\t  }, this);\n\t\n\t  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n\t    // Still dirty\n\t    if (this[OPTION_UPDATED]) {\n\t      // FIXME Pass payload ?\n\t      prepare(this);\n\t      updateMethods.update.call(this, payload);\n\t      this[OPTION_UPDATED] = false;\n\t    } else {\n\t      updateMethods[updateMethod].call(this, payload);\n\t    }\n\t  } // Follow the rule of action batch\n\t\n\t\n\t  if (batched) {\n\t    eventObj = {\n\t      type: actionInfo.event || payloadType,\n\t      escapeConnect: escapeConnect,\n\t      batch: eventObjBatch\n\t    };\n\t  } else {\n\t    eventObj = eventObjBatch[0];\n\t  }\n\t\n\t  this[IN_MAIN_PROCESS] = false;\n\t  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n\t}\n\t\n\tfunction flushPendingActions(silent) {\n\t  var pendingActions = this._pendingActions;\n\t\n\t  while (pendingActions.length) {\n\t    var payload = pendingActions.shift();\n\t    doDispatchAction.call(this, payload, silent);\n\t  }\n\t}\n\t\n\tfunction triggerUpdatedEvent(silent) {\n\t  !silent && this.trigger('updated');\n\t}\n\t/**\n\t * @param {Object} params\n\t * @param {number} params.seriesIndex\n\t * @param {Array|TypedArray} params.data\n\t */\n\t\n\t\n\techartsProto.appendData = function (params) {\n\t  var seriesIndex = params.seriesIndex;\n\t  var ecModel = this.getModel();\n\t  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\t  seriesModel.appendData(params);\n\t  this._scheduler.unfinished = true;\n\t};\n\t/**\n\t * Register event\n\t * @method\n\t */\n\t\n\t\n\techartsProto.on = createRegisterEventWithLowercaseName('on');\n\techartsProto.off = createRegisterEventWithLowercaseName('off');\n\techartsProto.one = createRegisterEventWithLowercaseName('one');\n\t/**\n\t * Prepare view instances of charts and components\n\t * @param  {module:echarts/model/Global} ecModel\n\t * @private\n\t */\n\t\n\tfunction prepareView(ecIns, type, ecModel, scheduler) {\n\t  var isComponent = type === 'component';\n\t  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n\t  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n\t  var zr = ecIns._zr;\n\t  var api = ecIns._api;\n\t\n\t  for (var i = 0; i < viewList.length; i++) {\n\t    viewList[i].__alive = false;\n\t  }\n\t\n\t  isComponent ? ecModel.eachComponent(function (componentType, model) {\n\t    componentType !== 'series' && doPrepare(model);\n\t  }) : ecModel.eachSeries(doPrepare);\n\t\n\t  function doPrepare(model) {\n\t    // Consider: id same and type changed.\n\t    var viewId = '_ec_' + model.id + '_' + model.type;\n\t    var view = viewMap[viewId];\n\t\n\t    if (!view) {\n\t      var classType = parseClassType(model.type);\n\t      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\t      view = new Clazz();\n\t      view.init(ecModel, api);\n\t      viewMap[viewId] = view;\n\t      viewList.push(view);\n\t      zr.add(view.group);\n\t    }\n\t\n\t    model.__viewId = view.__id = viewId;\n\t    view.__alive = true;\n\t    view.__model = model;\n\t    view.group.__ecComponentInfo = {\n\t      mainType: model.mainType,\n\t      index: model.componentIndex\n\t    };\n\t    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n\t  }\n\t\n\t  for (var i = 0; i < viewList.length;) {\n\t    var view = viewList[i];\n\t\n\t    if (!view.__alive) {\n\t      !isComponent && view.renderTask.dispose();\n\t      zr.remove(view.group);\n\t      view.dispose(ecModel, api);\n\t      viewList.splice(i, 1);\n\t      delete viewMap[view.__id];\n\t      view.__id = view.group.__ecComponentInfo = null;\n\t    } else {\n\t      i++;\n\t    }\n\t  }\n\t}\n\t/**\n\t * @private\n\t */\n\t\n\t\n\tfunction stackSeriesData(ecModel) {\n\t  var stackedDataMap = {};\n\t  ecModel.eachSeries(function (series) {\n\t    var stack = series.get('stack');\n\t    var data = series.getData();\n\t\n\t    if (stack && data.type === 'list') {\n\t      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\t\n\t      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n\t        data.stackedOn = previousStack;\n\t      }\n\t\n\t      stackedDataMap[stack] = data;\n\t    }\n\t  });\n\t} // /**\n\t//  * Encode visual infomation from data after data processing\n\t//  *\n\t//  * @param {module:echarts/model/Global} ecModel\n\t//  * @param {object} layout\n\t//  * @param {boolean} [layoutFilter] `true`: only layout,\n\t//  *                                 `false`: only not layout,\n\t//  *                                 `null`/`undefined`: all.\n\t//  * @param {string} taskBaseTag\n\t//  * @private\n\t//  */\n\t// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n\t//     each(visualFuncs, function (visual, index) {\n\t//         var isLayout = visual.isLayout;\n\t//         if (layoutFilter == null\n\t//             || (layoutFilter === false && !isLayout)\n\t//             || (layoutFilter === true && isLayout)\n\t//         ) {\n\t//             visual.func(ecModel, api, payload);\n\t//         }\n\t//     });\n\t// }\n\t\n\t\n\tfunction clearColorPalette(ecModel) {\n\t  ecModel.clearColorPalette();\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    seriesModel.clearColorPalette();\n\t  });\n\t}\n\t\n\tfunction render(ecIns, ecModel, api, payload) {\n\t  renderComponents(ecIns, ecModel, api, payload);\n\t  each(ecIns._chartsViews, function (chart) {\n\t    chart.__alive = false;\n\t  });\n\t  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\t\n\t  each(ecIns._chartsViews, function (chart) {\n\t    if (!chart.__alive) {\n\t      chart.remove(ecModel, api);\n\t    }\n\t  });\n\t}\n\t\n\tfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n\t  each(dirtyList || ecIns._componentsViews, function (componentView) {\n\t    var componentModel = componentView.__model;\n\t    componentView.render(componentModel, ecModel, api, payload);\n\t    updateZ(componentModel, componentView);\n\t  });\n\t}\n\t/**\n\t * Render each chart and component\n\t * @private\n\t */\n\t\n\t\n\tfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n\t  // Render all charts\n\t  var scheduler = ecIns._scheduler;\n\t  var unfinished;\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\t    chartView.__alive = true;\n\t    var renderTask = chartView.renderTask;\n\t    scheduler.updatePayload(renderTask, payload);\n\t\n\t    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n\t      renderTask.dirty();\n\t    }\n\t\n\t    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n\t    chartView.group.silent = !!seriesModel.get('silent');\n\t    updateZ(seriesModel, chartView);\n\t    updateBlend(seriesModel, chartView);\n\t  });\n\t  scheduler.unfinished |= unfinished; // If use hover layer\n\t\n\t  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\t\n\t  aria(ecIns._zr.dom, ecModel);\n\t}\n\t\n\tfunction performPostUpdateFuncs(ecModel, api) {\n\t  each(postUpdateFuncs, function (func) {\n\t    func(ecModel, api);\n\t  });\n\t}\n\t\n\tvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\t/**\n\t * @private\n\t */\n\t\n\techartsProto._initEvents = function () {\n\t  each(MOUSE_EVENT_NAMES, function (eveName) {\n\t    this._zr.on(eveName, function (e) {\n\t      var ecModel = this.getModel();\n\t      var el = e.target;\n\t      var params; // no e.target when 'globalout'.\n\t\n\t      if (eveName === 'globalout') {\n\t        params = {};\n\t      } else if (el && el.dataIndex != null) {\n\t        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n\t        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n\t      } // If element has custom eventData of components\n\t      else if (el && el.eventData) {\n\t          params = zrUtil.extend({}, el.eventData);\n\t        }\n\t\n\t      if (params) {\n\t        params.event = e;\n\t        params.type = eveName;\n\t        this.trigger(eveName, params);\n\t      }\n\t    }, this);\n\t  }, this);\n\t  each(eventActionMap, function (actionType, eventType) {\n\t    this._messageCenter.on(eventType, function (event) {\n\t      this.trigger(eventType, event);\n\t    }, this);\n\t  }, this);\n\t};\n\t/**\n\t * @return {boolean}\n\t */\n\t\n\t\n\techartsProto.isDisposed = function () {\n\t  return this._disposed;\n\t};\n\t/**\n\t * Clear\n\t */\n\t\n\t\n\techartsProto.clear = function () {\n\t  this.setOption({\n\t    series: []\n\t  }, true);\n\t};\n\t/**\n\t * Dispose instance\n\t */\n\t\n\t\n\techartsProto.dispose = function () {\n\t  if (this._disposed) {\n\t    return;\n\t  }\n\t\n\t  this._disposed = true;\n\t  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n\t  var api = this._api;\n\t  var ecModel = this._model;\n\t  each(this._componentsViews, function (component) {\n\t    component.dispose(ecModel, api);\n\t  });\n\t  each(this._chartsViews, function (chart) {\n\t    chart.dispose(ecModel, api);\n\t  }); // Dispose after all views disposed\n\t\n\t  this._zr.dispose();\n\t\n\t  delete instances[this.id];\n\t};\n\t\n\tzrUtil.mixin(ECharts, Eventful);\n\t\n\tfunction updateHoverLayerStatus(zr, ecModel) {\n\t  var storage = zr.storage;\n\t  var elCount = 0;\n\t  storage.traverse(function (el) {\n\t    if (!el.isGroup) {\n\t      elCount++;\n\t    }\n\t  });\n\t\n\t  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n\t    storage.traverse(function (el) {\n\t      if (!el.isGroup) {\n\t        // Don't switch back.\n\t        el.useHoverLayer = true;\n\t      }\n\t    });\n\t  }\n\t}\n\t/**\n\t * Update chart progressive and blend.\n\t * @param {module:echarts/model/Series|module:echarts/model/Component} model\n\t * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n\t */\n\t\n\t\n\tfunction updateBlend(seriesModel, chartView) {\n\t  var blendMode = seriesModel.get('blendMode') || null;\n\t  chartView.group.traverse(function (el) {\n\t    // FIXME marker and other components\n\t    if (!el.isGroup) {\n\t      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n\t      if (el.style.blend !== blendMode) {\n\t        el.setStyle('blend', blendMode);\n\t      }\n\t    }\n\t\n\t    if (el.eachPendingDisplayable) {\n\t      el.eachPendingDisplayable(function (displayable) {\n\t        displayable.setStyle('blend', blendMode);\n\t      });\n\t    }\n\t  });\n\t}\n\t/**\n\t * @param {module:echarts/model/Series|module:echarts/model/Component} model\n\t * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n\t */\n\t\n\t\n\tfunction updateZ(model, view) {\n\t  var z = model.get('z');\n\t  var zlevel = model.get('zlevel'); // Set z and zlevel\n\t\n\t  view.group.traverse(function (el) {\n\t    if (el.type !== 'group') {\n\t      z != null && (el.z = z);\n\t      zlevel != null && (el.zlevel = zlevel);\n\t    }\n\t  });\n\t}\n\t\n\tfunction createExtensionAPI(ecInstance) {\n\t  var coordSysMgr = ecInstance._coordSysMgr;\n\t  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n\t    // Inject methods\n\t    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n\t    getComponentByElement: function (el) {\n\t      while (el) {\n\t        var modelInfo = el.__ecComponentInfo;\n\t\n\t        if (modelInfo != null) {\n\t          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n\t        }\n\t\n\t        el = el.parent;\n\t      }\n\t    }\n\t  });\n\t}\n\t/**\n\t * @type {Object} key: actionType.\n\t * @inner\n\t */\n\t\n\t\n\tvar actions = {};\n\t/**\n\t * Map eventType to actionType\n\t * @type {Object}\n\t */\n\t\n\tvar eventActionMap = {};\n\t/**\n\t * Data processor functions of each stage\n\t * @type {Array.<Object.<string, Function>>}\n\t * @inner\n\t */\n\t\n\tvar dataProcessorFuncs = [];\n\t/**\n\t * @type {Array.<Function>}\n\t * @inner\n\t */\n\t\n\tvar optionPreprocessorFuncs = [];\n\t/**\n\t * @type {Array.<Function>}\n\t * @inner\n\t */\n\t\n\tvar postUpdateFuncs = [];\n\t/**\n\t * Visual encoding functions of each stage\n\t * @type {Array.<Object.<string, Function>>}\n\t */\n\t\n\tvar visualFuncs = [];\n\t/**\n\t * Theme storage\n\t * @type {Object.<key, Object>}\n\t */\n\t\n\tvar themeStorage = {};\n\t/**\n\t * Loading effects\n\t */\n\t\n\tvar loadingEffects = {};\n\tvar instances = {};\n\tvar connectedGroups = {};\n\tvar idBase = new Date() - 0;\n\tvar groupIdBase = new Date() - 0;\n\tvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\tvar mapDataStores = {};\n\t\n\tfunction enableConnect(chart) {\n\t  var STATUS_PENDING = 0;\n\t  var STATUS_UPDATING = 1;\n\t  var STATUS_UPDATED = 2;\n\t  var STATUS_KEY = '__connectUpdateStatus';\n\t\n\t  function updateConnectedChartsStatus(charts, status) {\n\t    for (var i = 0; i < charts.length; i++) {\n\t      var otherChart = charts[i];\n\t      otherChart[STATUS_KEY] = status;\n\t    }\n\t  }\n\t\n\t  each(eventActionMap, function (actionType, eventType) {\n\t    chart._messageCenter.on(eventType, function (event) {\n\t      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n\t        if (event && event.escapeConnect) {\n\t          return;\n\t        }\n\t\n\t        var action = chart.makeActionFromEvent(event);\n\t        var otherCharts = [];\n\t        each(instances, function (otherChart) {\n\t          if (otherChart !== chart && otherChart.group === chart.group) {\n\t            otherCharts.push(otherChart);\n\t          }\n\t        });\n\t        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n\t        each(otherCharts, function (otherChart) {\n\t          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n\t            otherChart.dispatchAction(action);\n\t          }\n\t        });\n\t        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n\t      }\n\t    });\n\t  });\n\t}\n\t/**\n\t * @param {HTMLElement} dom\n\t * @param {Object} [theme]\n\t * @param {Object} opts\n\t * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n\t * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n\t * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n\t *                              Can be 'auto' (the same as null/undefined)\n\t * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n\t *                               Can be 'auto' (the same as null/undefined)\n\t */\n\t\n\t\n\tfunction init(dom, theme, opts) {\n\t  var existInstance = getInstanceByDom(dom);\n\t\n\t  if (existInstance) {\n\t    return existInstance;\n\t  }\n\t\n\t  var chart = new ECharts(dom, theme, opts);\n\t  chart.id = 'ec_' + idBase++;\n\t  instances[chart.id] = chart;\n\t  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n\t  enableConnect(chart);\n\t  return chart;\n\t}\n\t/**\n\t * @return {string|Array.<module:echarts~ECharts>} groupId\n\t */\n\t\n\t\n\tfunction connect(groupId) {\n\t  // Is array of charts\n\t  if (zrUtil.isArray(groupId)) {\n\t    var charts = groupId;\n\t    groupId = null; // If any chart has group\n\t\n\t    each(charts, function (chart) {\n\t      if (chart.group != null) {\n\t        groupId = chart.group;\n\t      }\n\t    });\n\t    groupId = groupId || 'g_' + groupIdBase++;\n\t    each(charts, function (chart) {\n\t      chart.group = groupId;\n\t    });\n\t  }\n\t\n\t  connectedGroups[groupId] = true;\n\t  return groupId;\n\t}\n\t/**\n\t * @DEPRECATED\n\t * @return {string} groupId\n\t */\n\t\n\t\n\tfunction disConnect(groupId) {\n\t  connectedGroups[groupId] = false;\n\t}\n\t/**\n\t * @return {string} groupId\n\t */\n\t\n\t\n\tvar disconnect = disConnect;\n\t/**\n\t * Dispose a chart instance\n\t * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n\t */\n\t\n\tfunction dispose(chart) {\n\t  if (typeof chart === 'string') {\n\t    chart = instances[chart];\n\t  } else if (!(chart instanceof ECharts)) {\n\t    // Try to treat as dom\n\t    chart = getInstanceByDom(chart);\n\t  }\n\t\n\t  if (chart instanceof ECharts && !chart.isDisposed()) {\n\t    chart.dispose();\n\t  }\n\t}\n\t/**\n\t * @param  {HTMLElement} dom\n\t * @return {echarts~ECharts}\n\t */\n\t\n\t\n\tfunction getInstanceByDom(dom) {\n\t  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n\t}\n\t/**\n\t * @param {string} key\n\t * @return {echarts~ECharts}\n\t */\n\t\n\t\n\tfunction getInstanceById(key) {\n\t  return instances[key];\n\t}\n\t/**\n\t * Register theme\n\t */\n\t\n\t\n\tfunction registerTheme(name, theme) {\n\t  themeStorage[name] = theme;\n\t}\n\t/**\n\t * Register option preprocessor\n\t * @param {Function} preprocessorFunc\n\t */\n\t\n\t\n\tfunction registerPreprocessor(preprocessorFunc) {\n\t  optionPreprocessorFuncs.push(preprocessorFunc);\n\t}\n\t/**\n\t * @param {number} [priority=1000]\n\t * @param {Object|Function} processor\n\t */\n\t\n\t\n\tfunction registerProcessor(priority, processor) {\n\t  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n\t}\n\t/**\n\t * Register postUpdater\n\t * @param {Function} postUpdateFunc\n\t */\n\t\n\t\n\tfunction registerPostUpdate(postUpdateFunc) {\n\t  postUpdateFuncs.push(postUpdateFunc);\n\t}\n\t/**\n\t * Usage:\n\t * registerAction('someAction', 'someEvent', function () { ... });\n\t * registerAction('someAction', function () { ... });\n\t * registerAction(\n\t *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n\t *     function () { ... }\n\t * );\n\t *\n\t * @param {(string|Object)} actionInfo\n\t * @param {string} actionInfo.type\n\t * @param {string} [actionInfo.event]\n\t * @param {string} [actionInfo.update]\n\t * @param {string} [eventName]\n\t * @param {Function} action\n\t */\n\t\n\t\n\tfunction registerAction(actionInfo, eventName, action) {\n\t  if (typeof eventName === 'function') {\n\t    action = eventName;\n\t    eventName = '';\n\t  }\n\t\n\t  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n\t    event: eventName\n\t  }][0]; // Event name is all lowercase\n\t\n\t  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n\t  eventName = actionInfo.event; // Validate action type and event name.\n\t\n\t  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\t\n\t  if (!actions[actionType]) {\n\t    actions[actionType] = {\n\t      action: action,\n\t      actionInfo: actionInfo\n\t    };\n\t  }\n\t\n\t  eventActionMap[eventName] = actionType;\n\t}\n\t/**\n\t * @param {string} type\n\t * @param {*} CoordinateSystem\n\t */\n\t\n\t\n\tfunction registerCoordinateSystem(type, CoordinateSystem) {\n\t  CoordinateSystemManager.register(type, CoordinateSystem);\n\t}\n\t/**\n\t * Get dimensions of specified coordinate system.\n\t * @param {string} type\n\t * @return {Array.<string|Object>}\n\t */\n\t\n\t\n\tfunction getCoordinateSystemDimensions(type) {\n\t  var coordSysCreator = CoordinateSystemManager.get(type);\n\t\n\t  if (coordSysCreator) {\n\t    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n\t  }\n\t}\n\t/**\n\t * Layout is a special stage of visual encoding\n\t * Most visual encoding like color are common for different chart\n\t * But each chart has it's own layout algorithm\n\t *\n\t * @param {number} [priority=1000]\n\t * @param {Function} layoutTask\n\t */\n\t\n\t\n\tfunction registerLayout(priority, layoutTask) {\n\t  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n\t}\n\t/**\n\t * @param {number} [priority=3000]\n\t * @param {module:echarts/stream/Task} visualTask\n\t */\n\t\n\t\n\tfunction registerVisual(priority, visualTask) {\n\t  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n\t}\n\t/**\n\t * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n\t */\n\t\n\t\n\tfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n\t  if (isFunction(priority) || isObject(priority)) {\n\t    fn = priority;\n\t    priority = defaultPriority;\n\t  }\n\t\n\t  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n\t  stageHandler.__prio = priority;\n\t  stageHandler.__raw = fn;\n\t  targetList.push(stageHandler);\n\t  return stageHandler;\n\t}\n\t/**\n\t * @param {string} name\n\t */\n\t\n\t\n\tfunction registerLoading(name, loadingFx) {\n\t  loadingEffects[name] = loadingFx;\n\t}\n\t/**\n\t * @param {Object} opts\n\t * @param {string} [superClass]\n\t */\n\t\n\t\n\tfunction extendComponentModel(opts\n\t/*, superClass*/\n\t) {\n\t  // var Clazz = ComponentModel;\n\t  // if (superClass) {\n\t  //     var classType = parseClassType(superClass);\n\t  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n\t  // }\n\t  return ComponentModel.extend(opts);\n\t}\n\t/**\n\t * @param {Object} opts\n\t * @param {string} [superClass]\n\t */\n\t\n\t\n\tfunction extendComponentView(opts\n\t/*, superClass*/\n\t) {\n\t  // var Clazz = ComponentView;\n\t  // if (superClass) {\n\t  //     var classType = parseClassType(superClass);\n\t  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n\t  // }\n\t  return ComponentView.extend(opts);\n\t}\n\t/**\n\t * @param {Object} opts\n\t * @param {string} [superClass]\n\t */\n\t\n\t\n\tfunction extendSeriesModel(opts\n\t/*, superClass*/\n\t) {\n\t  // var Clazz = SeriesModel;\n\t  // if (superClass) {\n\t  //     superClass = 'series.' + superClass.replace('series.', '');\n\t  //     var classType = parseClassType(superClass);\n\t  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n\t  // }\n\t  return SeriesModel.extend(opts);\n\t}\n\t/**\n\t * @param {Object} opts\n\t * @param {string} [superClass]\n\t */\n\t\n\t\n\tfunction extendChartView(opts\n\t/*, superClass*/\n\t) {\n\t  // var Clazz = ChartView;\n\t  // if (superClass) {\n\t  //     superClass = superClass.replace('series.', '');\n\t  //     var classType = parseClassType(superClass);\n\t  //     Clazz = ChartView.getClass(classType.main, true);\n\t  // }\n\t  return ChartView.extend(opts);\n\t}\n\t/**\n\t * ZRender need a canvas context to do measureText.\n\t * But in node environment canvas may be created by node-canvas.\n\t * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n\t *\n\t * Be careful of using it in the browser.\n\t *\n\t * @param {Function} creator\n\t * @example\n\t *     var Canvas = require('canvas');\n\t *     var echarts = require('echarts');\n\t *     echarts.setCanvasCreator(function () {\n\t *         // Small size is enough.\n\t *         return new Canvas(32, 32);\n\t *     });\n\t */\n\t\n\t\n\tfunction setCanvasCreator(creator) {\n\t  zrUtil.$override('createCanvas', creator);\n\t}\n\t/**\n\t * @param {string} mapName\n\t * @param {Object|string} geoJson\n\t * @param {Object} [specialAreas]\n\t *\n\t * @example\n\t *     $.get('USA.json', function (geoJson) {\n\t *         echarts.registerMap('USA', geoJson);\n\t *         // Or\n\t *         echarts.registerMap('USA', {\n\t *             geoJson: geoJson,\n\t *             specialAreas: {}\n\t *         })\n\t *     });\n\t */\n\t\n\t\n\tfunction registerMap(mapName, geoJson, specialAreas) {\n\t  if (geoJson.geoJson && !geoJson.features) {\n\t    specialAreas = geoJson.specialAreas;\n\t    geoJson = geoJson.geoJson;\n\t  }\n\t\n\t  if (typeof geoJson === 'string') {\n\t    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n\t  }\n\t\n\t  mapDataStores[mapName] = {\n\t    geoJson: geoJson,\n\t    specialAreas: specialAreas\n\t  };\n\t}\n\t/**\n\t * @param {string} mapName\n\t * @return {Object}\n\t */\n\t\n\t\n\tfunction getMap(mapName) {\n\t  return mapDataStores[mapName];\n\t}\n\t\n\tregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\n\tregisterPreprocessor(backwardCompat);\n\tregisterLoading('default', loadingDefault); // Default actions\n\t\n\tregisterAction({\n\t  type: 'highlight',\n\t  event: 'highlight',\n\t  update: 'highlight'\n\t}, zrUtil.noop);\n\tregisterAction({\n\t  type: 'downplay',\n\t  event: 'downplay',\n\t  update: 'downplay'\n\t}, zrUtil.noop); // Default theme\n\t\n\tregisterTheme('light', lightTheme);\n\tregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n\t// be mounted on `echarts` is the extension `dataTool` is imported.\n\t\n\tvar dataTool = {};\n\texports.version = version;\n\texports.dependencies = dependencies;\n\texports.PRIORITY = PRIORITY;\n\texports.init = init;\n\texports.connect = connect;\n\texports.disConnect = disConnect;\n\texports.disconnect = disconnect;\n\texports.dispose = dispose;\n\texports.getInstanceByDom = getInstanceByDom;\n\texports.getInstanceById = getInstanceById;\n\texports.registerTheme = registerTheme;\n\texports.registerPreprocessor = registerPreprocessor;\n\texports.registerProcessor = registerProcessor;\n\texports.registerPostUpdate = registerPostUpdate;\n\texports.registerAction = registerAction;\n\texports.registerCoordinateSystem = registerCoordinateSystem;\n\texports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\n\texports.registerLayout = registerLayout;\n\texports.registerVisual = registerVisual;\n\texports.registerLoading = registerLoading;\n\texports.extendComponentModel = extendComponentModel;\n\texports.extendComponentView = extendComponentView;\n\texports.extendSeriesModel = extendSeriesModel;\n\texports.extendChartView = extendChartView;\n\texports.setCanvasCreator = setCanvasCreator;\n\texports.registerMap = registerMap;\n\texports.getMap = getMap;\n\texports.dataTool = dataTool;\n\tvar ___ec_export = __webpack_require__(804);\n\t(function () {\n\t    for (var key in ___ec_export) {\n\t        if (___ec_export.hasOwnProperty(key)) {\n\t            exports[key] = ___ec_export[key];\n\t        }\n\t    }\n\t})();\n\n/***/ }),\n\n/***/ 804:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrender = __webpack_require__(573);\n\t\n\texports.zrender = zrender;\n\t\n\tvar matrix = __webpack_require__(85);\n\t\n\texports.matrix = matrix;\n\t\n\tvar vector = __webpack_require__(10);\n\t\n\texports.vector = vector;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar colorTool = __webpack_require__(165);\n\t\n\texports.color = colorTool;\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\texports.graphic = graphic;\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\texports.number = numberUtil;\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\texports.format = formatUtil;\n\t\n\tvar _throttle = __webpack_require__(274);\n\t\n\tvar throttle = _throttle.throttle;\n\texports.throttle = _throttle.throttle;\n\t\n\tvar ecHelper = __webpack_require__(805);\n\t\n\texports.helper = ecHelper;\n\t\n\tvar parseGeoJSON = __webpack_require__(800);\n\t\n\texports.parseGeoJSON = parseGeoJSON;\n\t\n\tvar _List = __webpack_require__(191);\n\t\n\texports.List = _List;\n\t\n\tvar _Model = __webpack_require__(55);\n\t\n\texports.Model = _Model;\n\t\n\tvar _Axis = __webpack_require__(419);\n\t\n\texports.Axis = _Axis;\n\t\n\tvar _env = __webpack_require__(35);\n\t\n\texports.env = _env;\n\t\n\t/**\n\t * Do not mount those modules on 'src/echarts' for better tree shaking.\n\t */\n\tvar parseGeoJson = parseGeoJSON;\n\tvar ecUtil = {};\n\tzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n\t  ecUtil[name] = zrUtil[name];\n\t});\n\texports.parseGeoJson = parseGeoJson;\n\texports.util = ecUtil;\n\n/***/ }),\n\n/***/ 805:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar createListFromArray = __webpack_require__(410);\n\t\n\tvar axisHelper = __webpack_require__(92);\n\t\n\tvar axisModelCommonMixin = __webpack_require__(420);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar _layout = __webpack_require__(76);\n\t\n\tvar getLayoutRect = _layout.getLayoutRect;\n\texports.getLayoutRect = _layout.getLayoutRect;\n\t\n\tvar _completeDimensions = __webpack_require__(423);\n\t\n\texports.completeDimensions = _completeDimensions;\n\t\n\tvar _createDimensions = __webpack_require__(268);\n\t\n\texports.createDimensions = _createDimensions;\n\t\n\tvar _symbol = __webpack_require__(195);\n\t\n\texports.createSymbol = _symbol.createSymbol;\n\t\n\t// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\t\n\t/**\n\t * Create a muti dimension List structure from seriesModel.\n\t * @param  {module:echarts/model/Model} seriesModel\n\t * @return {module:echarts/data/List} list\n\t */\n\tfunction createList(seriesModel) {\n\t  return createListFromArray(seriesModel.getSource(), seriesModel);\n\t} // export function createGraph(seriesModel) {\n\t//     var nodes = seriesModel.get('data');\n\t//     var links = seriesModel.get('links');\n\t//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n\t// }\n\t\n\t\n\t/**\n\t * Create scale\n\t * @param {Array.<number>} dataExtent\n\t * @param {Object|module:echarts/Model} option\n\t */\n\tfunction createScale(dataExtent, option) {\n\t  var axisModel = option;\n\t\n\t  if (!Model.isInstance(option)) {\n\t    axisModel = new Model(option);\n\t    zrUtil.mixin(axisModel, axisModelCommonMixin);\n\t  }\n\t\n\t  var scale = axisHelper.createScaleByModel(axisModel);\n\t  scale.setExtent(dataExtent[0], dataExtent[1]);\n\t  axisHelper.niceScaleExtent(scale, axisModel);\n\t  return scale;\n\t}\n\t/**\n\t * Mixin common methods to axis model,\n\t *\n\t * Inlcude methods\n\t * `getFormattedLabels() => Array.<string>`\n\t * `getCategories() => Array.<string>`\n\t * `getMin(origin: boolean) => number`\n\t * `getMax(origin: boolean) => number`\n\t * `getNeedCrossZero() => boolean`\n\t * `setRange(start: number, end: number)`\n\t * `resetRange()`\n\t */\n\t\n\t\n\tfunction mixinAxisModelCommonMethods(Model) {\n\t  zrUtil.mixin(Model, axisModelCommonMixin);\n\t}\n\t\n\texports.createList = createList;\n\texports.createScale = createScale;\n\texports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 806:\n/***/ (function(module, exports) {\n\n\tvar _default = {\n\t  toolbox: {\n\t    brush: {\n\t      title: {\n\t        rect: '矩形选择',\n\t        polygon: '圈选',\n\t        lineX: '横向选择',\n\t        lineY: '纵向选择',\n\t        keep: '保持选择',\n\t        clear: '清除选择'\n\t      }\n\t    },\n\t    dataView: {\n\t      title: '数据视图',\n\t      lang: ['数据视图', '关闭', '刷新']\n\t    },\n\t    dataZoom: {\n\t      title: {\n\t        zoom: '区域缩放',\n\t        back: '区域缩放还原'\n\t      }\n\t    },\n\t    magicType: {\n\t      title: {\n\t        line: '切换为折线图',\n\t        bar: '切换为柱状图',\n\t        stack: '切换为堆叠',\n\t        tiled: '切换为平铺'\n\t      }\n\t    },\n\t    restore: {\n\t      title: '还原'\n\t    },\n\t    saveAsImage: {\n\t      title: '保存为图片',\n\t      lang: ['右键另存为图片']\n\t    }\n\t  },\n\t  series: {\n\t    typeNames: {\n\t      pie: '饼图',\n\t      bar: '柱状图',\n\t      line: '折线图',\n\t      scatter: '散点图',\n\t      effectScatter: '涟漪散点图',\n\t      radar: '雷达图',\n\t      tree: '树图',\n\t      treemap: '矩形树图',\n\t      boxplot: '箱型图',\n\t      candlestick: 'K线图',\n\t      k: 'K线图',\n\t      heatmap: '热力图',\n\t      map: '地图',\n\t      parallel: '平行坐标图',\n\t      lines: '线图',\n\t      graph: '关系图',\n\t      sankey: '桑基图',\n\t      funnel: '漏斗图',\n\t      gauge: '仪表盘图',\n\t      pictorialBar: '象形柱图',\n\t      themeRiver: '主题河流图',\n\t      sunburst: '旭日图'\n\t    }\n\t  },\n\t  aria: {\n\t    general: {\n\t      withTitle: '这是一个关于“{title}”的图表。',\n\t      withoutTitle: '这是一个图表，'\n\t    },\n\t    series: {\n\t      single: {\n\t        prefix: '',\n\t        withName: '图表类型是{seriesType}，表示{seriesName}。',\n\t        withoutName: '图表类型是{seriesType}。'\n\t      },\n\t      multiple: {\n\t        prefix: '它由{seriesCount}个图表系列组成。',\n\t        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n\t        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n\t        separator: {\n\t          middle: '；',\n\t          end: '。'\n\t        }\n\t      }\n\t    },\n\t    data: {\n\t      allData: '其数据是——',\n\t      partialData: '其中，前{displayCnt}项是——',\n\t      withName: '{name}的数据是{value}',\n\t      withoutName: '{value}',\n\t      separator: {\n\t        middle: '，',\n\t        end: ''\n\t      }\n\t    }\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 807:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar parsePercent = _number.parsePercent;\n\tvar STACK_PREFIX = '__ec_stack_';\n\t\n\tfunction getSeriesStackId(seriesModel) {\n\t  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n\t}\n\t\n\tfunction getAxisKey(axis) {\n\t  return axis.dim + axis.index;\n\t}\n\t/**\n\t * @param {Object} opt\n\t * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n\t * @param {number} opt.count Positive interger.\n\t * @param {number} [opt.barWidth]\n\t * @param {number} [opt.barMaxWidth]\n\t * @param {number} [opt.barGap]\n\t * @param {number} [opt.barCategoryGap]\n\t * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n\t */\n\t\n\t\n\tfunction getLayoutOnAxis(opt, api) {\n\t  var params = [];\n\t  var baseAxis = opt.axis;\n\t  var axisKey = 'axis0';\n\t\n\t  if (baseAxis.type !== 'category') {\n\t    return;\n\t  }\n\t\n\t  var bandWidth = baseAxis.getBandWidth();\n\t\n\t  for (var i = 0; i < opt.count || 0; i++) {\n\t    params.push(zrUtil.defaults({\n\t      bandWidth: bandWidth,\n\t      axisKey: axisKey,\n\t      stackId: STACK_PREFIX + i\n\t    }, opt));\n\t  }\n\t\n\t  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\t  var result = [];\n\t\n\t  for (var i = 0; i < opt.count; i++) {\n\t    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n\t    item.offsetCenter = item.offset + item.width / 2;\n\t    result.push(item);\n\t  }\n\t\n\t  return result;\n\t}\n\t\n\tfunction calBarWidthAndOffset(barSeries, api) {\n\t  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n\t    var data = seriesModel.getData();\n\t    var cartesian = seriesModel.coordinateSystem;\n\t    var baseAxis = cartesian.getBaseAxis();\n\t    var axisExtent = baseAxis.getExtent();\n\t    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n\t    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n\t    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n\t    var barGap = seriesModel.get('barGap');\n\t    var barCategoryGap = seriesModel.get('barCategoryGap');\n\t    return {\n\t      bandWidth: bandWidth,\n\t      barWidth: barWidth,\n\t      barMaxWidth: barMaxWidth,\n\t      barGap: barGap,\n\t      barCategoryGap: barCategoryGap,\n\t      axisKey: getAxisKey(baseAxis),\n\t      stackId: getSeriesStackId(seriesModel)\n\t    };\n\t  });\n\t  return doCalBarWidthAndOffset(seriesInfoList, api);\n\t}\n\t\n\tfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n\t  // Columns info on each category axis. Key is cartesian name\n\t  var columnsMap = {};\n\t  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n\t    var axisKey = seriesInfo.axisKey;\n\t    var bandWidth = seriesInfo.bandWidth;\n\t    var columnsOnAxis = columnsMap[axisKey] || {\n\t      bandWidth: bandWidth,\n\t      remainedWidth: bandWidth,\n\t      autoWidthCount: 0,\n\t      categoryGap: '20%',\n\t      gap: '30%',\n\t      stacks: {}\n\t    };\n\t    var stacks = columnsOnAxis.stacks;\n\t    columnsMap[axisKey] = columnsOnAxis;\n\t    var stackId = seriesInfo.stackId;\n\t\n\t    if (!stacks[stackId]) {\n\t      columnsOnAxis.autoWidthCount++;\n\t    }\n\t\n\t    stacks[stackId] = stacks[stackId] || {\n\t      width: 0,\n\t      maxWidth: 0\n\t    }; // Caution: In a single coordinate system, these barGrid attributes\n\t    // will be shared by series. Consider that they have default values,\n\t    // only the attributes set on the last series will work.\n\t    // Do not change this fact unless there will be a break change.\n\t    // TODO\n\t\n\t    var barWidth = seriesInfo.barWidth;\n\t\n\t    if (barWidth && !stacks[stackId].width) {\n\t      // See #6312, do not restrict width.\n\t      stacks[stackId].width = barWidth;\n\t      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n\t      columnsOnAxis.remainedWidth -= barWidth;\n\t    }\n\t\n\t    var barMaxWidth = seriesInfo.barMaxWidth;\n\t    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n\t    var barGap = seriesInfo.barGap;\n\t    barGap != null && (columnsOnAxis.gap = barGap);\n\t    var barCategoryGap = seriesInfo.barCategoryGap;\n\t    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n\t  });\n\t  var result = {};\n\t  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\t    result[coordSysName] = {};\n\t    var stacks = columnsOnAxis.stacks;\n\t    var bandWidth = columnsOnAxis.bandWidth;\n\t    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n\t    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\t    var remainedWidth = columnsOnAxis.remainedWidth;\n\t    var autoWidthCount = columnsOnAxis.autoWidthCount;\n\t    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n\t    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\t\n\t    zrUtil.each(stacks, function (column, stack) {\n\t      var maxWidth = column.maxWidth;\n\t\n\t      if (maxWidth && maxWidth < autoWidth) {\n\t        maxWidth = Math.min(maxWidth, remainedWidth);\n\t\n\t        if (column.width) {\n\t          maxWidth = Math.min(maxWidth, column.width);\n\t        }\n\t\n\t        remainedWidth -= maxWidth;\n\t        column.width = maxWidth;\n\t        autoWidthCount--;\n\t      }\n\t    }); // Recalculate width again\n\t\n\t    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n\t    autoWidth = Math.max(autoWidth, 0);\n\t    var widthSum = 0;\n\t    var lastColumn;\n\t    zrUtil.each(stacks, function (column, idx) {\n\t      if (!column.width) {\n\t        column.width = autoWidth;\n\t      }\n\t\n\t      lastColumn = column;\n\t      widthSum += column.width * (1 + barGapPercent);\n\t    });\n\t\n\t    if (lastColumn) {\n\t      widthSum -= lastColumn.width * barGapPercent;\n\t    }\n\t\n\t    var offset = -widthSum / 2;\n\t    zrUtil.each(stacks, function (column, stackId) {\n\t      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n\t        offset: offset,\n\t        width: column.width\n\t      };\n\t      offset += column.width * (1 + barGapPercent);\n\t    });\n\t  });\n\t  return result;\n\t}\n\t/**\n\t * @param {string} seriesType\n\t * @param {module:echarts/model/Global} ecModel\n\t * @param {module:echarts/ExtensionAPI} api\n\t */\n\t\n\t\n\tfunction layout(seriesType, ecModel, api) {\n\t  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n\t    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n\t  }));\n\t  var lastStackCoords = {};\n\t  var lastStackCoordsOrigin = {};\n\t  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\t    // Check series coordinate, do layout for cartesian2d only\n\t    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n\t      return;\n\t    }\n\t\n\t    var data = seriesModel.getData();\n\t    var cartesian = seriesModel.coordinateSystem;\n\t    var baseAxis = cartesian.getBaseAxis();\n\t    var stackId = getSeriesStackId(seriesModel);\n\t    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n\t    var columnOffset = columnLayoutInfo.offset;\n\t    var columnWidth = columnLayoutInfo.width;\n\t    var valueAxis = cartesian.getOtherAxis(baseAxis);\n\t    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\t    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n\t    var coordDims = [data.mapDimension('x'), data.mapDimension('y')];\n\t    var coords = data.mapArray(coordDims, function (x, y) {\n\t      return cartesian.dataToPoint([x, y]);\n\t    }, true);\n\t    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n\t    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\t\n\t    data.setLayout({\n\t      offset: columnOffset,\n\t      size: columnWidth\n\t    });\n\t    data.each(data.mapDimension(valueAxis.dim), function (value, idx) {\n\t      if (isNaN(value)) {\n\t        return;\n\t      }\n\t\n\t      if (!lastStackCoords[stackId][idx]) {\n\t        lastStackCoords[stackId][idx] = {\n\t          p: valueAxisStart,\n\t          // Positive stack\n\t          n: valueAxisStart // Negative stack\n\t\n\t        };\n\t        lastStackCoordsOrigin[stackId][idx] = {\n\t          p: valueAxisStart,\n\t          // Positive stack\n\t          n: valueAxisStart // Negative stack\n\t\n\t        };\n\t      }\n\t\n\t      var sign = value >= 0 ? 'p' : 'n';\n\t      var coord = coords[idx];\n\t      var lastCoord = lastStackCoords[stackId][idx][sign];\n\t      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n\t      var x;\n\t      var y;\n\t      var width;\n\t      var height;\n\t\n\t      if (valueAxis.isHorizontal()) {\n\t        x = lastCoord;\n\t        y = coord[1] + columnOffset;\n\t        width = coord[0] - lastCoordOrigin;\n\t        height = columnWidth;\n\t        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\t\n\t        if (Math.abs(width) < barMinHeight) {\n\t          width = (width < 0 ? -1 : 1) * barMinHeight;\n\t        }\n\t\n\t        lastStackCoords[stackId][idx][sign] += width;\n\t      } else {\n\t        x = coord[0] + columnOffset;\n\t        y = lastCoord;\n\t        width = columnWidth;\n\t        height = coord[1] - lastCoordOrigin;\n\t        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\t\n\t        if (Math.abs(height) < barMinHeight) {\n\t          // Include zero to has a positive bar\n\t          height = (height <= 0 ? -1 : 1) * barMinHeight;\n\t        }\n\t\n\t        lastStackCoords[stackId][idx][sign] += height;\n\t      }\n\t\n\t      data.setItemLayout(idx, {\n\t        x: x,\n\t        y: y,\n\t        width: width,\n\t        height: height\n\t      });\n\t    }, true);\n\t  }, this);\n\t}\n\t\n\texports.getLayoutOnAxis = getLayoutOnAxis;\n\texports.calBarWidthAndOffset = calBarWidthAndOffset;\n\texports.layout = layout;\n\n/***/ }),\n\n/***/ 808:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar PI = Math.PI;\n\t/**\n\t * @param {module:echarts/ExtensionAPI} api\n\t * @param {Object} [opts]\n\t * @param {string} [opts.text]\n\t * @param {string} [opts.color]\n\t * @param {string} [opts.textColor]\n\t * @return {module:zrender/Element}\n\t */\n\t\n\tfunction _default(api, opts) {\n\t  opts = opts || {};\n\t  zrUtil.defaults(opts, {\n\t    text: 'loading',\n\t    color: '#c23531',\n\t    textColor: '#000',\n\t    maskColor: 'rgba(255, 255, 255, 0.8)',\n\t    zlevel: 0\n\t  });\n\t  var mask = new graphic.Rect({\n\t    style: {\n\t      fill: opts.maskColor\n\t    },\n\t    zlevel: opts.zlevel,\n\t    z: 10000\n\t  });\n\t  var arc = new graphic.Arc({\n\t    shape: {\n\t      startAngle: -PI / 2,\n\t      endAngle: -PI / 2 + 0.1,\n\t      r: 10\n\t    },\n\t    style: {\n\t      stroke: opts.color,\n\t      lineCap: 'round',\n\t      lineWidth: 5\n\t    },\n\t    zlevel: opts.zlevel,\n\t    z: 10001\n\t  });\n\t  var labelRect = new graphic.Rect({\n\t    style: {\n\t      fill: 'none',\n\t      text: opts.text,\n\t      textPosition: 'right',\n\t      textDistance: 10,\n\t      textFill: opts.textColor\n\t    },\n\t    zlevel: opts.zlevel,\n\t    z: 10001\n\t  });\n\t  arc.animateShape(true).when(1000, {\n\t    endAngle: PI * 3 / 2\n\t  }).start('circularInOut');\n\t  arc.animateShape(true).when(1000, {\n\t    startAngle: PI * 3 / 2\n\t  }).delay(300).start('circularInOut');\n\t  var group = new graphic.Group();\n\t  group.add(arc);\n\t  group.add(labelRect);\n\t  group.add(mask); // Inject resize\n\t\n\t  group.resize = function () {\n\t    var cx = api.getWidth() / 2;\n\t    var cy = api.getHeight() / 2;\n\t    arc.setShape({\n\t      cx: cx,\n\t      cy: cy\n\t    });\n\t    var r = arc.shape.r;\n\t    labelRect.setShape({\n\t      x: cx - r,\n\t      y: cy - r,\n\t      width: r * 2,\n\t      height: r * 2\n\t    });\n\t    mask.setShape({\n\t      x: 0,\n\t      y: 0,\n\t      width: api.getWidth(),\n\t      height: api.getHeight()\n\t    });\n\t  };\n\t\n\t  group.resize();\n\t  return group;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar componentUtil = __webpack_require__(194);\n\t\n\tvar _clazz = __webpack_require__(56);\n\t\n\tvar enableClassManagement = _clazz.enableClassManagement;\n\tvar parseClassType = _clazz.parseClassType;\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\t\n\tvar layout = __webpack_require__(76);\n\t\n\tvar boxLayoutMixin = __webpack_require__(813);\n\t\n\t/**\n\t * Component model\n\t *\n\t * @module echarts/model/Component\n\t */\n\tvar inner = makeInner();\n\t/**\n\t * @alias module:echarts/model/Component\n\t * @constructor\n\t * @param {Object} option\n\t * @param {module:echarts/model/Model} parentModel\n\t * @param {module:echarts/model/Model} ecModel\n\t */\n\t\n\tvar ComponentModel = Model.extend({\n\t  type: 'component',\n\t\n\t  /**\n\t   * @readOnly\n\t   * @type {string}\n\t   */\n\t  id: '',\n\t\n\t  /**\n\t   * Because simplified concept is probably better, series.name (or component.name)\n\t   * has been having too many resposibilities:\n\t   * (1) Generating id (which requires name in option should not be modified).\n\t   * (2) As an index to mapping series when merging option or calling API (a name\n\t   * can refer to more then one components, which is convinient is some case).\n\t   * (3) Display.\n\t   * @readOnly\n\t   */\n\t  name: '',\n\t\n\t  /**\n\t   * @readOnly\n\t   * @type {string}\n\t   */\n\t  mainType: '',\n\t\n\t  /**\n\t   * @readOnly\n\t   * @type {string}\n\t   */\n\t  subType: '',\n\t\n\t  /**\n\t   * @readOnly\n\t   * @type {number}\n\t   */\n\t  componentIndex: 0,\n\t\n\t  /**\n\t   * @type {Object}\n\t   * @protected\n\t   */\n\t  defaultOption: null,\n\t\n\t  /**\n\t   * @type {module:echarts/model/Global}\n\t   * @readOnly\n\t   */\n\t  ecModel: null,\n\t\n\t  /**\n\t   * key: componentType\n\t   * value:  Component model list, can not be null.\n\t   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n\t   * @readOnly\n\t   */\n\t  dependentModels: [],\n\t\n\t  /**\n\t   * @type {string}\n\t   * @readOnly\n\t   */\n\t  uid: null,\n\t\n\t  /**\n\t   * Support merge layout params.\n\t   * Only support 'box' now (left/right/top/bottom/width/height).\n\t   * @type {string|Object} Object can be {ignoreSize: true}\n\t   * @readOnly\n\t   */\n\t  layoutMode: null,\n\t  $constructor: function (option, parentModel, ecModel, extraOpt) {\n\t    Model.call(this, option, parentModel, ecModel, extraOpt);\n\t    this.uid = componentUtil.getUID('ec_cpt_model');\n\t  },\n\t  init: function (option, parentModel, ecModel, extraOpt) {\n\t    this.mergeDefaultAndTheme(option, ecModel);\n\t  },\n\t  mergeDefaultAndTheme: function (option, ecModel) {\n\t    var layoutMode = this.layoutMode;\n\t    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n\t    var themeModel = ecModel.getTheme();\n\t    zrUtil.merge(option, themeModel.get(this.mainType));\n\t    zrUtil.merge(option, this.getDefaultOption());\n\t\n\t    if (layoutMode) {\n\t      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n\t    }\n\t  },\n\t  mergeOption: function (option, extraOpt) {\n\t    zrUtil.merge(this.option, option, true);\n\t    var layoutMode = this.layoutMode;\n\t\n\t    if (layoutMode) {\n\t      layout.mergeLayoutParam(this.option, option, layoutMode);\n\t    }\n\t  },\n\t  // Hooker after init or mergeOption\n\t  optionUpdated: function (newCptOption, isInit) {},\n\t  getDefaultOption: function () {\n\t    var fields = inner(this);\n\t\n\t    if (!fields.defaultOption) {\n\t      var optList = [];\n\t      var Class = this.constructor;\n\t\n\t      while (Class) {\n\t        var opt = Class.prototype.defaultOption;\n\t        opt && optList.push(opt);\n\t        Class = Class.superClass;\n\t      }\n\t\n\t      var defaultOption = {};\n\t\n\t      for (var i = optList.length - 1; i >= 0; i--) {\n\t        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n\t      }\n\t\n\t      fields.defaultOption = defaultOption;\n\t    }\n\t\n\t    return fields.defaultOption;\n\t  },\n\t  getReferringComponents: function (mainType) {\n\t    return this.ecModel.queryComponents({\n\t      mainType: mainType,\n\t      index: this.get(mainType + 'Index', true),\n\t      id: this.get(mainType + 'Id', true)\n\t    });\n\t  }\n\t}); // Reset ComponentModel.extend, add preConstruct.\n\t// clazzUtil.enableClassExtend(\n\t//     ComponentModel,\n\t//     function (option, parentModel, ecModel, extraOpt) {\n\t//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n\t//         zrUtil.extend(this, extraOpt);\n\t//         this.uid = componentUtil.getUID('componentModel');\n\t//         // this.setReadOnly([\n\t//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n\t//         //     'dependentModels', 'componentIndex'\n\t//         // ]);\n\t//     }\n\t// );\n\t// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\t\n\tenableClassManagement(ComponentModel, {\n\t  registerWhenExtend: true\n\t});\n\tcomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\t\n\tcomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\t\n\tfunction getDependencies(componentType) {\n\t  var deps = [];\n\t  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n\t    deps = deps.concat(Clazz.prototype.dependencies || []);\n\t  }); // Ensure main type.\n\t\n\t  deps = zrUtil.map(deps, function (type) {\n\t    return parseClassType(type).main;\n\t  }); // Hack dataset for convenience.\n\t\n\t  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n\t    deps.unshift('dataset');\n\t  }\n\t\n\t  return deps;\n\t}\n\t\n\tzrUtil.mixin(ComponentModel, boxLayoutMixin);\n\tvar _default = ComponentModel;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar each = _util.each;\n\tvar filter = _util.filter;\n\tvar map = _util.map;\n\tvar isArray = _util.isArray;\n\tvar indexOf = _util.indexOf;\n\tvar isObject = _util.isObject;\n\tvar isString = _util.isString;\n\tvar createHashMap = _util.createHashMap;\n\tvar assert = _util.assert;\n\tvar clone = _util.clone;\n\tvar merge = _util.merge;\n\tvar extend = _util.extend;\n\tvar mixin = _util.mixin;\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\tvar Model = __webpack_require__(55);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\tvar globalDefault = __webpack_require__(811);\n\t\n\tvar colorPaletteMixin = __webpack_require__(425);\n\t\n\tvar _sourceHelper = __webpack_require__(270);\n\t\n\tvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\t\n\t/**\n\t * ECharts global model\n\t *\n\t * @module {echarts/model/Global}\n\t */\n\t\n\t/**\n\t * Caution: If the mechanism should be changed some day, these cases\n\t * should be considered:\n\t *\n\t * (1) In `merge option` mode, if using the same option to call `setOption`\n\t * many times, the result should be the same (try our best to ensure that).\n\t * (2) In `merge option` mode, if a component has no id/name specified, it\n\t * will be merged by index, and the result sequence of the components is\n\t * consistent to the original sequence.\n\t * (3) `reset` feature (in toolbox). Find detailed info in comments about\n\t * `mergeOption` in module:echarts/model/OptionManager.\n\t */\n\tvar OPTION_INNER_KEY = '\\0_ec_inner';\n\t/**\n\t * @alias module:echarts/model/Global\n\t *\n\t * @param {Object} option\n\t * @param {module:echarts/model/Model} parentModel\n\t * @param {Object} theme\n\t */\n\t\n\tvar GlobalModel = Model.extend({\n\t  constructor: GlobalModel,\n\t  init: function (option, parentModel, theme, optionManager) {\n\t    theme = theme || {};\n\t    this.option = null; // Mark as not initialized.\n\t\n\t    /**\n\t     * @type {module:echarts/model/Model}\n\t     * @private\n\t     */\n\t\n\t    this._theme = new Model(theme);\n\t    /**\n\t     * @type {module:echarts/model/OptionManager}\n\t     */\n\t\n\t    this._optionManager = optionManager;\n\t  },\n\t  setOption: function (option, optionPreprocessorFuncs) {\n\t    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\t\n\t    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\t\n\t    this.resetOption(null);\n\t  },\n\t\n\t  /**\n\t   * @param {string} type null/undefined: reset all.\n\t   *                      'recreate': force recreate all.\n\t   *                      'timeline': only reset timeline option\n\t   *                      'media': only reset media query option\n\t   * @return {boolean} Whether option changed.\n\t   */\n\t  resetOption: function (type) {\n\t    var optionChanged = false;\n\t    var optionManager = this._optionManager;\n\t\n\t    if (!type || type === 'recreate') {\n\t      var baseOption = optionManager.mountOption(type === 'recreate');\n\t\n\t      if (!this.option || type === 'recreate') {\n\t        initBase.call(this, baseOption);\n\t      } else {\n\t        this.restoreData();\n\t        this.mergeOption(baseOption);\n\t      }\n\t\n\t      optionChanged = true;\n\t    }\n\t\n\t    if (type === 'timeline' || type === 'media') {\n\t      this.restoreData();\n\t    }\n\t\n\t    if (!type || type === 'recreate' || type === 'timeline') {\n\t      var timelineOption = optionManager.getTimelineOption(this);\n\t      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n\t    }\n\t\n\t    if (!type || type === 'recreate' || type === 'media') {\n\t      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\t\n\t      if (mediaOptions.length) {\n\t        each(mediaOptions, function (mediaOption) {\n\t          this.mergeOption(mediaOption, optionChanged = true);\n\t        }, this);\n\t      }\n\t    }\n\t\n\t    return optionChanged;\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  mergeOption: function (newOption) {\n\t    var option = this.option;\n\t    var componentsMap = this._componentsMap;\n\t    var newCptTypes = [];\n\t    resetSourceDefaulter(this); // If no component class, merge directly.\n\t    // For example: color, animaiton options, etc.\n\t\n\t    each(newOption, function (componentOption, mainType) {\n\t      if (componentOption == null) {\n\t        return;\n\t      }\n\t\n\t      if (!ComponentModel.hasClass(mainType)) {\n\t        // globalSettingTask.dirty();\n\t        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n\t      } else if (mainType) {\n\t        newCptTypes.push(mainType);\n\t      }\n\t    });\n\t    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\t\n\t    function visitComponent(mainType, dependencies) {\n\t      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\t      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n\t      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\t\n\t      each(mapResult, function (item, index) {\n\t        var opt = item.option;\n\t\n\t        if (isObject(opt)) {\n\t          item.keyInfo.mainType = mainType;\n\t          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n\t        }\n\t      });\n\t      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n\t      option[mainType] = [];\n\t      componentsMap.set(mainType, []);\n\t      each(mapResult, function (resultItem, index) {\n\t        var componentModel = resultItem.exist;\n\t        var newCptOption = resultItem.option;\n\t        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n\t        // see removeEdgeAndAdd in topologicalTravel and\n\t        // ComponentModel.getAllClassMainTypes.\n\t\n\t        if (!newCptOption) {\n\t          componentModel.mergeOption({}, this);\n\t          componentModel.optionUpdated({}, false);\n\t        } else {\n\t          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\t\n\t          if (componentModel && componentModel instanceof ComponentModelClass) {\n\t            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\t\n\t            componentModel.mergeOption(newCptOption, this);\n\t            componentModel.optionUpdated(newCptOption, false);\n\t          } else {\n\t            // PENDING Global as parent ?\n\t            var extraOpt = extend({\n\t              dependentModels: dependentModels,\n\t              componentIndex: index\n\t            }, resultItem.keyInfo);\n\t            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n\t            extend(componentModel, extraOpt);\n\t            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n\t            // newCptOption has been used as componentModel.option\n\t            // and may be merged with theme and default, so pass null\n\t            // to avoid confusion.\n\t\n\t            componentModel.optionUpdated(null, true);\n\t          }\n\t        }\n\t\n\t        componentsMap.get(mainType)[index] = componentModel;\n\t        option[mainType][index] = componentModel.option;\n\t      }, this); // Backup series for filtering.\n\t\n\t      if (mainType === 'series') {\n\t        createSeriesIndices(this, componentsMap.get('series'));\n\t      }\n\t    }\n\t\n\t    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n\t  },\n\t\n\t  /**\n\t   * Get option for output (cloned option and inner info removed)\n\t   * @public\n\t   * @return {Object}\n\t   */\n\t  getOption: function () {\n\t    var option = clone(this.option);\n\t    each(option, function (opts, mainType) {\n\t      if (ComponentModel.hasClass(mainType)) {\n\t        var opts = modelUtil.normalizeToArray(opts);\n\t\n\t        for (var i = opts.length - 1; i >= 0; i--) {\n\t          // Remove options with inner id.\n\t          if (modelUtil.isIdInner(opts[i])) {\n\t            opts.splice(i, 1);\n\t          }\n\t        }\n\t\n\t        option[mainType] = opts;\n\t      }\n\t    });\n\t    delete option[OPTION_INNER_KEY];\n\t    return option;\n\t  },\n\t\n\t  /**\n\t   * @return {module:echarts/model/Model}\n\t   */\n\t  getTheme: function () {\n\t    return this._theme;\n\t  },\n\t\n\t  /**\n\t   * @param {string} mainType\n\t   * @param {number} [idx=0]\n\t   * @return {module:echarts/model/Component}\n\t   */\n\t  getComponent: function (mainType, idx) {\n\t    var list = this._componentsMap.get(mainType);\n\t\n\t    if (list) {\n\t      return list[idx || 0];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * If none of index and id and name used, return all components with mainType.\n\t   * @param {Object} condition\n\t   * @param {string} condition.mainType\n\t   * @param {string} [condition.subType] If ignore, only query by mainType\n\t   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n\t   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n\t   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n\t   * @return {Array.<module:echarts/model/Component>}\n\t   */\n\t  queryComponents: function (condition) {\n\t    var mainType = condition.mainType;\n\t\n\t    if (!mainType) {\n\t      return [];\n\t    }\n\t\n\t    var index = condition.index;\n\t    var id = condition.id;\n\t    var name = condition.name;\n\t\n\t    var cpts = this._componentsMap.get(mainType);\n\t\n\t    if (!cpts || !cpts.length) {\n\t      return [];\n\t    }\n\t\n\t    var result;\n\t\n\t    if (index != null) {\n\t      if (!isArray(index)) {\n\t        index = [index];\n\t      }\n\t\n\t      result = filter(map(index, function (idx) {\n\t        return cpts[idx];\n\t      }), function (val) {\n\t        return !!val;\n\t      });\n\t    } else if (id != null) {\n\t      var isIdArray = isArray(id);\n\t      result = filter(cpts, function (cpt) {\n\t        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n\t      });\n\t    } else if (name != null) {\n\t      var isNameArray = isArray(name);\n\t      result = filter(cpts, function (cpt) {\n\t        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n\t      });\n\t    } else {\n\t      // Return all components with mainType\n\t      result = cpts.slice();\n\t    }\n\t\n\t    return filterBySubType(result, condition);\n\t  },\n\t\n\t  /**\n\t   * The interface is different from queryComponents,\n\t   * which is convenient for inner usage.\n\t   *\n\t   * @usage\n\t   * var result = findComponents(\n\t   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n\t   * );\n\t   * var result = findComponents(\n\t   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n\t   * );\n\t   * var result = findComponents(\n\t   *     {mainType: 'series'},\n\t   *     function (model, index) {...}\n\t   * );\n\t   * // result like [component0, componnet1, ...]\n\t   *\n\t   * @param {Object} condition\n\t   * @param {string} condition.mainType Mandatory.\n\t   * @param {string} [condition.subType] Optional.\n\t   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n\t   *        where xxx is mainType.\n\t   *        If query attribute is null/undefined or has no index/id/name,\n\t   *        do not filtering by query conditions, which is convenient for\n\t   *        no-payload situations or when target of action is global.\n\t   * @param {Function} [condition.filter] parameter: component, return boolean.\n\t   * @return {Array.<module:echarts/model/Component>}\n\t   */\n\t  findComponents: function (condition) {\n\t    var query = condition.query;\n\t    var mainType = condition.mainType;\n\t    var queryCond = getQueryCond(query);\n\t    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n\t    return doFilter(filterBySubType(result, condition));\n\t\n\t    function getQueryCond(q) {\n\t      var indexAttr = mainType + 'Index';\n\t      var idAttr = mainType + 'Id';\n\t      var nameAttr = mainType + 'Name';\n\t      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n\t        mainType: mainType,\n\t        // subType will be filtered finally.\n\t        index: q[indexAttr],\n\t        id: q[idAttr],\n\t        name: q[nameAttr]\n\t      } : null;\n\t    }\n\t\n\t    function doFilter(res) {\n\t      return condition.filter ? filter(res, condition.filter) : res;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @usage\n\t   * eachComponent('legend', function (legendModel, index) {\n\t   *     ...\n\t   * });\n\t   * eachComponent(function (componentType, model, index) {\n\t   *     // componentType does not include subType\n\t   *     // (componentType is 'xxx' but not 'xxx.aa')\n\t   * });\n\t   * eachComponent(\n\t   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n\t   *     function (model, index) {...}\n\t   * );\n\t   * eachComponent(\n\t   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n\t   *     function (model, index) {...}\n\t   * );\n\t   *\n\t   * @param {string|Object=} mainType When mainType is object, the definition\n\t   *                                  is the same as the method 'findComponents'.\n\t   * @param {Function} cb\n\t   * @param {*} context\n\t   */\n\t  eachComponent: function (mainType, cb, context) {\n\t    var componentsMap = this._componentsMap;\n\t\n\t    if (typeof mainType === 'function') {\n\t      context = cb;\n\t      cb = mainType;\n\t      componentsMap.each(function (components, componentType) {\n\t        each(components, function (component, index) {\n\t          cb.call(context, componentType, component, index);\n\t        });\n\t      });\n\t    } else if (isString(mainType)) {\n\t      each(componentsMap.get(mainType), cb, context);\n\t    } else if (isObject(mainType)) {\n\t      var queryResult = this.findComponents(mainType);\n\t      each(queryResult, cb, context);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {string} name\n\t   * @return {Array.<module:echarts/model/Series>}\n\t   */\n\t  getSeriesByName: function (name) {\n\t    var series = this._componentsMap.get('series');\n\t\n\t    return filter(series, function (oneSeries) {\n\t      return oneSeries.name === name;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @param {number} seriesIndex\n\t   * @return {module:echarts/model/Series}\n\t   */\n\t  getSeriesByIndex: function (seriesIndex) {\n\t    return this._componentsMap.get('series')[seriesIndex];\n\t  },\n\t\n\t  /**\n\t   * @param {string} subType\n\t   * @return {Array.<module:echarts/model/Series>}\n\t   */\n\t  getSeriesByType: function (subType) {\n\t    var series = this._componentsMap.get('series');\n\t\n\t    return filter(series, function (oneSeries) {\n\t      return oneSeries.subType === subType;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<module:echarts/model/Series>}\n\t   */\n\t  getSeries: function () {\n\t    return this._componentsMap.get('series').slice();\n\t  },\n\t\n\t  /**\n\t   * @return {number}\n\t   */\n\t  getSeriesCount: function () {\n\t    return this._componentsMap.get('series').length;\n\t  },\n\t\n\t  /**\n\t   * After filtering, series may be different\n\t   * frome raw series.\n\t   *\n\t   * @param {Function} cb\n\t   * @param {*} context\n\t   */\n\t  eachSeries: function (cb, context) {\n\t    assertSeriesInitialized(this);\n\t    each(this._seriesIndices, function (rawSeriesIndex) {\n\t      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\t\n\t      cb.call(context, series, rawSeriesIndex);\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * Iterate raw series before filtered.\n\t   *\n\t   * @param {Function} cb\n\t   * @param {*} context\n\t   */\n\t  eachRawSeries: function (cb, context) {\n\t    each(this._componentsMap.get('series'), cb, context);\n\t  },\n\t\n\t  /**\n\t   * After filtering, series may be different.\n\t   * frome raw series.\n\t   *\n\t   * @parma {string} subType\n\t   * @param {Function} cb\n\t   * @param {*} context\n\t   */\n\t  eachSeriesByType: function (subType, cb, context) {\n\t    assertSeriesInitialized(this);\n\t    each(this._seriesIndices, function (rawSeriesIndex) {\n\t      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\t\n\t      if (series.subType === subType) {\n\t        cb.call(context, series, rawSeriesIndex);\n\t      }\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * Iterate raw series before filtered of given type.\n\t   *\n\t   * @parma {string} subType\n\t   * @param {Function} cb\n\t   * @param {*} context\n\t   */\n\t  eachRawSeriesByType: function (subType, cb, context) {\n\t    return each(this.getSeriesByType(subType), cb, context);\n\t  },\n\t\n\t  /**\n\t   * @param {module:echarts/model/Series} seriesModel\n\t   */\n\t  isSeriesFiltered: function (seriesModel) {\n\t    assertSeriesInitialized(this);\n\t    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<number>}\n\t   */\n\t  getCurrentSeriesIndices: function () {\n\t    return (this._seriesIndices || []).slice();\n\t  },\n\t\n\t  /**\n\t   * @param {Function} cb\n\t   * @param {*} context\n\t   */\n\t  filterSeries: function (cb, context) {\n\t    assertSeriesInitialized(this);\n\t    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n\t    createSeriesIndices(this, filteredSeries);\n\t  },\n\t  restoreData: function (payload) {\n\t    var componentsMap = this._componentsMap;\n\t    createSeriesIndices(this, componentsMap.get('series'));\n\t    var componentTypes = [];\n\t    componentsMap.each(function (components, componentType) {\n\t      componentTypes.push(componentType);\n\t    });\n\t    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n\t      each(componentsMap.get(componentType), function (component) {\n\t        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n\t      });\n\t    });\n\t  }\n\t});\n\t\n\tfunction isNotTargetSeries(seriesModel, payload) {\n\t  if (payload) {\n\t    var index = payload.seiresIndex;\n\t    var id = payload.seriesId;\n\t    var name = payload.seriesName;\n\t    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n\t  }\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction mergeTheme(option, theme) {\n\t  each(theme, function (themeItem, name) {\n\t    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\t    if (!ComponentModel.hasClass(name)) {\n\t      if (typeof themeItem === 'object') {\n\t        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n\t      } else {\n\t        if (option[name] == null) {\n\t          option[name] = themeItem;\n\t        }\n\t      }\n\t    }\n\t  });\n\t}\n\t\n\tfunction initBase(baseOption) {\n\t  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n\t  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\t\n\t  this.option = {};\n\t  this.option[OPTION_INNER_KEY] = 1;\n\t  /**\n\t   * Init with series: [], in case of calling findSeries method\n\t   * before series initialized.\n\t   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n\t   * @private\n\t   */\n\t\n\t  this._componentsMap = createHashMap({\n\t    series: []\n\t  });\n\t  /**\n\t   * Mapping between filtered series list and raw series list.\n\t   * key: filtered series indices, value: raw series indices.\n\t   * @type {Array.<nubmer>}\n\t   * @private\n\t   */\n\t\n\t  this._seriesIndices;\n\t  this._seriesIndicesMap;\n\t  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\t\n\t  merge(baseOption, globalDefault, false);\n\t  this.mergeOption(baseOption);\n\t}\n\t/**\n\t * @inner\n\t * @param {Array.<string>|string} types model types\n\t * @return {Object} key: {string} type, value: {Array.<Object>} models\n\t */\n\t\n\t\n\tfunction getComponentsByTypes(componentsMap, types) {\n\t  if (!isArray(types)) {\n\t    types = types ? [types] : [];\n\t  }\n\t\n\t  var ret = {};\n\t  each(types, function (type) {\n\t    ret[type] = (componentsMap.get(type) || []).slice();\n\t  });\n\t  return ret;\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction determineSubType(mainType, newCptOption, existComponent) {\n\t  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n\t  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\t\n\t  return subType;\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction createSeriesIndices(ecModel, seriesModels) {\n\t  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n\t    return series.componentIndex;\n\t  }) || []);\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction filterBySubType(components, condition) {\n\t  // Using hasOwnProperty for restrict. Consider\n\t  // subType is undefined in user payload.\n\t  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n\t    return cpt.subType === condition.subType;\n\t  }) : components;\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction assertSeriesInitialized(ecModel) {}\n\t\n\tmixin(GlobalModel, colorPaletteMixin);\n\tvar _default = GlobalModel;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\t\n\tvar _clazz = __webpack_require__(56);\n\t\n\tvar enableClassExtend = _clazz.enableClassExtend;\n\tvar enableClassCheck = _clazz.enableClassCheck;\n\t\n\tvar lineStyleMixin = __webpack_require__(816);\n\t\n\tvar areaStyleMixin = __webpack_require__(812);\n\t\n\tvar textStyleMixin = __webpack_require__(817);\n\t\n\tvar itemStyleMixin = __webpack_require__(815);\n\t\n\t/**\n\t * @module echarts/model/Model\n\t */\n\tvar mixin = zrUtil.mixin;\n\tvar inner = makeInner();\n\t/**\n\t * @alias module:echarts/model/Model\n\t * @constructor\n\t * @param {Object} option\n\t * @param {module:echarts/model/Model} [parentModel]\n\t * @param {module:echarts/model/Global} [ecModel]\n\t */\n\t\n\tfunction Model(option, parentModel, ecModel) {\n\t  /**\n\t   * @type {module:echarts/model/Model}\n\t   * @readOnly\n\t   */\n\t  this.parentModel = parentModel;\n\t  /**\n\t   * @type {module:echarts/model/Global}\n\t   * @readOnly\n\t   */\n\t\n\t  this.ecModel = ecModel;\n\t  /**\n\t   * @type {Object}\n\t   * @protected\n\t   */\n\t\n\t  this.option = option; // Simple optimization\n\t  // if (this.init) {\n\t  //     if (arguments.length <= 4) {\n\t  //         this.init(option, parentModel, ecModel, extraOpt);\n\t  //     }\n\t  //     else {\n\t  //         this.init.apply(this, arguments);\n\t  //     }\n\t  // }\n\t}\n\t\n\tModel.prototype = {\n\t  constructor: Model,\n\t\n\t  /**\n\t   * Model 的初始化函数\n\t   * @param {Object} option\n\t   */\n\t  init: null,\n\t\n\t  /**\n\t   * 从新的 Option merge\n\t   */\n\t  mergeOption: function (option) {\n\t    zrUtil.merge(this.option, option, true);\n\t  },\n\t\n\t  /**\n\t   * @param {string|Array.<string>} path\n\t   * @param {boolean} [ignoreParent=false]\n\t   * @return {*}\n\t   */\n\t  get: function (path, ignoreParent) {\n\t    if (path == null) {\n\t      return this.option;\n\t    }\n\t\n\t    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n\t  },\n\t\n\t  /**\n\t   * @param {string} key\n\t   * @param {boolean} [ignoreParent=false]\n\t   * @return {*}\n\t   */\n\t  getShallow: function (key, ignoreParent) {\n\t    var option = this.option;\n\t    var val = option == null ? option : option[key];\n\t    var parentModel = !ignoreParent && getParent(this, key);\n\t\n\t    if (val == null && parentModel) {\n\t      val = parentModel.getShallow(key);\n\t    }\n\t\n\t    return val;\n\t  },\n\t\n\t  /**\n\t   * @param {string|Array.<string>} [path]\n\t   * @param {module:echarts/model/Model} [parentModel]\n\t   * @return {module:echarts/model/Model}\n\t   */\n\t  getModel: function (path, parentModel) {\n\t    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n\t    var thisParentModel;\n\t    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n\t    return new Model(obj, parentModel, this.ecModel);\n\t  },\n\t\n\t  /**\n\t   * If model has option\n\t   */\n\t  isEmpty: function () {\n\t    return this.option == null;\n\t  },\n\t  restoreData: function () {},\n\t  // Pending\n\t  clone: function () {\n\t    var Ctor = this.constructor;\n\t    return new Ctor(zrUtil.clone(this.option));\n\t  },\n\t  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n\t  },\n\t  // If path is null/undefined, return null/undefined.\n\t  parsePath: function (path) {\n\t    if (typeof path === 'string') {\n\t      path = path.split('.');\n\t    }\n\t\n\t    return path;\n\t  },\n\t\n\t  /**\n\t   * @param {Function} getParentMethod\n\t   *        param {Array.<string>|string} path\n\t   *        return {module:echarts/model/Model}\n\t   */\n\t  customizeGetParent: function (getParentMethod) {\n\t    inner(this).getParent = getParentMethod;\n\t  },\n\t  isAnimationEnabled: function () {\n\t    if (!env.node) {\n\t      if (this.option.animation != null) {\n\t        return !!this.option.animation;\n\t      } else if (this.parentModel) {\n\t        return this.parentModel.isAnimationEnabled();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction doGet(obj, pathArr, parentModel) {\n\t  for (var i = 0; i < pathArr.length; i++) {\n\t    // Ignore empty\n\t    if (!pathArr[i]) {\n\t      continue;\n\t    } // obj could be number/string/... (like 0)\n\t\n\t\n\t    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\t\n\t    if (obj == null) {\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (obj == null && parentModel) {\n\t    obj = parentModel.get(pathArr);\n\t  }\n\t\n\t  return obj;\n\t} // `path` can be null/undefined\n\t\n\t\n\tfunction getParent(model, path) {\n\t  var getParentMethod = inner(model).getParent;\n\t  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n\t} // Enable Model.extend.\n\t\n\t\n\tenableClassExtend(Model);\n\tenableClassCheck(Model);\n\tmixin(Model, lineStyleMixin);\n\tmixin(Model, areaStyleMixin);\n\tmixin(Model, textStyleMixin);\n\tmixin(Model, itemStyleMixin);\n\tvar _default = Model;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 809:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\t/**\n\t * ECharts option manager\n\t *\n\t * @module {echarts/model/OptionManager}\n\t */\n\tvar each = zrUtil.each;\n\tvar clone = zrUtil.clone;\n\tvar map = zrUtil.map;\n\tvar merge = zrUtil.merge;\n\tvar QUERY_REG = /^(min|max)?(.+)$/;\n\t/**\n\t * TERM EXPLANATIONS:\n\t *\n\t * [option]:\n\t *\n\t *     An object that contains definitions of components. For example:\n\t *     var option = {\n\t *         title: {...},\n\t *         legend: {...},\n\t *         visualMap: {...},\n\t *         series: [\n\t *             {data: [...]},\n\t *             {data: [...]},\n\t *             ...\n\t *         ]\n\t *     };\n\t *\n\t * [rawOption]:\n\t *\n\t *     An object input to echarts.setOption. 'rawOption' may be an\n\t *     'option', or may be an object contains multi-options. For example:\n\t *     var option = {\n\t *         baseOption: {\n\t *             title: {...},\n\t *             legend: {...},\n\t *             series: [\n\t *                 {data: [...]},\n\t *                 {data: [...]},\n\t *                 ...\n\t *             ]\n\t *         },\n\t *         timeline: {...},\n\t *         options: [\n\t *             {title: {...}, series: {data: [...]}},\n\t *             {title: {...}, series: {data: [...]}},\n\t *             ...\n\t *         ],\n\t *         media: [\n\t *             {\n\t *                 query: {maxWidth: 320},\n\t *                 option: {series: {x: 20}, visualMap: {show: false}}\n\t *             },\n\t *             {\n\t *                 query: {minWidth: 320, maxWidth: 720},\n\t *                 option: {series: {x: 500}, visualMap: {show: true}}\n\t *             },\n\t *             {\n\t *                 option: {series: {x: 1200}, visualMap: {show: true}}\n\t *             }\n\t *         ]\n\t *     };\n\t *\n\t * @alias module:echarts/model/OptionManager\n\t * @param {module:echarts/ExtensionAPI} api\n\t */\n\t\n\tfunction OptionManager(api) {\n\t  /**\n\t   * @private\n\t   * @type {module:echarts/ExtensionAPI}\n\t   */\n\t  this._api = api;\n\t  /**\n\t   * @private\n\t   * @type {Array.<number>}\n\t   */\n\t\n\t  this._timelineOptions = [];\n\t  /**\n\t   * @private\n\t   * @type {Array.<Object>}\n\t   */\n\t\n\t  this._mediaList = [];\n\t  /**\n\t   * @private\n\t   * @type {Object}\n\t   */\n\t\n\t  this._mediaDefault;\n\t  /**\n\t   * -1, means default.\n\t   * empty means no media.\n\t   * @private\n\t   * @type {Array.<number>}\n\t   */\n\t\n\t  this._currentMediaIndices = [];\n\t  /**\n\t   * @private\n\t   * @type {Object}\n\t   */\n\t\n\t  this._optionBackup;\n\t  /**\n\t   * @private\n\t   * @type {Object}\n\t   */\n\t\n\t  this._newBaseOption;\n\t} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n\t// case that notMerge is needed. Secondly supporting 'notMerge' requires\n\t// rawOption cloned and backuped when timeline changed, which does no\n\t// good to performance. What's more, that both timeline and setOption\n\t// method supply 'notMerge' brings complex and some problems.\n\t// Consider this case:\n\t// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n\t// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\t\n\t\n\tOptionManager.prototype = {\n\t  constructor: OptionManager,\n\t\n\t  /**\n\t   * @public\n\t   * @param {Object} rawOption Raw option.\n\t   * @param {module:echarts/model/Global} ecModel\n\t   * @param {Array.<Function>} optionPreprocessorFuncs\n\t   * @return {Object} Init option\n\t   */\n\t  setOption: function (rawOption, optionPreprocessorFuncs) {\n\t    if (rawOption) {\n\t      // That set dat primitive is dangerous if user reuse the data when setOption again.\n\t      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n\t        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n\t      });\n\t    } // Caution: some series modify option data, if do not clone,\n\t    // it should ensure that the repeat modify correctly\n\t    // (create a new object when modify itself).\n\t\n\t\n\t    rawOption = clone(rawOption, true); // FIXME\n\t    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\t\n\t    var oldOptionBackup = this._optionBackup;\n\t    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n\t    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\t\n\t    if (oldOptionBackup) {\n\t      // Only baseOption can be merged.\n\t      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n\t      // that is, if you `setOption` twice and both has timeline options, the latter\n\t      // timeline opitons will not be merged to the formers, but just substitude them.\n\t\n\t      if (newParsedOption.timelineOptions.length) {\n\t        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n\t      }\n\t\n\t      if (newParsedOption.mediaList.length) {\n\t        oldOptionBackup.mediaList = newParsedOption.mediaList;\n\t      }\n\t\n\t      if (newParsedOption.mediaDefault) {\n\t        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n\t      }\n\t    } else {\n\t      this._optionBackup = newParsedOption;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} isRecreate\n\t   * @return {Object}\n\t   */\n\t  mountOption: function (isRecreate) {\n\t    var optionBackup = this._optionBackup; // TODO\n\t    // 如果没有reset功能则不clone。\n\t\n\t    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n\t    this._mediaList = map(optionBackup.mediaList, clone);\n\t    this._mediaDefault = clone(optionBackup.mediaDefault);\n\t    this._currentMediaIndices = [];\n\t    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n\t    // called, and is merged into every new option by inner method `mergeOption`\n\t    // each time `setOption` called, can be only used in `isRecreate`, because\n\t    // its reliability is under suspicion. In other cases option merge is\n\t    // performed by `model.mergeOption`.\n\t    ? optionBackup.baseOption : this._newBaseOption);\n\t  },\n\t\n\t  /**\n\t   * @param {module:echarts/model/Global} ecModel\n\t   * @return {Object}\n\t   */\n\t  getTimelineOption: function (ecModel) {\n\t    var option;\n\t    var timelineOptions = this._timelineOptions;\n\t\n\t    if (timelineOptions.length) {\n\t      // getTimelineOption can only be called after ecModel inited,\n\t      // so we can get currentIndex from timelineModel.\n\t      var timelineModel = ecModel.getComponent('timeline');\n\t\n\t      if (timelineModel) {\n\t        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n\t      }\n\t    }\n\t\n\t    return option;\n\t  },\n\t\n\t  /**\n\t   * @param {module:echarts/model/Global} ecModel\n\t   * @return {Array.<Object>}\n\t   */\n\t  getMediaOption: function (ecModel) {\n\t    var ecWidth = this._api.getWidth();\n\t\n\t    var ecHeight = this._api.getHeight();\n\t\n\t    var mediaList = this._mediaList;\n\t    var mediaDefault = this._mediaDefault;\n\t    var indices = [];\n\t    var result = []; // No media defined.\n\t\n\t    if (!mediaList.length && !mediaDefault) {\n\t      return result;\n\t    } // Multi media may be applied, the latter defined media has higher priority.\n\t\n\t\n\t    for (var i = 0, len = mediaList.length; i < len; i++) {\n\t      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n\t        indices.push(i);\n\t      }\n\t    } // FIXME\n\t    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\t\n\t\n\t    if (!indices.length && mediaDefault) {\n\t      indices = [-1];\n\t    }\n\t\n\t    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n\t      result = map(indices, function (index) {\n\t        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n\t      });\n\t    } // Otherwise return nothing.\n\t\n\t\n\t    this._currentMediaIndices = indices;\n\t    return result;\n\t  }\n\t};\n\t\n\tfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n\t  var timelineOptions = [];\n\t  var mediaList = [];\n\t  var mediaDefault;\n\t  var baseOption; // Compatible with ec2.\n\t\n\t  var timelineOpt = rawOption.timeline;\n\t\n\t  if (rawOption.baseOption) {\n\t    baseOption = rawOption.baseOption;\n\t  } // For timeline\n\t\n\t\n\t  if (timelineOpt || rawOption.options) {\n\t    baseOption = baseOption || {};\n\t    timelineOptions = (rawOption.options || []).slice();\n\t  } // For media query\n\t\n\t\n\t  if (rawOption.media) {\n\t    baseOption = baseOption || {};\n\t    var media = rawOption.media;\n\t    each(media, function (singleMedia) {\n\t      if (singleMedia && singleMedia.option) {\n\t        if (singleMedia.query) {\n\t          mediaList.push(singleMedia);\n\t        } else if (!mediaDefault) {\n\t          // Use the first media default.\n\t          mediaDefault = singleMedia;\n\t        }\n\t      }\n\t    });\n\t  } // For normal option\n\t\n\t\n\t  if (!baseOption) {\n\t    baseOption = rawOption;\n\t  } // Set timelineOpt to baseOption in ec3,\n\t  // which is convenient for merge option.\n\t\n\t\n\t  if (!baseOption.timeline) {\n\t    baseOption.timeline = timelineOpt;\n\t  } // Preprocess.\n\t\n\t\n\t  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n\t    return media.option;\n\t  })), function (option) {\n\t    each(optionPreprocessorFuncs, function (preProcess) {\n\t      preProcess(option, isNew);\n\t    });\n\t  });\n\t  return {\n\t    baseOption: baseOption,\n\t    timelineOptions: timelineOptions,\n\t    mediaDefault: mediaDefault,\n\t    mediaList: mediaList\n\t  };\n\t}\n\t/**\n\t * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n\t * Support: width, height, aspectRatio\n\t * Can use max or min as prefix.\n\t */\n\t\n\t\n\tfunction applyMediaQuery(query, ecWidth, ecHeight) {\n\t  var realMap = {\n\t    width: ecWidth,\n\t    height: ecHeight,\n\t    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\t\n\t  };\n\t  var applicatable = true;\n\t  zrUtil.each(query, function (value, attr) {\n\t    var matched = attr.match(QUERY_REG);\n\t\n\t    if (!matched || !matched[1] || !matched[2]) {\n\t      return;\n\t    }\n\t\n\t    var operator = matched[1];\n\t    var realAttr = matched[2].toLowerCase();\n\t\n\t    if (!compare(realMap[realAttr], value, operator)) {\n\t      applicatable = false;\n\t    }\n\t  });\n\t  return applicatable;\n\t}\n\t\n\tfunction compare(real, expect, operator) {\n\t  if (operator === 'min') {\n\t    return real >= expect;\n\t  } else if (operator === 'max') {\n\t    return real <= expect;\n\t  } else {\n\t    // Equals\n\t    return real === expect;\n\t  }\n\t}\n\t\n\tfunction indicesEquals(indices1, indices2) {\n\t  // indices is always order by asc and has only finite number.\n\t  return indices1.join(',') === indices2.join(',');\n\t}\n\t/**\n\t * Consider case:\n\t * `chart.setOption(opt1);`\n\t * Then user do some interaction like dataZoom, dataView changing.\n\t * `chart.setOption(opt2);`\n\t * Then user press 'reset button' in toolbox.\n\t *\n\t * After doing that all of the interaction effects should be reset, the\n\t * chart should be the same as the result of invoke\n\t * `chart.setOption(opt1); chart.setOption(opt2);`.\n\t *\n\t * Although it is not able ensure that\n\t * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n\t * `chart.setOption(merge(opt1, opt2));` exactly,\n\t * this might be the only simple way to implement that feature.\n\t *\n\t * MEMO: We've considered some other approaches:\n\t * 1. Each model handle its self restoration but not uniform treatment.\n\t *     (Too complex in logic and error-prone)\n\t * 2. Use a shadow ecModel. (Performace expensive)\n\t */\n\t\n\t\n\tfunction mergeOption(oldOption, newOption) {\n\t  newOption = newOption || {};\n\t  each(newOption, function (newCptOpt, mainType) {\n\t    if (newCptOpt == null) {\n\t      return;\n\t    }\n\t\n\t    var oldCptOpt = oldOption[mainType];\n\t\n\t    if (!ComponentModel.hasClass(mainType)) {\n\t      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n\t    } else {\n\t      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n\t      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\t      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\t      oldOption[mainType] = map(mapResult, function (item) {\n\t        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n\t      });\n\t    }\n\t  });\n\t}\n\t\n\tvar _default = OptionManager;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 810:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar _format = __webpack_require__(44);\n\t\n\tvar formatTime = _format.formatTime;\n\tvar encodeHTML = _format.encodeHTML;\n\tvar addCommas = _format.addCommas;\n\tvar getTooltipMarker = _format.getTooltipMarker;\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\tvar ComponentModel = __webpack_require__(75);\n\t\n\tvar colorPaletteMixin = __webpack_require__(425);\n\t\n\tvar dataFormatMixin = __webpack_require__(814);\n\t\n\tvar _layout = __webpack_require__(76);\n\t\n\tvar getLayoutParams = _layout.getLayoutParams;\n\tvar mergeLayoutParam = _layout.mergeLayoutParam;\n\t\n\tvar _task = __webpack_require__(273);\n\t\n\tvar createTask = _task.createTask;\n\t\n\tvar _sourceHelper = __webpack_require__(270);\n\t\n\tvar prepareSource = _sourceHelper.prepareSource;\n\tvar getSource = _sourceHelper.getSource;\n\t\n\tvar _dataProvider = __webpack_require__(128);\n\t\n\tvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\tvar inner = modelUtil.makeInner();\n\tvar SeriesModel = ComponentModel.extend({\n\t  type: 'series.__base__',\n\t\n\t  /**\n\t   * @readOnly\n\t   */\n\t  seriesIndex: 0,\n\t  // coodinateSystem will be injected in the echarts/CoordinateSystem\n\t  coordinateSystem: null,\n\t\n\t  /**\n\t   * @type {Object}\n\t   * @protected\n\t   */\n\t  defaultOption: null,\n\t\n\t  /**\n\t   * Data provided for legend\n\t   * @type {Function}\n\t   */\n\t  // PENDING\n\t  legendDataProvider: null,\n\t\n\t  /**\n\t   * Access path of color for visual\n\t   */\n\t  visualColorAccessPath: 'itemStyle.color',\n\t\n\t  /**\n\t   * Support merge layout params.\n\t   * Only support 'box' now (left/right/top/bottom/width/height).\n\t   * @type {string|Object} Object can be {ignoreSize: true}\n\t   * @readOnly\n\t   */\n\t  layoutMode: null,\n\t  init: function (option, parentModel, ecModel, extraOpt) {\n\t    /**\n\t     * @type {number}\n\t     * @readOnly\n\t     */\n\t    this.seriesIndex = this.componentIndex;\n\t    this.dataTask = createTask({\n\t      count: dataTaskCount,\n\t      reset: dataTaskReset\n\t    });\n\t    this.dataTask.context = {\n\t      model: this\n\t    };\n\t    this.mergeDefaultAndTheme(option, ecModel);\n\t    prepareSource(this);\n\t    var data = this.getInitialData(option, ecModel);\n\t    wrapData(data, this);\n\t    this.dataTask.context.data = data;\n\t\n\t    /**\n\t     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n\t     * @private\n\t     */\n\t    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n\t    // dataBeforeProcessed by cloneShallow), cloneShallow will\n\t    // cause data.graph.data !== data when using\n\t    // module:echarts/data/Graph or module:echarts/data/Tree.\n\t    // See module:echarts/data/helper/linkList\n\t    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n\t    // init or merge stage, because the data can be restored. So we do not `restoreData`\n\t    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n\t    // Call `seriesModel.getRawData()` instead.\n\t    // this.restoreData();\n\t\n\t    autoSeriesName(this);\n\t  },\n\t\n\t  /**\n\t   * Util for merge default and theme to option\n\t   * @param  {Object} option\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   */\n\t  mergeDefaultAndTheme: function (option, ecModel) {\n\t    var layoutMode = this.layoutMode;\n\t    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n\t    // But if name duplicate between series subType\n\t    // (for example: parallel) add component mainType,\n\t    // add suffix 'Series'.\n\t\n\t    var themeSubType = this.subType;\n\t\n\t    if (ComponentModel.hasClass(themeSubType)) {\n\t      themeSubType += 'Series';\n\t    }\n\t\n\t    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n\t    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\t\n\t    modelUtil.defaultEmphasis(option, 'label', ['show']);\n\t    this.fillDataTextStyle(option.data);\n\t\n\t    if (layoutMode) {\n\t      mergeLayoutParam(option, inputPositionParams, layoutMode);\n\t    }\n\t  },\n\t  mergeOption: function (newSeriesOption, ecModel) {\n\t    // this.settingTask.dirty();\n\t    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n\t    this.fillDataTextStyle(newSeriesOption.data);\n\t    var layoutMode = this.layoutMode;\n\t\n\t    if (layoutMode) {\n\t      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n\t    }\n\t\n\t    prepareSource(this);\n\t    var data = this.getInitialData(newSeriesOption, ecModel);\n\t    wrapData(data, this);\n\t    this.dataTask.dirty();\n\t    this.dataTask.context.data = data;\n\t    inner(this).dataBeforeProcessed = data;\n\t    autoSeriesName(this);\n\t  },\n\t  fillDataTextStyle: function (data) {\n\t    // Default data label emphasis `show`\n\t    // FIXME Tree structure data ?\n\t    // FIXME Performance ?\n\t    if (data) {\n\t      var props = ['show'];\n\t\n\t      for (var i = 0; i < data.length; i++) {\n\t        if (data[i] && data[i].label) {\n\t          modelUtil.defaultEmphasis(data[i], 'label', props);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Init a data structure from data related option in series\n\t   * Must be overwritten\n\t   */\n\t  getInitialData: function () {},\n\t\n\t  /**\n\t   * Append data to list\n\t   * @param {Object} params\n\t   * @param {Array|TypedArray} params.data\n\t   */\n\t  appendData: function (params) {\n\t    // FIXME ???\n\t    // (1) If data from dataset, forbidden append.\n\t    // (2) support append data of dataset.\n\t    var data = this.getRawData();\n\t    data.appendData(params.data);\n\t  },\n\t\n\t  /**\n\t   * Consider some method like `filter`, `map` need make new data,\n\t   * We should make sure that `seriesModel.getData()` get correct\n\t   * data in the stream procedure. So we fetch data from upstream\n\t   * each time `task.perform` called.\n\t   * @param {string} [dataType]\n\t   * @return {module:echarts/data/List}\n\t   */\n\t  getData: function (dataType) {\n\t    var task = getCurrentTask(this);\n\t\n\t    if (task) {\n\t      var data = task.context.data;\n\t      return dataType == null ? data : data.getLinkedData(dataType);\n\t    } else {\n\t      // When series is not alive (that may happen when click toolbox\n\t      // restore or setOption with not merge mode), series data may\n\t      // be still need to judge animation or something when graphic\n\t      // elements want to know whether fade out.\n\t      return inner(this).data;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {module:echarts/data/List} data\n\t   */\n\t  setData: function (data) {\n\t    var task = getCurrentTask(this);\n\t\n\t    if (task) {\n\t      var context = task.context; // Consider case: filter, data sample.\n\t\n\t      if (context.data !== data && task.isOverallFilter) {\n\t        task.setOutputEnd(data.count());\n\t      }\n\t\n\t      context.outputData = data; // Caution: setData should update context.data,\n\t      // Because getData may be called multiply in a\n\t      // single stage and expect to get the data just\n\t      // set. (For example, AxisProxy, x y both call\n\t      // getData and setDate sequentially).\n\t      // So the context.data should be fetched from\n\t      // upstream each time when a stage starts to be\n\t      // performed.\n\t\n\t      if (task !== this.dataTask) {\n\t        context.data = data;\n\t      }\n\t    }\n\t\n\t    inner(this).data = data;\n\t  },\n\t\n\t  /**\n\t   * @see {module:echarts/data/helper/sourceHelper#getSource}\n\t   * @return {module:echarts/data/Source} source\n\t   */\n\t  getSource: function () {\n\t    return getSource(this);\n\t  },\n\t\n\t  /**\n\t   * Get data before processed\n\t   * @return {module:echarts/data/List}\n\t   */\n\t  getRawData: function () {\n\t    return inner(this).dataBeforeProcessed;\n\t  },\n\t\n\t  /**\n\t   * Get base axis if has coordinate system and has axis.\n\t   * By default use coordSys.getBaseAxis();\n\t   * Can be overrided for some chart.\n\t   * @return {type} description\n\t   */\n\t  getBaseAxis: function () {\n\t    var coordSys = this.coordinateSystem;\n\t    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n\t  },\n\t  // FIXME\n\t\n\t  /**\n\t   * Default tooltip formatter\n\t   *\n\t   * @param {number} dataIndex\n\t   * @param {boolean} [multipleSeries=false]\n\t   * @param {number} [dataType]\n\t   */\n\t  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n\t    function formatArrayValue(value) {\n\t      // ??? TODO refactor these logic.\n\t      // check: category-no-encode-has-axis-data in dataset.html\n\t      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n\t        var dimItem = data.getDimensionInfo(idx);\n\t        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n\t      }, 0);\n\t      var result = [];\n\t      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n\t        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n\t      }) // By default, all dims is used on tooltip.\n\t      : zrUtil.each(value, setEachItem);\n\t\n\t      function setEachItem(val, dim) {\n\t        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\t\n\t        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n\t          return;\n\t        }\n\t\n\t        var dimType = dimInfo.type;\n\t        var dimHead = getTooltipMarker({\n\t          color: color,\n\t          type: 'subItem'\n\t        });\n\t        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n\t        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n\t        valStr && result.push(valStr);\n\t      }\n\t\n\t      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n\t    }\n\t\n\t    function formatSingleValue(val) {\n\t      return encodeHTML(addCommas(val));\n\t    }\n\t\n\t    var data = this.getData();\n\t    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n\t    var tooltipDimLen = tooltipDims.length;\n\t    var value = this.getRawValue(dataIndex);\n\t    var isValueArr = zrUtil.isArray(value);\n\t    var color = data.getItemVisual(dataIndex, 'color');\n\t\n\t    if (zrUtil.isObject(color) && color.colorStops) {\n\t      color = (color.colorStops[0] || {}).color;\n\t    }\n\t\n\t    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\t\n\t    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n\t    var colorEl = getTooltipMarker(color);\n\t    var name = data.getName(dataIndex);\n\t    var seriesName = this.name;\n\t\n\t    if (seriesName === modelUtil.DEFAULT_COMPONENT_NAME) {\n\t      // Not show '-'\n\t      seriesName = '';\n\t    }\n\t\n\t    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n\t    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n\t  },\n\t\n\t  /**\n\t   * @return {boolean}\n\t   */\n\t  isAnimationEnabled: function () {\n\t    if (env.node) {\n\t      return false;\n\t    }\n\t\n\t    var animationEnabled = this.getShallow('animation');\n\t\n\t    if (animationEnabled) {\n\t      if (this.getData().count() > this.getShallow('animationThreshold')) {\n\t        animationEnabled = false;\n\t      }\n\t    }\n\t\n\t    return animationEnabled;\n\t  },\n\t  restoreData: function () {\n\t    this.dataTask.dirty();\n\t  },\n\t  getColorFromPalette: function (name, scope, requestColorNum) {\n\t    var ecModel = this.ecModel; // PENDING\n\t\n\t    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\t\n\t    if (!color) {\n\t      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n\t    }\n\t\n\t    return color;\n\t  },\n\t\n\t  /**\n\t   * Use `data.mapDimension(coordDim, true)` instead.\n\t   * @deprecated\n\t   */\n\t  coordDimToDataDim: function (coordDim) {\n\t    return this.getRawData().mapDimension(coordDim, true);\n\t  },\n\t\n\t  /**\n\t   * Get progressive rendering count each step\n\t   * @return {number}\n\t   */\n\t  getProgressive: function () {\n\t    return this.get('progressive');\n\t  },\n\t\n\t  /**\n\t   * Get progressive rendering count each step\n\t   * @return {number}\n\t   */\n\t  getProgressiveThreshold: function () {\n\t    return this.get('progressiveThreshold');\n\t  },\n\t\n\t  /**\n\t   * Get data indices for show tooltip content. See tooltip.\n\t   * @abstract\n\t   * @param {Array.<string>|string} dim\n\t   * @param {Array.<number>} value\n\t   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n\t   * @return {Object} {dataIndices, nestestValue}.\n\t   */\n\t  getAxisTooltipData: null,\n\t\n\t  /**\n\t   * See tooltip.\n\t   * @abstract\n\t   * @param {number} dataIndex\n\t   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n\t   */\n\t  getTooltipPosition: null,\n\t\n\t  /**\n\t   * @see {module:echarts/stream/Scheduler}\n\t   */\n\t  pipeTask: null,\n\t\n\t  /**\n\t   * Convinient for override in extended class.\n\t   * @protected\n\t   * @type {Function}\n\t   */\n\t  preventIncremental: null,\n\t\n\t  /**\n\t   * @public\n\t   * @readOnly\n\t   * @type {Object}\n\t   */\n\t  pipelineContext: null\n\t});\n\tzrUtil.mixin(SeriesModel, dataFormatMixin);\n\tzrUtil.mixin(SeriesModel, colorPaletteMixin);\n\t/**\n\t * MUST be called after `prepareSource` called\n\t * Here we need to make auto series, especially for auto legend. But we\n\t * do not modify series.name in option to avoid side effects.\n\t */\n\t\n\tfunction autoSeriesName(seriesModel) {\n\t  // User specified name has higher priority, otherwise it may cause\n\t  // series can not be queried unexpectedly.\n\t  var name = seriesModel.name;\n\t\n\t  if (modelUtil.DEFAULT_COMPONENT_NAME === name) {\n\t    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n\t  }\n\t}\n\t\n\tfunction getSeriesAutoName(seriesModel) {\n\t  var data = seriesModel.getRawData();\n\t  var dataDims = data.mapDimension('seriesName', true);\n\t  var nameArr = [];\n\t  zrUtil.each(dataDims, function (dataDim) {\n\t    var dimInfo = data.getDimensionInfo(dataDim);\n\t    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n\t  });\n\t  return nameArr.join(' ');\n\t}\n\t\n\tfunction dataTaskCount(context) {\n\t  return context.model.getRawData().count();\n\t}\n\t\n\tfunction dataTaskReset(context) {\n\t  var seriesModel = context.model;\n\t  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n\t  return dataTaskProgress;\n\t}\n\t\n\tfunction dataTaskProgress(param, context) {\n\t  // Avoid repead cloneShallow when data just created in reset.\n\t  if (param.end > context.outputData.count()) {\n\t    context.model.getRawData().cloneShallow(context.outputData);\n\t  }\n\t} // TODO refactor\n\t\n\t\n\tfunction wrapData(data, seriesModel) {\n\t  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n\t    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n\t  });\n\t}\n\t\n\tfunction onDataSelfChange(seriesModel) {\n\t  var task = getCurrentTask(seriesModel);\n\t\n\t  if (task) {\n\t    // Consider case: filter, selectRange\n\t    task.setOutputEnd(this.count());\n\t  }\n\t}\n\t\n\tfunction getCurrentTask(seriesModel) {\n\t  var scheduler = (seriesModel.ecModel || {}).scheduler;\n\t  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\t\n\t  if (pipeline) {\n\t    // When pipline finished, the currrentTask keep the last\n\t    // task (renderTask).\n\t    var task = pipeline.currentTask;\n\t\n\t    if (task) {\n\t      var agentStubMap = task.agentStubMap;\n\t\n\t      if (agentStubMap) {\n\t        task = agentStubMap.get(seriesModel.uid);\n\t      }\n\t    }\n\t\n\t    return task;\n\t  }\n\t}\n\t\n\tvar _default = SeriesModel;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 811:\n/***/ (function(module, exports) {\n\n\tvar platform = ''; // Navigator not exists in node\n\t\n\tif (typeof navigator !== 'undefined') {\n\t  platform = navigator.platform || '';\n\t}\n\t\n\tvar _default = {\n\t  // 全图默认背景\n\t  // backgroundColor: 'rgba(0,0,0,0)',\n\t  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n\t  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n\t  // 浅色\n\t  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n\t  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n\t  // 深色\n\t  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n\t  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n\t  // 默认需要 Grid 配置项\n\t  // grid: {},\n\t  // 主题，主题\n\t  textStyle: {\n\t    // color: '#000',\n\t    // decoration: 'none',\n\t    // PENDING\n\t    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n\t    // fontFamily: 'Arial, Verdana, sans-serif',\n\t    fontSize: 12,\n\t    fontStyle: 'normal',\n\t    fontWeight: 'normal'\n\t  },\n\t  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n\t  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n\t  // Default is source-over\n\t  blendMode: null,\n\t  animation: 'auto',\n\t  animationDuration: 1000,\n\t  animationDurationUpdate: 300,\n\t  animationEasing: 'exponentialOut',\n\t  animationEasingUpdate: 'cubicOut',\n\t  animationThreshold: 2000,\n\t  // Configuration for progressive/incremental rendering\n\t  progressiveThreshold: 3000,\n\t  progressive: 400,\n\t  // Threshold of if use single hover layer to optimize.\n\t  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n\t  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n\t  // which is unexpected.\n\t  // see example <echarts/test/heatmap-large.html>.\n\t  hoverLayerThreshold: 3000,\n\t  // See: module:echarts/scale/Time\n\t  useUTC: false\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 812:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar makeStyleMapper = __webpack_require__(271);\n\t\n\tvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\n\tvar _default = {\n\t  getAreaStyle: function (excludes, includes) {\n\t    return getAreaStyle(this, excludes, includes);\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 813:\n/***/ (function(module, exports) {\n\n\tvar _default = {\n\t  getBoxLayoutParams: function () {\n\t    return {\n\t      left: this.get('left'),\n\t      top: this.get('top'),\n\t      right: this.get('right'),\n\t      bottom: this.get('bottom'),\n\t      width: this.get('width'),\n\t      height: this.get('height')\n\t    };\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _model = __webpack_require__(11);\n\t\n\tvar makeInner = _model.makeInner;\n\tvar normalizeToArray = _model.normalizeToArray;\n\tvar inner = makeInner();\n\t\n\tfunction getNearestColorPalette(colors, requestColorNum) {\n\t  var paletteNum = colors.length; // TODO colors must be in order\n\t\n\t  for (var i = 0; i < paletteNum; i++) {\n\t    if (colors[i].length > requestColorNum) {\n\t      return colors[i];\n\t    }\n\t  }\n\t\n\t  return colors[paletteNum - 1];\n\t}\n\t\n\tvar _default = {\n\t  clearColorPalette: function () {\n\t    inner(this).colorIdx = 0;\n\t    inner(this).colorNameMap = {};\n\t  },\n\t  getColorFromPalette: function (name, scope, requestColorNum) {\n\t    scope = scope || this;\n\t    var scopeFields = inner(scope);\n\t    var colorIdx = scopeFields.colorIdx || 0;\n\t    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\t\n\t    if (colorNameMap.hasOwnProperty(name)) {\n\t      return colorNameMap[name];\n\t    }\n\t\n\t    var defaultColorPalette = normalizeToArray(this.get('color', true));\n\t    var layeredColorPalette = this.get('colorLayer', true);\n\t    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\t\n\t    colorPalette = colorPalette || defaultColorPalette;\n\t\n\t    if (!colorPalette || !colorPalette.length) {\n\t      return;\n\t    }\n\t\n\t    var color = colorPalette[colorIdx];\n\t\n\t    if (name) {\n\t      colorNameMap[name] = color;\n\t    }\n\t\n\t    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n\t    return color;\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 814:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _dataProvider = __webpack_require__(128);\n\t\n\tvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\t\n\tvar _format = __webpack_require__(44);\n\t\n\tvar getTooltipMarker = _format.getTooltipMarker;\n\tvar formatTpl = _format.formatTpl;\n\tvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\t\n\tvar _default = {\n\t  /**\n\t   * Get params for formatter\n\t   * @param {number} dataIndex\n\t   * @param {string} [dataType]\n\t   * @return {Object}\n\t   */\n\t  getDataParams: function (dataIndex, dataType) {\n\t    var data = this.getData(dataType);\n\t    var rawValue = this.getRawValue(dataIndex, dataType);\n\t    var rawDataIndex = data.getRawIndex(dataIndex);\n\t    var name = data.getName(dataIndex, true);\n\t    var itemOpt = data.getRawDataItem(dataIndex);\n\t    var color = data.getItemVisual(dataIndex, 'color');\n\t    return {\n\t      componentType: this.mainType,\n\t      componentSubType: this.subType,\n\t      seriesType: this.mainType === 'series' ? this.subType : null,\n\t      seriesIndex: this.seriesIndex,\n\t      seriesId: this.id,\n\t      seriesName: this.name,\n\t      name: name,\n\t      dataIndex: rawDataIndex,\n\t      data: itemOpt,\n\t      dataType: dataType,\n\t      value: rawValue,\n\t      color: color,\n\t      marker: getTooltipMarker(color),\n\t      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n\t      $vars: ['seriesName', 'name', 'value']\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Format label\n\t   * @param {number} dataIndex\n\t   * @param {string} [status='normal'] 'normal' or 'emphasis'\n\t   * @param {string} [dataType]\n\t   * @param {number} [dimIndex]\n\t   * @param {string} [labelProp='label']\n\t   * @return {string} If not formatter, return null/undefined\n\t   */\n\t  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n\t    status = status || 'normal';\n\t    var data = this.getData(dataType);\n\t    var itemModel = data.getItemModel(dataIndex);\n\t    var params = this.getDataParams(dataIndex, dataType);\n\t\n\t    if (dimIndex != null && params.value instanceof Array) {\n\t      params.value = params.value[dimIndex];\n\t    }\n\t\n\t    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\t\n\t    if (typeof formatter === 'function') {\n\t      params.status = status;\n\t      return formatter(params);\n\t    } else if (typeof formatter === 'string') {\n\t      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n\t      // Do not support '}' in dim name util have to.\n\t\n\t      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n\t        var len = dim.length;\n\t\n\t        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n\t          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n\t        }\n\t\n\t        return retrieveRawValue(data, dataIndex, dim);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get raw value in option\n\t   * @param {number} idx\n\t   * @param {string} [dataType]\n\t   * @return {Array|number|string}\n\t   */\n\t  getRawValue: function (idx, dataType) {\n\t    return retrieveRawValue(this.getData(dataType), idx);\n\t  },\n\t\n\t  /**\n\t   * Should be implemented.\n\t   * @param {number} dataIndex\n\t   * @param {boolean} [multipleSeries=false]\n\t   * @param {number} [dataType]\n\t   * @return {string} tooltip string\n\t   */\n\t  formatTooltip: function () {// Empty function\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 815:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar makeStyleMapper = __webpack_require__(271);\n\t\n\tvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\n\tvar _default = {\n\t  getItemStyle: function (excludes, includes) {\n\t    var style = getItemStyle(this, excludes, includes);\n\t    var lineDash = this.getBorderLineDash();\n\t    lineDash && (style.lineDash = lineDash);\n\t    return style;\n\t  },\n\t  getBorderLineDash: function () {\n\t    var lineType = this.get('borderType');\n\t    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 816:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar makeStyleMapper = __webpack_require__(271);\n\t\n\tvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\tvar _default = {\n\t  getLineStyle: function (excludes) {\n\t    var style = getLineStyle(this, excludes);\n\t    var lineDash = this.getLineDash(style.lineWidth);\n\t    lineDash && (style.lineDash = lineDash);\n\t    return style;\n\t  },\n\t  getLineDash: function (lineWidth) {\n\t    if (lineWidth == null) {\n\t      lineWidth = 1;\n\t    }\n\t\n\t    var lineType = this.get('type');\n\t    var dotSize = Math.max(lineWidth, 2);\n\t    var dashSize = lineWidth * 4;\n\t    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 271:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\t// TODO Parse shadow style\n\t// TODO Only shallow path support\n\tfunction _default(properties) {\n\t  // Normalize\n\t  for (var i = 0; i < properties.length; i++) {\n\t    if (!properties[i][1]) {\n\t      properties[i][1] = properties[i][0];\n\t    }\n\t  }\n\t\n\t  return function (model, excludes, includes) {\n\t    var style = {};\n\t\n\t    for (var i = 0; i < properties.length; i++) {\n\t      var propName = properties[i][1];\n\t\n\t      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n\t        continue;\n\t      }\n\t\n\t      var val = model.getShallow(propName);\n\t\n\t      if (val != null) {\n\t        style[properties[i][0]] = val;\n\t      }\n\t    }\n\t\n\t    return style;\n\t  };\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar textContain = __webpack_require__(113);\n\t\n\tvar graphicUtil = __webpack_require__(18);\n\t\n\tvar PATH_COLOR = ['textStyle', 'color'];\n\tvar _default = {\n\t  /**\n\t   * Get color property or get color from option.textStyle.color\n\t   * @param {boolean} [isEmphasis]\n\t   * @return {string}\n\t   */\n\t  getTextColor: function (isEmphasis) {\n\t    var ecModel = this.ecModel;\n\t    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n\t  },\n\t\n\t  /**\n\t   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n\t   * @return {string}\n\t   */\n\t  getFont: function () {\n\t    return graphicUtil.getFont({\n\t      fontStyle: this.getShallow('fontStyle'),\n\t      fontWeight: this.getShallow('fontWeight'),\n\t      fontSize: this.getShallow('fontSize'),\n\t      fontFamily: this.getShallow('fontFamily')\n\t    }, this.ecModel);\n\t  },\n\t  getTextRect: function (text) {\n\t    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar createHashMap = _util.createHashMap;\n\tvar retrieve = _util.retrieve;\n\tvar each = _util.each;\n\t\n\t/**\n\t * Helper for model references.\n\t * There are many manners to refer axis/coordSys.\n\t */\n\t// TODO\n\t// merge relevant logic to this file?\n\t// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\t\n\t/**\n\t * @return {Object} For example:\n\t * {\n\t *     coordSysName: 'cartesian2d',\n\t *     coordSysDims: ['x', 'y', ...],\n\t *     axisMap: HashMap({\n\t *         x: xAxisModel,\n\t *         y: yAxisModel\n\t *     }),\n\t *     categoryAxisMap: HashMap({\n\t *         x: xAxisModel,\n\t *         y: undefined\n\t *     }),\n\t *     // It also indicate that whether there is category axis.\n\t *     firstCategoryDimIndex: 1,\n\t *     // To replace user specified encode.\n\t * }\n\t */\n\tfunction getCoordSysDefineBySeries(seriesModel) {\n\t  var coordSysName = seriesModel.get('coordinateSystem');\n\t  var result = {\n\t    coordSysName: coordSysName,\n\t    coordSysDims: [],\n\t    axisMap: createHashMap(),\n\t    categoryAxisMap: createHashMap()\n\t  };\n\t  var fetch = fetchers[coordSysName];\n\t\n\t  if (fetch) {\n\t    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n\t    return result;\n\t  }\n\t}\n\t\n\tvar fetchers = {\n\t  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n\t    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n\t    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n\t    result.coordSysDims = ['x', 'y'];\n\t    axisMap.set('x', xAxisModel);\n\t    axisMap.set('y', yAxisModel);\n\t\n\t    if (isCategory(xAxisModel)) {\n\t      categoryAxisMap.set('x', xAxisModel);\n\t      result.firstCategoryDimIndex = 0;\n\t    }\n\t\n\t    if (isCategory(yAxisModel)) {\n\t      categoryAxisMap.set('y', yAxisModel);\n\t      result.firstCategoryDimIndex = 1;\n\t    }\n\t  },\n\t  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n\t    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n\t    result.coordSysDims = ['single'];\n\t    axisMap.set('single', singleAxisModel);\n\t\n\t    if (isCategory(singleAxisModel)) {\n\t      categoryAxisMap.set('single', singleAxisModel);\n\t      result.firstCategoryDimIndex = 0;\n\t    }\n\t  },\n\t  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n\t    var polarModel = seriesModel.getReferringComponents('polar')[0];\n\t    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\t    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n\t    result.coordSysDims = ['radius', 'angle'];\n\t    axisMap.set('radius', radiusAxisModel);\n\t    axisMap.set('angle', angleAxisModel);\n\t\n\t    if (isCategory(radiusAxisModel)) {\n\t      categoryAxisMap.set('radius', radiusAxisModel);\n\t      result.firstCategoryDimIndex = 0;\n\t    }\n\t\n\t    if (isCategory(angleAxisModel)) {\n\t      categoryAxisMap.set('angle', angleAxisModel);\n\t      result.firstCategoryDimIndex = 1;\n\t    }\n\t  },\n\t  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n\t    result.coordSysDims = ['lng', 'lat'];\n\t  },\n\t  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n\t    var ecModel = seriesModel.ecModel;\n\t    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\t    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n\t    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n\t      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\t      var axisDim = coordSysDims[index];\n\t      axisMap.set(axisDim, axisModel);\n\t\n\t      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n\t        categoryAxisMap.set(axisDim, axisModel);\n\t        result.firstCategoryDimIndex = index;\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\tfunction isCategory(axisModel) {\n\t  return axisModel.get('type') === 'category';\n\t}\n\t\n\texports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n/***/ }),\n\n/***/ 818:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar each = _util.each;\n\tvar isArray = _util.isArray;\n\tvar isObject = _util.isObject;\n\t\n\tvar compatStyle = __webpack_require__(819);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar normalizeToArray = _model.normalizeToArray;\n\t\n\t// Compatitable with 2.0\n\tfunction get(opt, path) {\n\t  path = path.split(',');\n\t  var obj = opt;\n\t\n\t  for (var i = 0; i < path.length; i++) {\n\t    obj = obj && obj[path[i]];\n\t\n\t    if (obj == null) {\n\t      break;\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\tfunction set(opt, path, val, overwrite) {\n\t  path = path.split(',');\n\t  var obj = opt;\n\t  var key;\n\t\n\t  for (var i = 0; i < path.length - 1; i++) {\n\t    key = path[i];\n\t\n\t    if (obj[key] == null) {\n\t      obj[key] = {};\n\t    }\n\t\n\t    obj = obj[key];\n\t  }\n\t\n\t  if (overwrite || obj[path[i]] == null) {\n\t    obj[path[i]] = val;\n\t  }\n\t}\n\t\n\tfunction compatLayoutProperties(option) {\n\t  each(LAYOUT_PROPERTIES, function (prop) {\n\t    if (prop[0] in option && !(prop[1] in option)) {\n\t      option[prop[1]] = option[prop[0]];\n\t    }\n\t  });\n\t}\n\t\n\tvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\n\tvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\t\n\tfunction _default(option, isTheme) {\n\t  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\t\n\t  option.series = normalizeToArray(option.series);\n\t  each(option.series, function (seriesOpt) {\n\t    if (!isObject(seriesOpt)) {\n\t      return;\n\t    }\n\t\n\t    var seriesType = seriesOpt.type;\n\t\n\t    if (seriesType === 'pie' || seriesType === 'gauge') {\n\t      if (seriesOpt.clockWise != null) {\n\t        seriesOpt.clockwise = seriesOpt.clockWise;\n\t      }\n\t    }\n\t\n\t    if (seriesType === 'gauge') {\n\t      var pointerColor = get(seriesOpt, 'pointer.color');\n\t      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n\t    }\n\t\n\t    compatLayoutProperties(seriesOpt);\n\t  }); // dataRange has changed to visualMap\n\t\n\t  if (option.dataRange) {\n\t    option.visualMap = option.dataRange;\n\t  }\n\t\n\t  each(COMPATITABLE_COMPONENTS, function (componentName) {\n\t    var options = option[componentName];\n\t\n\t    if (options) {\n\t      if (!isArray(options)) {\n\t        options = [options];\n\t      }\n\t\n\t      each(options, function (option) {\n\t        compatLayoutProperties(option);\n\t      });\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 819:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\tvar each = zrUtil.each;\n\tvar isObject = zrUtil.isObject;\n\tvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\t\n\tfunction compatEC2ItemStyle(opt) {\n\t  var itemStyleOpt = opt && opt.itemStyle;\n\t\n\t  if (!itemStyleOpt) {\n\t    return;\n\t  }\n\t\n\t  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n\t    var styleName = POSSIBLE_STYLES[i];\n\t    var normalItemStyleOpt = itemStyleOpt.normal;\n\t    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\t\n\t    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n\t      opt[styleName] = opt[styleName] || {};\n\t\n\t      if (!opt[styleName].normal) {\n\t        opt[styleName].normal = normalItemStyleOpt[styleName];\n\t      } else {\n\t        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n\t      }\n\t\n\t      normalItemStyleOpt[styleName] = null;\n\t    }\n\t\n\t    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n\t      opt[styleName] = opt[styleName] || {};\n\t\n\t      if (!opt[styleName].emphasis) {\n\t        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n\t      } else {\n\t        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n\t      }\n\t\n\t      emphasisItemStyleOpt[styleName] = null;\n\t    }\n\t  }\n\t}\n\t\n\tfunction convertNormalEmphasis(opt, optType, useExtend) {\n\t  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n\t    var normalOpt = opt[optType].normal;\n\t    var emphasisOpt = opt[optType].emphasis;\n\t\n\t    if (normalOpt) {\n\t      // Timeline controlStyle has other properties besides normal and emphasis\n\t      if (useExtend) {\n\t        opt[optType].normal = opt[optType].emphasis = null;\n\t        zrUtil.defaults(opt[optType], normalOpt);\n\t      } else {\n\t        opt[optType] = normalOpt;\n\t      }\n\t    }\n\t\n\t    if (emphasisOpt) {\n\t      opt.emphasis = opt.emphasis || {};\n\t      opt.emphasis[optType] = emphasisOpt;\n\t    }\n\t  }\n\t}\n\t\n\tfunction removeEC3NormalStatus(opt) {\n\t  convertNormalEmphasis(opt, 'itemStyle');\n\t  convertNormalEmphasis(opt, 'lineStyle');\n\t  convertNormalEmphasis(opt, 'areaStyle');\n\t  convertNormalEmphasis(opt, 'label');\n\t  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\t\n\t  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\t\n\t  convertNormalEmphasis(opt, 'edgeLabel');\n\t}\n\t\n\tfunction compatTextStyle(labelOpt) {\n\t  var textStyle = isObject(labelOpt) && labelOpt.textStyle;\n\t\n\t  if (textStyle) {\n\t    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n\t      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\t\n\t      if (textStyle.hasOwnProperty(propName)) {\n\t        labelOpt[propName] = textStyle[propName];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction compatEC3CommonStyles(opt) {\n\t  if (opt) {\n\t    removeEC3NormalStatus(opt);\n\t    compatTextStyle(opt.label);\n\t    opt.emphasis && compatTextStyle(opt.emphasis.label);\n\t  }\n\t}\n\t\n\tfunction processSeries(seriesOpt) {\n\t  if (!isObject(seriesOpt)) {\n\t    return;\n\t  }\n\t\n\t  compatEC2ItemStyle(seriesOpt);\n\t  removeEC3NormalStatus(seriesOpt);\n\t  compatTextStyle(seriesOpt.label); // treemap\n\t\n\t  compatTextStyle(seriesOpt.upperLabel); // graph\n\t\n\t  compatTextStyle(seriesOpt.edgeLabel);\n\t\n\t  if (seriesOpt.emphasis) {\n\t    compatTextStyle(seriesOpt.emphasis.label); // treemap\n\t\n\t    compatTextStyle(seriesOpt.emphasis.upperLabel); // graph\n\t\n\t    compatTextStyle(seriesOpt.emphasis.edgeLabel);\n\t  }\n\t\n\t  var markPoint = seriesOpt.markPoint;\n\t\n\t  if (markPoint) {\n\t    compatEC2ItemStyle(markPoint);\n\t    compatEC3CommonStyles(markPoint);\n\t  }\n\t\n\t  var markLine = seriesOpt.markLine;\n\t\n\t  if (markLine) {\n\t    compatEC2ItemStyle(markLine);\n\t    compatEC3CommonStyles(markLine);\n\t  }\n\t\n\t  var markArea = seriesOpt.markArea;\n\t\n\t  if (markArea) {\n\t    compatEC3CommonStyles(markArea);\n\t  }\n\t\n\t  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n\t  // then the backward compat based on option type will not be performed.\n\t\n\t  if (seriesOpt.type === 'graph') {\n\t    data = data || seriesOpt.nodes;\n\t    var edgeData = seriesOpt.links || seriesOpt.edges;\n\t\n\t    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n\t      for (var i = 0; i < edgeData.length; i++) {\n\t        compatEC3CommonStyles(edgeData[i]);\n\t      }\n\t    }\n\t\n\t    zrUtil.each(seriesOpt.categories, function (opt) {\n\t      removeEC3NormalStatus(opt);\n\t    });\n\t  }\n\t\n\t  if (data && !zrUtil.isTypedArray(data)) {\n\t    for (var i = 0; i < data.length; i++) {\n\t      compatEC3CommonStyles(data[i]);\n\t    }\n\t  } // mark point data\n\t\n\t\n\t  var markPoint = seriesOpt.markPoint;\n\t\n\t  if (markPoint && markPoint.data) {\n\t    var mpData = markPoint.data;\n\t\n\t    for (var i = 0; i < mpData.length; i++) {\n\t      compatEC3CommonStyles(mpData[i]);\n\t    }\n\t  } // mark line data\n\t\n\t\n\t  var markLine = seriesOpt.markLine;\n\t\n\t  if (markLine && markLine.data) {\n\t    var mlData = markLine.data;\n\t\n\t    for (var i = 0; i < mlData.length; i++) {\n\t      if (zrUtil.isArray(mlData[i])) {\n\t        compatEC3CommonStyles(mlData[i][0]);\n\t        compatEC3CommonStyles(mlData[i][1]);\n\t      } else {\n\t        compatEC3CommonStyles(mlData[i]);\n\t      }\n\t    }\n\t  } // Series\n\t\n\t\n\t  if (seriesOpt.type === 'gauge') {\n\t    compatTextStyle(seriesOpt, 'axisLabel');\n\t    compatTextStyle(seriesOpt, 'title');\n\t    compatTextStyle(seriesOpt, 'detail');\n\t  } else if (seriesOpt.type === 'treemap') {\n\t    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n\t    zrUtil.each(seriesOpt.levels, function (opt) {\n\t      removeEC3NormalStatus(opt);\n\t    });\n\t  } // sunburst starts from ec4, so it does not need to compat levels.\n\t\n\t}\n\t\n\tfunction toArr(o) {\n\t  return zrUtil.isArray(o) ? o : o ? [o] : [];\n\t}\n\t\n\tfunction toObj(o) {\n\t  return (zrUtil.isArray(o) ? o[0] : o) || {};\n\t}\n\t\n\tfunction _default(option, isTheme) {\n\t  each(toArr(option.series), function (seriesOpt) {\n\t    isObject(seriesOpt) && processSeries(seriesOpt);\n\t  });\n\t  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n\t  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\t  each(axes, function (axisName) {\n\t    each(toArr(option[axisName]), function (axisOpt) {\n\t      if (axisOpt) {\n\t        compatTextStyle(axisOpt, 'axisLabel');\n\t        compatTextStyle(axisOpt.axisPointer, 'label');\n\t      }\n\t    });\n\t  });\n\t  each(toArr(option.parallel), function (parallelOpt) {\n\t    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n\t    compatTextStyle(parallelAxisDefault, 'axisLabel');\n\t    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n\t  });\n\t  each(toArr(option.calendar), function (calendarOpt) {\n\t    convertNormalEmphasis(calendarOpt, 'itemStyle');\n\t    compatTextStyle(calendarOpt, 'dayLabel');\n\t    compatTextStyle(calendarOpt, 'monthLabel');\n\t    compatTextStyle(calendarOpt, 'yearLabel');\n\t  }); // radar.name.textStyle\n\t\n\t  each(toArr(option.radar), function (radarOpt) {\n\t    compatTextStyle(radarOpt, 'name');\n\t  });\n\t  each(toArr(option.geo), function (geoOpt) {\n\t    if (isObject(geoOpt)) {\n\t      compatEC3CommonStyles(geoOpt);\n\t      each(toArr(geoOpt.regions), function (regionObj) {\n\t        compatEC3CommonStyles(regionObj);\n\t      });\n\t    }\n\t  });\n\t  each(toArr(option.timeline), function (timelineOpt) {\n\t    compatEC3CommonStyles(timelineOpt);\n\t    convertNormalEmphasis(timelineOpt, 'label');\n\t    convertNormalEmphasis(timelineOpt, 'itemStyle');\n\t    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n\t    convertNormalEmphasis(timelineOpt, 'checkpointStyle');\n\t    var data = timelineOpt.data;\n\t    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n\t      if (zrUtil.isObject(item)) {\n\t        convertNormalEmphasis(item, 'label');\n\t        convertNormalEmphasis(item, 'itemStyle');\n\t      }\n\t    });\n\t  });\n\t  each(toArr(option.toolbox), function (toolboxOpt) {\n\t    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n\t    each(toolboxOpt.feature, function (featureOpt) {\n\t      convertNormalEmphasis(featureOpt, 'iconStyle');\n\t    });\n\t  });\n\t  compatTextStyle(toObj(option.axisPointer), 'label');\n\t  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 272:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar numberUtil = __webpack_require__(22);\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\tvar Scale = __webpack_require__(193);\n\t\n\tvar helper = __webpack_require__(427);\n\t\n\t/**\n\t * Interval scale\n\t * @module echarts/scale/Interval\n\t */\n\tvar roundNumber = numberUtil.round;\n\t/**\n\t * @alias module:echarts/coord/scale/Interval\n\t * @constructor\n\t */\n\t\n\tvar IntervalScale = Scale.extend({\n\t  type: 'interval',\n\t  _interval: 0,\n\t  _intervalPrecision: 2,\n\t  setExtent: function (start, end) {\n\t    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\t\n\t    if (!isNaN(start)) {\n\t      thisExtent[0] = parseFloat(start);\n\t    }\n\t\n\t    if (!isNaN(end)) {\n\t      thisExtent[1] = parseFloat(end);\n\t    }\n\t  },\n\t  unionExtent: function (other) {\n\t    var extent = this._extent;\n\t    other[0] < extent[0] && (extent[0] = other[0]);\n\t    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\t\n\t    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n\t  },\n\t\n\t  /**\n\t   * Get interval\n\t   */\n\t  getInterval: function () {\n\t    return this._interval;\n\t  },\n\t\n\t  /**\n\t   * Set interval\n\t   */\n\t  setInterval: function (interval) {\n\t    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n\t    // We assume user wan't to set both interval, min, max to get a better result\n\t\n\t    this._niceExtent = this._extent.slice();\n\t    this._intervalPrecision = helper.getIntervalPrecision(interval);\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<number>}\n\t   */\n\t  getTicks: function () {\n\t    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<string>}\n\t   */\n\t  getTicksLabels: function () {\n\t    var labels = [];\n\t    var ticks = this.getTicks();\n\t\n\t    for (var i = 0; i < ticks.length; i++) {\n\t      labels.push(this.getLabel(ticks[i]));\n\t    }\n\t\n\t    return labels;\n\t  },\n\t\n\t  /**\n\t   * @param {number} data\n\t   * @param {Object} [opt]\n\t   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n\t   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n\t   * @return {string}\n\t   */\n\t  getLabel: function (data, opt) {\n\t    if (data == null) {\n\t      return '';\n\t    }\n\t\n\t    var precision = opt && opt.precision;\n\t\n\t    if (precision == null) {\n\t      precision = numberUtil.getPrecisionSafe(data) || 0;\n\t    } else if (precision === 'auto') {\n\t      // Should be more precise then tick.\n\t      precision = this._intervalPrecision;\n\t    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n\t    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\t\n\t\n\t    data = roundNumber(data, precision, true);\n\t    return formatUtil.addCommas(data);\n\t  },\n\t\n\t  /**\n\t   * Update interval and extent of intervals for nice ticks\n\t   *\n\t   * @param {number} [splitNumber = 5] Desired number of ticks\n\t   * @param {number} [minInterval]\n\t   * @param {number} [maxInterval]\n\t   */\n\t  niceTicks: function (splitNumber, minInterval, maxInterval) {\n\t    splitNumber = splitNumber || 5;\n\t    var extent = this._extent;\n\t    var span = extent[1] - extent[0];\n\t\n\t    if (!isFinite(span)) {\n\t      return;\n\t    } // User may set axis min 0 and data are all negative\n\t    // FIXME If it needs to reverse ?\n\t\n\t\n\t    if (span < 0) {\n\t      span = -span;\n\t      extent.reverse();\n\t    }\n\t\n\t    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n\t    this._intervalPrecision = result.intervalPrecision;\n\t    this._interval = result.interval;\n\t    this._niceExtent = result.niceTickExtent;\n\t  },\n\t\n\t  /**\n\t   * Nice extent.\n\t   * @param {Object} opt\n\t   * @param {number} [opt.splitNumber = 5] Given approx tick number\n\t   * @param {boolean} [opt.fixMin=false]\n\t   * @param {boolean} [opt.fixMax=false]\n\t   * @param {boolean} [opt.minInterval]\n\t   * @param {boolean} [opt.maxInterval]\n\t   */\n\t  niceExtent: function (opt) {\n\t    var extent = this._extent; // If extent start and end are same, expand them\n\t\n\t    if (extent[0] === extent[1]) {\n\t      if (extent[0] !== 0) {\n\t        // Expand extent\n\t        var expandSize = extent[0]; // In the fowllowing case\n\t        //      Axis has been fixed max 100\n\t        //      Plus data are all 100 and axis extent are [100, 100].\n\t        // Extend to the both side will cause expanded max is larger than fixed max.\n\t        // So only expand to the smaller side.\n\t\n\t        if (!opt.fixMax) {\n\t          extent[1] += expandSize / 2;\n\t          extent[0] -= expandSize / 2;\n\t        } else {\n\t          extent[0] -= expandSize / 2;\n\t        }\n\t      } else {\n\t        extent[1] = 1;\n\t      }\n\t    }\n\t\n\t    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\t\n\t    if (!isFinite(span)) {\n\t      extent[0] = 0;\n\t      extent[1] = 1;\n\t    }\n\t\n\t    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\t\n\t    var interval = this._interval;\n\t\n\t    if (!opt.fixMin) {\n\t      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n\t    }\n\t\n\t    if (!opt.fixMax) {\n\t      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n\t    }\n\t  }\n\t});\n\t/**\n\t * @return {module:echarts/scale/Time}\n\t */\n\t\n\tIntervalScale.create = function () {\n\t  return new IntervalScale();\n\t};\n\t\n\tvar _default = IntervalScale;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 820:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Scale = __webpack_require__(193);\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\tvar IntervalScale = __webpack_require__(272);\n\t\n\t/**\n\t * Log scale\n\t * @module echarts/scale/Log\n\t */\n\t// Use some method of IntervalScale\n\tvar scaleProto = Scale.prototype;\n\tvar intervalScaleProto = IntervalScale.prototype;\n\tvar getPrecisionSafe = numberUtil.getPrecisionSafe;\n\tvar roundingErrorFix = numberUtil.round;\n\tvar mathFloor = Math.floor;\n\tvar mathCeil = Math.ceil;\n\tvar mathPow = Math.pow;\n\tvar mathLog = Math.log;\n\tvar LogScale = Scale.extend({\n\t  type: 'log',\n\t  base: 10,\n\t  $constructor: function () {\n\t    Scale.apply(this, arguments);\n\t    this._originalScale = new IntervalScale();\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<number>}\n\t   */\n\t  getTicks: function () {\n\t    var originalScale = this._originalScale;\n\t    var extent = this._extent;\n\t    var originalExtent = originalScale.getExtent();\n\t    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n\t      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\t\n\t      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n\t      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n\t      return powVal;\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * @param {number} val\n\t   * @return {string}\n\t   */\n\t  getLabel: intervalScaleProto.getLabel,\n\t\n\t  /**\n\t   * @param  {number} val\n\t   * @return {number}\n\t   */\n\t  scale: function (val) {\n\t    val = scaleProto.scale.call(this, val);\n\t    return mathPow(this.base, val);\n\t  },\n\t\n\t  /**\n\t   * @param {number} start\n\t   * @param {number} end\n\t   */\n\t  setExtent: function (start, end) {\n\t    var base = this.base;\n\t    start = mathLog(start) / mathLog(base);\n\t    end = mathLog(end) / mathLog(base);\n\t    intervalScaleProto.setExtent.call(this, start, end);\n\t  },\n\t\n\t  /**\n\t   * @return {number} end\n\t   */\n\t  getExtent: function () {\n\t    var base = this.base;\n\t    var extent = scaleProto.getExtent.call(this);\n\t    extent[0] = mathPow(base, extent[0]);\n\t    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\t\n\t    var originalScale = this._originalScale;\n\t    var originalExtent = originalScale.getExtent();\n\t    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n\t    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\t    return extent;\n\t  },\n\t\n\t  /**\n\t   * @param  {Array.<number>} extent\n\t   */\n\t  unionExtent: function (extent) {\n\t    this._originalScale.unionExtent(extent);\n\t\n\t    var base = this.base;\n\t    extent[0] = mathLog(extent[0]) / mathLog(base);\n\t    extent[1] = mathLog(extent[1]) / mathLog(base);\n\t    scaleProto.unionExtent.call(this, extent);\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  unionExtentFromData: function (data, dim) {\n\t    this.unionExtent(data.getApproximateExtent(dim, true, function (val) {\n\t      return val > 0;\n\t    }));\n\t  },\n\t\n\t  /**\n\t   * Update interval and extent of intervals for nice ticks\n\t   * @param  {number} [approxTickNum = 10] Given approx tick number\n\t   */\n\t  niceTicks: function (approxTickNum) {\n\t    approxTickNum = approxTickNum || 10;\n\t    var extent = this._extent;\n\t    var span = extent[1] - extent[0];\n\t\n\t    if (span === Infinity || span <= 0) {\n\t      return;\n\t    }\n\t\n\t    var interval = numberUtil.quantity(span);\n\t    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\t\n\t    if (err <= 0.5) {\n\t      interval *= 10;\n\t    } // Interval should be integer\n\t\n\t\n\t    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n\t      interval *= 10;\n\t    }\n\t\n\t    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n\t    this._interval = interval;\n\t    this._niceExtent = niceExtent;\n\t  },\n\t\n\t  /**\n\t   * Nice extent.\n\t   * @override\n\t   */\n\t  niceExtent: function (opt) {\n\t    intervalScaleProto.niceExtent.call(this, opt);\n\t    var originalScale = this._originalScale;\n\t    originalScale.__fixMin = opt.fixMin;\n\t    originalScale.__fixMax = opt.fixMax;\n\t  }\n\t});\n\tzrUtil.each(['contain', 'normalize'], function (methodName) {\n\t  LogScale.prototype[methodName] = function (val) {\n\t    val = mathLog(val) / mathLog(this.base);\n\t    return scaleProto[methodName].call(this, val);\n\t  };\n\t});\n\t\n\tLogScale.create = function () {\n\t  return new LogScale();\n\t};\n\t\n\tfunction fixRoundingError(val, originalVal) {\n\t  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n\t}\n\t\n\tvar _default = LogScale;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 821:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Scale = __webpack_require__(193);\n\t\n\tvar OrdinalMeta = __webpack_require__(422);\n\t\n\t/**\n\t * Linear continuous scale\n\t * @module echarts/coord/scale/Ordinal\n\t *\n\t * http://en.wikipedia.org/wiki/Level_of_measurement\n\t */\n\t// FIXME only one data\n\tvar scaleProto = Scale.prototype;\n\tvar OrdinalScale = Scale.extend({\n\t  type: 'ordinal',\n\t\n\t  /**\n\t   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n\t   */\n\t  init: function (ordinalMeta, extent) {\n\t    // Caution: Should not use instanceof, consider ec-extensions using\n\t    // import approach to get OrdinalMeta class.\n\t    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n\t      ordinalMeta = new OrdinalMeta({\n\t        categories: ordinalMeta\n\t      });\n\t    }\n\t\n\t    this._ordinalMeta = ordinalMeta;\n\t    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n\t  },\n\t  parse: function (val) {\n\t    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n\t    : Math.round(val);\n\t  },\n\t  contain: function (rank) {\n\t    rank = this.parse(rank);\n\t    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n\t  },\n\t\n\t  /**\n\t   * Normalize given rank or name to linear [0, 1]\n\t   * @param {number|string} [val]\n\t   * @return {number}\n\t   */\n\t  normalize: function (val) {\n\t    return scaleProto.normalize.call(this, this.parse(val));\n\t  },\n\t  scale: function (val) {\n\t    return Math.round(scaleProto.scale.call(this, val));\n\t  },\n\t\n\t  /**\n\t   * @return {Array}\n\t   */\n\t  getTicks: function () {\n\t    var ticks = [];\n\t    var extent = this._extent;\n\t    var rank = extent[0];\n\t\n\t    while (rank <= extent[1]) {\n\t      ticks.push(rank);\n\t      rank++;\n\t    }\n\t\n\t    return ticks;\n\t  },\n\t\n\t  /**\n\t   * Get item on rank n\n\t   * @param {number} n\n\t   * @return {string}\n\t   */\n\t  getLabel: function (n) {\n\t    return this._ordinalMeta.categories[n];\n\t  },\n\t\n\t  /**\n\t   * @return {number}\n\t   */\n\t  count: function () {\n\t    return this._extent[1] - this._extent[0] + 1;\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  unionExtentFromData: function (data, dim) {\n\t    this.unionExtent(data.getApproximateExtent(dim, false));\n\t  },\n\t  niceTicks: zrUtil.noop,\n\t  niceExtent: zrUtil.noop\n\t});\n\t/**\n\t * @return {module:echarts/scale/Time}\n\t */\n\t\n\tOrdinalScale.create = function () {\n\t  return new OrdinalScale();\n\t};\n\t\n\tvar _default = OrdinalScale;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 193:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar clazzUtil = __webpack_require__(56);\n\t\n\t/**\n\t * // Scale class management\n\t * @module echarts/scale/Scale\n\t */\n\t\n\t/**\n\t * @param {Object} [setting]\n\t */\n\tfunction Scale(setting) {\n\t  this._setting = setting || {};\n\t  /**\n\t   * Extent\n\t   * @type {Array.<number>}\n\t   * @protected\n\t   */\n\t\n\t  this._extent = [Infinity, -Infinity];\n\t  /**\n\t   * Step is calculated in adjustExtent\n\t   * @type {Array.<number>}\n\t   * @protected\n\t   */\n\t\n\t  this._interval = 0;\n\t  this.init && this.init.apply(this, arguments);\n\t}\n\t/**\n\t * Parse input val to valid inner number.\n\t * @param {*} val\n\t * @return {number}\n\t */\n\t\n\t\n\tScale.prototype.parse = function (val) {\n\t  // Notice: This would be a trap here, If the implementation\n\t  // of this method depends on extent, and this method is used\n\t  // before extent set (like in dataZoom), it would be wrong.\n\t  // Nevertheless, parse does not depend on extent generally.\n\t  return val;\n\t};\n\t\n\tScale.prototype.getSetting = function (name) {\n\t  return this._setting[name];\n\t};\n\t\n\tScale.prototype.contain = function (val) {\n\t  var extent = this._extent;\n\t  return val >= extent[0] && val <= extent[1];\n\t};\n\t/**\n\t * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n\t * @param {number} val\n\t * @return {number}\n\t */\n\t\n\t\n\tScale.prototype.normalize = function (val) {\n\t  var extent = this._extent;\n\t\n\t  if (extent[1] === extent[0]) {\n\t    return 0.5;\n\t  }\n\t\n\t  return (val - extent[0]) / (extent[1] - extent[0]);\n\t};\n\t/**\n\t * Scale normalized value\n\t * @param {number} val\n\t * @return {number}\n\t */\n\t\n\t\n\tScale.prototype.scale = function (val) {\n\t  var extent = this._extent;\n\t  return val * (extent[1] - extent[0]) + extent[0];\n\t};\n\t/**\n\t * Set extent from data\n\t * @param {Array.<number>} other\n\t */\n\t\n\t\n\tScale.prototype.unionExtent = function (other) {\n\t  var extent = this._extent;\n\t  other[0] < extent[0] && (extent[0] = other[0]);\n\t  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n\t  // this.setExtent(extent[0], extent[1]);\n\t};\n\t/**\n\t * Set extent from data\n\t * @param {module:echarts/data/List} data\n\t * @param {string} dim\n\t */\n\t\n\t\n\tScale.prototype.unionExtentFromData = function (data, dim) {\n\t  this.unionExtent(data.getApproximateExtent(dim, true));\n\t};\n\t/**\n\t * Get extent\n\t * @return {Array.<number>}\n\t */\n\t\n\t\n\tScale.prototype.getExtent = function () {\n\t  return this._extent.slice();\n\t};\n\t/**\n\t * Set extent\n\t * @param {number} start\n\t * @param {number} end\n\t */\n\t\n\t\n\tScale.prototype.setExtent = function (start, end) {\n\t  var thisExtent = this._extent;\n\t\n\t  if (!isNaN(start)) {\n\t    thisExtent[0] = start;\n\t  }\n\t\n\t  if (!isNaN(end)) {\n\t    thisExtent[1] = end;\n\t  }\n\t};\n\t/**\n\t * @return {Array.<string>}\n\t */\n\t\n\t\n\tScale.prototype.getTicksLabels = function () {\n\t  var labels = [];\n\t  var ticks = this.getTicks();\n\t\n\t  for (var i = 0; i < ticks.length; i++) {\n\t    labels.push(this.getLabel(ticks[i]));\n\t  }\n\t\n\t  return labels;\n\t};\n\t/**\n\t * When axis extent depends on data and no data exists,\n\t * axis ticks should not be drawn, which is named 'blank'.\n\t */\n\t\n\t\n\tScale.prototype.isBlank = function () {\n\t  return this._isBlank;\n\t},\n\t/**\n\t * When axis extent depends on data and no data exists,\n\t * axis ticks should not be drawn, which is named 'blank'.\n\t */\n\tScale.prototype.setBlank = function (isBlank) {\n\t  this._isBlank = isBlank;\n\t};\n\tclazzUtil.enableClassExtend(Scale);\n\tclazzUtil.enableClassManagement(Scale, {\n\t  registerWhenExtend: true\n\t});\n\tvar _default = Scale;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 822:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\tvar scaleHelper = __webpack_require__(427);\n\t\n\tvar IntervalScale = __webpack_require__(272);\n\t\n\t// [About UTC and local time zone]:\n\t// In most cases, `number.parseDate` will treat input data string as local time\n\t// (except time zone is specified in time string). And `format.formateTime` returns\n\t// local time by default. option.useUTC is false by default. This design have\n\t// concidered these common case:\n\t// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n\t// in local time by default.\n\t// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n\t// as its original time, without any time difference.\n\tvar intervalScaleProto = IntervalScale.prototype;\n\tvar mathCeil = Math.ceil;\n\tvar mathFloor = Math.floor;\n\tvar ONE_SECOND = 1000;\n\tvar ONE_MINUTE = ONE_SECOND * 60;\n\tvar ONE_HOUR = ONE_MINUTE * 60;\n\tvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\t\n\tvar bisect = function (a, x, lo, hi) {\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t\n\t    if (a[mid][1] < x) {\n\t      lo = mid + 1;\n\t    } else {\n\t      hi = mid;\n\t    }\n\t  }\n\t\n\t  return lo;\n\t};\n\t/**\n\t * @alias module:echarts/coord/scale/Time\n\t * @constructor\n\t */\n\t\n\t\n\tvar TimeScale = IntervalScale.extend({\n\t  type: 'time',\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  getLabel: function (val) {\n\t    var stepLvl = this._stepLvl;\n\t    var date = new Date(val);\n\t    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  niceExtent: function (opt) {\n\t    var extent = this._extent; // If extent start and end are same, expand them\n\t\n\t    if (extent[0] === extent[1]) {\n\t      // Expand extent\n\t      extent[0] -= ONE_DAY;\n\t      extent[1] += ONE_DAY;\n\t    } // If there are no data and extent are [Infinity, -Infinity]\n\t\n\t\n\t    if (extent[1] === -Infinity && extent[0] === Infinity) {\n\t      var d = new Date();\n\t      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n\t      extent[0] = extent[1] - ONE_DAY;\n\t    }\n\t\n\t    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\t\n\t    var interval = this._interval;\n\t\n\t    if (!opt.fixMin) {\n\t      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n\t    }\n\t\n\t    if (!opt.fixMax) {\n\t      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @override\n\t   */\n\t  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n\t    approxTickNum = approxTickNum || 10;\n\t    var extent = this._extent;\n\t    var span = extent[1] - extent[0];\n\t    var approxInterval = span / approxTickNum;\n\t\n\t    if (minInterval != null && approxInterval < minInterval) {\n\t      approxInterval = minInterval;\n\t    }\n\t\n\t    if (maxInterval != null && approxInterval > maxInterval) {\n\t      approxInterval = maxInterval;\n\t    }\n\t\n\t    var scaleLevelsLen = scaleLevels.length;\n\t    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\t    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n\t    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\t\n\t    if (level[0] === 'year') {\n\t      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n\t      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\t\n\t      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\t      interval *= yearStep;\n\t    }\n\t\n\t    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n\t    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n\t    scaleHelper.fixExtent(niceExtent, extent);\n\t    this._stepLvl = level; // Interval will be used in getTicks\n\t\n\t    this._interval = interval;\n\t    this._niceExtent = niceExtent;\n\t  },\n\t  parse: function (val) {\n\t    // val might be float.\n\t    return +numberUtil.parseDate(val);\n\t  }\n\t});\n\tzrUtil.each(['contain', 'normalize'], function (methodName) {\n\t  TimeScale.prototype[methodName] = function (val) {\n\t    return intervalScaleProto[methodName].call(this, this.parse(val));\n\t  };\n\t}); // Steps from d3\n\t\n\tvar scaleLevels = [// Format              interval\n\t['hh:mm:ss', ONE_SECOND], // 1s\n\t['hh:mm:ss', ONE_SECOND * 5], // 5s\n\t['hh:mm:ss', ONE_SECOND * 10], // 10s\n\t['hh:mm:ss', ONE_SECOND * 15], // 15s\n\t['hh:mm:ss', ONE_SECOND * 30], // 30s\n\t['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n\t['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n\t['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n\t['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n\t['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n\t['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n\t['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n\t['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n\t['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n\t['MM-dd\\nyyyy', ONE_DAY], // 1d\n\t['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n\t['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n\t['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n\t['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n\t['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n\t['week', ONE_DAY * 7], // 7d\n\t['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n\t['week', ONE_DAY * 14], // 2w\n\t['week', ONE_DAY * 21], // 3w\n\t['month', ONE_DAY * 31], // 1M\n\t['week', ONE_DAY * 42], // 6w\n\t['month', ONE_DAY * 62], // 2M\n\t['week', ONE_DAY * 42], // 10w\n\t['quarter', ONE_DAY * 380 / 4], // 3M\n\t['month', ONE_DAY * 31 * 4], // 4M\n\t['month', ONE_DAY * 31 * 5], // 5M\n\t['half-year', ONE_DAY * 380 / 2], // 6M\n\t['month', ONE_DAY * 31 * 8], // 8M\n\t['month', ONE_DAY * 31 * 10], // 10M\n\t['year', ONE_DAY * 380] // 1Y\n\t];\n\t/**\n\t * @param {module:echarts/model/Model}\n\t * @return {module:echarts/scale/Time}\n\t */\n\t\n\tTimeScale.create = function (model) {\n\t  return new TimeScale({\n\t    useUTC: model.ecModel.get('useUTC')\n\t  });\n\t};\n\t\n\tvar _default = TimeScale;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar numberUtil = __webpack_require__(22);\n\t\n\t/**\n\t * For testable.\n\t */\n\tvar roundNumber = numberUtil.round;\n\t/**\n\t * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n\t *                                Should be extent[0] < extent[1].\n\t * @param {number} splitNumber splitNumber should be >= 1.\n\t * @param {number} [minInterval]\n\t * @param {number} [maxInterval]\n\t * @return {Object} {interval, intervalPrecision, niceTickExtent}\n\t */\n\t\n\tfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n\t  var result = {};\n\t  var span = extent[1] - extent[0];\n\t  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\t\n\t  if (minInterval != null && interval < minInterval) {\n\t    interval = result.interval = minInterval;\n\t  }\n\t\n\t  if (maxInterval != null && interval > maxInterval) {\n\t    interval = result.interval = maxInterval;\n\t  } // Tow more digital for tick.\n\t\n\t\n\t  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\t\n\t  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n\t  fixExtent(niceTickExtent, extent);\n\t  return result;\n\t}\n\t/**\n\t * @param {number} interval\n\t * @return {number} interval precision\n\t */\n\t\n\t\n\tfunction getIntervalPrecision(interval) {\n\t  // Tow more digital for tick.\n\t  return numberUtil.getPrecisionSafe(interval) + 2;\n\t}\n\t\n\tfunction clamp(niceTickExtent, idx, extent) {\n\t  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n\t} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\t\n\t\n\tfunction fixExtent(niceTickExtent, extent) {\n\t  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n\t  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n\t  clamp(niceTickExtent, 0, extent);\n\t  clamp(niceTickExtent, 1, extent);\n\t\n\t  if (niceTickExtent[0] > niceTickExtent[1]) {\n\t    niceTickExtent[0] = niceTickExtent[1];\n\t  }\n\t}\n\t\n\tfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n\t  var ticks = []; // If interval is 0, return [];\n\t\n\t  if (!interval) {\n\t    return ticks;\n\t  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\t\n\t\n\t  var safeLimit = 10000;\n\t\n\t  if (extent[0] < niceTickExtent[0]) {\n\t    ticks.push(extent[0]);\n\t  }\n\t\n\t  var tick = niceTickExtent[0];\n\t\n\t  while (tick <= niceTickExtent[1]) {\n\t    ticks.push(tick); // Avoid rounding error\n\t\n\t    tick = roundNumber(tick + interval, intervalPrecision);\n\t\n\t    if (tick === ticks[ticks.length - 1]) {\n\t      // Consider out of safe float point, e.g.,\n\t      // -3711126.9907707 + 2e-10 === -3711126.9907707\n\t      break;\n\t    }\n\t\n\t    if (ticks.length > safeLimit) {\n\t      return [];\n\t    }\n\t  } // Consider this case: the last item of ticks is smaller\n\t  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\t\n\t\n\t  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n\t    ticks.push(extent[1]);\n\t  }\n\t\n\t  return ticks;\n\t}\n\t\n\texports.intervalScaleNiceTicks = intervalScaleNiceTicks;\n\texports.getIntervalPrecision = getIntervalPrecision;\n\texports.fixExtent = fixExtent;\n\texports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 823:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar each = _util.each;\n\tvar isFunction = _util.isFunction;\n\tvar createHashMap = _util.createHashMap;\n\tvar noop = _util.noop;\n\t\n\tvar _task = __webpack_require__(273);\n\t\n\tvar createTask = _task.createTask;\n\t\n\tvar _component = __webpack_require__(194);\n\t\n\tvar getUID = _component.getUID;\n\t\n\tvar GlobalModel = __webpack_require__(424);\n\t\n\tvar ExtensionAPI = __webpack_require__(407);\n\t\n\tvar _model = __webpack_require__(11);\n\t\n\tvar normalizeToArray = _model.normalizeToArray;\n\t\n\t/**\n\t * @module echarts/stream/Scheduler\n\t */\n\t\n\t/**\n\t * @constructor\n\t */\n\tfunction Scheduler(ecInstance, api) {\n\t  // this._pipelineMap = createHashMap();\n\t  this.ecInstance = ecInstance;\n\t  this.api = api;\n\t  this.unfinished;\n\t  /**\n\t   * @private\n\t   * @type {\n\t   *     [handlerUID: string]: {\n\t   *         seriesTaskMap?: {\n\t   *             [seriesUID: string]: Task\n\t   *         },\n\t   *         overallTask?: Task\n\t   *     }\n\t   * }\n\t   */\n\t\n\t  this._stageTaskMap = createHashMap();\n\t}\n\t\n\tvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\t\n\tproto.getPerformArgs = function (task, isBlock) {\n\t  // For overall task\n\t  if (!task.__pipeline) {\n\t    return;\n\t  }\n\t\n\t  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\t\n\t  var pCtx = pipeline.context;\n\t  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.incrementalRender) && task.__idxInPipeline > pipeline.bockIndex;\n\t  return {\n\t    step: incremental ? pipeline.step : null\n\t  };\n\t};\n\t\n\tproto.getPipeline = function (pipelineId) {\n\t  return this._pipelineMap.get(pipelineId);\n\t};\n\t/**\n\t * Current, progressive rendering starts from visual and layout.\n\t * Always detect render mode in the same stage, avoiding that incorrect\n\t * detection caused by data filtering.\n\t * Caution:\n\t * `updateStreamModes` use `seriesModel.getData()`.\n\t */\n\t\n\t\n\tproto.updateStreamModes = function (seriesModel, view) {\n\t  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\t\n\t  var data = seriesModel.getData();\n\t  var dataLen = data.count();\n\t  var incrementalRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n\t  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n\t  seriesModel.pipelineContext = pipeline.context = {\n\t    incrementalRender: incrementalRender,\n\t    large: large\n\t  };\n\t};\n\t\n\tproto.restorePipelines = function (ecModel) {\n\t  var scheduler = this;\n\t  var pipelineMap = scheduler._pipelineMap = createHashMap();\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    var progressive = seriesModel.getProgressive();\n\t    var pipelineId = seriesModel.uid;\n\t    pipelineMap.set(pipelineId, {\n\t      id: pipelineId,\n\t      head: null,\n\t      tail: null,\n\t      threshold: seriesModel.getProgressiveThreshold(),\n\t      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n\t      bockIndex: -1,\n\t      step: progressive || 700,\n\t      // ??? Temporarily number\n\t      count: 0\n\t    });\n\t    pipe(scheduler, seriesModel, seriesModel.dataTask);\n\t  });\n\t};\n\t\n\tproto.prepareStageTasks = function (stageHandlers, useClearVisual) {\n\t  var stageTaskMap = this._stageTaskMap;\n\t  var ecModel = this.ecInstance.getModel();\n\t  var api = this.api;\n\t  each(stageHandlers, function (handler) {\n\t    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n\t    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n\t    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n\t  }, this);\n\t};\n\t\n\tproto.prepareView = function (view, model, ecModel, api) {\n\t  var renderTask = view.renderTask;\n\t  var context = renderTask.context;\n\t  context.model = model;\n\t  context.ecModel = ecModel;\n\t  context.api = api;\n\t  renderTask.__block = !view.incrementalPrepareRender;\n\t  pipe(this, model, renderTask);\n\t};\n\t\n\tproto.performDataProcessorTasks = function (stageHandlers, ecModel, payload) {\n\t  // If we do not use `block` here, it should be considered when to update modes.\n\t  performStageTasks(this, stageHandlers, ecModel, payload, {\n\t    block: true\n\t  });\n\t}; // opt\n\t// opt.visualType: 'visual' or 'layout'\n\t// opt.setDirty\n\t\n\t\n\tproto.performVisualTasks = function (stageHandlers, ecModel, payload, opt) {\n\t  performStageTasks(this, stageHandlers, ecModel, payload, opt);\n\t};\n\t\n\tfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n\t  opt = opt || {};\n\t  var unfinished;\n\t  each(stageHandlers, function (stageHandler, idx) {\n\t    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n\t      return;\n\t    }\n\t\n\t    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\t\n\t    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n\t    var overallTask = stageHandlerRecord.overallTask;\n\t\n\t    if (overallTask) {\n\t      var overallNeedDirty;\n\t      var agentStubMap = overallTask.agentStubMap;\n\t      agentStubMap.each(function (stub) {\n\t        if (needSetDirty(opt, stub)) {\n\t          stub.dirty();\n\t          overallNeedDirty = true;\n\t        }\n\t      });\n\t      overallNeedDirty && overallTask.dirty();\n\t      updatePayload(overallTask, payload);\n\t      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n\t      // then execute the overall task. And stub will call seriesModel.setData,\n\t      // which ensures that in the overallTask seriesModel.getData() will not\n\t      // return incorrect data.\n\t\n\t      agentStubMap.each(function (stub) {\n\t        stub.perform(performArgs);\n\t      });\n\t      unfinished |= overallTask.perform(performArgs);\n\t    } else if (seriesTaskMap) {\n\t      seriesTaskMap.each(function (task, pipelineId) {\n\t        if (needSetDirty(opt, task)) {\n\t          task.dirty();\n\t        }\n\t\n\t        var performArgs = scheduler.getPerformArgs(task, opt.block);\n\t        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n\t        updatePayload(task, payload);\n\t        unfinished |= task.perform(performArgs);\n\t      });\n\t    }\n\t  });\n\t\n\t  function needSetDirty(opt, task) {\n\t    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n\t  }\n\t\n\t  scheduler.unfinished |= unfinished;\n\t}\n\t\n\tproto.performSeriesTasks = function (ecModel) {\n\t  var unfinished;\n\t  ecModel.eachSeries(function (seriesModel) {\n\t    // Progress to the end for dataInit and dataRestore.\n\t    unfinished |= seriesModel.dataTask.perform();\n\t  });\n\t  this.unfinished |= unfinished;\n\t};\n\t\n\tproto.plan = function () {\n\t  // Travel pipelines, check block.\n\t  this._pipelineMap.each(function (pipeline) {\n\t    var task = pipeline.tail;\n\t\n\t    do {\n\t      if (task.__block) {\n\t        pipeline.bockIndex = task.__idxInPipeline;\n\t        break;\n\t      }\n\t\n\t      task = task.getUpstream();\n\t    } while (task);\n\t  });\n\t};\n\t\n\tvar updatePayload = proto.updatePayload = function (task, payload) {\n\t  payload !== 'remain' && (task.context.payload = payload);\n\t};\n\t\n\tfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n\t  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n\t  var seriesType = stageHandler.seriesType;\n\t  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n\t  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n\t  // it works but it may cause other irrelevant charts blocked.\n\t\n\t  if (stageHandler.createOnAllSeries) {\n\t    ecModel.eachRawSeries(create);\n\t  } else if (seriesType) {\n\t    ecModel.eachRawSeriesByType(seriesType, create);\n\t  } else if (getTargetSeries) {\n\t    getTargetSeries(ecModel, api).each(create);\n\t  }\n\t\n\t  function create(seriesModel) {\n\t    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n\t    // Reuse original task instance.\n\t\n\t    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n\t      plan: seriesTaskPlan,\n\t      reset: seriesTaskReset,\n\t      count: seriesTaskCount\n\t    }));\n\t    task.context = {\n\t      model: seriesModel,\n\t      ecModel: ecModel,\n\t      api: api,\n\t      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n\t      plan: stageHandler.plan,\n\t      reset: stageHandler.reset,\n\t      scheduler: scheduler\n\t    };\n\t    pipe(scheduler, seriesModel, task);\n\t  } // Clear unused series tasks.\n\t\n\t\n\t  var pipelineMap = scheduler._pipelineMap;\n\t  seriesTaskMap.each(function (task, pipelineId) {\n\t    if (!pipelineMap.get(pipelineId)) {\n\t      task.dispose();\n\t      seriesTaskMap.removeKey(pipelineId);\n\t    }\n\t  });\n\t}\n\t\n\tfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n\t  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n\t  || createTask({\n\t    reset: overallTaskReset\n\t  });\n\t  overallTask.context = {\n\t    ecModel: ecModel,\n\t    api: api,\n\t    overallReset: stageHandler.overallReset,\n\t    scheduler: scheduler\n\t  }; // Reuse orignal stubs.\n\t\n\t  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n\t  var seriesType = stageHandler.seriesType;\n\t  var getTargetSeries = stageHandler.getTargetSeries;\n\t  var overallProgress = true;\n\t  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n\t  // stub in each pipelines, it will set the overall task dirty when the pipeline\n\t  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n\t  // we set the pipeline block.\n\t\n\t  if (seriesType) {\n\t    ecModel.eachRawSeriesByType(seriesType, createStub);\n\t  } else if (getTargetSeries) {\n\t    getTargetSeries(ecModel, api).each(createStub);\n\t  } // Otherwise, (usually it is legancy case), the overall task will only be\n\t  // executed when upstream dirty. Otherwise the progressive rendering of all\n\t  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n\t  // dirty info from upsteam.\n\t  else {\n\t      overallProgress = false;\n\t      each(ecModel.getSeries(), createStub);\n\t    }\n\t\n\t  function createStub(seriesModel) {\n\t    var pipelineId = seriesModel.uid;\n\t    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n\t      reset: stubReset,\n\t      onDirty: stubOnDirty\n\t    }));\n\t    stub.context = {\n\t      model: seriesModel,\n\t      overallProgress: overallProgress,\n\t      isOverallFilter: isOverallFilter\n\t    };\n\t    stub.agent = overallTask;\n\t    stub.__block = overallProgress;\n\t    pipe(scheduler, seriesModel, stub);\n\t  } // Clear unused stubs.\n\t\n\t\n\t  var pipelineMap = scheduler._pipelineMap;\n\t  agentStubMap.each(function (stub, pipelineId) {\n\t    if (!pipelineMap.get(pipelineId)) {\n\t      stub.dispose();\n\t      agentStubMap.removeKey(pipelineId);\n\t    }\n\t  });\n\t}\n\t\n\tfunction overallTaskReset(context) {\n\t  context.overallReset(context.ecModel, context.api, context.payload);\n\t}\n\t\n\tfunction stubReset(context, upstreamContext) {\n\t  return context.overallProgress && stubProgress;\n\t}\n\t\n\tfunction stubProgress() {\n\t  this.agent.dirty();\n\t  this.getDownstream().dirty();\n\t}\n\t\n\tfunction stubOnDirty() {\n\t  this.agent && this.agent.dirty();\n\t}\n\t\n\tfunction seriesTaskPlan(context) {\n\t  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n\t}\n\t\n\tfunction seriesTaskReset(context) {\n\t  if (context.useClearVisual) {\n\t    context.data.clearAllVisual();\n\t  }\n\t\n\t  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\t\n\t  if (resetDefines.length) {\n\t    return seriesTaskProgress;\n\t  }\n\t}\n\t\n\tfunction seriesTaskProgress(params, context) {\n\t  var data = context.data;\n\t  var resetDefines = context.resetDefines;\n\t\n\t  for (var k = 0; k < resetDefines.length; k++) {\n\t    var resetDefine = resetDefines[k];\n\t\n\t    if (resetDefine && resetDefine.dataEach) {\n\t      for (var i = params.start; i < params.end; i++) {\n\t        resetDefine.dataEach(data, i);\n\t      }\n\t    } else if (resetDefine && resetDefine.progress) {\n\t      resetDefine.progress(params, data);\n\t    }\n\t  }\n\t}\n\t\n\tfunction seriesTaskCount(context) {\n\t  return context.data.count();\n\t}\n\t\n\tfunction pipe(scheduler, seriesModel, task) {\n\t  var pipelineId = seriesModel.uid;\n\t\n\t  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\t\n\t  !pipeline.head && (pipeline.head = task);\n\t  pipeline.tail && pipeline.tail.pipe(task);\n\t  pipeline.tail = task;\n\t  task.__idxInPipeline = pipeline.count++;\n\t  task.__pipeline = pipeline;\n\t}\n\t\n\tScheduler.wrapStageHandler = function (stageHandler, visualType) {\n\t  if (isFunction(stageHandler)) {\n\t    stageHandler = {\n\t      overallReset: stageHandler,\n\t      seriesType: detectSeriseType(stageHandler)\n\t    };\n\t  }\n\t\n\t  stageHandler.uid = getUID('stageHandler');\n\t  visualType && (stageHandler.visualType = visualType);\n\t  return stageHandler;\n\t};\n\t/**\n\t * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n\t * To ensure that they can work normally, they should work in block mode, that is,\n\t * they should not be started util the previous tasks finished. So they cause the\n\t * progressive rendering disabled. We try to detect the series type, to narrow down\n\t * the block range to only the series type they concern, but not all series.\n\t */\n\t\n\t\n\tfunction detectSeriseType(legacyFunc) {\n\t  seriesType = null;\n\t\n\t  try {\n\t    // Assume there is no async when calling `eachSeriesByType`.\n\t    legacyFunc(ecModelMock, apiMock);\n\t  } catch (e) {}\n\t\n\t  return seriesType;\n\t}\n\t\n\tvar ecModelMock = {};\n\tvar apiMock = {};\n\tvar seriesType;\n\tmockMethods(ecModelMock, GlobalModel);\n\tmockMethods(apiMock, ExtensionAPI);\n\t\n\tecModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n\t  seriesType = type;\n\t};\n\t\n\tecModelMock.eachComponent = function (cond) {\n\t  if (cond.mainType === 'series' && cond.subType) {\n\t    seriesType = cond.subType;\n\t  }\n\t};\n\t\n\tfunction mockMethods(target, Clz) {\n\t  for (var name in Clz.prototype) {\n\t    // Do not use hasOwnProperty\n\t    target[name] = noop;\n\t  }\n\t}\n\t\n\tvar _default = Scheduler;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 273:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar assert = _util.assert;\n\t\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\t/**\n\t * @param {Object} define\n\t * @return See the return of `createTask`.\n\t */\n\tfunction createTask(define) {\n\t  return new Task(define);\n\t}\n\t/**\n\t * @constructor\n\t * @param {Object} define\n\t * @param {Function} define.reset Custom reset\n\t * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n\t * @param {Function} [define.count] count is used to determin data task.\n\t * @param {Function} [define.onDirty] count is used to determin data task.\n\t */\n\t\n\t\n\tfunction Task(define) {\n\t  define = define || {};\n\t  this._reset = define.reset;\n\t  this._plan = define.plan;\n\t  this._count = define.count;\n\t  this._onDirty = define.onDirty;\n\t  this._dirty = true; // Context must be specified implicitly, to\n\t  // avoid miss update context when model changed.\n\t\n\t  this.context;\n\t}\n\t\n\tvar taskProto = Task.prototype;\n\t/**\n\t * @param {Object} performArgs\n\t * @param {number} [performArgs.step] Specified step.\n\t * @param {number} [performArgs.skip] Skip customer perform call.\n\t */\n\t\n\ttaskProto.perform = function (performArgs) {\n\t  var upTask = this._upstream;\n\t  var skip = performArgs && performArgs.skip; // TODO some refactor.\n\t  // Pull data. Must pull data each time, because context.data\n\t  // may be updated by Series.setData.\n\t\n\t  if (this._dirty && upTask) {\n\t    var context = this.context;\n\t    context.data = context.outputData = upTask.context.outputData;\n\t  }\n\t\n\t  if (this.__pipeline) {\n\t    this.__pipeline.currentTask = this;\n\t  }\n\t\n\t  var planResult;\n\t\n\t  if (this._plan && !skip) {\n\t    planResult = this._plan(this.context);\n\t  }\n\t\n\t  if (this._dirty || planResult === 'reset') {\n\t    this._dirty = false;\n\t    reset(this, skip);\n\t  }\n\t\n\t  var step = performArgs && performArgs.step;\n\t\n\t  if (upTask) {\n\t    // ??? FIXME move to schedueler?\n\t    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n\t    this._dueEnd = upTask._outputDueEnd;\n\t  } // DataTask or overallTask\n\t  else {\n\t      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n\t    } // Note: Stubs, that its host overall task let it has progress, has progress.\n\t  // If no progress, pass index from upstream to downstream each time plan called.\n\t\n\t\n\t  if (this._progress) {\n\t    var start = this._dueIndex;\n\t    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\t    !skip && start < end && this._progress({\n\t      start: start,\n\t      end: end\n\t    }, this.context);\n\t    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n\t    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\t\n\t    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n\t    this._outputDueEnd = outputDueEnd;\n\t  } else {\n\t    // (1) Some overall task has no progress.\n\t    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n\t    // This should always be performed so it can be passed to downstream.\n\t    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n\t  }\n\t\n\t  return this.unfinished();\n\t};\n\t\n\ttaskProto.dirty = function () {\n\t  this._dirty = true;\n\t  this._onDirty && this._onDirty(this.context);\n\t};\n\t/**\n\t * @param {Object} [params]\n\t */\n\t\n\t\n\tfunction reset(taskIns, skip) {\n\t  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n\t  taskIns._settedOutputEnd = null;\n\t  taskIns._progress = !skip && taskIns._reset && taskIns._reset(taskIns.context);\n\t  var downstream = taskIns._downstream;\n\t  downstream && downstream.dirty();\n\t}\n\t/**\n\t * @return {boolean}\n\t */\n\t\n\t\n\ttaskProto.unfinished = function () {\n\t  return this._progress && this._dueIndex < this._dueEnd;\n\t};\n\t/**\n\t * @param {Object} downTask The downstream task.\n\t * @return {Object} The downstream task.\n\t */\n\t\n\t\n\ttaskProto.pipe = function (downTask) {\n\t  // If already downstream, do not dirty downTask.\n\t  if (this._downstream !== downTask || this._dirty) {\n\t    this._downstream = downTask;\n\t    downTask._upstream = this;\n\t    downTask.dirty();\n\t  }\n\t};\n\t\n\ttaskProto.dispose = function () {\n\t  if (this._disposed) {\n\t    return;\n\t  }\n\t\n\t  this._upstream && (this._upstream._downstream = null);\n\t  this._downstream && (this._downstream._upstream = null);\n\t  this._dirty = false;\n\t  this._disposed = true;\n\t};\n\t\n\ttaskProto.getUpstream = function () {\n\t  return this._upstream;\n\t};\n\t\n\ttaskProto.getDownstream = function () {\n\t  return this._downstream;\n\t};\n\t\n\ttaskProto.setOutputEnd = function (end) {\n\t  // ??? FIXME: check\n\t  // This only happend in dataTask, dataZoom, map, currently.\n\t  // where dataZoom do not set end each time, but only set\n\t  // when reset. So we should record the setted end, in case\n\t  // that the stub of dataZoom perform again and earse the\n\t  // setted end by upstream.\n\t  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n\t};\n\t\n\texports.createTask = createTask;\n\n/***/ }),\n\n/***/ 824:\n/***/ (function(module, exports) {\n\n\tvar contrastColor = '#eee';\n\t\n\tvar axisCommon = function () {\n\t  return {\n\t    axisLine: {\n\t      lineStyle: {\n\t        color: contrastColor\n\t      }\n\t    },\n\t    axisTick: {\n\t      lineStyle: {\n\t        color: contrastColor\n\t      }\n\t    },\n\t    axisLabel: {\n\t      textStyle: {\n\t        color: contrastColor\n\t      }\n\t    },\n\t    splitLine: {\n\t      lineStyle: {\n\t        type: 'dashed',\n\t        color: '#aaa'\n\t      }\n\t    },\n\t    splitArea: {\n\t      areaStyle: {\n\t        color: contrastColor\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\tvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\n\tvar theme = {\n\t  color: colorPalette,\n\t  backgroundColor: '#333',\n\t  tooltip: {\n\t    axisPointer: {\n\t      lineStyle: {\n\t        color: contrastColor\n\t      },\n\t      crossStyle: {\n\t        color: contrastColor\n\t      }\n\t    }\n\t  },\n\t  legend: {\n\t    textStyle: {\n\t      color: contrastColor\n\t    }\n\t  },\n\t  textStyle: {\n\t    color: contrastColor\n\t  },\n\t  title: {\n\t    textStyle: {\n\t      color: contrastColor\n\t    }\n\t  },\n\t  toolbox: {\n\t    iconStyle: {\n\t      normal: {\n\t        borderColor: contrastColor\n\t      }\n\t    }\n\t  },\n\t  dataZoom: {\n\t    textStyle: {\n\t      color: contrastColor\n\t    }\n\t  },\n\t  visualMap: {\n\t    textStyle: {\n\t      color: contrastColor\n\t    }\n\t  },\n\t  timeline: {\n\t    lineStyle: {\n\t      color: contrastColor\n\t    },\n\t    itemStyle: {\n\t      normal: {\n\t        color: colorPalette[1]\n\t      }\n\t    },\n\t    label: {\n\t      normal: {\n\t        textStyle: {\n\t          color: contrastColor\n\t        }\n\t      }\n\t    },\n\t    controlStyle: {\n\t      normal: {\n\t        color: contrastColor,\n\t        borderColor: contrastColor\n\t      }\n\t    }\n\t  },\n\t  timeAxis: axisCommon(),\n\t  logAxis: axisCommon(),\n\t  valueAxis: axisCommon(),\n\t  categoryAxis: axisCommon(),\n\t  line: {\n\t    symbol: 'circle'\n\t  },\n\t  graph: {\n\t    color: colorPalette\n\t  },\n\t  gauge: {\n\t    title: {\n\t      textStyle: {\n\t        color: contrastColor\n\t      }\n\t    }\n\t  },\n\t  candlestick: {\n\t    itemStyle: {\n\t      normal: {\n\t        color: '#FD1050',\n\t        color0: '#0CF49B',\n\t        borderColor: '#FD1050',\n\t        borderColor0: '#0CF49B'\n\t      }\n\t    }\n\t  }\n\t};\n\ttheme.categoryAxis.splitLine.show = false;\n\tvar _default = theme;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 825:\n/***/ (function(module, exports) {\n\n\tvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\n\tvar _default = {\n\t  color: colorAll,\n\t  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(26);\n\t\n\tvar __DEV__ = _config.__DEV__;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar TYPE_DELIMITER = '.';\n\tvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n\t/**\n\t * Notice, parseClassType('') should returns {main: '', sub: ''}\n\t * @public\n\t */\n\t\n\tfunction parseClassType(componentType) {\n\t  var ret = {\n\t    main: '',\n\t    sub: ''\n\t  };\n\t\n\t  if (componentType) {\n\t    componentType = componentType.split(TYPE_DELIMITER);\n\t    ret.main = componentType[0] || '';\n\t    ret.sub = componentType[1] || '';\n\t  }\n\t\n\t  return ret;\n\t}\n\t/**\n\t * @public\n\t */\n\t\n\t\n\tfunction checkClassType(componentType) {\n\t  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n\t}\n\t/**\n\t * @public\n\t */\n\t\n\t\n\tfunction enableClassExtend(RootClass, mandatoryMethods) {\n\t  RootClass.$constructor = RootClass;\n\t\n\t  RootClass.extend = function (proto) {\n\t    var superClass = this;\n\t\n\t    var ExtendedClass = function () {\n\t      if (!proto.$constructor) {\n\t        superClass.apply(this, arguments);\n\t      } else {\n\t        proto.$constructor.apply(this, arguments);\n\t      }\n\t    };\n\t\n\t    zrUtil.extend(ExtendedClass.prototype, proto);\n\t    ExtendedClass.extend = this.extend;\n\t    ExtendedClass.superCall = superCall;\n\t    ExtendedClass.superApply = superApply;\n\t    zrUtil.inherits(ExtendedClass, this);\n\t    ExtendedClass.superClass = superClass;\n\t    return ExtendedClass;\n\t  };\n\t}\n\t\n\tvar classBase = 0;\n\t/**\n\t * Can not use instanceof, consider different scope by\n\t * cross domain or es module import in ec extensions.\n\t * Mount a method \"isInstance()\" to Clz.\n\t */\n\t\n\tfunction enableClassCheck(Clz) {\n\t  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n\t  Clz.prototype[classAttr] = true;\n\t\n\t  Clz.isInstance = function (obj) {\n\t    return !!(obj && obj[classAttr]);\n\t  };\n\t} // superCall should have class info, which can not be fetch from 'this'.\n\t// Consider this case:\n\t// class A has method f,\n\t// class B inherits class A, overrides method f, f call superApply('f'),\n\t// class C inherits class B, do not overrides method f,\n\t// then when method of class C is called, dead loop occured.\n\t\n\t\n\tfunction superCall(context, methodName) {\n\t  var args = zrUtil.slice(arguments, 2);\n\t  return this.superClass.prototype[methodName].apply(context, args);\n\t}\n\t\n\tfunction superApply(context, methodName, args) {\n\t  return this.superClass.prototype[methodName].apply(context, args);\n\t}\n\t/**\n\t * @param {Object} entity\n\t * @param {Object} options\n\t * @param {boolean} [options.registerWhenExtend]\n\t * @public\n\t */\n\t\n\t\n\tfunction enableClassManagement(entity, options) {\n\t  options = options || {};\n\t  /**\n\t   * Component model classes\n\t   * key: componentType,\n\t   * value:\n\t   *     componentClass, when componentType is 'xxx'\n\t   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n\t   * @type {Object}\n\t   */\n\t\n\t  var storage = {};\n\t\n\t  entity.registerClass = function (Clazz, componentType) {\n\t    if (componentType) {\n\t      checkClassType(componentType);\n\t      componentType = parseClassType(componentType);\n\t\n\t      if (!componentType.sub) {\n\t        storage[componentType.main] = Clazz;\n\t      } else if (componentType.sub !== IS_CONTAINER) {\n\t        var container = makeContainer(componentType);\n\t        container[componentType.sub] = Clazz;\n\t      }\n\t    }\n\t\n\t    return Clazz;\n\t  };\n\t\n\t  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n\t    var Clazz = storage[componentMainType];\n\t\n\t    if (Clazz && Clazz[IS_CONTAINER]) {\n\t      Clazz = subType ? Clazz[subType] : null;\n\t    }\n\t\n\t    if (throwWhenNotFound && !Clazz) {\n\t      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n\t    }\n\t\n\t    return Clazz;\n\t  };\n\t\n\t  entity.getClassesByMainType = function (componentType) {\n\t    componentType = parseClassType(componentType);\n\t    var result = [];\n\t    var obj = storage[componentType.main];\n\t\n\t    if (obj && obj[IS_CONTAINER]) {\n\t      zrUtil.each(obj, function (o, type) {\n\t        type !== IS_CONTAINER && result.push(o);\n\t      });\n\t    } else {\n\t      result.push(obj);\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  entity.hasClass = function (componentType) {\n\t    // Just consider componentType.main.\n\t    componentType = parseClassType(componentType);\n\t    return !!storage[componentType.main];\n\t  };\n\t  /**\n\t   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n\t   */\n\t\n\t\n\t  entity.getAllClassMainTypes = function () {\n\t    var types = [];\n\t    zrUtil.each(storage, function (obj, type) {\n\t      types.push(type);\n\t    });\n\t    return types;\n\t  };\n\t  /**\n\t   * If a main type is container and has sub types\n\t   * @param  {string}  mainType\n\t   * @return {boolean}\n\t   */\n\t\n\t\n\t  entity.hasSubTypes = function (componentType) {\n\t    componentType = parseClassType(componentType);\n\t    var obj = storage[componentType.main];\n\t    return obj && obj[IS_CONTAINER];\n\t  };\n\t\n\t  entity.parseClassType = parseClassType;\n\t\n\t  function makeContainer(componentType) {\n\t    var container = storage[componentType.main];\n\t\n\t    if (!container || !container[IS_CONTAINER]) {\n\t      container = storage[componentType.main] = {};\n\t      container[IS_CONTAINER] = true;\n\t    }\n\t\n\t    return container;\n\t  }\n\t\n\t  if (options.registerWhenExtend) {\n\t    var originalExtend = entity.extend;\n\t\n\t    if (originalExtend) {\n\t      entity.extend = function (proto) {\n\t        var ExtendedClass = originalExtend.call(this, proto);\n\t        return entity.registerClass(ExtendedClass, proto.type);\n\t      };\n\t    }\n\t  }\n\t\n\t  return entity;\n\t}\n\t/**\n\t * @param {string|Array.<string>} properties\n\t */\n\t\n\t\n\tfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n\t  // if (!zrUtil.isArray(properties)) {\n\t  //     properties = properties != null ? [properties] : [];\n\t  // }\n\t  // zrUtil.each(properties, function (prop) {\n\t  //     var value = obj[prop];\n\t  //     Object.defineProperty\n\t  //         && Object.defineProperty(obj, prop, {\n\t  //             value: value, writable: false\n\t  //         });\n\t  //     zrUtil.isArray(obj[prop])\n\t  //         && Object.freeze\n\t  //         && Object.freeze(obj[prop]);\n\t  // });\n\t}\n\t\n\texports.parseClassType = parseClassType;\n\texports.enableClassExtend = enableClassExtend;\n\texports.enableClassCheck = enableClassCheck;\n\texports.enableClassManagement = enableClassManagement;\n\texports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 194:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar _clazz = __webpack_require__(56);\n\t\n\tvar parseClassType = _clazz.parseClassType;\n\tvar base = 0;\n\t/**\n\t * @public\n\t * @param {string} type\n\t * @return {string}\n\t */\n\t\n\tfunction getUID(type) {\n\t  // Considering the case of crossing js context,\n\t  // use Math.random to make id as unique as possible.\n\t  return [type || '', base++, Math.random().toFixed(5)].join('_');\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction enableSubTypeDefaulter(entity) {\n\t  var subTypeDefaulters = {};\n\t\n\t  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n\t    componentType = parseClassType(componentType);\n\t    subTypeDefaulters[componentType.main] = defaulter;\n\t  };\n\t\n\t  entity.determineSubType = function (componentType, option) {\n\t    var type = option.type;\n\t\n\t    if (!type) {\n\t      var componentTypeMain = parseClassType(componentType).main;\n\t\n\t      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n\t        type = subTypeDefaulters[componentTypeMain](option);\n\t      }\n\t    }\n\t\n\t    return type;\n\t  };\n\t\n\t  return entity;\n\t}\n\t/**\n\t * Topological travel on Activity Network (Activity On Vertices).\n\t * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n\t *\n\t * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n\t *\n\t * If there is circle dependencey, Error will be thrown.\n\t *\n\t */\n\t\n\t\n\tfunction enableTopologicalTravel(entity, dependencyGetter) {\n\t  /**\n\t   * @public\n\t   * @param {Array.<string>} targetNameList Target Component type list.\n\t   *                                           Can be ['aa', 'bb', 'aa.xx']\n\t   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n\t   * @param {Function} callback Params: componentType, dependencies.\n\t   * @param {Object} context Scope of callback.\n\t   */\n\t  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n\t    if (!targetNameList.length) {\n\t      return;\n\t    }\n\t\n\t    var result = makeDepndencyGraph(fullNameList);\n\t    var graph = result.graph;\n\t    var stack = result.noEntryList;\n\t    var targetNameSet = {};\n\t    zrUtil.each(targetNameList, function (name) {\n\t      targetNameSet[name] = true;\n\t    });\n\t\n\t    while (stack.length) {\n\t      var currComponentType = stack.pop();\n\t      var currVertex = graph[currComponentType];\n\t      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\t\n\t      if (isInTargetNameSet) {\n\t        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n\t        delete targetNameSet[currComponentType];\n\t      }\n\t\n\t      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n\t    }\n\t\n\t    zrUtil.each(targetNameSet, function () {\n\t      throw new Error('Circle dependency may exists');\n\t    });\n\t\n\t    function removeEdge(succComponentType) {\n\t      graph[succComponentType].entryCount--;\n\t\n\t      if (graph[succComponentType].entryCount === 0) {\n\t        stack.push(succComponentType);\n\t      }\n\t    } // Consider this case: legend depends on series, and we call\n\t    // chart.setOption({series: [...]}), where only series is in option.\n\t    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n\t    // not be called, but only sereis.mergeOption is called. Thus legend\n\t    // have no chance to update its local record about series (like which\n\t    // name of series is available in legend).\n\t\n\t\n\t    function removeEdgeAndAdd(succComponentType) {\n\t      targetNameSet[succComponentType] = true;\n\t      removeEdge(succComponentType);\n\t    }\n\t  };\n\t  /**\n\t   * DepndencyGraph: {Object}\n\t   * key: conponentType,\n\t   * value: {\n\t   *     successor: [conponentTypes...],\n\t   *     originalDeps: [conponentTypes...],\n\t   *     entryCount: {number}\n\t   * }\n\t   */\n\t\n\t\n\t  function makeDepndencyGraph(fullNameList) {\n\t    var graph = {};\n\t    var noEntryList = [];\n\t    zrUtil.each(fullNameList, function (name) {\n\t      var thisItem = createDependencyGraphItem(graph, name);\n\t      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\t      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n\t      thisItem.entryCount = availableDeps.length;\n\t\n\t      if (thisItem.entryCount === 0) {\n\t        noEntryList.push(name);\n\t      }\n\t\n\t      zrUtil.each(availableDeps, function (dependentName) {\n\t        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n\t          thisItem.predecessor.push(dependentName);\n\t        }\n\t\n\t        var thatItem = createDependencyGraphItem(graph, dependentName);\n\t\n\t        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n\t          thatItem.successor.push(name);\n\t        }\n\t      });\n\t    });\n\t    return {\n\t      graph: graph,\n\t      noEntryList: noEntryList\n\t    };\n\t  }\n\t\n\t  function createDependencyGraphItem(graph, name) {\n\t    if (!graph[name]) {\n\t      graph[name] = {\n\t        predecessor: [],\n\t        successor: []\n\t      };\n\t    }\n\t\n\t    return graph[name];\n\t  }\n\t\n\t  function getAvailableDependencies(originalDeps, fullNameList) {\n\t    var availableDeps = [];\n\t    zrUtil.each(originalDeps, function (dep) {\n\t      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n\t    });\n\t    return availableDeps;\n\t  }\n\t}\n\t\n\texports.getUID = getUID;\n\texports.enableSubTypeDefaulter = enableSubTypeDefaulter;\n\texports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar textContain = __webpack_require__(113);\n\t\n\tvar numberUtil = __webpack_require__(22);\n\t\n\t/**\n\t * 每三位默认加,格式化\n\t * @param {string|number} x\n\t * @return {string}\n\t */\n\tfunction addCommas(x) {\n\t  if (isNaN(x)) {\n\t    return '-';\n\t  }\n\t\n\t  x = (x + '').split('.');\n\t  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n\t}\n\t/**\n\t * @param {string} str\n\t * @param {boolean} [upperCaseFirst=false]\n\t * @return {string} str\n\t */\n\t\n\t\n\tfunction toCamelCase(str, upperCaseFirst) {\n\t  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n\t    return group1.toUpperCase();\n\t  });\n\t\n\t  if (upperCaseFirst && str) {\n\t    str = str.charAt(0).toUpperCase() + str.slice(1);\n\t  }\n\t\n\t  return str;\n\t}\n\t\n\tvar normalizeCssArray = zrUtil.normalizeCssArray;\n\t\n\tfunction encodeHTML(source) {\n\t  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n\t}\n\t\n\tvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\t\n\tvar wrapVar = function (varName, seriesIdx) {\n\t  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n\t};\n\t/**\n\t * Template formatter\n\t * @param {string} tpl\n\t * @param {Array.<Object>|Object} paramsList\n\t * @param {boolean} [encode=false]\n\t * @return {string}\n\t */\n\t\n\t\n\tfunction formatTpl(tpl, paramsList, encode) {\n\t  if (!zrUtil.isArray(paramsList)) {\n\t    paramsList = [paramsList];\n\t  }\n\t\n\t  var seriesLen = paramsList.length;\n\t\n\t  if (!seriesLen) {\n\t    return '';\n\t  }\n\t\n\t  var $vars = paramsList[0].$vars || [];\n\t\n\t  for (var i = 0; i < $vars.length; i++) {\n\t    var alias = TPL_VAR_ALIAS[i];\n\t    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n\t  }\n\t\n\t  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n\t    for (var k = 0; k < $vars.length; k++) {\n\t      var val = paramsList[seriesIdx][$vars[k]];\n\t      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n\t    }\n\t  }\n\t\n\t  return tpl;\n\t}\n\t/**\n\t * simple Template formatter\n\t *\n\t * @param {string} tpl\n\t * @param {Object} param\n\t * @param {boolean} [encode=false]\n\t * @return {string}\n\t */\n\t\n\t\n\tfunction formatTplSimple(tpl, param, encode) {\n\t  zrUtil.each(param, function (value, key) {\n\t    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n\t  });\n\t  return tpl;\n\t}\n\t/**\n\t * @param {Object|string} [opt] If string, means color.\n\t * @param {string} [opt.color]\n\t * @param {string} [opt.extraCssText]\n\t * @param {string} [opt.type='item'] 'item' or 'subItem'\n\t * @return {string}\n\t */\n\t\n\t\n\tfunction getTooltipMarker(opt, extraCssText) {\n\t  opt = zrUtil.isString(opt) ? {\n\t    color: opt,\n\t    extraCssText: extraCssText\n\t  } : opt || {};\n\t  var color = opt.color;\n\t  var type = opt.type;\n\t  var extraCssText = opt.extraCssText;\n\t\n\t  if (!color) {\n\t    return '';\n\t  }\n\t\n\t  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n\t}\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t * @inner\n\t */\n\t\n\t\n\tvar s2d = function (str) {\n\t  return str < 10 ? '0' + str : str;\n\t};\n\t/**\n\t * ISO Date format\n\t * @param {string} tpl\n\t * @param {number} value\n\t * @param {boolean} [isUTC=false] Default in local time.\n\t *           see `module:echarts/scale/Time`\n\t *           and `module:echarts/util/number#parseDate`.\n\t * @inner\n\t */\n\t\n\t\n\tfunction formatTime(tpl, value, isUTC) {\n\t  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n\t    tpl = 'MM-dd\\nyyyy';\n\t  }\n\t\n\t  var date = numberUtil.parseDate(value);\n\t  var utc = isUTC ? 'UTC' : '';\n\t  var y = date['get' + utc + 'FullYear']();\n\t  var M = date['get' + utc + 'Month']() + 1;\n\t  var d = date['get' + utc + 'Date']();\n\t  var h = date['get' + utc + 'Hours']();\n\t  var m = date['get' + utc + 'Minutes']();\n\t  var s = date['get' + utc + 'Seconds']();\n\t  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n\t  return tpl;\n\t}\n\t/**\n\t * Capital first\n\t * @param {string} str\n\t * @return {string}\n\t */\n\t\n\t\n\tfunction capitalFirst(str) {\n\t  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n\t}\n\t\n\tvar truncateText = textContain.truncateText;\n\tvar getTextRect = textContain.getBoundingRect;\n\texports.addCommas = addCommas;\n\texports.toCamelCase = toCamelCase;\n\texports.normalizeCssArray = normalizeCssArray;\n\texports.encodeHTML = encodeHTML;\n\texports.formatTpl = formatTpl;\n\texports.formatTplSimple = formatTplSimple;\n\texports.getTooltipMarker = getTooltipMarker;\n\texports.formatTime = formatTime;\n\texports.capitalFirst = capitalFirst;\n\texports.truncateText = truncateText;\n\texports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 18:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar pathTool = __webpack_require__(1521);\n\t\n\tvar colorTool = __webpack_require__(165);\n\t\n\tvar matrix = __webpack_require__(85);\n\t\n\tvar vector = __webpack_require__(10);\n\t\n\tvar Path = __webpack_require__(42);\n\t\n\tvar Transformable = __webpack_require__(362);\n\t\n\tvar ZImage = __webpack_require__(566);\n\t\n\texports.Image = ZImage;\n\t\n\tvar Group = __webpack_require__(231);\n\t\n\texports.Group = Group;\n\t\n\tvar Text = __webpack_require__(1505);\n\t\n\texports.Text = Text;\n\t\n\tvar Circle = __webpack_require__(1512);\n\t\n\texports.Circle = Circle;\n\t\n\tvar Sector = __webpack_require__(1518);\n\t\n\texports.Sector = Sector;\n\t\n\tvar Ring = __webpack_require__(1517);\n\t\n\texports.Ring = Ring;\n\t\n\tvar Polygon = __webpack_require__(1514);\n\t\n\texports.Polygon = Polygon;\n\t\n\tvar Polyline = __webpack_require__(1515);\n\t\n\texports.Polyline = Polyline;\n\t\n\tvar Rect = __webpack_require__(1516);\n\t\n\texports.Rect = Rect;\n\t\n\tvar Line = __webpack_require__(1513);\n\t\n\texports.Line = Line;\n\t\n\tvar BezierCurve = __webpack_require__(1511);\n\t\n\texports.BezierCurve = BezierCurve;\n\t\n\tvar Arc = __webpack_require__(1510);\n\t\n\texports.Arc = Arc;\n\t\n\tvar CompoundPath = __webpack_require__(1501);\n\t\n\texports.CompoundPath = CompoundPath;\n\t\n\tvar LinearGradient = __webpack_require__(1503);\n\t\n\texports.LinearGradient = LinearGradient;\n\t\n\tvar RadialGradient = __webpack_require__(1504);\n\t\n\texports.RadialGradient = RadialGradient;\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\texports.BoundingRect = BoundingRect;\n\t\n\tvar IncrementalDisplayable = __webpack_require__(1502);\n\t\n\texports.IncrementalDisplayable = IncrementalDisplayable;\n\tvar round = Math.round;\n\tvar mathMax = Math.max;\n\tvar mathMin = Math.min;\n\tvar EMPTY_OBJ = {};\n\t/**\n\t * Extend shape with parameters\n\t */\n\t\n\tfunction extendShape(opts) {\n\t  return Path.extend(opts);\n\t}\n\t/**\n\t * Extend path\n\t */\n\t\n\t\n\tfunction extendPath(pathData, opts) {\n\t  return pathTool.extendFromString(pathData, opts);\n\t}\n\t/**\n\t * Create a path element from path data string\n\t * @param {string} pathData\n\t * @param {Object} opts\n\t * @param {module:zrender/core/BoundingRect} rect\n\t * @param {string} [layout=cover] 'center' or 'cover'\n\t */\n\t\n\t\n\tfunction makePath(pathData, opts, rect, layout) {\n\t  var path = pathTool.createFromString(pathData, opts);\n\t  var boundingRect = path.getBoundingRect();\n\t\n\t  if (rect) {\n\t    if (layout === 'center') {\n\t      rect = centerGraphic(rect, boundingRect);\n\t    }\n\t\n\t    resizePath(path, rect);\n\t  }\n\t\n\t  return path;\n\t}\n\t/**\n\t * Create a image element from image url\n\t * @param {string} imageUrl image url\n\t * @param {Object} opts options\n\t * @param {module:zrender/core/BoundingRect} rect constrain rect\n\t * @param {string} [layout=cover] 'center' or 'cover'\n\t */\n\t\n\t\n\tfunction makeImage(imageUrl, rect, layout) {\n\t  var path = new ZImage({\n\t    style: {\n\t      image: imageUrl,\n\t      x: rect.x,\n\t      y: rect.y,\n\t      width: rect.width,\n\t      height: rect.height\n\t    },\n\t    onload: function (img) {\n\t      if (layout === 'center') {\n\t        var boundingRect = {\n\t          width: img.width,\n\t          height: img.height\n\t        };\n\t        path.setStyle(centerGraphic(rect, boundingRect));\n\t      }\n\t    }\n\t  });\n\t  return path;\n\t}\n\t/**\n\t * Get position of centered element in bounding box.\n\t *\n\t * @param  {Object} rect         element local bounding box\n\t * @param  {Object} boundingRect constraint bounding box\n\t * @return {Object} element position containing x, y, width, and height\n\t */\n\t\n\t\n\tfunction centerGraphic(rect, boundingRect) {\n\t  // Set rect to center, keep width / height ratio.\n\t  var aspect = boundingRect.width / boundingRect.height;\n\t  var width = rect.height * aspect;\n\t  var height;\n\t\n\t  if (width <= rect.width) {\n\t    height = rect.height;\n\t  } else {\n\t    width = rect.width;\n\t    height = width / aspect;\n\t  }\n\t\n\t  var cx = rect.x + rect.width / 2;\n\t  var cy = rect.y + rect.height / 2;\n\t  return {\n\t    x: cx - width / 2,\n\t    y: cy - height / 2,\n\t    width: width,\n\t    height: height\n\t  };\n\t}\n\t\n\tvar mergePath = pathTool.mergePath;\n\t/**\n\t * Resize a path to fit the rect\n\t * @param {module:zrender/graphic/Path} path\n\t * @param {Object} rect\n\t */\n\t\n\tfunction resizePath(path, rect) {\n\t  if (!path.applyTransform) {\n\t    return;\n\t  }\n\t\n\t  var pathRect = path.getBoundingRect();\n\t  var m = pathRect.calculateTransform(rect);\n\t  path.applyTransform(m);\n\t}\n\t/**\n\t * Sub pixel optimize line for canvas\n\t *\n\t * @param {Object} param\n\t * @param {Object} [param.shape]\n\t * @param {number} [param.shape.x1]\n\t * @param {number} [param.shape.y1]\n\t * @param {number} [param.shape.x2]\n\t * @param {number} [param.shape.y2]\n\t * @param {Object} [param.style]\n\t * @param {number} [param.style.lineWidth]\n\t * @return {Object} Modified param\n\t */\n\t\n\t\n\tfunction subPixelOptimizeLine(param) {\n\t  var shape = param.shape;\n\t  var lineWidth = param.style.lineWidth;\n\t\n\t  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n\t    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n\t  }\n\t\n\t  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n\t    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n\t  }\n\t\n\t  return param;\n\t}\n\t/**\n\t * Sub pixel optimize rect for canvas\n\t *\n\t * @param {Object} param\n\t * @param {Object} [param.shape]\n\t * @param {number} [param.shape.x]\n\t * @param {number} [param.shape.y]\n\t * @param {number} [param.shape.width]\n\t * @param {number} [param.shape.height]\n\t * @param {Object} [param.style]\n\t * @param {number} [param.style.lineWidth]\n\t * @return {Object} Modified param\n\t */\n\t\n\t\n\tfunction subPixelOptimizeRect(param) {\n\t  var shape = param.shape;\n\t  var lineWidth = param.style.lineWidth;\n\t  var originX = shape.x;\n\t  var originY = shape.y;\n\t  var originWidth = shape.width;\n\t  var originHeight = shape.height;\n\t  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n\t  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n\t  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n\t  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n\t  return param;\n\t}\n\t/**\n\t * Sub pixel optimize for canvas\n\t *\n\t * @param {number} position Coordinate, such as x, y\n\t * @param {number} lineWidth Should be nonnegative integer.\n\t * @param {boolean=} positiveOrNegative Default false (negative).\n\t * @return {number} Optimized position.\n\t */\n\t\n\t\n\tfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n\t  // Assure that (position + lineWidth / 2) is near integer edge,\n\t  // otherwise line will be fuzzy in canvas.\n\t  var doubledPosition = round(position * 2);\n\t  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n\t}\n\t\n\tfunction hasFillOrStroke(fillOrStroke) {\n\t  return fillOrStroke != null && fillOrStroke != 'none';\n\t}\n\t\n\tfunction liftColor(color) {\n\t  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n\t}\n\t/**\n\t * @private\n\t */\n\t\n\t\n\tfunction cacheElementStl(el) {\n\t  if (el.__hoverStlDirty) {\n\t    var stroke = el.style.stroke;\n\t    var fill = el.style.fill; // Create hoverStyle on mouseover\n\t\n\t    var hoverStyle = el.__hoverStl;\n\t    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n\t    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\t    var normalStyle = {};\n\t\n\t    for (var name in hoverStyle) {\n\t      // See comment in `doSingleEnterHover`.\n\t      if (hoverStyle[name] != null) {\n\t        normalStyle[name] = el.style[name];\n\t      }\n\t    }\n\t\n\t    el.__normalStl = normalStyle;\n\t    el.__hoverStlDirty = false;\n\t  }\n\t}\n\t/**\n\t * @private\n\t */\n\t\n\t\n\tfunction doSingleEnterHover(el) {\n\t  if (el.__isHover) {\n\t    return;\n\t  }\n\t\n\t  cacheElementStl(el);\n\t\n\t  if (el.useHoverLayer) {\n\t    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n\t  } else {\n\t    var style = el.style;\n\t    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n\t    // color should be returned to `autoColor`, rather than remain '#fff'.\n\t    // So we should rollback then apply again after style merging.\n\t\n\t    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n\t    // {\n\t    //    label: {\n\t    //        show: false,\n\t    //        position: 'outside',\n\t    //        fontSize: 18\n\t    //    },\n\t    //    emphasis: {\n\t    //        label: {\n\t    //            show: true\n\t    //        }\n\t    //    }\n\t    // },\n\t    // where properties of `emphasis` may not appear in `normal`. We previously use\n\t    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n\t    // But consider rich text and setOption in merge mode, it is impossible to cover\n\t    // all properties in merge. So we use merge mode when setting style here, where\n\t    // only properties that is not `null/undefined` can be set. The disadventage:\n\t    // null/undefined can not be used to remove style any more in `emphasis`.\n\t\n\t    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\t\n\t    if (insideRollbackOpt) {\n\t      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\t\n\t      if (style.textFill == null) {\n\t        style.textFill = insideRollbackOpt.autoColor;\n\t      }\n\t    }\n\t\n\t    el.dirty(false);\n\t    el.z2 += 1;\n\t  }\n\t\n\t  el.__isHover = true;\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction doSingleLeaveHover(el) {\n\t  if (!el.__isHover) {\n\t    return;\n\t  }\n\t\n\t  var normalStl = el.__normalStl;\n\t\n\t  if (el.useHoverLayer) {\n\t    el.__zr && el.__zr.removeHover(el);\n\t  } else {\n\t    // Consider null/undefined value, should use\n\t    // `setStyle` but not `extendFrom(stl, true)`.\n\t    normalStl && el.setStyle(normalStl);\n\t    el.z2 -= 1;\n\t  }\n\t\n\t  el.__isHover = false;\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction doEnterHover(el) {\n\t  el.type === 'group' ? el.traverse(function (child) {\n\t    if (child.type !== 'group') {\n\t      doSingleEnterHover(child);\n\t    }\n\t  }) : doSingleEnterHover(el);\n\t}\n\t\n\tfunction doLeaveHover(el) {\n\t  el.type === 'group' ? el.traverse(function (child) {\n\t    if (child.type !== 'group') {\n\t      doSingleLeaveHover(child);\n\t    }\n\t  }) : doSingleLeaveHover(el);\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction setElementHoverStl(el, hoverStl) {\n\t  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n\t  // Often used when item group has a label element and it's hoverStyle is different\n\t  el.__hoverStl = el.hoverStyle || hoverStl || {};\n\t  el.__hoverStlDirty = true;\n\t\n\t  if (el.__isHover) {\n\t    cacheElementStl(el);\n\t  }\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction onElementMouseOver(e) {\n\t  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n\t    return;\n\t  } // Only if element is not in emphasis status\n\t\n\t\n\t  !this.__isEmphasis && doEnterHover(this);\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction onElementMouseOut(e) {\n\t  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n\t    return;\n\t  } // Only if element is not in emphasis status\n\t\n\t\n\t  !this.__isEmphasis && doLeaveHover(this);\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction enterEmphasis() {\n\t  this.__isEmphasis = true;\n\t  doEnterHover(this);\n\t}\n\t/**\n\t * @inner\n\t */\n\t\n\t\n\tfunction leaveEmphasis() {\n\t  this.__isEmphasis = false;\n\t  doLeaveHover(this);\n\t}\n\t/**\n\t * Set hover style of element.\n\t * This method can be called repeatly without side-effects.\n\t * @param {module:zrender/Element} el\n\t * @param {Object} [hoverStyle]\n\t * @param {Object} [opt]\n\t * @param {boolean} [opt.hoverSilentOnTouch=false]\n\t *        In touch device, mouseover event will be trigger on touchstart event\n\t *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n\t *        conviniently use hoverStyle when tap on touch screen without additional\n\t *        code for compatibility.\n\t *        But if the chart/component has select feature, which usually also use\n\t *        hoverStyle, there might be conflict between 'select-highlight' and\n\t *        'hover-highlight' especially when roam is enabled (see geo for example).\n\t *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n\t *        on touch device.\n\t */\n\t\n\t\n\tfunction setHoverStyle(el, hoverStyle, opt) {\n\t  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\t  el.type === 'group' ? el.traverse(function (child) {\n\t    if (child.type !== 'group') {\n\t      setElementHoverStl(child, hoverStyle);\n\t    }\n\t  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\t\n\t  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\t\n\t  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n\t}\n\t/**\n\t * @param {Object|module:zrender/graphic/Style} normalStyle\n\t * @param {Object} emphasisStyle\n\t * @param {module:echarts/model/Model} normalModel\n\t * @param {module:echarts/model/Model} emphasisModel\n\t * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n\t * @param {string|Function} [opt.defaultText]\n\t * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n\t *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n\t * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n\t *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n\t * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n\t *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n\t * @param {Object} [normalSpecified]\n\t * @param {Object} [emphasisSpecified]\n\t */\n\t\n\t\n\tfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n\t  opt = opt || EMPTY_OBJ;\n\t  var labelFetcher = opt.labelFetcher;\n\t  var labelDataIndex = opt.labelDataIndex;\n\t  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n\t  // is not supported util someone requests.\n\t\n\t  var showNormal = normalModel.getShallow('show');\n\t  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n\t  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n\t  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\t\n\t  var baseText;\n\t\n\t  if (showNormal || showEmphasis) {\n\t    if (labelFetcher) {\n\t      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n\t    }\n\t\n\t    if (baseText == null) {\n\t      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n\t    }\n\t  }\n\t\n\t  var normalStyleText = showNormal ? baseText : null;\n\t  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\t\n\t  if (normalStyleText != null || emphasisStyleText != null) {\n\t    // Always set `textStyle` even if `normalStyle.text` is null, because default\n\t    // values have to be set on `normalStyle`.\n\t    // If we set default values on `emphasisStyle`, consider case:\n\t    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n\t    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n\t    // Then the 'red' will not work on emphasis.\n\t    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n\t    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n\t  }\n\t\n\t  normalStyle.text = normalStyleText;\n\t  emphasisStyle.text = emphasisStyleText;\n\t}\n\t/**\n\t * Set basic textStyle properties.\n\t * @param {Object|module:zrender/graphic/Style} textStyle\n\t * @param {module:echarts/model/Model} model\n\t * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n\t * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n\t * @param {boolean} [isEmphasis]\n\t */\n\t\n\t\n\tfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n\t  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n\t  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n\t  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\t  return textStyle;\n\t}\n\t/**\n\t * Set text option in the style.\n\t * @deprecated\n\t * @param {Object} textStyle\n\t * @param {module:echarts/model/Model} labelModel\n\t * @param {string|boolean} defaultColor Default text color.\n\t *        If set as false, it will be processed as a emphasis style.\n\t */\n\t\n\t\n\tfunction setText(textStyle, labelModel, defaultColor) {\n\t  var opt = {\n\t    isRectText: true\n\t  };\n\t  var isEmphasis;\n\t\n\t  if (defaultColor === false) {\n\t    isEmphasis = true;\n\t  } else {\n\t    // Support setting color as 'auto' to get visual color.\n\t    opt.autoColor = defaultColor;\n\t  }\n\t\n\t  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n\t  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\t}\n\t/**\n\t * {\n\t *      disableBox: boolean, Whether diable drawing box of block (outer most).\n\t *      isRectText: boolean,\n\t *      autoColor: string, specify a color when color is 'auto',\n\t *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n\t *              If autoColor specified, it is used as default textFill.\n\t *      useInsideStyle:\n\t *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n\t *                  if `textFill` is not specified.\n\t *              `false`: Do not use inside style.\n\t *              `null/undefined`: use inside style if `isRectText` is true and\n\t *                  `textFill` is not specified and textPosition contains `'inside'`.\n\t *      forceRich: boolean\n\t * }\n\t */\n\t\n\t\n\tfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n\t  // Consider there will be abnormal when merge hover style to normal style if given default value.\n\t  opt = opt || EMPTY_OBJ;\n\t\n\t  if (opt.isRectText) {\n\t    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n\t    // in bar series, and magric type should be considered.\n\t\n\t    textPosition === 'outside' && (textPosition = 'top');\n\t    textStyle.textPosition = textPosition;\n\t    textStyle.textOffset = textStyleModel.getShallow('offset');\n\t    var labelRotate = textStyleModel.getShallow('rotate');\n\t    labelRotate != null && (labelRotate *= Math.PI / 180);\n\t    textStyle.textRotation = labelRotate;\n\t    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n\t  }\n\t\n\t  var ecModel = textStyleModel.ecModel;\n\t  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n\t  // {\n\t  //     data: [{\n\t  //         value: 12,\n\t  //         label: {\n\t  //             rich: {\n\t  //                 // no 'a' here but using parent 'a'.\n\t  //             }\n\t  //         }\n\t  //     }],\n\t  //     rich: {\n\t  //         a: { ... }\n\t  //     }\n\t  // }\n\t\n\t  var richItemNames = getRichItemNames(textStyleModel);\n\t  var richResult;\n\t\n\t  if (richItemNames) {\n\t    richResult = {};\n\t\n\t    for (var name in richItemNames) {\n\t      if (richItemNames.hasOwnProperty(name)) {\n\t        // Cascade is supported in rich.\n\t        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\t\n\t        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n\t      }\n\t    }\n\t  }\n\t\n\t  textStyle.rich = richResult;\n\t  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\t\n\t  if (opt.forceRich && !opt.textStyle) {\n\t    opt.textStyle = {};\n\t  }\n\t\n\t  return textStyle;\n\t} // Consider case:\n\t// {\n\t//     data: [{\n\t//         value: 12,\n\t//         label: {\n\t//             rich: {\n\t//                 // no 'a' here but using parent 'a'.\n\t//             }\n\t//         }\n\t//     }],\n\t//     rich: {\n\t//         a: { ... }\n\t//     }\n\t// }\n\t\n\t\n\tfunction getRichItemNames(textStyleModel) {\n\t  // Use object to remove duplicated names.\n\t  var richItemNameMap;\n\t\n\t  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n\t    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\t\n\t    if (rich) {\n\t      richItemNameMap = richItemNameMap || {};\n\t\n\t      for (var name in rich) {\n\t        if (rich.hasOwnProperty(name)) {\n\t          richItemNameMap[name] = 1;\n\t        }\n\t      }\n\t    }\n\t\n\t    textStyleModel = textStyleModel.parentModel;\n\t  }\n\t\n\t  return richItemNameMap;\n\t}\n\t\n\tfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n\t  // In merge mode, default value should not be given.\n\t  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\t  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n\t  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n\t  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\t\n\t  if (!isEmphasis) {\n\t    if (isBlock) {\n\t      // Always set `insideRollback`, for clearing previous.\n\t      var originalTextPosition = textStyle.textPosition;\n\t      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n\t      // real location (like [10, 30]) in zrender.\n\t\n\t      textStyle.insideOriginalTextPosition = originalTextPosition;\n\t      textStyle.insideRollbackOpt = opt;\n\t    } // Set default finally.\n\t\n\t\n\t    if (textStyle.textFill == null) {\n\t      textStyle.textFill = opt.autoColor;\n\t    }\n\t  } // Do not use `getFont` here, because merge should be supported, where\n\t  // part of these properties may be changed in emphasis style, and the\n\t  // others should remain their original value got from normal style.\n\t\n\t\n\t  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n\t  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n\t  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n\t  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\t  textStyle.textAlign = textStyleModel.getShallow('align');\n\t  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n\t  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n\t  textStyle.textWidth = textStyleModel.getShallow('width');\n\t  textStyle.textHeight = textStyleModel.getShallow('height');\n\t  textStyle.textTag = textStyleModel.getShallow('tag');\n\t\n\t  if (!isBlock || !opt.disableBox) {\n\t    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n\t    textStyle.textPadding = textStyleModel.getShallow('padding');\n\t    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n\t    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n\t    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\t    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n\t    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n\t    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n\t    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n\t  }\n\t\n\t  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n\t  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n\t  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n\t  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n\t}\n\t\n\tfunction getAutoColor(color, opt) {\n\t  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n\t}\n\t\n\tfunction applyInsideStyle(textStyle, textPosition, opt) {\n\t  var useInsideStyle = opt.useInsideStyle;\n\t  var insideRollback;\n\t\n\t  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n\t  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n\t    insideRollback = {\n\t      textFill: null,\n\t      textStroke: textStyle.textStroke,\n\t      textStrokeWidth: textStyle.textStrokeWidth\n\t    };\n\t    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\t\n\t    if (textStyle.textStroke == null) {\n\t      textStyle.textStroke = opt.autoColor;\n\t      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n\t    }\n\t  }\n\t\n\t  return insideRollback;\n\t}\n\t\n\tfunction rollbackInsideStyle(style) {\n\t  var insideRollback = style.insideRollback;\n\t\n\t  if (insideRollback) {\n\t    style.textFill = insideRollback.textFill;\n\t    style.textStroke = insideRollback.textStroke;\n\t    style.textStrokeWidth = insideRollback.textStrokeWidth;\n\t  }\n\t}\n\t\n\tfunction getFont(opt, ecModel) {\n\t  // ecModel or default text style model.\n\t  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n\t  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n\t  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n\t}\n\t\n\tfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n\t  if (typeof dataIndex === 'function') {\n\t    cb = dataIndex;\n\t    dataIndex = null;\n\t  } // Do not check 'animation' property directly here. Consider this case:\n\t  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n\t  // but its parent model (`seriesModel`) does.\n\t\n\t\n\t  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\t\n\t  if (animationEnabled) {\n\t    var postfix = isUpdate ? 'Update' : '';\n\t    var duration = animatableModel.getShallow('animationDuration' + postfix);\n\t    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n\t    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\t\n\t    if (typeof animationDelay === 'function') {\n\t      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n\t    }\n\t\n\t    if (typeof duration === 'function') {\n\t      duration = duration(dataIndex);\n\t    }\n\t\n\t    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n\t  } else {\n\t    el.stopAnimation();\n\t    el.attr(props);\n\t    cb && cb();\n\t  }\n\t}\n\t/**\n\t * Update graphic element properties with or without animation according to the\n\t * configuration in series.\n\t *\n\t * Caution: this method will stop previous animation.\n\t * So if do not use this method to one element twice before\n\t * animation starts, unless you know what you are doing.\n\t *\n\t * @param {module:zrender/Element} el\n\t * @param {Object} props\n\t * @param {module:echarts/model/Model} [animatableModel]\n\t * @param {number} [dataIndex]\n\t * @param {Function} [cb]\n\t * @example\n\t *     graphic.updateProps(el, {\n\t *         position: [100, 100]\n\t *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n\t *     // Or\n\t *     graphic.updateProps(el, {\n\t *         position: [100, 100]\n\t *     }, seriesModel, function () { console.log('Animation done!'); });\n\t */\n\t\n\t\n\tfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n\t  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n\t}\n\t/**\n\t * Init graphic element properties with or without animation according to the\n\t * configuration in series.\n\t *\n\t * Caution: this method will stop previous animation.\n\t * So if do not use this method to one element twice before\n\t * animation starts, unless you know what you are doing.\n\t *\n\t * @param {module:zrender/Element} el\n\t * @param {Object} props\n\t * @param {module:echarts/model/Model} [animatableModel]\n\t * @param {number} [dataIndex]\n\t * @param {Function} cb\n\t */\n\t\n\t\n\tfunction initProps(el, props, animatableModel, dataIndex, cb) {\n\t  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n\t}\n\t/**\n\t * Get transform matrix of target (param target),\n\t * in coordinate of its ancestor (param ancestor)\n\t *\n\t * @param {module:zrender/mixin/Transformable} target\n\t * @param {module:zrender/mixin/Transformable} [ancestor]\n\t */\n\t\n\t\n\tfunction getTransform(target, ancestor) {\n\t  var mat = matrix.identity([]);\n\t\n\t  while (target && target !== ancestor) {\n\t    matrix.mul(mat, target.getLocalTransform(), mat);\n\t    target = target.parent;\n\t  }\n\t\n\t  return mat;\n\t}\n\t/**\n\t * Apply transform to an vertex.\n\t * @param {Array.<number>} target [x, y]\n\t * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n\t *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n\t *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n\t * @param {boolean=} invert Whether use invert matrix.\n\t * @return {Array.<number>} [x, y]\n\t */\n\t\n\t\n\tfunction applyTransform(target, transform, invert) {\n\t  if (transform && !zrUtil.isArrayLike(transform)) {\n\t    transform = Transformable.getLocalTransform(transform);\n\t  }\n\t\n\t  if (invert) {\n\t    transform = matrix.invert([], transform);\n\t  }\n\t\n\t  return vector.applyTransform([], target, transform);\n\t}\n\t/**\n\t * @param {string} direction 'left' 'right' 'top' 'bottom'\n\t * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n\t * @param {boolean=} invert Whether use invert matrix.\n\t * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n\t */\n\t\n\t\n\tfunction transformDirection(direction, transform, invert) {\n\t  // Pick a base, ensure that transform result will not be (0, 0).\n\t  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n\t  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\t  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n\t  vertex = applyTransform(vertex, transform, invert);\n\t  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n\t}\n\t/**\n\t * Apply group transition animation from g1 to g2.\n\t * If no animatableModel, no animation.\n\t */\n\t\n\t\n\tfunction groupTransition(g1, g2, animatableModel, cb) {\n\t  if (!g1 || !g2) {\n\t    return;\n\t  }\n\t\n\t  function getElMap(g) {\n\t    var elMap = {};\n\t    g.traverse(function (el) {\n\t      if (!el.isGroup && el.anid) {\n\t        elMap[el.anid] = el;\n\t      }\n\t    });\n\t    return elMap;\n\t  }\n\t\n\t  function getAnimatableProps(el) {\n\t    var obj = {\n\t      position: vector.clone(el.position),\n\t      rotation: el.rotation\n\t    };\n\t\n\t    if (el.shape) {\n\t      obj.shape = zrUtil.extend({}, el.shape);\n\t    }\n\t\n\t    return obj;\n\t  }\n\t\n\t  var elMap1 = getElMap(g1);\n\t  g2.traverse(function (el) {\n\t    if (!el.isGroup && el.anid) {\n\t      var oldEl = elMap1[el.anid];\n\t\n\t      if (oldEl) {\n\t        var newProp = getAnimatableProps(el);\n\t        el.attr(getAnimatableProps(oldEl));\n\t        updateProps(el, newProp, animatableModel, el.dataIndex);\n\t      } // else {\n\t      //     if (el.previousProps) {\n\t      //         graphic.updateProps\n\t      //     }\n\t      // }\n\t\n\t    }\n\t  });\n\t}\n\t/**\n\t * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n\t * @param {Object} rect {x, y, width, height}\n\t * @return {Array.<Array.<number>>} A new clipped points.\n\t */\n\t\n\t\n\tfunction clipPointsByRect(points, rect) {\n\t  return zrUtil.map(points, function (point) {\n\t    var x = point[0];\n\t    x = mathMax(x, rect.x);\n\t    x = mathMin(x, rect.x + rect.width);\n\t    var y = point[1];\n\t    y = mathMax(y, rect.y);\n\t    y = mathMin(y, rect.y + rect.height);\n\t    return [x, y];\n\t  });\n\t}\n\t/**\n\t * @param {Object} targetRect {x, y, width, height}\n\t * @param {Object} rect {x, y, width, height}\n\t * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n\t */\n\t\n\t\n\tfunction clipRectByRect(targetRect, rect) {\n\t  var x = mathMax(targetRect.x, rect.x);\n\t  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n\t  var y = mathMax(targetRect.y, rect.y);\n\t  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\t\n\t  if (x2 >= x && y2 >= y) {\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      width: x2 - x,\n\t      height: y2 - y\n\t    };\n\t  }\n\t}\n\t/**\n\t * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n\t * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n\t * @param {Object} [rect] {x, y, width, height}\n\t * @return {module:zrender/Element} Icon path or image element.\n\t */\n\t\n\t\n\tfunction createIcon(iconStr, opt, rect) {\n\t  opt = zrUtil.extend({\n\t    rectHover: true\n\t  }, opt);\n\t  var style = opt.style = {\n\t    strokeNoScale: true\n\t  };\n\t  rect = rect || {\n\t    x: -1,\n\t    y: -1,\n\t    width: 2,\n\t    height: 2\n\t  };\n\t\n\t  if (iconStr) {\n\t    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n\t  }\n\t}\n\t\n\texports.extendShape = extendShape;\n\texports.extendPath = extendPath;\n\texports.makePath = makePath;\n\texports.makeImage = makeImage;\n\texports.mergePath = mergePath;\n\texports.resizePath = resizePath;\n\texports.subPixelOptimizeLine = subPixelOptimizeLine;\n\texports.subPixelOptimizeRect = subPixelOptimizeRect;\n\texports.subPixelOptimize = subPixelOptimize;\n\texports.setHoverStyle = setHoverStyle;\n\texports.setLabelStyle = setLabelStyle;\n\texports.setTextStyle = setTextStyle;\n\texports.setText = setText;\n\texports.getFont = getFont;\n\texports.updateProps = updateProps;\n\texports.initProps = initProps;\n\texports.getTransform = getTransform;\n\texports.applyTransform = applyTransform;\n\texports.transformDirection = transformDirection;\n\texports.groupTransition = groupTransition;\n\texports.clipPointsByRect = clipPointsByRect;\n\texports.clipRectByRect = clipRectByRect;\n\texports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar _number = __webpack_require__(22);\n\t\n\tvar parsePercent = _number.parsePercent;\n\t\n\tvar formatUtil = __webpack_require__(44);\n\t\n\t// Layout helpers for each component positioning\n\tvar each = zrUtil.each;\n\t/**\n\t * @public\n\t */\n\t\n\tvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n\t/**\n\t * @public\n\t */\n\t\n\tvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\t\n\tfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n\t  var x = 0;\n\t  var y = 0;\n\t\n\t  if (maxWidth == null) {\n\t    maxWidth = Infinity;\n\t  }\n\t\n\t  if (maxHeight == null) {\n\t    maxHeight = Infinity;\n\t  }\n\t\n\t  var currentLineMaxSize = 0;\n\t  group.eachChild(function (child, idx) {\n\t    var position = child.position;\n\t    var rect = child.getBoundingRect();\n\t    var nextChild = group.childAt(idx + 1);\n\t    var nextChildRect = nextChild && nextChild.getBoundingRect();\n\t    var nextX;\n\t    var nextY;\n\t\n\t    if (orient === 'horizontal') {\n\t      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n\t      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n\t      // FIXME compare before adding gap?\n\t\n\t      if (nextX > maxWidth || child.newline) {\n\t        x = 0;\n\t        nextX = moveX;\n\t        y += currentLineMaxSize + gap;\n\t        currentLineMaxSize = rect.height;\n\t      } else {\n\t        // FIXME: consider rect.y is not `0`?\n\t        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n\t      }\n\t    } else {\n\t      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n\t      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\t\n\t      if (nextY > maxHeight || child.newline) {\n\t        x += currentLineMaxSize + gap;\n\t        y = 0;\n\t        nextY = moveY;\n\t        currentLineMaxSize = rect.width;\n\t      } else {\n\t        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n\t      }\n\t    }\n\t\n\t    if (child.newline) {\n\t      return;\n\t    }\n\t\n\t    position[0] = x;\n\t    position[1] = y;\n\t    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n\t  });\n\t}\n\t/**\n\t * VBox or HBox layouting\n\t * @param {string} orient\n\t * @param {module:zrender/container/Group} group\n\t * @param {number} gap\n\t * @param {number} [width=Infinity]\n\t * @param {number} [height=Infinity]\n\t */\n\t\n\t\n\tvar box = boxLayout;\n\t/**\n\t * VBox layouting\n\t * @param {module:zrender/container/Group} group\n\t * @param {number} gap\n\t * @param {number} [width=Infinity]\n\t * @param {number} [height=Infinity]\n\t */\n\t\n\tvar vbox = zrUtil.curry(boxLayout, 'vertical');\n\t/**\n\t * HBox layouting\n\t * @param {module:zrender/container/Group} group\n\t * @param {number} gap\n\t * @param {number} [width=Infinity]\n\t * @param {number} [height=Infinity]\n\t */\n\t\n\tvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n\t/**\n\t * If x or x2 is not specified or 'center' 'left' 'right',\n\t * the width would be as long as possible.\n\t * If y or y2 is not specified or 'middle' 'top' 'bottom',\n\t * the height would be as long as possible.\n\t *\n\t * @param {Object} positionInfo\n\t * @param {number|string} [positionInfo.x]\n\t * @param {number|string} [positionInfo.y]\n\t * @param {number|string} [positionInfo.x2]\n\t * @param {number|string} [positionInfo.y2]\n\t * @param {Object} containerRect {width, height}\n\t * @param {string|number} margin\n\t * @return {Object} {width, height}\n\t */\n\t\n\tfunction getAvailableSize(positionInfo, containerRect, margin) {\n\t  var containerWidth = containerRect.width;\n\t  var containerHeight = containerRect.height;\n\t  var x = parsePercent(positionInfo.x, containerWidth);\n\t  var y = parsePercent(positionInfo.y, containerHeight);\n\t  var x2 = parsePercent(positionInfo.x2, containerWidth);\n\t  var y2 = parsePercent(positionInfo.y2, containerHeight);\n\t  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n\t  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n\t  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n\t  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\t  margin = formatUtil.normalizeCssArray(margin || 0);\n\t  return {\n\t    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n\t    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n\t  };\n\t}\n\t/**\n\t * Parse position info.\n\t *\n\t * @param {Object} positionInfo\n\t * @param {number|string} [positionInfo.left]\n\t * @param {number|string} [positionInfo.top]\n\t * @param {number|string} [positionInfo.right]\n\t * @param {number|string} [positionInfo.bottom]\n\t * @param {number|string} [positionInfo.width]\n\t * @param {number|string} [positionInfo.height]\n\t * @param {number|string} [positionInfo.aspect] Aspect is width / height\n\t * @param {Object} containerRect\n\t * @param {string|number} [margin]\n\t *\n\t * @return {module:zrender/core/BoundingRect}\n\t */\n\t\n\t\n\tfunction getLayoutRect(positionInfo, containerRect, margin) {\n\t  margin = formatUtil.normalizeCssArray(margin || 0);\n\t  var containerWidth = containerRect.width;\n\t  var containerHeight = containerRect.height;\n\t  var left = parsePercent(positionInfo.left, containerWidth);\n\t  var top = parsePercent(positionInfo.top, containerHeight);\n\t  var right = parsePercent(positionInfo.right, containerWidth);\n\t  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n\t  var width = parsePercent(positionInfo.width, containerWidth);\n\t  var height = parsePercent(positionInfo.height, containerHeight);\n\t  var verticalMargin = margin[2] + margin[0];\n\t  var horizontalMargin = margin[1] + margin[3];\n\t  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\t\n\t  if (isNaN(width)) {\n\t    width = containerWidth - right - horizontalMargin - left;\n\t  }\n\t\n\t  if (isNaN(height)) {\n\t    height = containerHeight - bottom - verticalMargin - top;\n\t  }\n\t\n\t  if (aspect != null) {\n\t    // If width and height are not given\n\t    // 1. Graph should not exceeds the container\n\t    // 2. Aspect must be keeped\n\t    // 3. Graph should take the space as more as possible\n\t    // FIXME\n\t    // Margin is not considered, because there is no case that both\n\t    // using margin and aspect so far.\n\t    if (isNaN(width) && isNaN(height)) {\n\t      if (aspect > containerWidth / containerHeight) {\n\t        width = containerWidth * 0.8;\n\t      } else {\n\t        height = containerHeight * 0.8;\n\t      }\n\t    } // Calculate width or height with given aspect\n\t\n\t\n\t    if (isNaN(width)) {\n\t      width = aspect * height;\n\t    }\n\t\n\t    if (isNaN(height)) {\n\t      height = width / aspect;\n\t    }\n\t  } // If left is not specified, calculate left from right and width\n\t\n\t\n\t  if (isNaN(left)) {\n\t    left = containerWidth - right - width - horizontalMargin;\n\t  }\n\t\n\t  if (isNaN(top)) {\n\t    top = containerHeight - bottom - height - verticalMargin;\n\t  } // Align left and top\n\t\n\t\n\t  switch (positionInfo.left || positionInfo.right) {\n\t    case 'center':\n\t      left = containerWidth / 2 - width / 2 - margin[3];\n\t      break;\n\t\n\t    case 'right':\n\t      left = containerWidth - width - horizontalMargin;\n\t      break;\n\t  }\n\t\n\t  switch (positionInfo.top || positionInfo.bottom) {\n\t    case 'middle':\n\t    case 'center':\n\t      top = containerHeight / 2 - height / 2 - margin[0];\n\t      break;\n\t\n\t    case 'bottom':\n\t      top = containerHeight - height - verticalMargin;\n\t      break;\n\t  } // If something is wrong and left, top, width, height are calculated as NaN\n\t\n\t\n\t  left = left || 0;\n\t  top = top || 0;\n\t\n\t  if (isNaN(width)) {\n\t    // Width may be NaN if only one value is given except width\n\t    width = containerWidth - horizontalMargin - left - (right || 0);\n\t  }\n\t\n\t  if (isNaN(height)) {\n\t    // Height may be NaN if only one value is given except height\n\t    height = containerHeight - verticalMargin - top - (bottom || 0);\n\t  }\n\t\n\t  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n\t  rect.margin = margin;\n\t  return rect;\n\t}\n\t/**\n\t * Position a zr element in viewport\n\t *  Group position is specified by either\n\t *  {left, top}, {right, bottom}\n\t *  If all properties exists, right and bottom will be igonred.\n\t *\n\t * Logic:\n\t *     1. Scale (against origin point in parent coord)\n\t *     2. Rotate (against origin point in parent coord)\n\t *     3. Traslate (with el.position by this method)\n\t * So this method only fixes the last step 'Traslate', which does not affect\n\t * scaling and rotating.\n\t *\n\t * If be called repeatly with the same input el, the same result will be gotten.\n\t *\n\t * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n\t * @param {Object} positionInfo\n\t * @param {number|string} [positionInfo.left]\n\t * @param {number|string} [positionInfo.top]\n\t * @param {number|string} [positionInfo.right]\n\t * @param {number|string} [positionInfo.bottom]\n\t * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n\t * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n\t * @param {Object} containerRect\n\t * @param {string|number} margin\n\t * @param {Object} [opt]\n\t * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n\t * @param {Array.<number>} [opt.boundingMode='all']\n\t *        Specify how to calculate boundingRect when locating.\n\t *        'all': Position the boundingRect that is transformed and uioned\n\t *               both itself and its descendants.\n\t *               This mode simplies confine the elements in the bounding\n\t *               of their container (e.g., using 'right: 0').\n\t *        'raw': Position the boundingRect that is not transformed and only itself.\n\t *               This mode is useful when you want a element can overflow its\n\t *               container. (Consider a rotated circle needs to be located in a corner.)\n\t *               In this mode positionInfo.width/height can only be number.\n\t */\n\t\n\t\n\tfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n\t  var h = !opt || !opt.hv || opt.hv[0];\n\t  var v = !opt || !opt.hv || opt.hv[1];\n\t  var boundingMode = opt && opt.boundingMode || 'all';\n\t\n\t  if (!h && !v) {\n\t    return;\n\t  }\n\t\n\t  var rect;\n\t\n\t  if (boundingMode === 'raw') {\n\t    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n\t  } else {\n\t    rect = el.getBoundingRect();\n\t\n\t    if (el.needLocalTransform()) {\n\t      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n\t      // which should not be modified.\n\t\n\t      rect = rect.clone();\n\t      rect.applyTransform(transform);\n\t    }\n\t  } // The real width and height can not be specified but calculated by the given el.\n\t\n\t\n\t  positionInfo = getLayoutRect(zrUtil.defaults({\n\t    width: rect.width,\n\t    height: rect.height\n\t  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n\t  // (see zrender/core/Transformable#getLocalTransform),\n\t  // we can just only modify el.position to get final result.\n\t\n\t  var elPos = el.position;\n\t  var dx = h ? positionInfo.x - rect.x : 0;\n\t  var dy = v ? positionInfo.y - rect.y : 0;\n\t  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n\t}\n\t/**\n\t * @param {Object} option Contains some of the properties in HV_NAMES.\n\t * @param {number} hvIdx 0: horizontal; 1: vertical.\n\t */\n\t\n\t\n\tfunction sizeCalculable(option, hvIdx) {\n\t  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n\t}\n\t/**\n\t * Consider Case:\n\t * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n\t * through setOption or media query, using normal zrUtil.merge will cause\n\t * {right: 0} does not take effect.\n\t *\n\t * @example\n\t * ComponentModel.extend({\n\t *     init: function () {\n\t *         ...\n\t *         var inputPositionParams = layout.getLayoutParams(option);\n\t *         this.mergeOption(inputPositionParams);\n\t *     },\n\t *     mergeOption: function (newOption) {\n\t *         newOption && zrUtil.merge(thisOption, newOption, true);\n\t *         layout.mergeLayoutParam(thisOption, newOption);\n\t *     }\n\t * });\n\t *\n\t * @param {Object} targetOption\n\t * @param {Object} newOption\n\t * @param {Object|string} [opt]\n\t * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n\t *  that width (or height) should not be calculated by left and right (or top and bottom).\n\t */\n\t\n\t\n\tfunction mergeLayoutParam(targetOption, newOption, opt) {\n\t  !zrUtil.isObject(opt) && (opt = {});\n\t  var ignoreSize = opt.ignoreSize;\n\t  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\t  var hResult = merge(HV_NAMES[0], 0);\n\t  var vResult = merge(HV_NAMES[1], 1);\n\t  copy(HV_NAMES[0], targetOption, hResult);\n\t  copy(HV_NAMES[1], targetOption, vResult);\n\t\n\t  function merge(names, hvIdx) {\n\t    var newParams = {};\n\t    var newValueCount = 0;\n\t    var merged = {};\n\t    var mergedValueCount = 0;\n\t    var enoughParamNumber = 2;\n\t    each(names, function (name) {\n\t      merged[name] = targetOption[name];\n\t    });\n\t    each(names, function (name) {\n\t      // Consider case: newOption.width is null, which is\n\t      // set by user for removing width setting.\n\t      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n\t      hasValue(newParams, name) && newValueCount++;\n\t      hasValue(merged, name) && mergedValueCount++;\n\t    });\n\t\n\t    if (ignoreSize[hvIdx]) {\n\t      // Only one of left/right is premitted to exist.\n\t      if (hasValue(newOption, names[1])) {\n\t        merged[names[2]] = null;\n\t      } else if (hasValue(newOption, names[2])) {\n\t        merged[names[1]] = null;\n\t      }\n\t\n\t      return merged;\n\t    } // Case: newOption: {width: ..., right: ...},\n\t    // or targetOption: {right: ...} and newOption: {width: ...},\n\t    // There is no conflict when merged only has params count\n\t    // little than enoughParamNumber.\n\t\n\t\n\t    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n\t      return merged;\n\t    } // Case: newOption: {width: ..., right: ...},\n\t    // Than we can make sure user only want those two, and ignore\n\t    // all origin params in targetOption.\n\t    else if (newValueCount >= enoughParamNumber) {\n\t        return newParams;\n\t      } else {\n\t        // Chose another param from targetOption by priority.\n\t        for (var i = 0; i < names.length; i++) {\n\t          var name = names[i];\n\t\n\t          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n\t            newParams[name] = targetOption[name];\n\t            break;\n\t          }\n\t        }\n\t\n\t        return newParams;\n\t      }\n\t  }\n\t\n\t  function hasProp(obj, name) {\n\t    return obj.hasOwnProperty(name);\n\t  }\n\t\n\t  function hasValue(obj, name) {\n\t    return obj[name] != null && obj[name] !== 'auto';\n\t  }\n\t\n\t  function copy(names, target, source) {\n\t    each(names, function (name) {\n\t      target[name] = source[name];\n\t    });\n\t  }\n\t}\n\t/**\n\t * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n\t * @param {Object} source\n\t * @return {Object} Result contains those props.\n\t */\n\t\n\t\n\tfunction getLayoutParams(source) {\n\t  return copyLayoutParams({}, source);\n\t}\n\t/**\n\t * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n\t * @param {Object} source\n\t * @return {Object} Result contains those props.\n\t */\n\t\n\t\n\tfunction copyLayoutParams(target, source) {\n\t  source && target && each(LOCATION_PARAMS, function (name) {\n\t    source.hasOwnProperty(name) && (target[name] = source[name]);\n\t  });\n\t  return target;\n\t}\n\t\n\texports.LOCATION_PARAMS = LOCATION_PARAMS;\n\texports.HV_NAMES = HV_NAMES;\n\texports.box = box;\n\texports.vbox = vbox;\n\texports.hbox = hbox;\n\texports.getAvailableSize = getAvailableSize;\n\texports.getLayoutRect = getLayoutRect;\n\texports.positionElement = positionElement;\n\texports.sizeCalculable = sizeCalculable;\n\texports.mergeLayoutParam = mergeLayoutParam;\n\texports.getLayoutParams = getLayoutParams;\n\texports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar each = zrUtil.each;\n\tvar isObject = zrUtil.isObject;\n\tvar isArray = zrUtil.isArray;\n\t/**\n\t * name may be displayed on screen, so use '-'.\n\t * But we should make sure it is not duplicated\n\t * with user specified name, so use '\\0';\n\t */\n\t\n\tvar DEFAULT_COMPONENT_NAME = '\\0-';\n\t/**\n\t * If value is not array, then translate it to array.\n\t * @param  {*} value\n\t * @return {Array} [value] or value\n\t */\n\t\n\tfunction normalizeToArray(value) {\n\t  return value instanceof Array ? value : value == null ? [] : [value];\n\t}\n\t/**\n\t * Sync default option between normal and emphasis like `position` and `show`\n\t * In case some one will write code like\n\t *     label: {\n\t *          show: false,\n\t *          position: 'outside',\n\t *          fontSize: 18\n\t *     },\n\t *     emphasis: {\n\t *          label: { show: true }\n\t *     }\n\t * @param {Object} opt\n\t * @param {string} key\n\t * @param {Array.<string>} subOpts\n\t */\n\t\n\t\n\tfunction defaultEmphasis(opt, key, subOpts) {\n\t  if (opt) {\n\t    opt[key] = opt[key] || {};\n\t    opt.emphasis = opt.emphasis || {};\n\t    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\t\n\t    for (var i = 0, len = subOpts.length; i < len; i++) {\n\t      var subOptName = subOpts[i];\n\t\n\t      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n\t        opt.emphasis[key][subOptName] = opt[key][subOptName];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n\t//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n\t//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n\t//     // FIXME: deprecated, check and remove it.\n\t//     'textStyle'\n\t// ]);\n\t\n\t/**\n\t * The method do not ensure performance.\n\t * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n\t * This helper method retieves value from data.\n\t * @param {string|number|Date|Array|Object} dataItem\n\t * @return {number|string|Date|Array.<number|string|Date>}\n\t */\n\t\n\tfunction getDataItemValue(dataItem) {\n\t  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n\t}\n\t/**\n\t * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n\t * This helper method determine if dataItem has extra option besides value\n\t * @param {string|number|Date|Array|Object} dataItem\n\t */\n\t\n\t\n\tfunction isDataItemOption(dataItem) {\n\t  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n\t  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n\t}\n\t/**\n\t * Mapping to exists for merge.\n\t *\n\t * @public\n\t * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n\t * @param {Object|Array.<Object>} newCptOptions\n\t * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n\t *                          index of which is the same as exists.\n\t */\n\t\n\t\n\tfunction mappingToExists(exists, newCptOptions) {\n\t  // Mapping by the order by original option (but not order of\n\t  // new option) in merge mode. Because we should ensure\n\t  // some specified index (like xAxisIndex) is consistent with\n\t  // original option, which is easy to understand, espatially in\n\t  // media query. And in most case, merge option is used to\n\t  // update partial option but not be expected to change order.\n\t  newCptOptions = (newCptOptions || []).slice();\n\t  var result = zrUtil.map(exists || [], function (obj, index) {\n\t    return {\n\t      exist: obj\n\t    };\n\t  }); // Mapping by id or name if specified.\n\t\n\t  each(newCptOptions, function (cptOption, index) {\n\t    if (!isObject(cptOption)) {\n\t      return;\n\t    } // id has highest priority.\n\t\n\t\n\t    for (var i = 0; i < result.length; i++) {\n\t      if (!result[i].option // Consider name: two map to one.\n\t      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n\t        result[i].option = cptOption;\n\t        newCptOptions[index] = null;\n\t        return;\n\t      }\n\t    }\n\t\n\t    for (var i = 0; i < result.length; i++) {\n\t      var exist = result[i].exist;\n\t\n\t      if (!result[i].option // Consider name: two map to one.\n\t      // Can not match when both ids exist but different.\n\t      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n\t        result[i].option = cptOption;\n\t        newCptOptions[index] = null;\n\t        return;\n\t      }\n\t    }\n\t  }); // Otherwise mapping by index.\n\t\n\t  each(newCptOptions, function (cptOption, index) {\n\t    if (!isObject(cptOption)) {\n\t      return;\n\t    }\n\t\n\t    var i = 0;\n\t\n\t    for (; i < result.length; i++) {\n\t      var exist = result[i].exist;\n\t\n\t      if (!result[i].option // Existing model that already has id should be able to\n\t      // mapped to (because after mapping performed model may\n\t      // be assigned with a id, whish should not affect next\n\t      // mapping), except those has inner id.\n\t      && !isIdInner(exist) // Caution:\n\t      // Do not overwrite id. But name can be overwritten,\n\t      // because axis use name as 'show label text'.\n\t      // 'exist' always has id and name and we dont\n\t      // need to check it.\n\t      && cptOption.id == null) {\n\t        result[i].option = cptOption;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (i >= result.length) {\n\t      result.push({\n\t        option: cptOption\n\t      });\n\t    }\n\t  });\n\t  return result;\n\t}\n\t/**\n\t * Make id and name for mapping result (result of mappingToExists)\n\t * into `keyInfo` field.\n\t *\n\t * @public\n\t * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n\t *                          which order is the same as exists.\n\t * @return {Array.<Object>} The input.\n\t */\n\t\n\t\n\tfunction makeIdAndName(mapResult) {\n\t  // We use this id to hash component models and view instances\n\t  // in echarts. id can be specified by user, or auto generated.\n\t  // The id generation rule ensures new view instance are able\n\t  // to mapped to old instance when setOption are called in\n\t  // no-merge mode. So we generate model id by name and plus\n\t  // type in view id.\n\t  // name can be duplicated among components, which is convenient\n\t  // to specify multi components (like series) by one name.\n\t  // Ensure that each id is distinct.\n\t  var idMap = zrUtil.createHashMap();\n\t  each(mapResult, function (item, index) {\n\t    var existCpt = item.exist;\n\t    existCpt && idMap.set(existCpt.id, item);\n\t  });\n\t  each(mapResult, function (item, index) {\n\t    var opt = item.option;\n\t    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n\t    opt && opt.id != null && idMap.set(opt.id, item);\n\t    !item.keyInfo && (item.keyInfo = {});\n\t  }); // Make name and id.\n\t\n\t  each(mapResult, function (item, index) {\n\t    var existCpt = item.exist;\n\t    var opt = item.option;\n\t    var keyInfo = item.keyInfo;\n\t\n\t    if (!isObject(opt)) {\n\t      return;\n\t    } // name can be overwitten. Consider case: axis.name = '20km'.\n\t    // But id generated by name will not be changed, which affect\n\t    // only in that case: setOption with 'not merge mode' and view\n\t    // instance will be recreated, which can be accepted.\n\t\n\t\n\t    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : DEFAULT_COMPONENT_NAME;\n\t\n\t    if (existCpt) {\n\t      keyInfo.id = existCpt.id;\n\t    } else if (opt.id != null) {\n\t      keyInfo.id = opt.id + '';\n\t    } else {\n\t      // Consider this situatoin:\n\t      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n\t      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n\t      // Series with the same name between optionA and optionB\n\t      // should be mapped.\n\t      var idNum = 0;\n\t\n\t      do {\n\t        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n\t      } while (idMap.get(keyInfo.id));\n\t    }\n\t\n\t    idMap.set(keyInfo.id, item);\n\t  });\n\t}\n\t/**\n\t * @public\n\t * @param {Object} cptOption\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isIdInner(cptOption) {\n\t  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n\t}\n\t/**\n\t * A helper for removing duplicate items between batchA and batchB,\n\t * and in themselves, and categorize by series.\n\t *\n\t * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n\t * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n\t * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n\t */\n\t\n\t\n\tfunction compressBatches(batchA, batchB) {\n\t  var mapA = {};\n\t  var mapB = {};\n\t  makeMap(batchA || [], mapA);\n\t  makeMap(batchB || [], mapB, mapA);\n\t  return [mapToArray(mapA), mapToArray(mapB)];\n\t\n\t  function makeMap(sourceBatch, map, otherMap) {\n\t    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n\t      var seriesId = sourceBatch[i].seriesId;\n\t      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n\t      var otherDataIndices = otherMap && otherMap[seriesId];\n\t\n\t      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n\t        var dataIndex = dataIndices[j];\n\t\n\t        if (otherDataIndices && otherDataIndices[dataIndex]) {\n\t          otherDataIndices[dataIndex] = null;\n\t        } else {\n\t          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function mapToArray(map, isData) {\n\t    var result = [];\n\t\n\t    for (var i in map) {\n\t      if (map.hasOwnProperty(i) && map[i] != null) {\n\t        if (isData) {\n\t          result.push(+i);\n\t        } else {\n\t          var dataIndices = mapToArray(map[i], true);\n\t          dataIndices.length && result.push({\n\t            seriesId: i,\n\t            dataIndex: dataIndices\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    return result;\n\t  }\n\t}\n\t/**\n\t * @param {module:echarts/data/List} data\n\t * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n\t *                         each of which can be Array or primary type.\n\t * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n\t */\n\t\n\t\n\tfunction queryDataIndex(data, payload) {\n\t  if (payload.dataIndexInside != null) {\n\t    return payload.dataIndexInside;\n\t  } else if (payload.dataIndex != null) {\n\t    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n\t      return data.indexOfRawIndex(value);\n\t    }) : data.indexOfRawIndex(payload.dataIndex);\n\t  } else if (payload.name != null) {\n\t    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n\t      return data.indexOfName(value);\n\t    }) : data.indexOfName(payload.name);\n\t  }\n\t}\n\t/**\n\t * Enable property storage to any host object.\n\t * Notice: Serialization is not supported.\n\t *\n\t * For example:\n\t * var inner = zrUitl.makeInner();\n\t *\n\t * function some1(hostObj) {\n\t *      inner(hostObj).someProperty = 1212;\n\t *      ...\n\t * }\n\t * function some2() {\n\t *      var fields = inner(this);\n\t *      fields.someProperty1 = 1212;\n\t *      fields.someProperty2 = 'xx';\n\t *      ...\n\t * }\n\t *\n\t * @return {Function}\n\t */\n\t\n\t\n\tfunction makeInner() {\n\t  // Consider different scope by es module import.\n\t  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n\t  return function (hostObj) {\n\t    return hostObj[key] || (hostObj[key] = {});\n\t  };\n\t}\n\t\n\tvar innerUniqueIndex = 0;\n\t/**\n\t * @param {module:echarts/model/Global} ecModel\n\t * @param {string|Object} finder\n\t *        If string, e.g., 'geo', means {geoIndex: 0}.\n\t *        If Object, could contain some of these properties below:\n\t *        {\n\t *            seriesIndex, seriesId, seriesName,\n\t *            geoIndex, geoId, geoName,\n\t *            bmapIndex, bmapId, bmapName,\n\t *            xAxisIndex, xAxisId, xAxisName,\n\t *            yAxisIndex, yAxisId, yAxisName,\n\t *            gridIndex, gridId, gridName,\n\t *            ... (can be extended)\n\t *        }\n\t *        Each properties can be number|string|Array.<number>|Array.<string>\n\t *        For example, a finder could be\n\t *        {\n\t *            seriesIndex: 3,\n\t *            geoId: ['aa', 'cc'],\n\t *            gridName: ['xx', 'rr']\n\t *        }\n\t *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n\t *        If nothing or null/undefined specified, return nothing.\n\t * @param {Object} [opt]\n\t * @param {string} [opt.defaultMainType]\n\t * @param {Array.<string>} [opt.includeMainTypes]\n\t * @return {Object} result like:\n\t *        {\n\t *            seriesModels: [seriesModel1, seriesModel2],\n\t *            seriesModel: seriesModel1, // The first model\n\t *            geoModels: [geoModel1, geoModel2],\n\t *            geoModel: geoModel1, // The first model\n\t *            ...\n\t *        }\n\t */\n\t\n\tfunction parseFinder(ecModel, finder, opt) {\n\t  if (zrUtil.isString(finder)) {\n\t    var obj = {};\n\t    obj[finder + 'Index'] = 0;\n\t    finder = obj;\n\t  }\n\t\n\t  var defaultMainType = opt && opt.defaultMainType;\n\t\n\t  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n\t    finder[defaultMainType + 'Index'] = 0;\n\t  }\n\t\n\t  var result = {};\n\t  each(finder, function (value, key) {\n\t    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\t\n\t    if (key === 'dataIndex' || key === 'dataIndexInside') {\n\t      result[key] = value;\n\t      return;\n\t    }\n\t\n\t    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n\t    var mainType = parsedKey[1];\n\t    var queryType = (parsedKey[2] || '').toLowerCase();\n\t\n\t    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n\t      return;\n\t    }\n\t\n\t    var queryParam = {\n\t      mainType: mainType\n\t    };\n\t\n\t    if (queryType !== 'index' || value !== 'all') {\n\t      queryParam[queryType] = value;\n\t    }\n\t\n\t    var models = ecModel.queryComponents(queryParam);\n\t    result[mainType + 'Models'] = models;\n\t    result[mainType + 'Model'] = models[0];\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction has(obj, prop) {\n\t  return obj && obj.hasOwnProperty(prop);\n\t}\n\t\n\tfunction setAttribute(dom, key, value) {\n\t  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n\t}\n\t\n\tfunction getAttribute(dom, key) {\n\t  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n\t}\n\t\n\texports.DEFAULT_COMPONENT_NAME = DEFAULT_COMPONENT_NAME;\n\texports.normalizeToArray = normalizeToArray;\n\texports.defaultEmphasis = defaultEmphasis;\n\texports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\n\texports.getDataItemValue = getDataItemValue;\n\texports.isDataItemOption = isDataItemOption;\n\texports.mappingToExists = mappingToExists;\n\texports.makeIdAndName = makeIdAndName;\n\texports.isIdInner = isIdInner;\n\texports.compressBatches = compressBatches;\n\texports.queryDataIndex = queryDataIndex;\n\texports.makeInner = makeInner;\n\texports.parseFinder = parseFinder;\n\texports.setAttribute = setAttribute;\n\texports.getAttribute = getAttribute;\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar RADIAN_EPSILON = 1e-4;\n\t\n\tfunction _trim(str) {\n\t  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n\t}\n\t/**\n\t * Linear mapping a value from domain to range\n\t * @memberOf module:echarts/util/number\n\t * @param  {(number|Array.<number>)} val\n\t * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n\t * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n\t * @param  {boolean} clamp\n\t * @return {(number|Array.<number>}\n\t */\n\t\n\t\n\tfunction linearMap(val, domain, range, clamp) {\n\t  var subDomain = domain[1] - domain[0];\n\t  var subRange = range[1] - range[0];\n\t\n\t  if (subDomain === 0) {\n\t    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n\t  } // Avoid accuracy problem in edge, such as\n\t  // 146.39 - 62.83 === 83.55999999999999.\n\t  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n\t  // It is a little verbose for efficiency considering this method\n\t  // is a hotspot.\n\t\n\t\n\t  if (clamp) {\n\t    if (subDomain > 0) {\n\t      if (val <= domain[0]) {\n\t        return range[0];\n\t      } else if (val >= domain[1]) {\n\t        return range[1];\n\t      }\n\t    } else {\n\t      if (val >= domain[0]) {\n\t        return range[0];\n\t      } else if (val <= domain[1]) {\n\t        return range[1];\n\t      }\n\t    }\n\t  } else {\n\t    if (val === domain[0]) {\n\t      return range[0];\n\t    }\n\t\n\t    if (val === domain[1]) {\n\t      return range[1];\n\t    }\n\t  }\n\t\n\t  return (val - domain[0]) / subDomain * subRange + range[0];\n\t}\n\t/**\n\t * Convert a percent string to absolute number.\n\t * Returns NaN if percent is not a valid string or number\n\t * @memberOf module:echarts/util/number\n\t * @param {string|number} percent\n\t * @param {number} all\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction parsePercent(percent, all) {\n\t  switch (percent) {\n\t    case 'center':\n\t    case 'middle':\n\t      percent = '50%';\n\t      break;\n\t\n\t    case 'left':\n\t    case 'top':\n\t      percent = '0%';\n\t      break;\n\t\n\t    case 'right':\n\t    case 'bottom':\n\t      percent = '100%';\n\t      break;\n\t  }\n\t\n\t  if (typeof percent === 'string') {\n\t    if (_trim(percent).match(/%$/)) {\n\t      return parseFloat(percent) / 100 * all;\n\t    }\n\t\n\t    return parseFloat(percent);\n\t  }\n\t\n\t  return percent == null ? NaN : +percent;\n\t}\n\t/**\n\t * (1) Fix rounding error of float numbers.\n\t * (2) Support return string to avoid scientific notation like '3.5e-7'.\n\t *\n\t * @param {number} x\n\t * @param {number} [precision]\n\t * @param {boolean} [returnStr]\n\t * @return {number|string}\n\t */\n\t\n\t\n\tfunction round(x, precision, returnStr) {\n\t  if (precision == null) {\n\t    precision = 10;\n\t  } // Avoid range error\n\t\n\t\n\t  precision = Math.min(Math.max(0, precision), 20);\n\t  x = (+x).toFixed(precision);\n\t  return returnStr ? x : +x;\n\t}\n\t\n\tfunction asc(arr) {\n\t  arr.sort(function (a, b) {\n\t    return a - b;\n\t  });\n\t  return arr;\n\t}\n\t/**\n\t * Get precision\n\t * @param {number} val\n\t */\n\t\n\t\n\tfunction getPrecision(val) {\n\t  val = +val;\n\t\n\t  if (isNaN(val)) {\n\t    return 0;\n\t  } // It is much faster than methods converting number to string as follows\n\t  //      var tmp = val.toString();\n\t  //      return tmp.length - 1 - tmp.indexOf('.');\n\t  // especially when precision is low\n\t\n\t\n\t  var e = 1;\n\t  var count = 0;\n\t\n\t  while (Math.round(val * e) / e !== val) {\n\t    e *= 10;\n\t    count++;\n\t  }\n\t\n\t  return count;\n\t}\n\t/**\n\t * @param {string|number} val\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction getPrecisionSafe(val) {\n\t  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\t\n\t  var eIndex = str.indexOf('e');\n\t\n\t  if (eIndex > 0) {\n\t    var precision = +str.slice(eIndex + 1);\n\t    return precision < 0 ? -precision : 0;\n\t  } else {\n\t    var dotIndex = str.indexOf('.');\n\t    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n\t  }\n\t}\n\t/**\n\t * Minimal dicernible data precisioin according to a single pixel.\n\t *\n\t * @param {Array.<number>} dataExtent\n\t * @param {Array.<number>} pixelExtent\n\t * @return {number} precision\n\t */\n\t\n\t\n\tfunction getPixelPrecision(dataExtent, pixelExtent) {\n\t  var log = Math.log;\n\t  var LN10 = Math.LN10;\n\t  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n\t  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\t\n\t  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n\t  return !isFinite(precision) ? 20 : precision;\n\t}\n\t/**\n\t * Get a data of given precision, assuring the sum of percentages\n\t * in valueList is 1.\n\t * The largest remainer method is used.\n\t * https://en.wikipedia.org/wiki/Largest_remainder_method\n\t *\n\t * @param {Array.<number>} valueList a list of all data\n\t * @param {number} idx index of the data to be processed in valueList\n\t * @param {number} precision integer number showing digits of precision\n\t * @return {number} percent ranging from 0 to 100\n\t */\n\t\n\t\n\tfunction getPercentWithPrecision(valueList, idx, precision) {\n\t  if (!valueList[idx]) {\n\t    return 0;\n\t  }\n\t\n\t  var sum = zrUtil.reduce(valueList, function (acc, val) {\n\t    return acc + (isNaN(val) ? 0 : val);\n\t  }, 0);\n\t\n\t  if (sum === 0) {\n\t    return 0;\n\t  }\n\t\n\t  var digits = Math.pow(10, precision);\n\t  var votesPerQuota = zrUtil.map(valueList, function (val) {\n\t    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n\t  });\n\t  var targetSeats = digits * 100;\n\t  var seats = zrUtil.map(votesPerQuota, function (votes) {\n\t    // Assign automatic seats.\n\t    return Math.floor(votes);\n\t  });\n\t  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n\t    return acc + val;\n\t  }, 0);\n\t  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n\t    return votes - seats[idx];\n\t  }); // Has remainding votes.\n\t\n\t  while (currentSum < targetSeats) {\n\t    // Find next largest remainder.\n\t    var max = Number.NEGATIVE_INFINITY;\n\t    var maxId = null;\n\t\n\t    for (var i = 0, len = remainder.length; i < len; ++i) {\n\t      if (remainder[i] > max) {\n\t        max = remainder[i];\n\t        maxId = i;\n\t      }\n\t    } // Add a vote to max remainder.\n\t\n\t\n\t    ++seats[maxId];\n\t    remainder[maxId] = 0;\n\t    ++currentSum;\n\t  }\n\t\n\t  return seats[idx] / digits;\n\t} // Number.MAX_SAFE_INTEGER, ie do not support.\n\t\n\t\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t/**\n\t * To 0 - 2 * PI, considering negative radian.\n\t * @param {number} radian\n\t * @return {number}\n\t */\n\t\n\tfunction remRadian(radian) {\n\t  var pi2 = Math.PI * 2;\n\t  return (radian % pi2 + pi2) % pi2;\n\t}\n\t/**\n\t * @param {type} radian\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isRadianAroundZero(val) {\n\t  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n\t}\n\t\n\tvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\t\n\t/**\n\t * @param {string|Date|number} value These values can be accepted:\n\t *   + An instance of Date, represent a time in its own time zone.\n\t *   + Or string in a subset of ISO 8601, only including:\n\t *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n\t *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n\t *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n\t *     all of which will be treated as local time if time zone is not specified\n\t *     (see <https://momentjs.com/>).\n\t *   + Or other string format, including (all of which will be treated as loacal time):\n\t *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n\t *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n\t *   + a timestamp, which represent a time in UTC.\n\t * @return {Date} date\n\t */\n\t\n\tfunction parseDate(value) {\n\t  if (value instanceof Date) {\n\t    return value;\n\t  } else if (typeof value === 'string') {\n\t    // Different browsers parse date in different way, so we parse it manually.\n\t    // Some other issues:\n\t    // new Date('1970-01-01') is UTC,\n\t    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n\t    // See issue #3623\n\t    var match = TIME_REG.exec(value);\n\t\n\t    if (!match) {\n\t      // return Invalid Date.\n\t      return new Date(NaN);\n\t    } // Use local time when no timezone offset specifed.\n\t\n\t\n\t    if (!match[8]) {\n\t      // match[n] can only be string or undefined.\n\t      // But take care of '12' + 1 => '121'.\n\t      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n\t    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n\t    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n\t    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n\t    // then these code will get different result:\n\t    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n\t    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n\t    // So we should not use `new Date`, but use `Date.UTC`.\n\t    else {\n\t        var hour = +match[4] || 0;\n\t\n\t        if (match[8].toUpperCase() !== 'Z') {\n\t          hour -= match[8].slice(0, 3);\n\t        }\n\t\n\t        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n\t      }\n\t  } else if (value == null) {\n\t    return new Date(NaN);\n\t  }\n\t\n\t  return new Date(Math.round(value));\n\t}\n\t/**\n\t * Quantity of a number. e.g. 0.1, 1, 10, 100\n\t *\n\t * @param  {number} val\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction quantity(val) {\n\t  return Math.pow(10, quantityExponent(val));\n\t}\n\t\n\tfunction quantityExponent(val) {\n\t  return Math.floor(Math.log(val) / Math.LN10);\n\t}\n\t/**\n\t * find a “nice” number approximately equal to x. Round the number if round = true,\n\t * take ceiling if round = false. The primary observation is that the “nicest”\n\t * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n\t *\n\t * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n\t *\n\t * @param  {number} val Non-negative value.\n\t * @param  {boolean} round\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction nice(val, round) {\n\t  var exponent = quantityExponent(val);\n\t  var exp10 = Math.pow(10, exponent);\n\t  var f = val / exp10; // 1 <= f < 10\n\t\n\t  var nf;\n\t\n\t  if (round) {\n\t    if (f < 1.5) {\n\t      nf = 1;\n\t    } else if (f < 2.5) {\n\t      nf = 2;\n\t    } else if (f < 4) {\n\t      nf = 3;\n\t    } else if (f < 7) {\n\t      nf = 5;\n\t    } else {\n\t      nf = 10;\n\t    }\n\t  } else {\n\t    if (f < 1) {\n\t      nf = 1;\n\t    } else if (f < 2) {\n\t      nf = 2;\n\t    } else if (f < 3) {\n\t      nf = 3;\n\t    } else if (f < 5) {\n\t      nf = 5;\n\t    } else {\n\t      nf = 10;\n\t    }\n\t  }\n\t\n\t  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n\t  // 20 is the uppper bound of toFixed.\n\t\n\t  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n\t}\n\t/**\n\t * Order intervals asc, and split them when overlap.\n\t * expect(numberUtil.reformIntervals([\n\t *     {interval: [18, 62], close: [1, 1]},\n\t *     {interval: [-Infinity, -70], close: [0, 0]},\n\t *     {interval: [-70, -26], close: [1, 1]},\n\t *     {interval: [-26, 18], close: [1, 1]},\n\t *     {interval: [62, 150], close: [1, 1]},\n\t *     {interval: [106, 150], close: [1, 1]},\n\t *     {interval: [150, Infinity], close: [0, 0]}\n\t * ])).toEqual([\n\t *     {interval: [-Infinity, -70], close: [0, 0]},\n\t *     {interval: [-70, -26], close: [1, 1]},\n\t *     {interval: [-26, 18], close: [0, 1]},\n\t *     {interval: [18, 62], close: [0, 1]},\n\t *     {interval: [62, 150], close: [0, 1]},\n\t *     {interval: [150, Infinity], close: [0, 0]}\n\t * ]);\n\t * @param {Array.<Object>} list, where `close` mean open or close\n\t *        of the interval, and Infinity can be used.\n\t * @return {Array.<Object>} The origin list, which has been reformed.\n\t */\n\t\n\t\n\tfunction reformIntervals(list) {\n\t  list.sort(function (a, b) {\n\t    return littleThan(a, b, 0) ? -1 : 1;\n\t  });\n\t  var curr = -Infinity;\n\t  var currClose = 1;\n\t\n\t  for (var i = 0; i < list.length;) {\n\t    var interval = list[i].interval;\n\t    var close = list[i].close;\n\t\n\t    for (var lg = 0; lg < 2; lg++) {\n\t      if (interval[lg] <= curr) {\n\t        interval[lg] = curr;\n\t        close[lg] = !lg ? 1 - currClose : 1;\n\t      }\n\t\n\t      curr = interval[lg];\n\t      currClose = close[lg];\n\t    }\n\t\n\t    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n\t      list.splice(i, 1);\n\t    } else {\n\t      i++;\n\t    }\n\t  }\n\t\n\t  return list;\n\t\n\t  function littleThan(a, b, lg) {\n\t    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n\t  }\n\t}\n\t/**\n\t * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t * subtraction forces infinities to NaN\n\t *\n\t * @param {*} v\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isNumeric(v) {\n\t  return v - parseFloat(v) >= 0;\n\t}\n\t\n\texports.linearMap = linearMap;\n\texports.parsePercent = parsePercent;\n\texports.round = round;\n\texports.asc = asc;\n\texports.getPrecision = getPrecision;\n\texports.getPrecisionSafe = getPrecisionSafe;\n\texports.getPixelPrecision = getPixelPrecision;\n\texports.getPercentWithPrecision = getPercentWithPrecision;\n\texports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\n\texports.remRadian = remRadian;\n\texports.isRadianAroundZero = isRadianAroundZero;\n\texports.parseDate = parseDate;\n\texports.quantity = quantity;\n\texports.nice = nice;\n\texports.reformIntervals = reformIntervals;\n\texports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 195:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar graphic = __webpack_require__(18);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\t// Symbol factory\n\t\n\t/**\n\t * Triangle shape\n\t * @inner\n\t */\n\tvar Triangle = graphic.extendShape({\n\t  type: 'triangle',\n\t  shape: {\n\t    cx: 0,\n\t    cy: 0,\n\t    width: 0,\n\t    height: 0\n\t  },\n\t  buildPath: function (path, shape) {\n\t    var cx = shape.cx;\n\t    var cy = shape.cy;\n\t    var width = shape.width / 2;\n\t    var height = shape.height / 2;\n\t    path.moveTo(cx, cy - height);\n\t    path.lineTo(cx + width, cy + height);\n\t    path.lineTo(cx - width, cy + height);\n\t    path.closePath();\n\t  }\n\t});\n\t/**\n\t * Diamond shape\n\t * @inner\n\t */\n\t\n\tvar Diamond = graphic.extendShape({\n\t  type: 'diamond',\n\t  shape: {\n\t    cx: 0,\n\t    cy: 0,\n\t    width: 0,\n\t    height: 0\n\t  },\n\t  buildPath: function (path, shape) {\n\t    var cx = shape.cx;\n\t    var cy = shape.cy;\n\t    var width = shape.width / 2;\n\t    var height = shape.height / 2;\n\t    path.moveTo(cx, cy - height);\n\t    path.lineTo(cx + width, cy);\n\t    path.lineTo(cx, cy + height);\n\t    path.lineTo(cx - width, cy);\n\t    path.closePath();\n\t  }\n\t});\n\t/**\n\t * Pin shape\n\t * @inner\n\t */\n\t\n\tvar Pin = graphic.extendShape({\n\t  type: 'pin',\n\t  shape: {\n\t    // x, y on the cusp\n\t    x: 0,\n\t    y: 0,\n\t    width: 0,\n\t    height: 0\n\t  },\n\t  buildPath: function (path, shape) {\n\t    var x = shape.x;\n\t    var y = shape.y;\n\t    var w = shape.width / 5 * 3; // Height must be larger than width\n\t\n\t    var h = Math.max(w, shape.height);\n\t    var r = w / 2; // Dist on y with tangent point and circle center\n\t\n\t    var dy = r * r / (h - r);\n\t    var cy = y - h + r + dy;\n\t    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\t\n\t    var dx = Math.cos(angle) * r;\n\t    var tanX = Math.sin(angle);\n\t    var tanY = Math.cos(angle);\n\t    var cpLen = r * 0.6;\n\t    var cpLen2 = r * 0.7;\n\t    path.moveTo(x - dx, cy + dy);\n\t    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n\t    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n\t    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n\t    path.closePath();\n\t  }\n\t});\n\t/**\n\t * Arrow shape\n\t * @inner\n\t */\n\t\n\tvar Arrow = graphic.extendShape({\n\t  type: 'arrow',\n\t  shape: {\n\t    x: 0,\n\t    y: 0,\n\t    width: 0,\n\t    height: 0\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var height = shape.height;\n\t    var width = shape.width;\n\t    var x = shape.x;\n\t    var y = shape.y;\n\t    var dx = width / 3 * 2;\n\t    ctx.moveTo(x, y);\n\t    ctx.lineTo(x + dx, y + height);\n\t    ctx.lineTo(x, y + height / 4 * 3);\n\t    ctx.lineTo(x - dx, y + height);\n\t    ctx.lineTo(x, y);\n\t    ctx.closePath();\n\t  }\n\t});\n\t/**\n\t * Map of path contructors\n\t * @type {Object.<string, module:zrender/graphic/Path>}\n\t */\n\t\n\tvar symbolCtors = {\n\t  line: graphic.Line,\n\t  rect: graphic.Rect,\n\t  roundRect: graphic.Rect,\n\t  square: graphic.Rect,\n\t  circle: graphic.Circle,\n\t  diamond: Diamond,\n\t  pin: Pin,\n\t  arrow: Arrow,\n\t  triangle: Triangle\n\t};\n\tvar symbolShapeMakers = {\n\t  line: function (x, y, w, h, shape) {\n\t    // FIXME\n\t    shape.x1 = x;\n\t    shape.y1 = y + h / 2;\n\t    shape.x2 = x + w;\n\t    shape.y2 = y + h / 2;\n\t  },\n\t  rect: function (x, y, w, h, shape) {\n\t    shape.x = x;\n\t    shape.y = y;\n\t    shape.width = w;\n\t    shape.height = h;\n\t  },\n\t  roundRect: function (x, y, w, h, shape) {\n\t    shape.x = x;\n\t    shape.y = y;\n\t    shape.width = w;\n\t    shape.height = h;\n\t    shape.r = Math.min(w, h) / 4;\n\t  },\n\t  square: function (x, y, w, h, shape) {\n\t    var size = Math.min(w, h);\n\t    shape.x = x;\n\t    shape.y = y;\n\t    shape.width = size;\n\t    shape.height = size;\n\t  },\n\t  circle: function (x, y, w, h, shape) {\n\t    // Put circle in the center of square\n\t    shape.cx = x + w / 2;\n\t    shape.cy = y + h / 2;\n\t    shape.r = Math.min(w, h) / 2;\n\t  },\n\t  diamond: function (x, y, w, h, shape) {\n\t    shape.cx = x + w / 2;\n\t    shape.cy = y + h / 2;\n\t    shape.width = w;\n\t    shape.height = h;\n\t  },\n\t  pin: function (x, y, w, h, shape) {\n\t    shape.x = x + w / 2;\n\t    shape.y = y + h / 2;\n\t    shape.width = w;\n\t    shape.height = h;\n\t  },\n\t  arrow: function (x, y, w, h, shape) {\n\t    shape.x = x + w / 2;\n\t    shape.y = y + h / 2;\n\t    shape.width = w;\n\t    shape.height = h;\n\t  },\n\t  triangle: function (x, y, w, h, shape) {\n\t    shape.cx = x + w / 2;\n\t    shape.cy = y + h / 2;\n\t    shape.width = w;\n\t    shape.height = h;\n\t  }\n\t};\n\tvar symbolBuildProxies = {};\n\tzrUtil.each(symbolCtors, function (Ctor, name) {\n\t  symbolBuildProxies[name] = new Ctor();\n\t});\n\tvar SymbolClz = graphic.extendShape({\n\t  type: 'symbol',\n\t  shape: {\n\t    symbolType: '',\n\t    x: 0,\n\t    y: 0,\n\t    width: 0,\n\t    height: 0\n\t  },\n\t  beforeBrush: function () {\n\t    var style = this.style;\n\t    var shape = this.shape; // FIXME\n\t\n\t    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n\t      style.textPosition = ['50%', '40%'];\n\t      style.textAlign = 'center';\n\t      style.textVerticalAlign = 'middle';\n\t    }\n\t  },\n\t  buildPath: function (ctx, shape, inBundle) {\n\t    var symbolType = shape.symbolType;\n\t    var proxySymbol = symbolBuildProxies[symbolType];\n\t\n\t    if (shape.symbolType !== 'none') {\n\t      if (!proxySymbol) {\n\t        // Default rect\n\t        symbolType = 'rect';\n\t        proxySymbol = symbolBuildProxies[symbolType];\n\t      }\n\t\n\t      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n\t      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n\t    }\n\t  }\n\t}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\t\n\tfunction symbolPathSetColor(color, innerColor) {\n\t  if (this.type !== 'image') {\n\t    var symbolStyle = this.style;\n\t    var symbolShape = this.shape;\n\t\n\t    if (symbolShape && symbolShape.symbolType === 'line') {\n\t      symbolStyle.stroke = color;\n\t    } else if (this.__isEmptyBrush) {\n\t      symbolStyle.stroke = color;\n\t      symbolStyle.fill = innerColor || '#fff';\n\t    } else {\n\t      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n\t      symbolStyle.fill && (symbolStyle.fill = color);\n\t      symbolStyle.stroke && (symbolStyle.stroke = color);\n\t    }\n\t\n\t    this.dirty(false);\n\t  }\n\t}\n\t/**\n\t * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n\t * @param {string} symbolType\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} w\n\t * @param {number} h\n\t * @param {string} color\n\t * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n\t *                            for path and image only.\n\t */\n\t\n\t\n\tfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n\t  // TODO Support image object, DynamicImage.\n\t  var isEmpty = symbolType.indexOf('empty') === 0;\n\t\n\t  if (isEmpty) {\n\t    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n\t  }\n\t\n\t  var symbolPath;\n\t\n\t  if (symbolType.indexOf('image://') === 0) {\n\t    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n\t  } else if (symbolType.indexOf('path://') === 0) {\n\t    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n\t  } else {\n\t    symbolPath = new SymbolClz({\n\t      shape: {\n\t        symbolType: symbolType,\n\t        x: x,\n\t        y: y,\n\t        width: w,\n\t        height: h\n\t      }\n\t    });\n\t  }\n\t\n\t  symbolPath.__isEmptyBrush = isEmpty;\n\t  symbolPath.setColor = symbolPathSetColor;\n\t  symbolPath.setColor(color);\n\t  return symbolPath;\n\t}\n\t\n\texports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 274:\n/***/ (function(module, exports) {\n\n\tvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\n\tvar RATE = '\\0__throttleRate';\n\tvar THROTTLE_TYPE = '\\0__throttleType';\n\t/**\n\t * @public\n\t * @param {(Function)} fn\n\t * @param {number} [delay=0] Unit: ms.\n\t * @param {boolean} [debounce=false]\n\t *        true: If call interval less than `delay`, only the last call works.\n\t *        false: If call interval less than `delay, call works on fixed rate.\n\t * @return {(Function)} throttled fn.\n\t */\n\t\n\tfunction throttle(fn, delay, debounce) {\n\t  var currCall;\n\t  var lastCall = 0;\n\t  var lastExec = 0;\n\t  var timer = null;\n\t  var diff;\n\t  var scope;\n\t  var args;\n\t  var debounceNextCall;\n\t  delay = delay || 0;\n\t\n\t  function exec() {\n\t    lastExec = new Date().getTime();\n\t    timer = null;\n\t    fn.apply(scope, args || []);\n\t  }\n\t\n\t  var cb = function () {\n\t    currCall = new Date().getTime();\n\t    scope = this;\n\t    args = arguments;\n\t    var thisDelay = debounceNextCall || delay;\n\t    var thisDebounce = debounceNextCall || debounce;\n\t    debounceNextCall = null;\n\t    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\t    clearTimeout(timer);\n\t\n\t    if (thisDebounce) {\n\t      timer = setTimeout(exec, thisDelay);\n\t    } else {\n\t      if (diff >= 0) {\n\t        exec();\n\t      } else {\n\t        timer = setTimeout(exec, -diff);\n\t      }\n\t    }\n\t\n\t    lastCall = currCall;\n\t  };\n\t  /**\n\t   * Clear throttle.\n\t   * @public\n\t   */\n\t\n\t\n\t  cb.clear = function () {\n\t    if (timer) {\n\t      clearTimeout(timer);\n\t      timer = null;\n\t    }\n\t  };\n\t  /**\n\t   * Enable debounce once.\n\t   */\n\t\n\t\n\t  cb.debounceNextCall = function (debounceDelay) {\n\t    debounceNextCall = debounceDelay;\n\t  };\n\t\n\t  return cb;\n\t}\n\t/**\n\t * Create throttle method or update throttle rate.\n\t *\n\t * @example\n\t * ComponentView.prototype.render = function () {\n\t *     ...\n\t *     throttle.createOrUpdate(\n\t *         this,\n\t *         '_dispatchAction',\n\t *         this.model.get('throttle'),\n\t *         'fixRate'\n\t *     );\n\t * };\n\t * ComponentView.prototype.remove = function () {\n\t *     throttle.clear(this, '_dispatchAction');\n\t * };\n\t * ComponentView.prototype.dispose = function () {\n\t *     throttle.clear(this, '_dispatchAction');\n\t * };\n\t *\n\t * @public\n\t * @param {Object} obj\n\t * @param {string} fnAttr\n\t * @param {number} [rate]\n\t * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n\t * @return {Function} throttled function.\n\t */\n\t\n\t\n\tfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n\t  var fn = obj[fnAttr];\n\t\n\t  if (!fn) {\n\t    return;\n\t  }\n\t\n\t  var originFn = fn[ORIGIN_METHOD] || fn;\n\t  var lastThrottleType = fn[THROTTLE_TYPE];\n\t  var lastRate = fn[RATE];\n\t\n\t  if (lastRate !== rate || lastThrottleType !== throttleType) {\n\t    if (rate == null || !throttleType) {\n\t      return obj[fnAttr] = originFn;\n\t    }\n\t\n\t    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n\t    fn[ORIGIN_METHOD] = originFn;\n\t    fn[THROTTLE_TYPE] = throttleType;\n\t    fn[RATE] = rate;\n\t  }\n\t\n\t  return fn;\n\t}\n\t/**\n\t * Clear throttle. Example see throttle.createOrUpdate.\n\t *\n\t * @public\n\t * @param {Object} obj\n\t * @param {string} fnAttr\n\t */\n\t\n\t\n\tfunction clear(obj, fnAttr) {\n\t  var fn = obj[fnAttr];\n\t\n\t  if (fn && fn[ORIGIN_METHOD]) {\n\t    obj[fnAttr] = fn[ORIGIN_METHOD];\n\t  }\n\t}\n\t\n\texports.throttle = throttle;\n\texports.createOrUpdate = createOrUpdate;\n\texports.clear = clear;\n\n/***/ }),\n\n/***/ 826:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar each = _util.each;\n\t\n\tvar Group = __webpack_require__(231);\n\t\n\tvar componentUtil = __webpack_require__(194);\n\t\n\tvar clazzUtil = __webpack_require__(56);\n\t\n\tvar modelUtil = __webpack_require__(11);\n\t\n\tvar _task = __webpack_require__(273);\n\t\n\tvar createTask = _task.createTask;\n\t\n\tvar createRenderPlanner = __webpack_require__(773);\n\t\n\tvar inner = modelUtil.makeInner();\n\tvar renderPlanner = createRenderPlanner();\n\t\n\tfunction Chart() {\n\t  /**\n\t   * @type {module:zrender/container/Group}\n\t   * @readOnly\n\t   */\n\t  this.group = new Group();\n\t  /**\n\t   * @type {string}\n\t   * @readOnly\n\t   */\n\t\n\t  this.uid = componentUtil.getUID('viewChart');\n\t  this.renderTask = createTask({\n\t    plan: renderTaskPlan,\n\t    reset: renderTaskReset\n\t  });\n\t  this.renderTask.context = {\n\t    view: this\n\t  };\n\t}\n\t\n\tChart.prototype = {\n\t  type: 'chart',\n\t\n\t  /**\n\t   * Init the chart.\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   */\n\t  init: function (ecModel, api) {},\n\t\n\t  /**\n\t   * Render the chart.\n\t   * @param  {module:echarts/model/Series} seriesModel\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @param  {Object} payload\n\t   */\n\t  render: function (seriesModel, ecModel, api, payload) {},\n\t\n\t  /**\n\t   * Highlight series or specified data item.\n\t   * @param  {module:echarts/model/Series} seriesModel\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @param  {Object} payload\n\t   */\n\t  highlight: function (seriesModel, ecModel, api, payload) {\n\t    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n\t  },\n\t\n\t  /**\n\t   * Downplay series or specified data item.\n\t   * @param  {module:echarts/model/Series} seriesModel\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @param  {Object} payload\n\t   */\n\t  downplay: function (seriesModel, ecModel, api, payload) {\n\t    toggleHighlight(seriesModel.getData(), payload, 'normal');\n\t  },\n\t\n\t  /**\n\t   * Remove self.\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   */\n\t  remove: function (ecModel, api) {\n\t    this.group.removeAll();\n\t  },\n\t\n\t  /**\n\t   * Dispose self.\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   */\n\t  dispose: function () {},\n\t\n\t  /**\n\t   * Rendering preparation in progressive mode.\n\t   * @param  {module:echarts/model/Series} seriesModel\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @param  {Object} payload\n\t   */\n\t  incrementalPrepareRender: null,\n\t\n\t  /**\n\t   * Render in progressive mode.\n\t   * @param  {module:echarts/model/Series} seriesModel\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @param  {Object} payload\n\t   */\n\t  incrementalRender: null,\n\t\n\t  /**\n\t   * Update transform directly.\n\t   * @param  {module:echarts/model/Series} seriesModel\n\t   * @param  {module:echarts/model/Global} ecModel\n\t   * @param  {module:echarts/ExtensionAPI} api\n\t   * @param  {Object} payload\n\t   * @return {Object} {update: true}\n\t   */\n\t  updateTransform: null\n\t  /**\n\t   * The view contains the given point.\n\t   * @interface\n\t   * @param {Array.<number>} point\n\t   * @return {boolean}\n\t   */\n\t  // containPoint: function () {}\n\t\n\t};\n\tvar chartProto = Chart.prototype;\n\t\n\tchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n\t  this.render(seriesModel, ecModel, api, payload);\n\t};\n\t/**\n\t * Set state of single element\n\t * @param  {module:zrender/Element} el\n\t * @param  {string} state\n\t */\n\t\n\t\n\tfunction elSetState(el, state) {\n\t  if (el) {\n\t    el.trigger(state);\n\t\n\t    if (el.type === 'group') {\n\t      for (var i = 0; i < el.childCount(); i++) {\n\t        elSetState(el.childAt(i), state);\n\t      }\n\t    }\n\t  }\n\t}\n\t/**\n\t * @param  {module:echarts/data/List} data\n\t * @param  {Object} payload\n\t * @param  {string} state 'normal'|'emphasis'\n\t */\n\t\n\t\n\tfunction toggleHighlight(data, payload, state) {\n\t  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\t\n\t  if (dataIndex != null) {\n\t    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n\t      elSetState(data.getItemGraphicEl(dataIdx), state);\n\t    });\n\t  } else {\n\t    data.eachItemGraphicEl(function (el) {\n\t      elSetState(el, state);\n\t    });\n\t  }\n\t} // Enable Chart.extend.\n\t\n\t\n\tclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\t\n\tclazzUtil.enableClassManagement(Chart, {\n\t  registerWhenExtend: true\n\t});\n\t\n\tChart.markUpdateMethod = function (payload, methodName) {\n\t  inner(payload).updateMethod = methodName;\n\t};\n\t\n\tfunction renderTaskPlan(context) {\n\t  return renderPlanner(context.model);\n\t}\n\t\n\tfunction renderTaskReset(context) {\n\t  var seriesModel = context.model;\n\t  var ecModel = context.ecModel;\n\t  var api = context.api;\n\t  var payload = context.payload; // ???! remove updateView updateVisual\n\t\n\t  var incremental = seriesModel.pipelineContext.incrementalRender;\n\t  var view = context.view;\n\t  var updateMethod = payload && inner(payload).updateMethod;\n\t  var methodName = incremental && view.incrementalPrepareRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n\t  view[methodName](seriesModel, ecModel, api, payload);\n\t  return incremental ? renderTaskProgress : null;\n\t}\n\t\n\tfunction renderTaskProgress(params, context) {\n\t  context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n\t}\n\t\n\tvar _default = Chart;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 827:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Group = __webpack_require__(231);\n\t\n\tvar componentUtil = __webpack_require__(194);\n\t\n\tvar clazzUtil = __webpack_require__(56);\n\t\n\tvar Component = function () {\n\t  /**\n\t   * @type {module:zrender/container/Group}\n\t   * @readOnly\n\t   */\n\t  this.group = new Group();\n\t  /**\n\t   * @type {string}\n\t   * @readOnly\n\t   */\n\t\n\t  this.uid = componentUtil.getUID('viewComponent');\n\t};\n\t\n\tComponent.prototype = {\n\t  constructor: Component,\n\t  init: function (ecModel, api) {},\n\t  render: function (componentModel, ecModel, api, payload) {},\n\t  dispose: function () {}\n\t};\n\tvar componentProto = Component.prototype;\n\t\n\tcomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n\t}; // Enable Component.extend.\n\t\n\t\n\tclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\t\n\tclazzUtil.enableClassManagement(Component, {\n\t  registerWhenExtend: true\n\t});\n\tvar _default = Component;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar lang = __webpack_require__(806);\n\t\n\tvar _dataProvider = __webpack_require__(128);\n\t\n\tvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\t\n\tfunction _default(dom, ecModel) {\n\t  var ariaModel = ecModel.getModel('aria');\n\t\n\t  if (!ariaModel.get('show')) {\n\t    return;\n\t  } else if (ariaModel.get('description')) {\n\t    dom.setAttribute('aria-label', ariaModel.get('description'));\n\t    return;\n\t  }\n\t\n\t  var seriesCnt = 0;\n\t  ecModel.eachSeries(function (seriesModel, idx) {\n\t    ++seriesCnt;\n\t  }, this);\n\t  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n\t  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n\t  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n\t  var ariaLabel;\n\t\n\t  if (seriesCnt < 1) {\n\t    // No series, no aria label\n\t    return;\n\t  } else {\n\t    var title = getTitle();\n\t\n\t    if (title) {\n\t      ariaLabel = replace(getConfig('general.withTitle'), {\n\t        title: title\n\t      });\n\t    } else {\n\t      ariaLabel = getConfig('general.withoutTitle');\n\t    }\n\t\n\t    var seriesLabels = [];\n\t    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n\t    ariaLabel += replace(getConfig(prefix), {\n\t      seriesCount: seriesCnt\n\t    });\n\t    ecModel.eachSeries(function (seriesModel, idx) {\n\t      if (idx < displaySeriesCnt) {\n\t        var seriesLabel;\n\t        var seriesName = seriesModel.get('name');\n\t        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n\t        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n\t        seriesLabel = replace(seriesLabel, {\n\t          seriesId: seriesModel.seriesIndex,\n\t          seriesName: seriesModel.get('name'),\n\t          seriesType: getSeriesTypeName(seriesModel.subType)\n\t        });\n\t        var data = seriesModel.getData();\n\t        window.data = data;\n\t\n\t        if (data.count() > maxDataCnt) {\n\t          // Show part of data\n\t          seriesLabel += replace(getConfig('data.partialData'), {\n\t            displayCnt: maxDataCnt\n\t          });\n\t        } else {\n\t          seriesLabel += getConfig('data.allData');\n\t        }\n\t\n\t        var dataLabels = [];\n\t\n\t        for (var i = 0; i < data.count(); i++) {\n\t          if (i < maxDataCnt) {\n\t            var name = data.getName(i);\n\t            var value = retrieveRawValue(data, i);\n\t            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n\t              name: name,\n\t              value: value\n\t            }));\n\t          }\n\t        }\n\t\n\t        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n\t        seriesLabels.push(seriesLabel);\n\t      }\n\t    });\n\t    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n\t    dom.setAttribute('aria-label', ariaLabel);\n\t  }\n\t\n\t  function replace(str, keyValues) {\n\t    if (typeof str !== 'string') {\n\t      return str;\n\t    }\n\t\n\t    var result = str;\n\t    zrUtil.each(keyValues, function (value, key) {\n\t      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n\t    });\n\t    return result;\n\t  }\n\t\n\t  function getConfig(path) {\n\t    var userConfig = ariaModel.get(path);\n\t\n\t    if (userConfig == null) {\n\t      var pathArr = path.split('.');\n\t      var result = lang.aria;\n\t\n\t      for (var i = 0; i < pathArr.length; ++i) {\n\t        result = result[pathArr[i]];\n\t      }\n\t\n\t      return result;\n\t    } else {\n\t      return userConfig;\n\t    }\n\t  }\n\t\n\t  function getTitle() {\n\t    var title = ecModel.getModel('title').option;\n\t\n\t    if (title && title.length) {\n\t      title = title[0];\n\t    }\n\t\n\t    return title && title.text;\n\t  }\n\t\n\t  function getSeriesTypeName(type) {\n\t    return lang.series.typeNames[type] || '自定义图';\n\t  }\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 829:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Gradient = __webpack_require__(360);\n\t\n\tvar _default = {\n\t  createOnAllSeries: true,\n\t  performRawSeries: true,\n\t  reset: function (seriesModel, ecModel) {\n\t    var data = seriesModel.getData();\n\t    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n\t    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n\t    || seriesModel.getColorFromPalette( // TODO series count changed.\n\t    seriesModel.get('name'), null, ecModel.getSeriesCount()); // Default color\n\t    // FIXME Set color function or use the platte color\n\t\n\t    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\t\n\t    if (!ecModel.isSeriesFiltered(seriesModel)) {\n\t      if (typeof color === 'function' && !(color instanceof Gradient)) {\n\t        data.each(function (idx) {\n\t          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n\t        });\n\t      } // itemStyle in each data item\n\t\n\t\n\t      var dataEach = function (data, idx) {\n\t        var itemModel = data.getItemModel(idx);\n\t        var color = itemModel.get(colorAccessPath, true);\n\t\n\t        if (color != null) {\n\t          data.setItemVisual(idx, 'color', color);\n\t        }\n\t      };\n\t\n\t      return {\n\t        dataEach: data.hasItemOption ? dataEach : null\n\t      };\n\t    }\n\t  }\n\t};\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 830:\n/***/ (function(module, exports) {\n\n\tfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n\t  // Encoding visual for all series include which is filtered for legend drawing\n\t  return {\n\t    seriesType: seriesType,\n\t    performRawSeries: true,\n\t    reset: function (seriesModel, ecModel, api) {\n\t      var data = seriesModel.getData();\n\t      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n\t      var symbolSize = seriesModel.get('symbolSize');\n\t      data.setVisual({\n\t        legendSymbol: legendSymbol || symbolType,\n\t        symbol: symbolType,\n\t        symbolSize: symbolSize\n\t      }); // Only visible series has each data be visual encoded\n\t\n\t      if (ecModel.isSeriesFiltered(seriesModel)) {\n\t        return;\n\t      }\n\t\n\t      var hasCallback = typeof symbolSize === 'function';\n\t\n\t      function dataEach(data, idx) {\n\t        if (typeof symbolSize === 'function') {\n\t          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\t\n\t          var params = seriesModel.getDataParams(idx);\n\t          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n\t        }\n\t\n\t        if (data.hasItemOption) {\n\t          var itemModel = data.getItemModel(idx);\n\t          var itemSymbolType = itemModel.getShallow('symbol', true);\n\t          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\t\n\t          if (itemSymbolType != null) {\n\t            data.setItemVisual(idx, 'symbol', itemSymbolType);\n\t          }\n\t\n\t          if (itemSymbolSize != null) {\n\t            // PENDING Transform symbolSize ?\n\t            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n\t          }\n\t        }\n\t      }\n\t\n\t      return {\n\t        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 558:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar guid = __webpack_require__(564);\n\t\n\tvar Eventful = __webpack_require__(115);\n\t\n\tvar Transformable = __webpack_require__(362);\n\t\n\tvar Animatable = __webpack_require__(1519);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\t/**\n\t * @alias module:zrender/Element\n\t * @constructor\n\t * @extends {module:zrender/mixin/Animatable}\n\t * @extends {module:zrender/mixin/Transformable}\n\t * @extends {module:zrender/mixin/Eventful}\n\t */\n\tvar Element = function (opts) {\n\t  // jshint ignore:line\n\t  Transformable.call(this, opts);\n\t  Eventful.call(this, opts);\n\t  Animatable.call(this, opts);\n\t  /**\n\t   * 画布元素ID\n\t   * @type {string}\n\t   */\n\t\n\t  this.id = opts.id || guid();\n\t};\n\t\n\tElement.prototype = {\n\t  /**\n\t   * 元素类型\n\t   * Element type\n\t   * @type {string}\n\t   */\n\t  type: 'element',\n\t\n\t  /**\n\t   * 元素名字\n\t   * Element name\n\t   * @type {string}\n\t   */\n\t  name: '',\n\t\n\t  /**\n\t   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n\t   * ZRender instance will be assigned when element is associated with zrender\n\t   * @name module:/zrender/Element#__zr\n\t   * @type {module:zrender/ZRender}\n\t   */\n\t  __zr: null,\n\t\n\t  /**\n\t   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n\t   * If ignore drawing and events of the element object\n\t   * @name module:/zrender/Element#ignore\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  ignore: false,\n\t\n\t  /**\n\t   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n\t   * 该路径会继承被裁减对象的变换\n\t   * @type {module:zrender/graphic/Path}\n\t   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n\t   * @readOnly\n\t   */\n\t  clipPath: null,\n\t\n\t  /**\n\t   * 是否是 Group\n\t   * @type {boolean}\n\t   */\n\t  isGroup: false,\n\t\n\t  /**\n\t   * Drift element\n\t   * @param  {number} dx dx on the global space\n\t   * @param  {number} dy dy on the global space\n\t   */\n\t  drift: function (dx, dy) {\n\t    switch (this.draggable) {\n\t      case 'horizontal':\n\t        dy = 0;\n\t        break;\n\t\n\t      case 'vertical':\n\t        dx = 0;\n\t        break;\n\t    }\n\t\n\t    var m = this.transform;\n\t\n\t    if (!m) {\n\t      m = this.transform = [1, 0, 0, 1, 0, 0];\n\t    }\n\t\n\t    m[4] += dx;\n\t    m[5] += dy;\n\t    this.decomposeTransform();\n\t    this.dirty(false);\n\t  },\n\t\n\t  /**\n\t   * Hook before update\n\t   */\n\t  beforeUpdate: function () {},\n\t\n\t  /**\n\t   * Hook after update\n\t   */\n\t  afterUpdate: function () {},\n\t\n\t  /**\n\t   * Update each frame\n\t   */\n\t  update: function () {\n\t    this.updateTransform();\n\t  },\n\t\n\t  /**\n\t   * @param  {Function} cb\n\t   * @param  {}   context\n\t   */\n\t  traverse: function (cb, context) {},\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  attrKV: function (key, value) {\n\t    if (key === 'position' || key === 'scale' || key === 'origin') {\n\t      // Copy the array\n\t      if (value) {\n\t        var target = this[key];\n\t\n\t        if (!target) {\n\t          target = this[key] = [];\n\t        }\n\t\n\t        target[0] = value[0];\n\t        target[1] = value[1];\n\t      }\n\t    } else {\n\t      this[key] = value;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Hide the element\n\t   */\n\t  hide: function () {\n\t    this.ignore = true;\n\t    this.__zr && this.__zr.refresh();\n\t  },\n\t\n\t  /**\n\t   * Show the element\n\t   */\n\t  show: function () {\n\t    this.ignore = false;\n\t    this.__zr && this.__zr.refresh();\n\t  },\n\t\n\t  /**\n\t   * @param {string|Object} key\n\t   * @param {*} value\n\t   */\n\t  attr: function (key, value) {\n\t    if (typeof key === 'string') {\n\t      this.attrKV(key, value);\n\t    } else if (zrUtil.isObject(key)) {\n\t      for (var name in key) {\n\t        if (key.hasOwnProperty(name)) {\n\t          this.attrKV(name, key[name]);\n\t        }\n\t      }\n\t    }\n\t\n\t    this.dirty(false);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @param {module:zrender/graphic/Path} clipPath\n\t   */\n\t  setClipPath: function (clipPath) {\n\t    var zr = this.__zr;\n\t\n\t    if (zr) {\n\t      clipPath.addSelfToZr(zr);\n\t    } // Remove previous clip path\n\t\n\t\n\t    if (this.clipPath && this.clipPath !== clipPath) {\n\t      this.removeClipPath();\n\t    }\n\t\n\t    this.clipPath = clipPath;\n\t    clipPath.__zr = zr;\n\t    clipPath.__clipTarget = this;\n\t    this.dirty(false);\n\t  },\n\t\n\t  /**\n\t   */\n\t  removeClipPath: function () {\n\t    var clipPath = this.clipPath;\n\t\n\t    if (clipPath) {\n\t      if (clipPath.__zr) {\n\t        clipPath.removeSelfFromZr(clipPath.__zr);\n\t      }\n\t\n\t      clipPath.__zr = null;\n\t      clipPath.__clipTarget = null;\n\t      this.clipPath = null;\n\t      this.dirty(false);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Add self from zrender instance.\n\t   * Not recursively because it will be invoked when element added to storage.\n\t   * @param {module:zrender/ZRender} zr\n\t   */\n\t  addSelfToZr: function (zr) {\n\t    this.__zr = zr; // 添加动画\n\t\n\t    var animators = this.animators;\n\t\n\t    if (animators) {\n\t      for (var i = 0; i < animators.length; i++) {\n\t        zr.animation.addAnimator(animators[i]);\n\t      }\n\t    }\n\t\n\t    if (this.clipPath) {\n\t      this.clipPath.addSelfToZr(zr);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove self from zrender instance.\n\t   * Not recursively because it will be invoked when element added to storage.\n\t   * @param {module:zrender/ZRender} zr\n\t   */\n\t  removeSelfFromZr: function (zr) {\n\t    this.__zr = null; // 移除动画\n\t\n\t    var animators = this.animators;\n\t\n\t    if (animators) {\n\t      for (var i = 0; i < animators.length; i++) {\n\t        zr.animation.removeAnimator(animators[i]);\n\t      }\n\t    }\n\t\n\t    if (this.clipPath) {\n\t      this.clipPath.removeSelfFromZr(zr);\n\t    }\n\t  }\n\t};\n\tzrUtil.mixin(Element, Animatable);\n\tzrUtil.mixin(Element, Transformable);\n\tzrUtil.mixin(Element, Eventful);\n\tvar _default = Element;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1486:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(3);\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar Draggable = __webpack_require__(1520);\n\t\n\tvar Eventful = __webpack_require__(115);\n\t\n\tvar SILENT = 'silent';\n\t\n\tfunction makeEventPacket(eveType, targetInfo, event) {\n\t  return {\n\t    type: eveType,\n\t    event: event,\n\t    // target can only be an element that is not silent.\n\t    target: targetInfo.target,\n\t    // topTarget can be a silent element.\n\t    topTarget: targetInfo.topTarget,\n\t    cancelBubble: false,\n\t    offsetX: event.zrX,\n\t    offsetY: event.zrY,\n\t    gestureEvent: event.gestureEvent,\n\t    pinchX: event.pinchX,\n\t    pinchY: event.pinchY,\n\t    pinchScale: event.pinchScale,\n\t    wheelDelta: event.zrDelta,\n\t    zrByTouch: event.zrByTouch,\n\t    which: event.which\n\t  };\n\t}\n\t\n\tfunction EmptyProxy() {}\n\t\n\tEmptyProxy.prototype.dispose = function () {};\n\t\n\tvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n\t/**\n\t * @alias module:zrender/Handler\n\t * @constructor\n\t * @extends module:zrender/mixin/Eventful\n\t * @param {module:zrender/Storage} storage Storage instance.\n\t * @param {module:zrender/Painter} painter Painter instance.\n\t * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n\t * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n\t */\n\t\n\tvar Handler = function (storage, painter, proxy, painterRoot) {\n\t  Eventful.call(this);\n\t  this.storage = storage;\n\t  this.painter = painter;\n\t  this.painterRoot = painterRoot;\n\t  proxy = proxy || new EmptyProxy();\n\t  /**\n\t   * Proxy of event. can be Dom, WebGLSurface, etc.\n\t   */\n\t\n\t  this.proxy = null;\n\t  /**\n\t   * {target, topTarget, x, y}\n\t   * @private\n\t   * @type {Object}\n\t   */\n\t\n\t  this._hovered = {};\n\t  /**\n\t   * @private\n\t   * @type {Date}\n\t   */\n\t\n\t  this._lastTouchMoment;\n\t  /**\n\t   * @private\n\t   * @type {number}\n\t   */\n\t\n\t  this._lastX;\n\t  /**\n\t   * @private\n\t   * @type {number}\n\t   */\n\t\n\t  this._lastY;\n\t  Draggable.call(this);\n\t  this.setHandlerProxy(proxy);\n\t};\n\t\n\tHandler.prototype = {\n\t  constructor: Handler,\n\t  setHandlerProxy: function (proxy) {\n\t    if (this.proxy) {\n\t      this.proxy.dispose();\n\t    }\n\t\n\t    if (proxy) {\n\t      util.each(handlerNames, function (name) {\n\t        proxy.on && proxy.on(name, this[name], this);\n\t      }, this); // Attach handler\n\t\n\t      proxy.handler = this;\n\t    }\n\t\n\t    this.proxy = proxy;\n\t  },\n\t  mousemove: function (event) {\n\t    var x = event.zrX;\n\t    var y = event.zrY;\n\t    var lastHovered = this._hovered;\n\t    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n\t    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n\t    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n\t    // See #6198.\n\t\n\t    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n\t      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n\t      lastHoveredTarget = lastHovered.target;\n\t    }\n\t\n\t    var hovered = this._hovered = this.findHover(x, y);\n\t    var hoveredTarget = hovered.target;\n\t    var proxy = this.proxy;\n\t    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\t\n\t    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n\t      this.dispatchToElement(lastHovered, 'mouseout', event);\n\t    } // Mouse moving on one element\n\t\n\t\n\t    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\t\n\t    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n\t      this.dispatchToElement(hovered, 'mouseover', event);\n\t    }\n\t  },\n\t  mouseout: function (event) {\n\t    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n\t    // at the same level of painter.getViewportRoot() (e.g., tooltip\n\t    // dom created by echarts), where 'globalout' event should not\n\t    // be triggered when mouse enters these doms. (But 'mouseout'\n\t    // should be triggered at the original hovered element as usual).\n\t\n\t    var element = event.toElement || event.relatedTarget;\n\t    var innerDom;\n\t\n\t    do {\n\t      element = element && element.parentNode;\n\t    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\t\n\t    !innerDom && this.trigger('globalout', {\n\t      event: event\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Resize\n\t   */\n\t  resize: function (event) {\n\t    this._hovered = {};\n\t  },\n\t\n\t  /**\n\t   * Dispatch event\n\t   * @param {string} eventName\n\t   * @param {event=} eventArgs\n\t   */\n\t  dispatch: function (eventName, eventArgs) {\n\t    var handler = this[eventName];\n\t    handler && handler.call(this, eventArgs);\n\t  },\n\t\n\t  /**\n\t   * Dispose\n\t   */\n\t  dispose: function () {\n\t    this.proxy.dispose();\n\t    this.storage = this.proxy = this.painter = null;\n\t  },\n\t\n\t  /**\n\t   * 设置默认的cursor style\n\t   * @param {string} [cursorStyle='default'] 例如 crosshair\n\t   */\n\t  setCursorStyle: function (cursorStyle) {\n\t    var proxy = this.proxy;\n\t    proxy.setCursor && proxy.setCursor(cursorStyle);\n\t  },\n\t\n\t  /**\n\t   * 事件分发代理\n\t   *\n\t   * @private\n\t   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n\t   * @param {string} eventName 事件名称\n\t   * @param {Object} event 事件对象\n\t   */\n\t  dispatchToElement: function (targetInfo, eventName, event) {\n\t    targetInfo = targetInfo || {};\n\t    var el = targetInfo.target;\n\t\n\t    if (el && el.silent) {\n\t      return;\n\t    }\n\t\n\t    var eventHandler = 'on' + eventName;\n\t    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\t\n\t    while (el) {\n\t      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\t      el.trigger(eventName, eventPacket);\n\t      el = el.parent;\n\t\n\t      if (eventPacket.cancelBubble) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (!eventPacket.cancelBubble) {\n\t      // 冒泡到顶级 zrender 对象\n\t      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n\t      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\t\n\t      this.painter && this.painter.eachOtherLayer(function (layer) {\n\t        if (typeof layer[eventHandler] == 'function') {\n\t          layer[eventHandler].call(layer, eventPacket);\n\t        }\n\t\n\t        if (layer.trigger) {\n\t          layer.trigger(eventName, eventPacket);\n\t        }\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {number} x\n\t   * @param {number} y\n\t   * @param {module:zrender/graphic/Displayable} exclude\n\t   * @return {model:zrender/Element}\n\t   * @method\n\t   */\n\t  findHover: function (x, y, exclude) {\n\t    var list = this.storage.getDisplayList();\n\t    var out = {\n\t      x: x,\n\t      y: y\n\t    };\n\t\n\t    for (var i = list.length - 1; i >= 0; i--) {\n\t      var hoverCheckResult;\n\t\n\t      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n\t      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n\t        !out.topTarget && (out.topTarget = list[i]);\n\t\n\t        if (hoverCheckResult !== SILENT) {\n\t          out.target = list[i];\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    return out;\n\t  }\n\t}; // Common handlers\n\t\n\tutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n\t  Handler.prototype[name] = function (event) {\n\t    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n\t    var hovered = this.findHover(event.zrX, event.zrY);\n\t    var hoveredTarget = hovered.target;\n\t\n\t    if (name === 'mousedown') {\n\t      this._downEl = hoveredTarget;\n\t      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\t\n\t      this._upEl = hoveredTarget;\n\t    } else if (name === 'mouseup') {\n\t      this._upEl = hoveredTarget;\n\t    } else if (name === 'click') {\n\t      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n\t      // including the case that `mousedown` - `mousemove` - `mouseup`,\n\t      // which should be filtered, otherwise it will bring trouble to\n\t      // pan and zoom.\n\t      || !this._downPoint // Arbitrary value\n\t      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n\t        return;\n\t      }\n\t\n\t      this._downPoint = null;\n\t    }\n\t\n\t    this.dispatchToElement(hovered, name, event);\n\t  };\n\t});\n\t\n\tfunction isHover(displayable, x, y) {\n\t  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n\t    var el = displayable;\n\t    var isSilent;\n\t\n\t    while (el) {\n\t      // If clipped by ancestor.\n\t      // FIXME: If clipPath has neither stroke nor fill,\n\t      // el.clipPath.contain(x, y) will always return false.\n\t      if (el.clipPath && !el.clipPath.contain(x, y)) {\n\t        return false;\n\t      }\n\t\n\t      if (el.silent) {\n\t        isSilent = true;\n\t      }\n\t\n\t      el = el.parent;\n\t    }\n\t\n\t    return isSilent ? SILENT : true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\tutil.mixin(Handler, Eventful);\n\tutil.mixin(Handler, Draggable);\n\tvar _default = Handler;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1487:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(3);\n\t\n\tvar _config = __webpack_require__(230);\n\t\n\tvar devicePixelRatio = _config.devicePixelRatio;\n\t\n\tvar Style = __webpack_require__(568);\n\t\n\tvar Pattern = __webpack_require__(567);\n\t\n\t/**\n\t * @module zrender/Layer\n\t * @author pissang(https://www.github.com/pissang)\n\t */\n\tfunction returnFalse() {\n\t  return false;\n\t}\n\t/**\n\t * 创建dom\n\t *\n\t * @inner\n\t * @param {string} id dom id 待用\n\t * @param {Painter} painter painter instance\n\t * @param {number} number\n\t */\n\t\n\t\n\tfunction createDom(id, painter, dpr) {\n\t  var newDom = util.createCanvas();\n\t  var width = painter.getWidth();\n\t  var height = painter.getHeight();\n\t  var newDomStyle = newDom.style;\n\t\n\t  if (newDomStyle) {\n\t    // In node or some other non-browser environment\n\t    newDomStyle.position = 'absolute';\n\t    newDomStyle.left = 0;\n\t    newDomStyle.top = 0;\n\t    newDomStyle.width = width + 'px';\n\t    newDomStyle.height = height + 'px';\n\t    newDom.setAttribute('data-zr-dom-id', id);\n\t  }\n\t\n\t  newDom.width = width * dpr;\n\t  newDom.height = height * dpr;\n\t  return newDom;\n\t}\n\t/**\n\t * @alias module:zrender/Layer\n\t * @constructor\n\t * @extends module:zrender/mixin/Transformable\n\t * @param {string} id\n\t * @param {module:zrender/Painter} painter\n\t * @param {number} [dpr]\n\t */\n\t\n\t\n\tvar Layer = function (id, painter, dpr) {\n\t  var dom;\n\t  dpr = dpr || devicePixelRatio;\n\t\n\t  if (typeof id === 'string') {\n\t    dom = createDom(id, painter, dpr);\n\t  } // Not using isDom because in node it will return false\n\t  else if (util.isObject(id)) {\n\t      dom = id;\n\t      id = dom.id;\n\t    }\n\t\n\t  this.id = id;\n\t  this.dom = dom;\n\t  var domStyle = dom.style;\n\t\n\t  if (domStyle) {\n\t    // Not in node\n\t    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\t\n\t    domStyle['-webkit-user-select'] = 'none';\n\t    domStyle['user-select'] = 'none';\n\t    domStyle['-webkit-touch-callout'] = 'none';\n\t    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n\t    domStyle['padding'] = 0;\n\t    domStyle['margin'] = 0;\n\t    domStyle['border-width'] = 0;\n\t  }\n\t\n\t  this.domBack = null;\n\t  this.ctxBack = null;\n\t  this.painter = painter;\n\t  this.config = null; // Configs\n\t\n\t  /**\n\t   * 每次清空画布的颜色\n\t   * @type {string}\n\t   * @default 0\n\t   */\n\t\n\t  this.clearColor = 0;\n\t  /**\n\t   * 是否开启动态模糊\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t\n\t  this.motionBlur = false;\n\t  /**\n\t   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t   * @type {number}\n\t   * @default 0.7\n\t   */\n\t\n\t  this.lastFrameAlpha = 0.7;\n\t  /**\n\t   * Layer dpr\n\t   * @type {number}\n\t   */\n\t\n\t  this.dpr = dpr;\n\t};\n\t\n\tLayer.prototype = {\n\t  constructor: Layer,\n\t  __dirty: true,\n\t  __used: false,\n\t  __drawIndex: 0,\n\t  __startIndex: 0,\n\t  __endIndex: 0,\n\t  incremental: false,\n\t  getElementCount: function () {\n\t    return this.__endIndex - this.__startIndex;\n\t  },\n\t  initContext: function () {\n\t    this.ctx = this.dom.getContext('2d');\n\t    this.ctx.dpr = this.dpr;\n\t  },\n\t  createBackBuffer: function () {\n\t    var dpr = this.dpr;\n\t    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n\t    this.ctxBack = this.domBack.getContext('2d');\n\t\n\t    if (dpr != 1) {\n\t      this.ctxBack.scale(dpr, dpr);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param  {number} width\n\t   * @param  {number} height\n\t   */\n\t  resize: function (width, height) {\n\t    var dpr = this.dpr;\n\t    var dom = this.dom;\n\t    var domStyle = dom.style;\n\t    var domBack = this.domBack;\n\t    domStyle.width = width + 'px';\n\t    domStyle.height = height + 'px';\n\t    dom.width = width * dpr;\n\t    dom.height = height * dpr;\n\t\n\t    if (domBack) {\n\t      domBack.width = width * dpr;\n\t      domBack.height = height * dpr;\n\t\n\t      if (dpr != 1) {\n\t        this.ctxBack.scale(dpr, dpr);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 清空该层画布\n\t   * @param {boolean} clearAll Clear all with out motion blur\n\t   */\n\t  clear: function (clearAll) {\n\t    var dom = this.dom;\n\t    var ctx = this.ctx;\n\t    var width = dom.width;\n\t    var height = dom.height;\n\t    var clearColor = this.clearColor;\n\t    var haveMotionBLur = this.motionBlur && !clearAll;\n\t    var lastFrameAlpha = this.lastFrameAlpha;\n\t    var dpr = this.dpr;\n\t\n\t    if (haveMotionBLur) {\n\t      if (!this.domBack) {\n\t        this.createBackBuffer();\n\t      }\n\t\n\t      this.ctxBack.globalCompositeOperation = 'copy';\n\t      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n\t    }\n\t\n\t    ctx.clearRect(0, 0, width, height);\n\t\n\t    if (clearColor) {\n\t      var clearColorGradientOrPattern; // Gradient\n\t\n\t      if (clearColor.colorStops) {\n\t        // Cache canvas gradient\n\t        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n\t          x: 0,\n\t          y: 0,\n\t          width: width,\n\t          height: height\n\t        });\n\t        clearColor.__canvasGradient = clearColorGradientOrPattern;\n\t      } // Pattern\n\t      else if (clearColor.image) {\n\t          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n\t        }\n\t\n\t      ctx.save();\n\t      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n\t      ctx.fillRect(0, 0, width, height);\n\t      ctx.restore();\n\t    }\n\t\n\t    if (haveMotionBLur) {\n\t      var domBack = this.domBack;\n\t      ctx.save();\n\t      ctx.globalAlpha = lastFrameAlpha;\n\t      ctx.drawImage(domBack, 0, 0, width, height);\n\t      ctx.restore();\n\t    }\n\t  }\n\t};\n\tvar _default = Layer;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1488:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(230);\n\t\n\tvar devicePixelRatio = _config.devicePixelRatio;\n\t\n\tvar util = __webpack_require__(3);\n\t\n\tvar log = __webpack_require__(565);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar timsort = __webpack_require__(359);\n\t\n\tvar Layer = __webpack_require__(1487);\n\t\n\tvar requestAnimationFrame = __webpack_require__(560);\n\t\n\tvar Image = __webpack_require__(566);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar HOVER_LAYER_ZLEVEL = 1e5;\n\tvar CANVAS_ZLEVEL = 314159;\n\tvar EL_AFTER_INCREMENTAL_INC = 0.01;\n\tvar INCREMENTAL_INC = 0.001;\n\t\n\tfunction parseInt10(val) {\n\t  return parseInt(val, 10);\n\t}\n\t\n\tfunction isLayerValid(layer) {\n\t  if (!layer) {\n\t    return false;\n\t  }\n\t\n\t  if (layer.__builtin__) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n\t    return false;\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tvar tmpRect = new BoundingRect(0, 0, 0, 0);\n\tvar viewRect = new BoundingRect(0, 0, 0, 0);\n\t\n\tfunction isDisplayableCulled(el, width, height) {\n\t  tmpRect.copy(el.getBoundingRect());\n\t\n\t  if (el.transform) {\n\t    tmpRect.applyTransform(el.transform);\n\t  }\n\t\n\t  viewRect.width = width;\n\t  viewRect.height = height;\n\t  return !tmpRect.intersect(viewRect);\n\t}\n\t\n\tfunction isClipPathChanged(clipPaths, prevClipPaths) {\n\t  if (clipPaths == prevClipPaths) {\n\t    // Can both be null or undefined\n\t    return false;\n\t  }\n\t\n\t  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n\t    return true;\n\t  }\n\t\n\t  for (var i = 0; i < clipPaths.length; i++) {\n\t    if (clipPaths[i] !== prevClipPaths[i]) {\n\t      return true;\n\t    }\n\t  }\n\t}\n\t\n\tfunction doClip(clipPaths, ctx) {\n\t  for (var i = 0; i < clipPaths.length; i++) {\n\t    var clipPath = clipPaths[i];\n\t    clipPath.setTransform(ctx);\n\t    ctx.beginPath();\n\t    clipPath.buildPath(ctx, clipPath.shape);\n\t    ctx.clip(); // Transform back\n\t\n\t    clipPath.restoreTransform(ctx);\n\t  }\n\t}\n\t\n\tfunction createRoot(width, height) {\n\t  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\t\n\t  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n\t  return domRoot;\n\t}\n\t/**\n\t * @alias module:zrender/Painter\n\t * @constructor\n\t * @param {HTMLElement} root 绘图容器\n\t * @param {module:zrender/Storage} storage\n\t * @param {Object} opts\n\t */\n\t\n\t\n\tvar Painter = function (root, storage, opts) {\n\t  this.type = 'canvas'; // In node environment using node-canvas\n\t\n\t  var singleCanvas = !root.nodeName // In node ?\n\t  || root.nodeName.toUpperCase() === 'CANVAS';\n\t  this._opts = opts = util.extend({}, opts || {});\n\t  /**\n\t   * @type {number}\n\t   */\n\t\n\t  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n\t  /**\n\t   * @type {boolean}\n\t   * @private\n\t   */\n\t\n\t  this._singleCanvas = singleCanvas;\n\t  /**\n\t   * 绘图容器\n\t   * @type {HTMLElement}\n\t   */\n\t\n\t  this.root = root;\n\t  var rootStyle = root.style;\n\t\n\t  if (rootStyle) {\n\t    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n\t    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n\t    root.innerHTML = '';\n\t  }\n\t  /**\n\t   * @type {module:zrender/Storage}\n\t   */\n\t\n\t\n\t  this.storage = storage;\n\t  /**\n\t   * @type {Array.<number>}\n\t   * @private\n\t   */\n\t\n\t  var zlevelList = this._zlevelList = [];\n\t  /**\n\t   * @type {Object.<string, module:zrender/Layer>}\n\t   * @private\n\t   */\n\t\n\t  var layers = this._layers = {};\n\t  /**\n\t   * @type {Object.<string, Object>}\n\t   * @private\n\t   */\n\t\n\t  this._layerConfig = {};\n\t  /**\n\t   * zrender will do compositing when root is a canvas and have multiple zlevels.\n\t   */\n\t\n\t  this._needsManuallyCompositing = false;\n\t\n\t  if (!singleCanvas) {\n\t    this._width = this._getSize(0);\n\t    this._height = this._getSize(1);\n\t    var domRoot = this._domRoot = createRoot(this._width, this._height);\n\t    root.appendChild(domRoot);\n\t  } else {\n\t    if (opts.width != null) {\n\t      root.width = opts.width;\n\t    }\n\t\n\t    if (opts.height != null) {\n\t      root.height = opts.height;\n\t    } // Use canvas width and height directly\n\t\n\t\n\t    var width = root.width;\n\t    var height = root.height;\n\t    this._width = width;\n\t    this._height = height; // Create layer if only one given canvas\n\t    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\t\n\t    var mainLayer = new Layer(root, this, 1);\n\t    mainLayer.__builtin__ = true;\n\t    mainLayer.initContext(); // FIXME Use canvas width and height\n\t    // mainLayer.resize(width, height);\n\t\n\t    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\t\n\t    zlevelList.push(CANVAS_ZLEVEL);\n\t    this._domRoot = root;\n\t  }\n\t  /**\n\t   * @type {module:zrender/Layer}\n\t   * @private\n\t   */\n\t\n\t\n\t  this._hoverlayer = null;\n\t  this._hoverElements = [];\n\t};\n\t\n\tPainter.prototype = {\n\t  constructor: Painter,\n\t  getType: function () {\n\t    return 'canvas';\n\t  },\n\t\n\t  /**\n\t   * If painter use a single canvas\n\t   * @return {boolean}\n\t   */\n\t  isSingleCanvas: function () {\n\t    return this._singleCanvas;\n\t  },\n\t\n\t  /**\n\t   * @return {HTMLDivElement}\n\t   */\n\t  getViewportRoot: function () {\n\t    return this._domRoot;\n\t  },\n\t  getViewportRootOffset: function () {\n\t    var viewportRoot = this.getViewportRoot();\n\t\n\t    if (viewportRoot) {\n\t      return {\n\t        offsetLeft: viewportRoot.offsetLeft || 0,\n\t        offsetTop: viewportRoot.offsetTop || 0\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 刷新\n\t   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n\t   */\n\t  refresh: function (paintAll) {\n\t    var list = this.storage.getDisplayList(true);\n\t    var zlevelList = this._zlevelList;\n\t    this._redrawId = Math.random();\n\t\n\t    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\t\n\t\n\t    for (var i = 0; i < zlevelList.length; i++) {\n\t      var z = zlevelList[i];\n\t      var layer = this._layers[z];\n\t\n\t      if (!layer.__builtin__ && layer.refresh) {\n\t        layer.refresh();\n\t      }\n\t    }\n\t\n\t    this.refreshHover();\n\t    return this;\n\t  },\n\t  addHover: function (el, hoverStyle) {\n\t    if (el.__hoverMir) {\n\t      return;\n\t    }\n\t\n\t    var elMirror = new el.constructor({\n\t      style: el.style,\n\t      shape: el.shape\n\t    });\n\t    elMirror.__from = el;\n\t    el.__hoverMir = elMirror;\n\t    elMirror.setStyle(hoverStyle);\n\t\n\t    this._hoverElements.push(elMirror);\n\t  },\n\t  removeHover: function (el) {\n\t    var elMirror = el.__hoverMir;\n\t    var hoverElements = this._hoverElements;\n\t    var idx = util.indexOf(hoverElements, elMirror);\n\t\n\t    if (idx >= 0) {\n\t      hoverElements.splice(idx, 1);\n\t    }\n\t\n\t    el.__hoverMir = null;\n\t  },\n\t  clearHover: function (el) {\n\t    var hoverElements = this._hoverElements;\n\t\n\t    for (var i = 0; i < hoverElements.length; i++) {\n\t      var from = hoverElements[i].__from;\n\t\n\t      if (from) {\n\t        from.__hoverMir = null;\n\t      }\n\t    }\n\t\n\t    hoverElements.length = 0;\n\t  },\n\t  refreshHover: function () {\n\t    var hoverElements = this._hoverElements;\n\t    var len = hoverElements.length;\n\t    var hoverLayer = this._hoverlayer;\n\t    hoverLayer && hoverLayer.clear();\n\t\n\t    if (!len) {\n\t      return;\n\t    }\n\t\n\t    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n\t    // FIXME?\n\t\n\t    if (!hoverLayer) {\n\t      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n\t    }\n\t\n\t    var scope = {};\n\t    hoverLayer.ctx.save();\n\t\n\t    for (var i = 0; i < len;) {\n\t      var el = hoverElements[i];\n\t      var originalEl = el.__from; // Original el is removed\n\t      // PENDING\n\t\n\t      if (!(originalEl && originalEl.__zr)) {\n\t        hoverElements.splice(i, 1);\n\t        originalEl.__hoverMir = null;\n\t        len--;\n\t        continue;\n\t      }\n\t\n\t      i++; // Use transform\n\t      // FIXME style and shape ?\n\t\n\t      if (!originalEl.invisible) {\n\t        el.transform = originalEl.transform;\n\t        el.invTransform = originalEl.invTransform;\n\t        el.__clipPaths = originalEl.__clipPaths; // el.\n\t\n\t        this._doPaintEl(el, hoverLayer, true, scope);\n\t      }\n\t    }\n\t\n\t    hoverLayer.ctx.restore();\n\t  },\n\t  getHoverLayer: function () {\n\t    return this.getLayer(HOVER_LAYER_ZLEVEL);\n\t  },\n\t  _paintList: function (list, paintAll, redrawId) {\n\t    if (this._redrawId !== redrawId) {\n\t      return;\n\t    }\n\t\n\t    paintAll = paintAll || false;\n\t\n\t    this._updateLayerStatus(list);\n\t\n\t    var finished = this._doPaintList(list, paintAll);\n\t\n\t    if (this._needsManuallyCompositing) {\n\t      this._compositeManually();\n\t    }\n\t\n\t    if (!finished) {\n\t      var self = this;\n\t      requestAnimationFrame(function () {\n\t        self._paintList(list, paintAll, redrawId);\n\t      });\n\t    }\n\t  },\n\t  _compositeManually: function () {\n\t    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n\t    var width = this._domRoot.width;\n\t    var height = this._domRoot.height;\n\t    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\t\n\t    this.eachBuiltinLayer(function (layer) {\n\t      if (layer.virtual) {\n\t        ctx.drawImage(layer.dom, 0, 0, width, height);\n\t      }\n\t    });\n\t  },\n\t  _doPaintList: function (list, paintAll) {\n\t    var layerList = [];\n\t\n\t    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n\t      var zlevel = this._zlevelList[zi];\n\t      var layer = this._layers[zlevel];\n\t\n\t      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n\t        layerList.push(layer);\n\t      }\n\t    }\n\t\n\t    var finished = true;\n\t\n\t    for (var k = 0; k < layerList.length; k++) {\n\t      var layer = layerList[k];\n\t      var ctx = layer.ctx;\n\t      var scope = {};\n\t      ctx.save();\n\t      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n\t      var useTimer = !paintAll && layer.incremental && Date.now;\n\t      var startTime = useTimer && Date.now(); // All elements in this layer are cleared.\n\t\n\t      if (layer.__startIndex === layer.__endIndex) {\n\t        layer.clear();\n\t      } else if (start === layer.__startIndex) {\n\t        var firstEl = list[start];\n\t\n\t        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n\t          layer.clear();\n\t        }\n\t      }\n\t\n\t      if (start === -1) {\n\t        console.error('For some unknown reason. drawIndex is -1');\n\t        start = layer.__startIndex;\n\t      }\n\t\n\t      for (var i = start; i < layer.__endIndex; i++) {\n\t        var el = list[i];\n\t\n\t        this._doPaintEl(el, layer, paintAll, scope);\n\t\n\t        el.__dirty = false;\n\t\n\t        if (useTimer) {\n\t          // Date.now can be executed in 13,025,305 ops/second.\n\t          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n\t          // The rest elements will be drawn in the next frame.\n\t\n\t          if (dTime > 15) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      layer.__drawIndex = i;\n\t\n\t      if (layer.__drawIndex < layer.__endIndex) {\n\t        finished = false;\n\t      }\n\t\n\t      if (scope.prevElClipPaths) {\n\t        // Needs restore the state. If last drawn element is in the clipping area.\n\t        ctx.restore();\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t\n\t    if (env.wxa) {\n\t      // Flush for weixin application\n\t      util.each(this._layers, function (layer) {\n\t        if (layer && layer.ctx && layer.ctx.draw) {\n\t          layer.ctx.draw();\n\t        }\n\t      });\n\t    }\n\t\n\t    return finished;\n\t  },\n\t  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n\t    var ctx = currentLayer.ctx;\n\t    var m = el.transform;\n\t\n\t    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n\t    !el.invisible // Ignore transparent element\n\t    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n\t    // Draw a scale 0 element can cause all following draw wrong\n\t    // And setTransform with scale 0 will cause set back transform failed.\n\t    && !(m && !m[0] && !m[3]) // Ignore culled element\n\t    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n\t      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\t\n\t      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n\t        // If has previous clipping state, restore from it\n\t        if (scope.prevElClipPaths) {\n\t          currentLayer.ctx.restore();\n\t          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\t\n\t          scope.prevEl = null;\n\t        } // New clipping state\n\t\n\t\n\t        if (clipPaths) {\n\t          ctx.save();\n\t          doClip(clipPaths, ctx);\n\t          scope.prevElClipPaths = clipPaths;\n\t        }\n\t      }\n\t\n\t      el.beforeBrush && el.beforeBrush(ctx);\n\t      el.brush(ctx, scope.prevEl || null);\n\t      scope.prevEl = el;\n\t      el.afterBrush && el.afterBrush(ctx);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n\t   * @param {number} zlevel\n\t   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n\t   * @return {module:zrender/Layer}\n\t   */\n\t  getLayer: function (zlevel, virtual) {\n\t    if (this._singleCanvas && !this._needsManuallyCompositing) {\n\t      zlevel = CANVAS_ZLEVEL;\n\t    }\n\t\n\t    var layer = this._layers[zlevel];\n\t\n\t    if (!layer) {\n\t      // Create a new layer\n\t      layer = new Layer('zr_' + zlevel, this, this.dpr);\n\t      layer.zlevel = zlevel;\n\t      layer.__builtin__ = true;\n\t\n\t      if (this._layerConfig[zlevel]) {\n\t        util.merge(layer, this._layerConfig[zlevel], true);\n\t      }\n\t\n\t      if (virtual) {\n\t        layer.virtual = virtual;\n\t      }\n\t\n\t      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n\t      // Or excanvas will get 0px clientWidth and clientHeight\n\t\n\t      layer.initContext();\n\t    }\n\t\n\t    return layer;\n\t  },\n\t  insertLayer: function (zlevel, layer) {\n\t    var layersMap = this._layers;\n\t    var zlevelList = this._zlevelList;\n\t    var len = zlevelList.length;\n\t    var prevLayer = null;\n\t    var i = -1;\n\t    var domRoot = this._domRoot;\n\t\n\t    if (layersMap[zlevel]) {\n\t      log('ZLevel ' + zlevel + ' has been used already');\n\t      return;\n\t    } // Check if is a valid layer\n\t\n\t\n\t    if (!isLayerValid(layer)) {\n\t      log('Layer of zlevel ' + zlevel + ' is not valid');\n\t      return;\n\t    }\n\t\n\t    if (len > 0 && zlevel > zlevelList[0]) {\n\t      for (i = 0; i < len - 1; i++) {\n\t        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      prevLayer = layersMap[zlevelList[i]];\n\t    }\n\t\n\t    zlevelList.splice(i + 1, 0, zlevel);\n\t    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n\t    // (It can be a WebGL layer and assigned to a ZImage element)\n\t    // But it still under management of zrender.\n\t\n\t    if (!layer.virtual) {\n\t      if (prevLayer) {\n\t        var prevDom = prevLayer.dom;\n\t\n\t        if (prevDom.nextSibling) {\n\t          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n\t        } else {\n\t          domRoot.appendChild(layer.dom);\n\t        }\n\t      } else {\n\t        if (domRoot.firstChild) {\n\t          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n\t        } else {\n\t          domRoot.appendChild(layer.dom);\n\t        }\n\t      }\n\t    }\n\t  },\n\t  // Iterate each layer\n\t  eachLayer: function (cb, context) {\n\t    var zlevelList = this._zlevelList;\n\t    var z;\n\t    var i;\n\t\n\t    for (i = 0; i < zlevelList.length; i++) {\n\t      z = zlevelList[i];\n\t      cb.call(context, this._layers[z], z);\n\t    }\n\t  },\n\t  // Iterate each buildin layer\n\t  eachBuiltinLayer: function (cb, context) {\n\t    var zlevelList = this._zlevelList;\n\t    var layer;\n\t    var z;\n\t    var i;\n\t\n\t    for (i = 0; i < zlevelList.length; i++) {\n\t      z = zlevelList[i];\n\t      layer = this._layers[z];\n\t\n\t      if (layer.__builtin__) {\n\t        cb.call(context, layer, z);\n\t      }\n\t    }\n\t  },\n\t  // Iterate each other layer except buildin layer\n\t  eachOtherLayer: function (cb, context) {\n\t    var zlevelList = this._zlevelList;\n\t    var layer;\n\t    var z;\n\t    var i;\n\t\n\t    for (i = 0; i < zlevelList.length; i++) {\n\t      z = zlevelList[i];\n\t      layer = this._layers[z];\n\t\n\t      if (!layer.__builtin__) {\n\t        cb.call(context, layer, z);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 获取所有已创建的层\n\t   * @param {Array.<module:zrender/Layer>} [prevLayer]\n\t   */\n\t  getLayers: function () {\n\t    return this._layers;\n\t  },\n\t  _updateLayerStatus: function (list) {\n\t    this.eachBuiltinLayer(function (layer, z) {\n\t      layer.__dirty = layer.__used = false;\n\t    });\n\t\n\t    function updatePrevLayer(idx) {\n\t      if (prevLayer) {\n\t        if (prevLayer.__endIndex !== idx) {\n\t          prevLayer.__dirty = true;\n\t        }\n\t\n\t        prevLayer.__endIndex = idx;\n\t      }\n\t    }\n\t\n\t    if (this._singleCanvas) {\n\t      for (var i = 1; i < list.length; i++) {\n\t        var el = list[i];\n\t\n\t        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n\t          this._needsManuallyCompositing = true;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    var prevLayer = null;\n\t    var incrementalLayerCount = 0;\n\t\n\t    for (var i = 0; i < list.length; i++) {\n\t      var el = list[i];\n\t      var zlevel = el.zlevel;\n\t      var layer; // PENDING If change one incremental element style ?\n\t      // TODO Where there are non-incremental elements between incremental elements.\n\t\n\t      if (el.incremental) {\n\t        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n\t        layer.incremental = true;\n\t        incrementalLayerCount = 1;\n\t      } else {\n\t        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n\t      }\n\t\n\t      if (!layer.__builtin__) {\n\t        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n\t      }\n\t\n\t      if (layer !== prevLayer) {\n\t        layer.__used = true;\n\t\n\t        if (layer.__startIndex !== i) {\n\t          layer.__dirty = true;\n\t        }\n\t\n\t        layer.__startIndex = i;\n\t\n\t        if (!layer.incremental) {\n\t          layer.__drawIndex = i;\n\t        } else {\n\t          // Mark layer draw index needs to update.\n\t          layer.__drawIndex = -1;\n\t        }\n\t\n\t        updatePrevLayer(i);\n\t        prevLayer = layer;\n\t      }\n\t\n\t      if (el.__dirty) {\n\t        layer.__dirty = true;\n\t\n\t        if (layer.incremental && layer.__drawIndex < 0) {\n\t          // Start draw from the first dirty element.\n\t          layer.__drawIndex = i;\n\t        }\n\t      }\n\t    }\n\t\n\t    updatePrevLayer(i);\n\t    this.eachBuiltinLayer(function (layer, z) {\n\t      // Used in last frame but not in this frame. Needs clear\n\t      if (!layer.__used && layer.getElementCount() > 0) {\n\t        layer.__dirty = true;\n\t        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n\t      } // For incremental layer. In case start index changed and no elements are dirty.\n\t\n\t\n\t      if (layer.__dirty && layer.__drawIndex < 0) {\n\t        layer.__drawIndex = layer.__startIndex;\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * 清除hover层外所有内容\n\t   */\n\t  clear: function () {\n\t    this.eachBuiltinLayer(this._clearLayer);\n\t    return this;\n\t  },\n\t  _clearLayer: function (layer) {\n\t    layer.clear();\n\t  },\n\t\n\t  /**\n\t   * 修改指定zlevel的绘制参数\n\t   *\n\t   * @param {string} zlevel\n\t   * @param {Object} config 配置对象\n\t   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n\t   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n\t   * @param {number} [config.lastFrameAlpha=0.7]\n\t   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n\t   */\n\t  configLayer: function (zlevel, config) {\n\t    if (config) {\n\t      var layerConfig = this._layerConfig;\n\t\n\t      if (!layerConfig[zlevel]) {\n\t        layerConfig[zlevel] = config;\n\t      } else {\n\t        util.merge(layerConfig[zlevel], config, true);\n\t      }\n\t\n\t      for (var i = 0; i < this._zlevelList.length; i++) {\n\t        var _zlevel = this._zlevelList[i];\n\t\n\t        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n\t          var layer = this._layers[_zlevel];\n\t          util.merge(layer, layerConfig[zlevel], true);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 删除指定层\n\t   * @param {number} zlevel 层所在的zlevel\n\t   */\n\t  delLayer: function (zlevel) {\n\t    var layers = this._layers;\n\t    var zlevelList = this._zlevelList;\n\t    var layer = layers[zlevel];\n\t\n\t    if (!layer) {\n\t      return;\n\t    }\n\t\n\t    layer.dom.parentNode.removeChild(layer.dom);\n\t    delete layers[zlevel];\n\t    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n\t  },\n\t\n\t  /**\n\t   * 区域大小变化后重绘\n\t   */\n\t  resize: function (width, height) {\n\t    if (!this._domRoot.style) {\n\t      // Maybe in node or worker\n\t      if (width == null || height == null) {\n\t        return;\n\t      }\n\t\n\t      this._width = width;\n\t      this._height = height;\n\t      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n\t    } else {\n\t      var domRoot = this._domRoot; // FIXME Why ?\n\t\n\t      domRoot.style.display = 'none'; // Save input w/h\n\t\n\t      var opts = this._opts;\n\t      width != null && (opts.width = width);\n\t      height != null && (opts.height = height);\n\t      width = this._getSize(0);\n\t      height = this._getSize(1);\n\t      domRoot.style.display = ''; // 优化没有实际改变的resize\n\t\n\t      if (this._width != width || height != this._height) {\n\t        domRoot.style.width = width + 'px';\n\t        domRoot.style.height = height + 'px';\n\t\n\t        for (var id in this._layers) {\n\t          if (this._layers.hasOwnProperty(id)) {\n\t            this._layers[id].resize(width, height);\n\t          }\n\t        }\n\t\n\t        util.each(this._progressiveLayers, function (layer) {\n\t          layer.resize(width, height);\n\t        });\n\t        this.refresh(true);\n\t      }\n\t\n\t      this._width = width;\n\t      this._height = height;\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 清除单独的一个层\n\t   * @param {number} zlevel\n\t   */\n\t  clearLayer: function (zlevel) {\n\t    var layer = this._layers[zlevel];\n\t\n\t    if (layer) {\n\t      layer.clear();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 释放\n\t   */\n\t  dispose: function () {\n\t    this.root.innerHTML = '';\n\t    this.root = this.storage = this._domRoot = this._layers = null;\n\t  },\n\t\n\t  /**\n\t   * Get canvas which has all thing rendered\n\t   * @param {Object} opts\n\t   * @param {string} [opts.backgroundColor]\n\t   * @param {number} [opts.pixelRatio]\n\t   */\n\t  getRenderedCanvas: function (opts) {\n\t    opts = opts || {};\n\t\n\t    if (this._singleCanvas && !this._compositeManually) {\n\t      return this._layers[CANVAS_ZLEVEL].dom;\n\t    }\n\t\n\t    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n\t    imageLayer.initContext();\n\t    imageLayer.clearColor = opts.backgroundColor;\n\t    imageLayer.clear();\n\t\n\t    if (opts.pixelRatio <= this.dpr) {\n\t      this.refresh();\n\t      var width = imageLayer.dom.width;\n\t      var height = imageLayer.dom.height;\n\t      var ctx = imageLayer.ctx;\n\t      this.eachLayer(function (layer) {\n\t        if (layer.__builtin__) {\n\t          ctx.drawImage(layer.dom, 0, 0, width, height);\n\t        } else if (layer.renderToCanvas) {\n\t          imageLayer.ctx.save();\n\t          layer.renderToCanvas(imageLayer.ctx);\n\t          imageLayer.ctx.restore();\n\t        }\n\t      });\n\t    } else {\n\t      // PENDING, echarts-gl and incremental rendering.\n\t      var scope = {};\n\t      var displayList = this.storage.getDisplayList(true);\n\t\n\t      for (var i = 0; i < displayList.length; i++) {\n\t        var el = displayList[i];\n\t\n\t        this._doPaintEl(el, imageLayer, true, scope);\n\t      }\n\t    }\n\t\n\t    return imageLayer.dom;\n\t  },\n\t\n\t  /**\n\t   * 获取绘图区域宽度\n\t   */\n\t  getWidth: function () {\n\t    return this._width;\n\t  },\n\t\n\t  /**\n\t   * 获取绘图区域高度\n\t   */\n\t  getHeight: function () {\n\t    return this._height;\n\t  },\n\t  _getSize: function (whIdx) {\n\t    var opts = this._opts;\n\t    var wh = ['width', 'height'][whIdx];\n\t    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n\t    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n\t    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\t\n\t    if (opts[wh] != null && opts[wh] !== 'auto') {\n\t      return parseFloat(opts[wh]);\n\t    }\n\t\n\t    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\t\n\t    var stl = document.defaultView.getComputedStyle(root);\n\t    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n\t  },\n\t  pathToImage: function (path, dpr) {\n\t    dpr = dpr || this.dpr;\n\t    var canvas = document.createElement('canvas');\n\t    var ctx = canvas.getContext('2d');\n\t    var rect = path.getBoundingRect();\n\t    var style = path.style;\n\t    var shadowBlurSize = style.shadowBlur * dpr;\n\t    var shadowOffsetX = style.shadowOffsetX * dpr;\n\t    var shadowOffsetY = style.shadowOffsetY * dpr;\n\t    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\t    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n\t    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n\t    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n\t    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n\t    var width = rect.width + leftMargin + rightMargin;\n\t    var height = rect.height + topMargin + bottomMargin;\n\t    canvas.width = width * dpr;\n\t    canvas.height = height * dpr;\n\t    ctx.scale(dpr, dpr);\n\t    ctx.clearRect(0, 0, width, height);\n\t    ctx.dpr = dpr;\n\t    var pathTransform = {\n\t      position: path.position,\n\t      rotation: path.rotation,\n\t      scale: path.scale\n\t    };\n\t    path.position = [leftMargin - rect.x, topMargin - rect.y];\n\t    path.rotation = 0;\n\t    path.scale = [1, 1];\n\t    path.updateTransform();\n\t\n\t    if (path) {\n\t      path.brush(ctx);\n\t    }\n\t\n\t    var ImageShape = Image;\n\t    var imgShape = new ImageShape({\n\t      style: {\n\t        x: 0,\n\t        y: 0,\n\t        image: canvas\n\t      }\n\t    });\n\t\n\t    if (pathTransform.position != null) {\n\t      imgShape.position = path.position = pathTransform.position;\n\t    }\n\t\n\t    if (pathTransform.rotation != null) {\n\t      imgShape.rotation = path.rotation = pathTransform.rotation;\n\t    }\n\t\n\t    if (pathTransform.scale != null) {\n\t      imgShape.scale = path.scale = pathTransform.scale;\n\t    }\n\t\n\t    return imgShape;\n\t  }\n\t};\n\tvar _default = Painter;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1489:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(3);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar Group = __webpack_require__(231);\n\t\n\tvar timsort = __webpack_require__(359);\n\t\n\t// Use timsort because in most case elements are partially sorted\n\t// https://jsfiddle.net/pissang/jr4x7mdm/8/\n\tfunction shapeCompareFunc(a, b) {\n\t  if (a.zlevel === b.zlevel) {\n\t    if (a.z === b.z) {\n\t      // if (a.z2 === b.z2) {\n\t      //     // FIXME Slow has renderidx compare\n\t      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n\t      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n\t      //     return a.__renderidx - b.__renderidx;\n\t      // }\n\t      return a.z2 - b.z2;\n\t    }\n\t\n\t    return a.z - b.z;\n\t  }\n\t\n\t  return a.zlevel - b.zlevel;\n\t}\n\t/**\n\t * 内容仓库 (M)\n\t * @alias module:zrender/Storage\n\t * @constructor\n\t */\n\t\n\t\n\tvar Storage = function () {\n\t  // jshint ignore:line\n\t  this._roots = [];\n\t  this._displayList = [];\n\t  this._displayListLen = 0;\n\t};\n\t\n\tStorage.prototype = {\n\t  constructor: Storage,\n\t\n\t  /**\n\t   * @param  {Function} cb\n\t   *\n\t   */\n\t  traverse: function (cb, context) {\n\t    for (var i = 0; i < this._roots.length; i++) {\n\t      this._roots[i].traverse(cb, context);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 返回所有图形的绘制队列\n\t   * @param {boolean} [update=false] 是否在返回前更新该数组\n\t   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n\t   *\n\t   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n\t   * @return {Array.<module:zrender/graphic/Displayable>}\n\t   */\n\t  getDisplayList: function (update, includeIgnore) {\n\t    includeIgnore = includeIgnore || false;\n\t\n\t    if (update) {\n\t      this.updateDisplayList(includeIgnore);\n\t    }\n\t\n\t    return this._displayList;\n\t  },\n\t\n\t  /**\n\t   * 更新图形的绘制队列。\n\t   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n\t   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n\t   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n\t   */\n\t  updateDisplayList: function (includeIgnore) {\n\t    this._displayListLen = 0;\n\t    var roots = this._roots;\n\t    var displayList = this._displayList;\n\t\n\t    for (var i = 0, len = roots.length; i < len; i++) {\n\t      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n\t    }\n\t\n\t    displayList.length = this._displayListLen;\n\t    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n\t  },\n\t  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\t    if (el.ignore && !includeIgnore) {\n\t      return;\n\t    }\n\t\n\t    el.beforeUpdate();\n\t\n\t    if (el.__dirty) {\n\t      el.update();\n\t    }\n\t\n\t    el.afterUpdate();\n\t    var userSetClipPath = el.clipPath;\n\t\n\t    if (userSetClipPath) {\n\t      // FIXME 效率影响\n\t      if (clipPaths) {\n\t        clipPaths = clipPaths.slice();\n\t      } else {\n\t        clipPaths = [];\n\t      }\n\t\n\t      var currentClipPath = userSetClipPath;\n\t      var parentClipPath = el; // Recursively add clip path\n\t\n\t      while (currentClipPath) {\n\t        // clipPath 的变换是基于使用这个 clipPath 的元素\n\t        currentClipPath.parent = parentClipPath;\n\t        currentClipPath.updateTransform();\n\t        clipPaths.push(currentClipPath);\n\t        parentClipPath = currentClipPath;\n\t        currentClipPath = currentClipPath.clipPath;\n\t      }\n\t    }\n\t\n\t    if (el.isGroup) {\n\t      var children = el._children;\n\t\n\t      for (var i = 0; i < children.length; i++) {\n\t        var child = children[i]; // Force to mark as dirty if group is dirty\n\t        // FIXME __dirtyPath ?\n\t\n\t        if (el.__dirty) {\n\t          child.__dirty = true;\n\t        }\n\t\n\t        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n\t      } // Mark group clean here\n\t\n\t\n\t      el.__dirty = false;\n\t    } else {\n\t      el.__clipPaths = clipPaths;\n\t      this._displayList[this._displayListLen++] = el;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 添加图形(Shape)或者组(Group)到根节点\n\t   * @param {module:zrender/Element} el\n\t   */\n\t  addRoot: function (el) {\n\t    if (el.__storage === this) {\n\t      return;\n\t    }\n\t\n\t    if (el instanceof Group) {\n\t      el.addChildrenToStorage(this);\n\t    }\n\t\n\t    this.addToStorage(el);\n\t\n\t    this._roots.push(el);\n\t  },\n\t\n\t  /**\n\t   * 删除指定的图形(Shape)或者组(Group)\n\t   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n\t   */\n\t  delRoot: function (el) {\n\t    if (el == null) {\n\t      // 不指定el清空\n\t      for (var i = 0; i < this._roots.length; i++) {\n\t        var root = this._roots[i];\n\t\n\t        if (root instanceof Group) {\n\t          root.delChildrenFromStorage(this);\n\t        }\n\t      }\n\t\n\t      this._roots = [];\n\t      this._displayList = [];\n\t      this._displayListLen = 0;\n\t      return;\n\t    }\n\t\n\t    if (el instanceof Array) {\n\t      for (var i = 0, l = el.length; i < l; i++) {\n\t        this.delRoot(el[i]);\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    var idx = util.indexOf(this._roots, el);\n\t\n\t    if (idx >= 0) {\n\t      this.delFromStorage(el);\n\t\n\t      this._roots.splice(idx, 1);\n\t\n\t      if (el instanceof Group) {\n\t        el.delChildrenFromStorage(this);\n\t      }\n\t    }\n\t  },\n\t  addToStorage: function (el) {\n\t    if (el) {\n\t      el.__storage = this;\n\t      el.dirty(false);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  delFromStorage: function (el) {\n\t    if (el) {\n\t      el.__storage = null;\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 清空并且释放Storage\n\t   */\n\t  dispose: function () {\n\t    this._renderList = this._roots = null;\n\t  },\n\t  displayableSortFunc: shapeCompareFunc\n\t};\n\tvar _default = Storage;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1490:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar util = __webpack_require__(3);\n\t\n\tvar _event = __webpack_require__(114);\n\t\n\tvar Dispatcher = _event.Dispatcher;\n\t\n\tvar requestAnimationFrame = __webpack_require__(560);\n\t\n\tvar Animator = __webpack_require__(559);\n\t\n\t/**\n\t * 动画主类, 调度和管理所有动画控制器\n\t *\n\t * @module zrender/animation/Animation\n\t * @author pissang(https://github.com/pissang)\n\t */\n\t// TODO Additive animation\n\t// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n\t// https://developer.apple.com/videos/wwdc2014/#236\n\t\n\t/**\n\t * @typedef {Object} IZRenderStage\n\t * @property {Function} update\n\t */\n\t\n\t/**\n\t * @alias module:zrender/animation/Animation\n\t * @constructor\n\t * @param {Object} [options]\n\t * @param {Function} [options.onframe]\n\t * @param {IZRenderStage} [options.stage]\n\t * @example\n\t *     var animation = new Animation();\n\t *     var obj = {\n\t *         x: 100,\n\t *         y: 100\n\t *     };\n\t *     animation.animate(node.position)\n\t *         .when(1000, {\n\t *             x: 500,\n\t *             y: 500\n\t *         })\n\t *         .when(2000, {\n\t *             x: 100,\n\t *             y: 100\n\t *         })\n\t *         .start('spline');\n\t */\n\tvar Animation = function (options) {\n\t  options = options || {};\n\t  this.stage = options.stage || {};\n\t\n\t  this.onframe = options.onframe || function () {}; // private properties\n\t\n\t\n\t  this._clips = [];\n\t  this._running = false;\n\t  this._time;\n\t  this._pausedTime;\n\t  this._pauseStart;\n\t  this._paused = false;\n\t  Dispatcher.call(this);\n\t};\n\t\n\tAnimation.prototype = {\n\t  constructor: Animation,\n\t\n\t  /**\n\t   * 添加 clip\n\t   * @param {module:zrender/animation/Clip} clip\n\t   */\n\t  addClip: function (clip) {\n\t    this._clips.push(clip);\n\t  },\n\t\n\t  /**\n\t   * 添加 animator\n\t   * @param {module:zrender/animation/Animator} animator\n\t   */\n\t  addAnimator: function (animator) {\n\t    animator.animation = this;\n\t    var clips = animator.getClips();\n\t\n\t    for (var i = 0; i < clips.length; i++) {\n\t      this.addClip(clips[i]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 删除动画片段\n\t   * @param {module:zrender/animation/Clip} clip\n\t   */\n\t  removeClip: function (clip) {\n\t    var idx = util.indexOf(this._clips, clip);\n\t\n\t    if (idx >= 0) {\n\t      this._clips.splice(idx, 1);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 删除动画片段\n\t   * @param {module:zrender/animation/Animator} animator\n\t   */\n\t  removeAnimator: function (animator) {\n\t    var clips = animator.getClips();\n\t\n\t    for (var i = 0; i < clips.length; i++) {\n\t      this.removeClip(clips[i]);\n\t    }\n\t\n\t    animator.animation = null;\n\t  },\n\t  _update: function () {\n\t    var time = new Date().getTime() - this._pausedTime;\n\t\n\t    var delta = time - this._time;\n\t    var clips = this._clips;\n\t    var len = clips.length;\n\t    var deferredEvents = [];\n\t    var deferredClips = [];\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      var clip = clips[i];\n\t      var e = clip.step(time, delta); // Throw out the events need to be called after\n\t      // stage.update, like destroy\n\t\n\t      if (e) {\n\t        deferredEvents.push(e);\n\t        deferredClips.push(clip);\n\t      }\n\t    } // Remove the finished clip\n\t\n\t\n\t    for (var i = 0; i < len;) {\n\t      if (clips[i]._needsRemove) {\n\t        clips[i] = clips[len - 1];\n\t        clips.pop();\n\t        len--;\n\t      } else {\n\t        i++;\n\t      }\n\t    }\n\t\n\t    len = deferredEvents.length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      deferredClips[i].fire(deferredEvents[i]);\n\t    }\n\t\n\t    this._time = time;\n\t    this.onframe(delta); // Frame should before stage update. Upper application\n\t    // depends on the sequence (e.g., echarts-stream)\n\t\n\t    this.trigger('frame', delta);\n\t\n\t    if (this.stage.update) {\n\t      this.stage.update();\n\t    }\n\t  },\n\t  _startLoop: function () {\n\t    var self = this;\n\t    this._running = true;\n\t\n\t    function step() {\n\t      if (self._running) {\n\t        requestAnimationFrame(step);\n\t        !self._paused && self._update();\n\t      }\n\t    }\n\t\n\t    requestAnimationFrame(step);\n\t  },\n\t\n\t  /**\n\t   * 开始运行动画\n\t   */\n\t  start: function () {\n\t    this._time = new Date().getTime();\n\t    this._pausedTime = 0;\n\t\n\t    this._startLoop();\n\t  },\n\t\n\t  /**\n\t   * 停止运行动画\n\t   */\n\t  stop: function () {\n\t    this._running = false;\n\t  },\n\t\n\t  /**\n\t   * Pause\n\t   */\n\t  pause: function () {\n\t    if (!this._paused) {\n\t      this._pauseStart = new Date().getTime();\n\t      this._paused = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resume\n\t   */\n\t  resume: function () {\n\t    if (this._paused) {\n\t      this._pausedTime += new Date().getTime() - this._pauseStart;\n\t      this._paused = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 清除所有动画片段\n\t   */\n\t  clear: function () {\n\t    this._clips = [];\n\t  },\n\t\n\t  /**\n\t   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n\t   * @param  {Object} target\n\t   * @param  {Object} options\n\t   * @param  {boolean} [options.loop=false] 是否循环播放动画\n\t   * @param  {Function} [options.getter=null]\n\t   *         如果指定getter函数，会通过getter函数取属性值\n\t   * @param  {Function} [options.setter=null]\n\t   *         如果指定setter函数，会通过setter函数设置属性值\n\t   * @return {module:zrender/animation/Animation~Animator}\n\t   */\n\t  // TODO Gap\n\t  animate: function (target, options) {\n\t    options = options || {};\n\t    var animator = new Animator(target, options.loop, options.getter, options.setter);\n\t    this.addAnimator(animator);\n\t    return animator;\n\t  }\n\t};\n\tutil.mixin(Animation, Dispatcher);\n\tvar _default = Animation;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 559:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Clip = __webpack_require__(1491);\n\t\n\tvar color = __webpack_require__(165);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar isArrayLike = _util.isArrayLike;\n\t\n\t/**\n\t * @module echarts/animation/Animator\n\t */\n\tvar arraySlice = Array.prototype.slice;\n\t\n\tfunction defaultGetter(target, key) {\n\t  return target[key];\n\t}\n\t\n\tfunction defaultSetter(target, key, value) {\n\t  target[key] = value;\n\t}\n\t/**\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} percent\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction interpolateNumber(p0, p1, percent) {\n\t  return (p1 - p0) * percent + p0;\n\t}\n\t/**\n\t * @param  {string} p0\n\t * @param  {string} p1\n\t * @param  {number} percent\n\t * @return {string}\n\t */\n\t\n\t\n\tfunction interpolateString(p0, p1, percent) {\n\t  return percent > 0.5 ? p1 : p0;\n\t}\n\t/**\n\t * @param  {Array} p0\n\t * @param  {Array} p1\n\t * @param  {number} percent\n\t * @param  {Array} out\n\t * @param  {number} arrDim\n\t */\n\t\n\t\n\tfunction interpolateArray(p0, p1, percent, out, arrDim) {\n\t  var len = p0.length;\n\t\n\t  if (arrDim == 1) {\n\t    for (var i = 0; i < len; i++) {\n\t      out[i] = interpolateNumber(p0[i], p1[i], percent);\n\t    }\n\t  } else {\n\t    var len2 = len && p0[0].length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      for (var j = 0; j < len2; j++) {\n\t        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n\t      }\n\t    }\n\t  }\n\t} // arr0 is source array, arr1 is target array.\n\t// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\t\n\t\n\tfunction fillArr(arr0, arr1, arrDim) {\n\t  var arr0Len = arr0.length;\n\t  var arr1Len = arr1.length;\n\t\n\t  if (arr0Len !== arr1Len) {\n\t    // FIXME Not work for TypedArray\n\t    var isPreviousLarger = arr0Len > arr1Len;\n\t\n\t    if (isPreviousLarger) {\n\t      // Cut the previous\n\t      arr0.length = arr1Len;\n\t    } else {\n\t      // Fill the previous\n\t      for (var i = arr0Len; i < arr1Len; i++) {\n\t        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n\t      }\n\t    }\n\t  } // Handling NaN value\n\t\n\t\n\t  var len2 = arr0[0] && arr0[0].length;\n\t\n\t  for (var i = 0; i < arr0.length; i++) {\n\t    if (arrDim === 1) {\n\t      if (isNaN(arr0[i])) {\n\t        arr0[i] = arr1[i];\n\t      }\n\t    } else {\n\t      for (var j = 0; j < len2; j++) {\n\t        if (isNaN(arr0[i][j])) {\n\t          arr0[i][j] = arr1[i][j];\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t/**\n\t * @param  {Array} arr0\n\t * @param  {Array} arr1\n\t * @param  {number} arrDim\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isArraySame(arr0, arr1, arrDim) {\n\t  if (arr0 === arr1) {\n\t    return true;\n\t  }\n\t\n\t  var len = arr0.length;\n\t\n\t  if (len !== arr1.length) {\n\t    return false;\n\t  }\n\t\n\t  if (arrDim === 1) {\n\t    for (var i = 0; i < len; i++) {\n\t      if (arr0[i] !== arr1[i]) {\n\t        return false;\n\t      }\n\t    }\n\t  } else {\n\t    var len2 = arr0[0].length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      for (var j = 0; j < len2; j++) {\n\t        if (arr0[i][j] !== arr1[i][j]) {\n\t          return false;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t/**\n\t * Catmull Rom interpolate array\n\t * @param  {Array} p0\n\t * @param  {Array} p1\n\t * @param  {Array} p2\n\t * @param  {Array} p3\n\t * @param  {number} t\n\t * @param  {number} t2\n\t * @param  {number} t3\n\t * @param  {Array} out\n\t * @param  {number} arrDim\n\t */\n\t\n\t\n\tfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n\t  var len = p0.length;\n\t\n\t  if (arrDim == 1) {\n\t    for (var i = 0; i < len; i++) {\n\t      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n\t    }\n\t  } else {\n\t    var len2 = p0[0].length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      for (var j = 0; j < len2; j++) {\n\t        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n\t      }\n\t    }\n\t  }\n\t}\n\t/**\n\t * Catmull Rom interpolate number\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} p3\n\t * @param  {number} t\n\t * @param  {number} t2\n\t * @param  {number} t3\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n\t  var v0 = (p2 - p0) * 0.5;\n\t  var v1 = (p3 - p1) * 0.5;\n\t  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t}\n\t\n\tfunction cloneValue(value) {\n\t  if (isArrayLike(value)) {\n\t    var len = value.length;\n\t\n\t    if (isArrayLike(value[0])) {\n\t      var ret = [];\n\t\n\t      for (var i = 0; i < len; i++) {\n\t        ret.push(arraySlice.call(value[i]));\n\t      }\n\t\n\t      return ret;\n\t    }\n\t\n\t    return arraySlice.call(value);\n\t  }\n\t\n\t  return value;\n\t}\n\t\n\tfunction rgba2String(rgba) {\n\t  rgba[0] = Math.floor(rgba[0]);\n\t  rgba[1] = Math.floor(rgba[1]);\n\t  rgba[2] = Math.floor(rgba[2]);\n\t  return 'rgba(' + rgba.join(',') + ')';\n\t}\n\t\n\tfunction getArrayDim(keyframes) {\n\t  var lastValue = keyframes[keyframes.length - 1].value;\n\t  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n\t}\n\t\n\tfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n\t  var getter = animator._getter;\n\t  var setter = animator._setter;\n\t  var useSpline = easing === 'spline';\n\t  var trackLen = keyframes.length;\n\t\n\t  if (!trackLen) {\n\t    return;\n\t  } // Guess data type\n\t\n\t\n\t  var firstVal = keyframes[0].value;\n\t  var isValueArray = isArrayLike(firstVal);\n\t  var isValueColor = false;\n\t  var isValueString = false; // For vertices morphing\n\t\n\t  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\t  var trackMaxTime; // Sort keyframe as ascending\n\t\n\t  keyframes.sort(function (a, b) {\n\t    return a.time - b.time;\n\t  });\n\t  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\t\n\t  var kfPercents = []; // Value of each keyframe\n\t\n\t  var kfValues = [];\n\t  var prevValue = keyframes[0].value;\n\t  var isAllValueEqual = true;\n\t\n\t  for (var i = 0; i < trackLen; i++) {\n\t    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\t\n\t    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\t\n\t    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n\t      isAllValueEqual = false;\n\t    }\n\t\n\t    prevValue = value; // Try converting a string to a color array\n\t\n\t    if (typeof value == 'string') {\n\t      var colorArray = color.parse(value);\n\t\n\t      if (colorArray) {\n\t        value = colorArray;\n\t        isValueColor = true;\n\t      } else {\n\t        isValueString = true;\n\t      }\n\t    }\n\t\n\t    kfValues.push(value);\n\t  }\n\t\n\t  if (!forceAnimate && isAllValueEqual) {\n\t    return;\n\t  }\n\t\n\t  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\t\n\t  for (var i = 0; i < trackLen - 1; i++) {\n\t    if (isValueArray) {\n\t      fillArr(kfValues[i], lastValue, arrDim);\n\t    } else {\n\t      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n\t        kfValues[i] = lastValue;\n\t      }\n\t    }\n\t  }\n\t\n\t  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n\t  // animation playback is sequency\n\t\n\t  var lastFrame = 0;\n\t  var lastFramePercent = 0;\n\t  var start;\n\t  var w;\n\t  var p0;\n\t  var p1;\n\t  var p2;\n\t  var p3;\n\t\n\t  if (isValueColor) {\n\t    var rgba = [0, 0, 0, 0];\n\t  }\n\t\n\t  var onframe = function (target, percent) {\n\t    // Find the range keyframes\n\t    // kf1-----kf2---------current--------kf3\n\t    // find kf2 and kf3 and do interpolation\n\t    var frame; // In the easing function like elasticOut, percent may less than 0\n\t\n\t    if (percent < 0) {\n\t      frame = 0;\n\t    } else if (percent < lastFramePercent) {\n\t      // Start from next key\n\t      // PENDING start from lastFrame ?\n\t      start = Math.min(lastFrame + 1, trackLen - 1);\n\t\n\t      for (frame = start; frame >= 0; frame--) {\n\t        if (kfPercents[frame] <= percent) {\n\t          break;\n\t        }\n\t      } // PENDING really need to do this ?\n\t\n\t\n\t      frame = Math.min(frame, trackLen - 2);\n\t    } else {\n\t      for (frame = lastFrame; frame < trackLen; frame++) {\n\t        if (kfPercents[frame] > percent) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      frame = Math.min(frame - 1, trackLen - 2);\n\t    }\n\t\n\t    lastFrame = frame;\n\t    lastFramePercent = percent;\n\t    var range = kfPercents[frame + 1] - kfPercents[frame];\n\t\n\t    if (range === 0) {\n\t      return;\n\t    } else {\n\t      w = (percent - kfPercents[frame]) / range;\n\t    }\n\t\n\t    if (useSpline) {\n\t      p1 = kfValues[frame];\n\t      p0 = kfValues[frame === 0 ? frame : frame - 1];\n\t      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n\t      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\t\n\t      if (isValueArray) {\n\t        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n\t      } else {\n\t        var value;\n\t\n\t        if (isValueColor) {\n\t          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n\t          value = rgba2String(rgba);\n\t        } else if (isValueString) {\n\t          // String is step(0.5)\n\t          return interpolateString(p1, p2, w);\n\t        } else {\n\t          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n\t        }\n\t\n\t        setter(target, propName, value);\n\t      }\n\t    } else {\n\t      if (isValueArray) {\n\t        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n\t      } else {\n\t        var value;\n\t\n\t        if (isValueColor) {\n\t          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n\t          value = rgba2String(rgba);\n\t        } else if (isValueString) {\n\t          // String is step(0.5)\n\t          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n\t        } else {\n\t          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n\t        }\n\t\n\t        setter(target, propName, value);\n\t      }\n\t    }\n\t  };\n\t\n\t  var clip = new Clip({\n\t    target: animator._target,\n\t    life: trackMaxTime,\n\t    loop: animator._loop,\n\t    delay: animator._delay,\n\t    onframe: onframe,\n\t    ondestroy: oneTrackDone\n\t  });\n\t\n\t  if (easing && easing !== 'spline') {\n\t    clip.easing = easing;\n\t  }\n\t\n\t  return clip;\n\t}\n\t/**\n\t * @alias module:zrender/animation/Animator\n\t * @constructor\n\t * @param {Object} target\n\t * @param {boolean} loop\n\t * @param {Function} getter\n\t * @param {Function} setter\n\t */\n\t\n\t\n\tvar Animator = function (target, loop, getter, setter) {\n\t  this._tracks = {};\n\t  this._target = target;\n\t  this._loop = loop || false;\n\t  this._getter = getter || defaultGetter;\n\t  this._setter = setter || defaultSetter;\n\t  this._clipCount = 0;\n\t  this._delay = 0;\n\t  this._doneList = [];\n\t  this._onframeList = [];\n\t  this._clipList = [];\n\t};\n\t\n\tAnimator.prototype = {\n\t  /**\n\t   * 设置动画关键帧\n\t   * @param  {number} time 关键帧时间，单位是ms\n\t   * @param  {Object} props 关键帧的属性值，key-value表示\n\t   * @return {module:zrender/animation/Animator}\n\t   */\n\t  when: function (time\n\t  /* ms */\n\t  , props) {\n\t    var tracks = this._tracks;\n\t\n\t    for (var propName in props) {\n\t      if (!props.hasOwnProperty(propName)) {\n\t        continue;\n\t      }\n\t\n\t      if (!tracks[propName]) {\n\t        tracks[propName] = []; // Invalid value\n\t\n\t        var value = this._getter(this._target, propName);\n\t\n\t        if (value == null) {\n\t          // zrLog('Invalid property ' + propName);\n\t          continue;\n\t        } // If time is 0\n\t        //  Then props is given initialize value\n\t        // Else\n\t        //  Initialize value from current prop value\n\t\n\t\n\t        if (time !== 0) {\n\t          tracks[propName].push({\n\t            time: 0,\n\t            value: cloneValue(value)\n\t          });\n\t        }\n\t      }\n\t\n\t      tracks[propName].push({\n\t        time: time,\n\t        value: props[propName]\n\t      });\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 添加动画每一帧的回调函数\n\t   * @param  {Function} callback\n\t   * @return {module:zrender/animation/Animator}\n\t   */\n\t  during: function (callback) {\n\t    this._onframeList.push(callback);\n\t\n\t    return this;\n\t  },\n\t  pause: function () {\n\t    for (var i = 0; i < this._clipList.length; i++) {\n\t      this._clipList[i].pause();\n\t    }\n\t\n\t    this._paused = true;\n\t  },\n\t  resume: function () {\n\t    for (var i = 0; i < this._clipList.length; i++) {\n\t      this._clipList[i].resume();\n\t    }\n\t\n\t    this._paused = false;\n\t  },\n\t  isPaused: function () {\n\t    return !!this._paused;\n\t  },\n\t  _doneCallback: function () {\n\t    // Clear all tracks\n\t    this._tracks = {}; // Clear all clips\n\t\n\t    this._clipList.length = 0;\n\t    var doneList = this._doneList;\n\t    var len = doneList.length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      doneList[i].call(this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 开始执行动画\n\t   * @param  {string|Function} [easing]\n\t   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n\t   * @param  {boolean} forceAnimate\n\t   * @return {module:zrender/animation/Animator}\n\t   */\n\t  start: function (easing, forceAnimate) {\n\t    var self = this;\n\t    var clipCount = 0;\n\t\n\t    var oneTrackDone = function () {\n\t      clipCount--;\n\t\n\t      if (!clipCount) {\n\t        self._doneCallback();\n\t      }\n\t    };\n\t\n\t    var lastClip;\n\t\n\t    for (var propName in this._tracks) {\n\t      if (!this._tracks.hasOwnProperty(propName)) {\n\t        continue;\n\t      }\n\t\n\t      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\t\n\t      if (clip) {\n\t        this._clipList.push(clip);\n\t\n\t        clipCount++; // If start after added to animation\n\t\n\t        if (this.animation) {\n\t          this.animation.addClip(clip);\n\t        }\n\t\n\t        lastClip = clip;\n\t      }\n\t    } // Add during callback on the last clip\n\t\n\t\n\t    if (lastClip) {\n\t      var oldOnFrame = lastClip.onframe;\n\t\n\t      lastClip.onframe = function (target, percent) {\n\t        oldOnFrame(target, percent);\n\t\n\t        for (var i = 0; i < self._onframeList.length; i++) {\n\t          self._onframeList[i](target, percent);\n\t        }\n\t      };\n\t    } // This optimization will help the case that in the upper application\n\t    // the view may be refreshed frequently, where animation will be\n\t    // called repeatly but nothing changed.\n\t\n\t\n\t    if (!clipCount) {\n\t      this._doneCallback();\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 停止动画\n\t   * @param {boolean} forwardToLast If move to last frame before stop\n\t   */\n\t  stop: function (forwardToLast) {\n\t    var clipList = this._clipList;\n\t    var animation = this.animation;\n\t\n\t    for (var i = 0; i < clipList.length; i++) {\n\t      var clip = clipList[i];\n\t\n\t      if (forwardToLast) {\n\t        // Move to last frame before stop\n\t        clip.onframe(this._target, 1);\n\t      }\n\t\n\t      animation && animation.removeClip(clip);\n\t    }\n\t\n\t    clipList.length = 0;\n\t  },\n\t\n\t  /**\n\t   * 设置动画延迟开始的时间\n\t   * @param  {number} time 单位ms\n\t   * @return {module:zrender/animation/Animator}\n\t   */\n\t  delay: function (time) {\n\t    this._delay = time;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 添加动画结束的回调\n\t   * @param  {Function} cb\n\t   * @return {module:zrender/animation/Animator}\n\t   */\n\t  done: function (cb) {\n\t    if (cb) {\n\t      this._doneList.push(cb);\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @return {Array.<module:zrender/animation/Clip>}\n\t   */\n\t  getClips: function () {\n\t    return this._clipList;\n\t  }\n\t};\n\tvar _default = Animator;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1491:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar easingFuncs = __webpack_require__(1492);\n\t\n\t/**\n\t * 动画主控制器\n\t * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n\t * @config life(1000) 动画时长\n\t * @config delay(0) 动画延迟时间\n\t * @config loop(true)\n\t * @config gap(0) 循环的间隔时间\n\t * @config onframe\n\t * @config easing(optional)\n\t * @config ondestroy(optional)\n\t * @config onrestart(optional)\n\t *\n\t * TODO pause\n\t */\n\tfunction Clip(options) {\n\t  this._target = options.target; // 生命周期\n\t\n\t  this._life = options.life || 1000; // 延时\n\t\n\t  this._delay = options.delay || 0; // 开始时间\n\t  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\t\n\t  this._initialized = false; // 是否循环\n\t\n\t  this.loop = options.loop == null ? false : options.loop;\n\t  this.gap = options.gap || 0;\n\t  this.easing = options.easing || 'Linear';\n\t  this.onframe = options.onframe;\n\t  this.ondestroy = options.ondestroy;\n\t  this.onrestart = options.onrestart;\n\t  this._pausedTime = 0;\n\t  this._paused = false;\n\t}\n\t\n\tClip.prototype = {\n\t  constructor: Clip,\n\t  step: function (globalTime, deltaTime) {\n\t    // Set startTime on first step, or _startTime may has milleseconds different between clips\n\t    // PENDING\n\t    if (!this._initialized) {\n\t      this._startTime = globalTime + this._delay;\n\t      this._initialized = true;\n\t    }\n\t\n\t    if (this._paused) {\n\t      this._pausedTime += deltaTime;\n\t      return;\n\t    }\n\t\n\t    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\t\n\t    if (percent < 0) {\n\t      return;\n\t    }\n\t\n\t    percent = Math.min(percent, 1);\n\t    var easing = this.easing;\n\t    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n\t    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n\t    this.fire('frame', schedule); // 结束\n\t\n\t    if (percent == 1) {\n\t      if (this.loop) {\n\t        this.restart(globalTime); // 重新开始周期\n\t        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\t\n\t        return 'restart';\n\t      } // 动画完成将这个控制器标识为待删除\n\t      // 在Animation.update中进行批量删除\n\t\n\t\n\t      this._needsRemove = true;\n\t      return 'destroy';\n\t    }\n\t\n\t    return null;\n\t  },\n\t  restart: function (globalTime) {\n\t    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n\t    this._startTime = globalTime - remainder + this.gap;\n\t    this._pausedTime = 0;\n\t    this._needsRemove = false;\n\t  },\n\t  fire: function (eventType, arg) {\n\t    eventType = 'on' + eventType;\n\t\n\t    if (this[eventType]) {\n\t      this[eventType](this._target, arg);\n\t    }\n\t  },\n\t  pause: function () {\n\t    this._paused = true;\n\t  },\n\t  resume: function () {\n\t    this._paused = false;\n\t  }\n\t};\n\tvar _default = Clip;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1492:\n/***/ (function(module, exports) {\n\n\t/**\n\t * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n\t * @see http://sole.github.io/tween.js/examples/03_graphs.html\n\t * @exports zrender/animation/easing\n\t */\n\tvar easing = {\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  linear: function (k) {\n\t    return k;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quadraticIn: function (k) {\n\t    return k * k;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quadraticOut: function (k) {\n\t    return k * (2 - k);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quadraticInOut: function (k) {\n\t    if ((k *= 2) < 1) {\n\t      return 0.5 * k * k;\n\t    }\n\t\n\t    return -0.5 * (--k * (k - 2) - 1);\n\t  },\n\t  // 三次方的缓动（t^3）\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  cubicIn: function (k) {\n\t    return k * k * k;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  cubicOut: function (k) {\n\t    return --k * k * k + 1;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  cubicInOut: function (k) {\n\t    if ((k *= 2) < 1) {\n\t      return 0.5 * k * k * k;\n\t    }\n\t\n\t    return 0.5 * ((k -= 2) * k * k + 2);\n\t  },\n\t  // 四次方的缓动（t^4）\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quarticIn: function (k) {\n\t    return k * k * k * k;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quarticOut: function (k) {\n\t    return 1 - --k * k * k * k;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quarticInOut: function (k) {\n\t    if ((k *= 2) < 1) {\n\t      return 0.5 * k * k * k * k;\n\t    }\n\t\n\t    return -0.5 * ((k -= 2) * k * k * k - 2);\n\t  },\n\t  // 五次方的缓动（t^5）\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quinticIn: function (k) {\n\t    return k * k * k * k * k;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quinticOut: function (k) {\n\t    return --k * k * k * k * k + 1;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  quinticInOut: function (k) {\n\t    if ((k *= 2) < 1) {\n\t      return 0.5 * k * k * k * k * k;\n\t    }\n\t\n\t    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n\t  },\n\t  // 正弦曲线的缓动（sin(t)）\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  sinusoidalIn: function (k) {\n\t    return 1 - Math.cos(k * Math.PI / 2);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  sinusoidalOut: function (k) {\n\t    return Math.sin(k * Math.PI / 2);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  sinusoidalInOut: function (k) {\n\t    return 0.5 * (1 - Math.cos(Math.PI * k));\n\t  },\n\t  // 指数曲线的缓动（2^t）\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  exponentialIn: function (k) {\n\t    return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  exponentialOut: function (k) {\n\t    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  exponentialInOut: function (k) {\n\t    if (k === 0) {\n\t      return 0;\n\t    }\n\t\n\t    if (k === 1) {\n\t      return 1;\n\t    }\n\t\n\t    if ((k *= 2) < 1) {\n\t      return 0.5 * Math.pow(1024, k - 1);\n\t    }\n\t\n\t    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t  },\n\t  // 圆形曲线的缓动（sqrt(1-t^2)）\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  circularIn: function (k) {\n\t    return 1 - Math.sqrt(1 - k * k);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  circularOut: function (k) {\n\t    return Math.sqrt(1 - --k * k);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  circularInOut: function (k) {\n\t    if ((k *= 2) < 1) {\n\t      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n\t    }\n\t\n\t    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t  },\n\t  // 创建类似于弹簧在停止前来回振荡的动画\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  elasticIn: function (k) {\n\t    var s;\n\t    var a = 0.1;\n\t    var p = 0.4;\n\t\n\t    if (k === 0) {\n\t      return 0;\n\t    }\n\t\n\t    if (k === 1) {\n\t      return 1;\n\t    }\n\t\n\t    if (!a || a < 1) {\n\t      a = 1;\n\t      s = p / 4;\n\t    } else {\n\t      s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t    }\n\t\n\t    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  elasticOut: function (k) {\n\t    var s;\n\t    var a = 0.1;\n\t    var p = 0.4;\n\t\n\t    if (k === 0) {\n\t      return 0;\n\t    }\n\t\n\t    if (k === 1) {\n\t      return 1;\n\t    }\n\t\n\t    if (!a || a < 1) {\n\t      a = 1;\n\t      s = p / 4;\n\t    } else {\n\t      s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t    }\n\t\n\t    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  elasticInOut: function (k) {\n\t    var s;\n\t    var a = 0.1;\n\t    var p = 0.4;\n\t\n\t    if (k === 0) {\n\t      return 0;\n\t    }\n\t\n\t    if (k === 1) {\n\t      return 1;\n\t    }\n\t\n\t    if (!a || a < 1) {\n\t      a = 1;\n\t      s = p / 4;\n\t    } else {\n\t      s = p * Math.asin(1 / a) / (2 * Math.PI);\n\t    }\n\t\n\t    if ((k *= 2) < 1) {\n\t      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n\t    }\n\t\n\t    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t  },\n\t  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  backIn: function (k) {\n\t    var s = 1.70158;\n\t    return k * k * ((s + 1) * k - s);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  backOut: function (k) {\n\t    var s = 1.70158;\n\t    return --k * k * ((s + 1) * k + s) + 1;\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  backInOut: function (k) {\n\t    var s = 1.70158 * 1.525;\n\t\n\t    if ((k *= 2) < 1) {\n\t      return 0.5 * (k * k * ((s + 1) * k - s));\n\t    }\n\t\n\t    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t  },\n\t  // 创建弹跳效果\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  bounceIn: function (k) {\n\t    return 1 - easing.bounceOut(1 - k);\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  bounceOut: function (k) {\n\t    if (k < 1 / 2.75) {\n\t      return 7.5625 * k * k;\n\t    } else if (k < 2 / 2.75) {\n\t      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n\t    } else if (k < 2.5 / 2.75) {\n\t      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n\t    } else {\n\t      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n\t    }\n\t  },\n\t\n\t  /**\n\t  * @param {number} k\n\t  * @return {number}\n\t  */\n\t  bounceInOut: function (k) {\n\t    if (k < 0.5) {\n\t      return easing.bounceIn(k * 2) * 0.5;\n\t    }\n\t\n\t    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n\t  }\n\t};\n\tvar _default = easing;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 560:\n/***/ (function(module, exports) {\n\n\tvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n\twindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n\t  setTimeout(func, 16);\n\t};\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 230:\n/***/ (function(module, exports) {\n\n\tvar dpr = 1; // If in browser environment\n\t\n\tif (typeof window !== 'undefined') {\n\t  dpr = Math.max(window.devicePixelRatio || 1, 1);\n\t}\n\t/**\n\t * config默认配置项\n\t * @exports zrender/config\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t */\n\t\n\t/**\n\t * debug日志选项：catchBrushException为true下有效\n\t * 0 : 不生成debug数据，发布用\n\t * 1 : 异常抛出，调试用\n\t * 2 : 控制台输出，调试用\n\t */\n\t\n\t\n\tvar debugMode = 0; // retina 屏幕优化\n\t\n\tvar devicePixelRatio = dpr;\n\texports.debugMode = debugMode;\n\texports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1493:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(561);\n\t\n\tvar normalizeRadian = _util.normalizeRadian;\n\tvar PI2 = Math.PI * 2;\n\t/**\n\t * 圆弧描边包含判断\n\t * @param  {number}  cx\n\t * @param  {number}  cy\n\t * @param  {number}  r\n\t * @param  {number}  startAngle\n\t * @param  {number}  endAngle\n\t * @param  {boolean}  anticlockwise\n\t * @param  {number} lineWidth\n\t * @param  {number}  x\n\t * @param  {number}  y\n\t * @return {Boolean}\n\t */\n\t\n\tfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n\t  if (lineWidth === 0) {\n\t    return false;\n\t  }\n\t\n\t  var _l = lineWidth;\n\t  x -= cx;\n\t  y -= cy;\n\t  var d = Math.sqrt(x * x + y * y);\n\t\n\t  if (d - _l > r || d + _l < r) {\n\t    return false;\n\t  }\n\t\n\t  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n\t    // Is a circle\n\t    return true;\n\t  }\n\t\n\t  if (anticlockwise) {\n\t    var tmp = startAngle;\n\t    startAngle = normalizeRadian(endAngle);\n\t    endAngle = normalizeRadian(tmp);\n\t  } else {\n\t    startAngle = normalizeRadian(startAngle);\n\t    endAngle = normalizeRadian(endAngle);\n\t  }\n\t\n\t  if (startAngle > endAngle) {\n\t    endAngle += PI2;\n\t  }\n\t\n\t  var angle = Math.atan2(y, x);\n\t\n\t  if (angle < 0) {\n\t    angle += PI2;\n\t  }\n\t\n\t  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n\t}\n\t\n\texports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1494:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar curve = __webpack_require__(84);\n\t\n\t/**\n\t * 三次贝塞尔曲线描边包含判断\n\t * @param  {number}  x0\n\t * @param  {number}  y0\n\t * @param  {number}  x1\n\t * @param  {number}  y1\n\t * @param  {number}  x2\n\t * @param  {number}  y2\n\t * @param  {number}  x3\n\t * @param  {number}  y3\n\t * @param  {number}  lineWidth\n\t * @param  {number}  x\n\t * @param  {number}  y\n\t * @return {boolean}\n\t */\n\tfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n\t  if (lineWidth === 0) {\n\t    return false;\n\t  }\n\t\n\t  var _l = lineWidth; // Quick reject\n\t\n\t  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n\t    return false;\n\t  }\n\t\n\t  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n\t  return d <= _l / 2;\n\t}\n\t\n\texports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1495:\n/***/ (function(module, exports) {\n\n\t/**\n\t * 线段包含判断\n\t * @param  {number}  x0\n\t * @param  {number}  y0\n\t * @param  {number}  x1\n\t * @param  {number}  y1\n\t * @param  {number}  lineWidth\n\t * @param  {number}  x\n\t * @param  {number}  y\n\t * @return {boolean}\n\t */\n\tfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n\t  if (lineWidth === 0) {\n\t    return false;\n\t  }\n\t\n\t  var _l = lineWidth;\n\t  var _a = 0;\n\t  var _b = x0; // Quick reject\n\t\n\t  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n\t    return false;\n\t  }\n\t\n\t  if (x0 !== x1) {\n\t    _a = (y0 - y1) / (x0 - x1);\n\t    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n\t  } else {\n\t    return Math.abs(x - x0) <= _l / 2;\n\t  }\n\t\n\t  var tmp = _a * x - y + _b;\n\t\n\t  var _s = tmp * tmp / (_a * _a + 1);\n\t\n\t  return _s <= _l / 2 * _l / 2;\n\t}\n\t\n\texports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar PathProxy = __webpack_require__(232);\n\t\n\tvar line = __webpack_require__(1495);\n\t\n\tvar cubic = __webpack_require__(1494);\n\t\n\tvar quadratic = __webpack_require__(1498);\n\t\n\tvar arc = __webpack_require__(1493);\n\t\n\tvar _util = __webpack_require__(561);\n\t\n\tvar normalizeRadian = _util.normalizeRadian;\n\t\n\tvar curve = __webpack_require__(84);\n\t\n\tvar windingLine = __webpack_require__(562);\n\t\n\tvar CMD = PathProxy.CMD;\n\tvar PI2 = Math.PI * 2;\n\tvar EPSILON = 1e-4;\n\t\n\tfunction isAroundEqual(a, b) {\n\t  return Math.abs(a - b) < EPSILON;\n\t} // 临时数组\n\t\n\t\n\tvar roots = [-1, -1, -1];\n\tvar extrema = [-1, -1];\n\t\n\tfunction swapExtrema() {\n\t  var tmp = extrema[0];\n\t  extrema[0] = extrema[1];\n\t  extrema[1] = tmp;\n\t}\n\t\n\tfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n\t  // Quick reject\n\t  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n\t    return 0;\n\t  }\n\t\n\t  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\t\n\t  if (nRoots === 0) {\n\t    return 0;\n\t  } else {\n\t    var w = 0;\n\t    var nExtrema = -1;\n\t    var y0_, y1_;\n\t\n\t    for (var i = 0; i < nRoots; i++) {\n\t      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\t\n\t      var unit = t === 0 || t === 1 ? 0.5 : 1;\n\t      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\t\n\t      if (x_ < x) {\n\t        // Quick reject\n\t        continue;\n\t      }\n\t\n\t      if (nExtrema < 0) {\n\t        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\t\n\t        if (extrema[1] < extrema[0] && nExtrema > 1) {\n\t          swapExtrema();\n\t        }\n\t\n\t        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\t\n\t        if (nExtrema > 1) {\n\t          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n\t        }\n\t      }\n\t\n\t      if (nExtrema == 2) {\n\t        // 分成三段单调函数\n\t        if (t < extrema[0]) {\n\t          w += y0_ < y0 ? unit : -unit;\n\t        } else if (t < extrema[1]) {\n\t          w += y1_ < y0_ ? unit : -unit;\n\t        } else {\n\t          w += y3 < y1_ ? unit : -unit;\n\t        }\n\t      } else {\n\t        // 分成两段单调函数\n\t        if (t < extrema[0]) {\n\t          w += y0_ < y0 ? unit : -unit;\n\t        } else {\n\t          w += y3 < y0_ ? unit : -unit;\n\t        }\n\t      }\n\t    }\n\t\n\t    return w;\n\t  }\n\t}\n\t\n\tfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n\t  // Quick reject\n\t  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n\t    return 0;\n\t  }\n\t\n\t  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\t\n\t  if (nRoots === 0) {\n\t    return 0;\n\t  } else {\n\t    var t = curve.quadraticExtremum(y0, y1, y2);\n\t\n\t    if (t >= 0 && t <= 1) {\n\t      var w = 0;\n\t      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\t\n\t      for (var i = 0; i < nRoots; i++) {\n\t        // Remove one endpoint.\n\t        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n\t        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\t\n\t        if (x_ < x) {\n\t          // Quick reject\n\t          continue;\n\t        }\n\t\n\t        if (roots[i] < t) {\n\t          w += y_ < y0 ? unit : -unit;\n\t        } else {\n\t          w += y2 < y_ ? unit : -unit;\n\t        }\n\t      }\n\t\n\t      return w;\n\t    } else {\n\t      // Remove one endpoint.\n\t      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n\t      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\t\n\t      if (x_ < x) {\n\t        // Quick reject\n\t        return 0;\n\t      }\n\t\n\t      return y2 < y0 ? unit : -unit;\n\t    }\n\t  }\n\t} // TODO\n\t// Arc 旋转\n\t\n\t\n\tfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n\t  y -= cy;\n\t\n\t  if (y > r || y < -r) {\n\t    return 0;\n\t  }\n\t\n\t  var tmp = Math.sqrt(r * r - y * y);\n\t  roots[0] = -tmp;\n\t  roots[1] = tmp;\n\t  var diff = Math.abs(startAngle - endAngle);\n\t\n\t  if (diff < 1e-4) {\n\t    return 0;\n\t  }\n\t\n\t  if (diff % PI2 < 1e-4) {\n\t    // Is a circle\n\t    startAngle = 0;\n\t    endAngle = PI2;\n\t    var dir = anticlockwise ? 1 : -1;\n\t\n\t    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n\t      return dir;\n\t    } else {\n\t      return 0;\n\t    }\n\t  }\n\t\n\t  if (anticlockwise) {\n\t    var tmp = startAngle;\n\t    startAngle = normalizeRadian(endAngle);\n\t    endAngle = normalizeRadian(tmp);\n\t  } else {\n\t    startAngle = normalizeRadian(startAngle);\n\t    endAngle = normalizeRadian(endAngle);\n\t  }\n\t\n\t  if (startAngle > endAngle) {\n\t    endAngle += PI2;\n\t  }\n\t\n\t  var w = 0;\n\t\n\t  for (var i = 0; i < 2; i++) {\n\t    var x_ = roots[i];\n\t\n\t    if (x_ + cx > x) {\n\t      var angle = Math.atan2(y, x_);\n\t      var dir = anticlockwise ? 1 : -1;\n\t\n\t      if (angle < 0) {\n\t        angle = PI2 + angle;\n\t      }\n\t\n\t      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n\t        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n\t          dir = -dir;\n\t        }\n\t\n\t        w += dir;\n\t      }\n\t    }\n\t  }\n\t\n\t  return w;\n\t}\n\t\n\tfunction containPath(data, lineWidth, isStroke, x, y) {\n\t  var w = 0;\n\t  var xi = 0;\n\t  var yi = 0;\n\t  var x0 = 0;\n\t  var y0 = 0;\n\t\n\t  for (var i = 0; i < data.length;) {\n\t    var cmd = data[i++]; // Begin a new subpath\n\t\n\t    if (cmd === CMD.M && i > 1) {\n\t      // Close previous subpath\n\t      if (!isStroke) {\n\t        w += windingLine(xi, yi, x0, y0, x, y);\n\t      } // 如果被任何一个 subpath 包含\n\t      // if (w !== 0) {\n\t      //     return true;\n\t      // }\n\t\n\t    }\n\t\n\t    if (i == 1) {\n\t      // 如果第一个命令是 L, C, Q\n\t      // 则 previous point 同绘制命令的第一个 point\n\t      //\n\t      // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t      xi = data[i];\n\t      yi = data[i + 1];\n\t      x0 = xi;\n\t      y0 = yi;\n\t    }\n\t\n\t    switch (cmd) {\n\t      case CMD.M:\n\t        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n\t        // 在 closePath 的时候使用\n\t        x0 = data[i++];\n\t        y0 = data[i++];\n\t        xi = x0;\n\t        yi = y0;\n\t        break;\n\t\n\t      case CMD.L:\n\t        if (isStroke) {\n\t          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n\t            return true;\n\t          }\n\t        } else {\n\t          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n\t          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n\t        }\n\t\n\t        xi = data[i++];\n\t        yi = data[i++];\n\t        break;\n\t\n\t      case CMD.C:\n\t        if (isStroke) {\n\t          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n\t            return true;\n\t          }\n\t        } else {\n\t          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n\t        }\n\t\n\t        xi = data[i++];\n\t        yi = data[i++];\n\t        break;\n\t\n\t      case CMD.Q:\n\t        if (isStroke) {\n\t          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n\t            return true;\n\t          }\n\t        } else {\n\t          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n\t        }\n\t\n\t        xi = data[i++];\n\t        yi = data[i++];\n\t        break;\n\t\n\t      case CMD.A:\n\t        // TODO Arc 判断的开销比较大\n\t        var cx = data[i++];\n\t        var cy = data[i++];\n\t        var rx = data[i++];\n\t        var ry = data[i++];\n\t        var theta = data[i++];\n\t        var dTheta = data[i++]; // TODO Arc 旋转\n\t\n\t        var psi = data[i++];\n\t        var anticlockwise = 1 - data[i++];\n\t        var x1 = Math.cos(theta) * rx + cx;\n\t        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\t\n\t        if (i > 1) {\n\t          w += windingLine(xi, yi, x1, y1, x, y);\n\t        } else {\n\t          // 第一个命令起点还未定义\n\t          x0 = x1;\n\t          y0 = y1;\n\t        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\t\n\t\n\t        var _x = (x - cx) * ry / rx + cx;\n\t\n\t        if (isStroke) {\n\t          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n\t            return true;\n\t          }\n\t        } else {\n\t          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n\t        }\n\t\n\t        xi = Math.cos(theta + dTheta) * rx + cx;\n\t        yi = Math.sin(theta + dTheta) * ry + cy;\n\t        break;\n\t\n\t      case CMD.R:\n\t        x0 = xi = data[i++];\n\t        y0 = yi = data[i++];\n\t        var width = data[i++];\n\t        var height = data[i++];\n\t        var x1 = x0 + width;\n\t        var y1 = y0 + height;\n\t\n\t        if (isStroke) {\n\t          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n\t            return true;\n\t          }\n\t        } else {\n\t          // FIXME Clockwise ?\n\t          w += windingLine(x1, y0, x1, y1, x, y);\n\t          w += windingLine(x0, y1, x0, y0, x, y);\n\t        }\n\t\n\t        break;\n\t\n\t      case CMD.Z:\n\t        if (isStroke) {\n\t          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n\t            return true;\n\t          }\n\t        } else {\n\t          // Close a subpath\n\t          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n\t          // FIXME subpaths may overlap\n\t          // if (w !== 0) {\n\t          //     return true;\n\t          // }\n\t        }\n\t\n\t        xi = x0;\n\t        yi = y0;\n\t        break;\n\t    }\n\t  }\n\t\n\t  if (!isStroke && !isAroundEqual(yi, y0)) {\n\t    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n\t  }\n\t\n\t  return w !== 0;\n\t}\n\t\n\tfunction contain(pathData, x, y) {\n\t  return containPath(pathData, 0, false, x, y);\n\t}\n\t\n\tfunction containStroke(pathData, lineWidth, x, y) {\n\t  return containPath(pathData, lineWidth, true, x, y);\n\t}\n\t\n\texports.contain = contain;\n\texports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1497:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar windingLine = __webpack_require__(562);\n\t\n\tvar EPSILON = 1e-8;\n\t\n\tfunction isAroundEqual(a, b) {\n\t  return Math.abs(a - b) < EPSILON;\n\t}\n\t\n\tfunction contain(points, x, y) {\n\t  var w = 0;\n\t  var p = points[0];\n\t\n\t  if (!p) {\n\t    return false;\n\t  }\n\t\n\t  for (var i = 1; i < points.length; i++) {\n\t    var p2 = points[i];\n\t    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n\t    p = p2;\n\t  } // Close polygon\n\t\n\t\n\t  var p0 = points[0];\n\t\n\t  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n\t    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n\t  }\n\t\n\t  return w !== 0;\n\t}\n\t\n\texports.contain = contain;\n\n/***/ }),\n\n/***/ 1498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curve = __webpack_require__(84);\n\t\n\tvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\t\n\t/**\n\t * 二次贝塞尔曲线描边包含判断\n\t * @param  {number}  x0\n\t * @param  {number}  y0\n\t * @param  {number}  x1\n\t * @param  {number}  y1\n\t * @param  {number}  x2\n\t * @param  {number}  y2\n\t * @param  {number}  lineWidth\n\t * @param  {number}  x\n\t * @param  {number}  y\n\t * @return {boolean}\n\t */\n\tfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n\t  if (lineWidth === 0) {\n\t    return false;\n\t  }\n\t\n\t  var _l = lineWidth; // Quick reject\n\t\n\t  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n\t    return false;\n\t  }\n\t\n\t  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n\t  return d <= _l / 2;\n\t}\n\t\n\texports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 113:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar imageHelper = __webpack_require__(361);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar getContext = _util.getContext;\n\tvar extend = _util.extend;\n\tvar retrieve2 = _util.retrieve2;\n\tvar retrieve3 = _util.retrieve3;\n\tvar trim = _util.trim;\n\tvar textWidthCache = {};\n\tvar textWidthCacheCounter = 0;\n\tvar TEXT_CACHE_MAX = 5000;\n\tvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n\tvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\t\n\tvar methods = {};\n\t\n\tfunction $override(name, fn) {\n\t  methods[name] = fn;\n\t}\n\t/**\n\t * @public\n\t * @param {string} text\n\t * @param {string} font\n\t * @return {number} width\n\t */\n\t\n\t\n\tfunction getWidth(text, font) {\n\t  font = font || DEFAULT_FONT;\n\t  var key = text + ':' + font;\n\t\n\t  if (textWidthCache[key]) {\n\t    return textWidthCache[key];\n\t  }\n\t\n\t  var textLines = (text + '').split('\\n');\n\t  var width = 0;\n\t\n\t  for (var i = 0, l = textLines.length; i < l; i++) {\n\t    // textContain.measureText may be overrided in SVG or VML\n\t    width = Math.max(measureText(textLines[i], font).width, width);\n\t  }\n\t\n\t  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n\t    textWidthCacheCounter = 0;\n\t    textWidthCache = {};\n\t  }\n\t\n\t  textWidthCacheCounter++;\n\t  textWidthCache[key] = width;\n\t  return width;\n\t}\n\t/**\n\t * @public\n\t * @param {string} text\n\t * @param {string} font\n\t * @param {string} [textAlign='left']\n\t * @param {string} [textVerticalAlign='top']\n\t * @param {Array.<number>} [textPadding]\n\t * @param {Object} [rich]\n\t * @param {Object} [truncate]\n\t * @return {Object} {x, y, width, height, lineHeight}\n\t */\n\t\n\t\n\tfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n\t  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n\t}\n\t\n\tfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n\t  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n\t  var outerWidth = getWidth(text, font);\n\t\n\t  if (textPadding) {\n\t    outerWidth += textPadding[1] + textPadding[3];\n\t  }\n\t\n\t  var outerHeight = contentBlock.outerHeight;\n\t  var x = adjustTextX(0, outerWidth, textAlign);\n\t  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\t  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n\t  rect.lineHeight = contentBlock.lineHeight;\n\t  return rect;\n\t}\n\t\n\tfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n\t  var contentBlock = parseRichText(text, {\n\t    rich: rich,\n\t    truncate: truncate,\n\t    font: font,\n\t    textAlign: textAlign,\n\t    textPadding: textPadding\n\t  });\n\t  var outerWidth = contentBlock.outerWidth;\n\t  var outerHeight = contentBlock.outerHeight;\n\t  var x = adjustTextX(0, outerWidth, textAlign);\n\t  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\t  return new BoundingRect(x, y, outerWidth, outerHeight);\n\t}\n\t/**\n\t * @public\n\t * @param {number} x\n\t * @param {number} width\n\t * @param {string} [textAlign='left']\n\t * @return {number} Adjusted x.\n\t */\n\t\n\t\n\tfunction adjustTextX(x, width, textAlign) {\n\t  // FIXME Right to left language\n\t  if (textAlign === 'right') {\n\t    x -= width;\n\t  } else if (textAlign === 'center') {\n\t    x -= width / 2;\n\t  }\n\t\n\t  return x;\n\t}\n\t/**\n\t * @public\n\t * @param {number} y\n\t * @param {number} height\n\t * @param {string} [textVerticalAlign='top']\n\t * @return {number} Adjusted y.\n\t */\n\t\n\t\n\tfunction adjustTextY(y, height, textVerticalAlign) {\n\t  if (textVerticalAlign === 'middle') {\n\t    y -= height / 2;\n\t  } else if (textVerticalAlign === 'bottom') {\n\t    y -= height;\n\t  }\n\t\n\t  return y;\n\t}\n\t/**\n\t * @public\n\t * @param {stirng} textPosition\n\t * @param {Object} rect {x, y, width, height}\n\t * @param {number} distance\n\t * @return {Object} {x, y, textAlign, textVerticalAlign}\n\t */\n\t\n\t\n\tfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n\t  var x = rect.x;\n\t  var y = rect.y;\n\t  var height = rect.height;\n\t  var width = rect.width;\n\t  var halfHeight = height / 2;\n\t  var textAlign = 'left';\n\t  var textVerticalAlign = 'top';\n\t\n\t  switch (textPosition) {\n\t    case 'left':\n\t      x -= distance;\n\t      y += halfHeight;\n\t      textAlign = 'right';\n\t      textVerticalAlign = 'middle';\n\t      break;\n\t\n\t    case 'right':\n\t      x += distance + width;\n\t      y += halfHeight;\n\t      textVerticalAlign = 'middle';\n\t      break;\n\t\n\t    case 'top':\n\t      x += width / 2;\n\t      y -= distance;\n\t      textAlign = 'center';\n\t      textVerticalAlign = 'bottom';\n\t      break;\n\t\n\t    case 'bottom':\n\t      x += width / 2;\n\t      y += height + distance;\n\t      textAlign = 'center';\n\t      break;\n\t\n\t    case 'inside':\n\t      x += width / 2;\n\t      y += halfHeight;\n\t      textAlign = 'center';\n\t      textVerticalAlign = 'middle';\n\t      break;\n\t\n\t    case 'insideLeft':\n\t      x += distance;\n\t      y += halfHeight;\n\t      textVerticalAlign = 'middle';\n\t      break;\n\t\n\t    case 'insideRight':\n\t      x += width - distance;\n\t      y += halfHeight;\n\t      textAlign = 'right';\n\t      textVerticalAlign = 'middle';\n\t      break;\n\t\n\t    case 'insideTop':\n\t      x += width / 2;\n\t      y += distance;\n\t      textAlign = 'center';\n\t      break;\n\t\n\t    case 'insideBottom':\n\t      x += width / 2;\n\t      y += height - distance;\n\t      textAlign = 'center';\n\t      textVerticalAlign = 'bottom';\n\t      break;\n\t\n\t    case 'insideTopLeft':\n\t      x += distance;\n\t      y += distance;\n\t      break;\n\t\n\t    case 'insideTopRight':\n\t      x += width - distance;\n\t      y += distance;\n\t      textAlign = 'right';\n\t      break;\n\t\n\t    case 'insideBottomLeft':\n\t      x += distance;\n\t      y += height - distance;\n\t      textVerticalAlign = 'bottom';\n\t      break;\n\t\n\t    case 'insideBottomRight':\n\t      x += width - distance;\n\t      y += height - distance;\n\t      textAlign = 'right';\n\t      textVerticalAlign = 'bottom';\n\t      break;\n\t  }\n\t\n\t  return {\n\t    x: x,\n\t    y: y,\n\t    textAlign: textAlign,\n\t    textVerticalAlign: textVerticalAlign\n\t  };\n\t}\n\t/**\n\t * Show ellipsis if overflow.\n\t *\n\t * @public\n\t * @param  {string} text\n\t * @param  {string} containerWidth\n\t * @param  {string} font\n\t * @param  {number} [ellipsis='...']\n\t * @param  {Object} [options]\n\t * @param  {number} [options.maxIterations=3]\n\t * @param  {number} [options.minChar=0] If truncate result are less\n\t *                  then minChar, ellipsis will not show, which is\n\t *                  better for user hint in some cases.\n\t * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n\t * @return {string}\n\t */\n\t\n\t\n\tfunction truncateText(text, containerWidth, font, ellipsis, options) {\n\t  if (!containerWidth) {\n\t    return '';\n\t  }\n\t\n\t  var textLines = (text + '').split('\\n');\n\t  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n\t  // It is not appropriate that every line has '...' when truncate multiple lines.\n\t\n\t  for (var i = 0, len = textLines.length; i < len; i++) {\n\t    textLines[i] = truncateSingleLine(textLines[i], options);\n\t  }\n\t\n\t  return textLines.join('\\n');\n\t}\n\t\n\tfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n\t  options = extend({}, options);\n\t  options.font = font;\n\t  var ellipsis = retrieve2(ellipsis, '...');\n\t  options.maxIterations = retrieve2(options.maxIterations, 2);\n\t  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n\t  // Other languages?\n\t\n\t  options.cnCharWidth = getWidth('国', font); // FIXME\n\t  // Consider proportional font?\n\t\n\t  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n\t  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n\t  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\t\n\t  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\t\n\t  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n\t    contentWidth -= ascCharWidth;\n\t  }\n\t\n\t  var ellipsisWidth = getWidth(ellipsis);\n\t\n\t  if (ellipsisWidth > contentWidth) {\n\t    ellipsis = '';\n\t    ellipsisWidth = 0;\n\t  }\n\t\n\t  contentWidth = containerWidth - ellipsisWidth;\n\t  options.ellipsis = ellipsis;\n\t  options.ellipsisWidth = ellipsisWidth;\n\t  options.contentWidth = contentWidth;\n\t  options.containerWidth = containerWidth;\n\t  return options;\n\t}\n\t\n\tfunction truncateSingleLine(textLine, options) {\n\t  var containerWidth = options.containerWidth;\n\t  var font = options.font;\n\t  var contentWidth = options.contentWidth;\n\t\n\t  if (!containerWidth) {\n\t    return '';\n\t  }\n\t\n\t  var lineWidth = getWidth(textLine, font);\n\t\n\t  if (lineWidth <= containerWidth) {\n\t    return textLine;\n\t  }\n\t\n\t  for (var j = 0;; j++) {\n\t    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n\t      textLine += options.ellipsis;\n\t      break;\n\t    }\n\t\n\t    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n\t    textLine = textLine.substr(0, subLength);\n\t    lineWidth = getWidth(textLine, font);\n\t  }\n\t\n\t  if (textLine === '') {\n\t    textLine = options.placeholder;\n\t  }\n\t\n\t  return textLine;\n\t}\n\t\n\tfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n\t  var width = 0;\n\t  var i = 0;\n\t\n\t  for (var len = text.length; i < len && width < contentWidth; i++) {\n\t    var charCode = text.charCodeAt(i);\n\t    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n\t  }\n\t\n\t  return i;\n\t}\n\t/**\n\t * @public\n\t * @param {string} font\n\t * @return {number} line height\n\t */\n\t\n\t\n\tfunction getLineHeight(font) {\n\t  // FIXME A rough approach.\n\t  return getWidth('国', font);\n\t}\n\t/**\n\t * @public\n\t * @param {string} text\n\t * @param {string} font\n\t * @return {Object} width\n\t */\n\t\n\t\n\tfunction measureText(text, font) {\n\t  return methods.measureText(text, font);\n\t} // Avoid assign to an exported variable, for transforming to cjs.\n\t\n\t\n\tmethods.measureText = function (text, font) {\n\t  var ctx = getContext();\n\t  ctx.font = font || DEFAULT_FONT;\n\t  return ctx.measureText(text);\n\t};\n\t/**\n\t * @public\n\t * @param {string} text\n\t * @param {string} font\n\t * @param {Object} [truncate]\n\t * @return {Object} block: {lineHeight, lines, height, outerHeight}\n\t *  Notice: for performance, do not calculate outerWidth util needed.\n\t */\n\t\n\t\n\tfunction parsePlainText(text, font, padding, truncate) {\n\t  text != null && (text += '');\n\t  var lineHeight = getLineHeight(font);\n\t  var lines = text ? text.split('\\n') : [];\n\t  var height = lines.length * lineHeight;\n\t  var outerHeight = height;\n\t\n\t  if (padding) {\n\t    outerHeight += padding[0] + padding[2];\n\t  }\n\t\n\t  if (text && truncate) {\n\t    var truncOuterHeight = truncate.outerHeight;\n\t    var truncOuterWidth = truncate.outerWidth;\n\t\n\t    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n\t      text = '';\n\t      lines = [];\n\t    } else if (truncOuterWidth != null) {\n\t      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n\t        minChar: truncate.minChar,\n\t        placeholder: truncate.placeholder\n\t      }); // FIXME\n\t      // It is not appropriate that every line has '...' when truncate multiple lines.\n\t\n\t      for (var i = 0, len = lines.length; i < len; i++) {\n\t        lines[i] = truncateSingleLine(lines[i], options);\n\t      }\n\t    }\n\t  }\n\t\n\t  return {\n\t    lines: lines,\n\t    height: height,\n\t    outerHeight: outerHeight,\n\t    lineHeight: lineHeight\n\t  };\n\t}\n\t/**\n\t * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n\t * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n\t *\n\t * @public\n\t * @param {string} text\n\t * @param {Object} style\n\t * @return {Object} block\n\t * {\n\t *      width,\n\t *      height,\n\t *      lines: [{\n\t *          lineHeight,\n\t *          width,\n\t *          tokens: [[{\n\t *              styleName,\n\t *              text,\n\t *              width,      // include textPadding\n\t *              height,     // include textPadding\n\t *              textWidth, // pure text width\n\t *              textHeight, // pure text height\n\t *              lineHeihgt,\n\t *              font,\n\t *              textAlign,\n\t *              textVerticalAlign\n\t *          }], [...], ...]\n\t *      }, ...]\n\t * }\n\t * If styleName is undefined, it is plain text.\n\t */\n\t\n\t\n\tfunction parseRichText(text, style) {\n\t  var contentBlock = {\n\t    lines: [],\n\t    width: 0,\n\t    height: 0\n\t  };\n\t  text != null && (text += '');\n\t\n\t  if (!text) {\n\t    return contentBlock;\n\t  }\n\t\n\t  var lastIndex = STYLE_REG.lastIndex = 0;\n\t  var result;\n\t\n\t  while ((result = STYLE_REG.exec(text)) != null) {\n\t    var matchedIndex = result.index;\n\t\n\t    if (matchedIndex > lastIndex) {\n\t      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n\t    }\n\t\n\t    pushTokens(contentBlock, result[2], result[1]);\n\t    lastIndex = STYLE_REG.lastIndex;\n\t  }\n\t\n\t  if (lastIndex < text.length) {\n\t    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n\t  }\n\t\n\t  var lines = contentBlock.lines;\n\t  var contentHeight = 0;\n\t  var contentWidth = 0; // For `textWidth: 100%`\n\t\n\t  var pendingList = [];\n\t  var stlPadding = style.textPadding;\n\t  var truncate = style.truncate;\n\t  var truncateWidth = truncate && truncate.outerWidth;\n\t  var truncateHeight = truncate && truncate.outerHeight;\n\t\n\t  if (stlPadding) {\n\t    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n\t    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n\t  } // Calculate layout info of tokens.\n\t\n\t\n\t  for (var i = 0; i < lines.length; i++) {\n\t    var line = lines[i];\n\t    var lineHeight = 0;\n\t    var lineWidth = 0;\n\t\n\t    for (var j = 0; j < line.tokens.length; j++) {\n\t      var token = line.tokens[j];\n\t      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\t\n\t      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\t\n\t      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\t\n\t      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n\t      // as box height of the block.\n\t      tokenStyle.textHeight, getLineHeight(font));\n\t      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n\t      token.height = tokenHeight;\n\t      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n\t      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n\t      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\t\n\t      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n\t        return {\n\t          lines: [],\n\t          width: 0,\n\t          height: 0\n\t        };\n\t      }\n\t\n\t      token.textWidth = getWidth(token.text, font);\n\t      var tokenWidth = tokenStyle.textWidth;\n\t      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n\t      // line when box width is needed to be auto.\n\t\n\t      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n\t        token.percentWidth = tokenWidth;\n\t        pendingList.push(token);\n\t        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n\t        // and it is too complicated.\n\t      } else {\n\t        if (tokenWidthNotSpecified) {\n\t          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n\t          // `getBoundingRect()` will not get correct result.\n\t\n\t          var textBackgroundColor = tokenStyle.textBackgroundColor;\n\t          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n\t          // (1) If image is not loaded, it will be loaded at render phase and call\n\t          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n\t          // image, and then the right size will be calculated here at the next tick.\n\t          // See `graphic/helper/text.js`.\n\t          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n\t          // use `imageHelper.findExistImage` to find cached image.\n\t          // `imageHelper.findExistImage` will always be called here before\n\t          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n\t          // which ensures that image will not be rendered before correct size calcualted.\n\t\n\t          if (bgImg) {\n\t            bgImg = imageHelper.findExistImage(bgImg);\n\t\n\t            if (imageHelper.isImageReady(bgImg)) {\n\t              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n\t            }\n\t          }\n\t        }\n\t\n\t        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n\t        tokenWidth += paddingW;\n\t        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\t\n\t        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n\t          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n\t            token.text = '';\n\t            token.textWidth = tokenWidth = 0;\n\t          } else {\n\t            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n\t              minChar: truncate.minChar\n\t            });\n\t            token.textWidth = getWidth(token.text, font);\n\t            tokenWidth = token.textWidth + paddingW;\n\t          }\n\t        }\n\t      }\n\t\n\t      lineWidth += token.width = tokenWidth;\n\t      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n\t    }\n\t\n\t    line.width = lineWidth;\n\t    line.lineHeight = lineHeight;\n\t    contentHeight += lineHeight;\n\t    contentWidth = Math.max(contentWidth, lineWidth);\n\t  }\n\t\n\t  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n\t  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\t\n\t  if (stlPadding) {\n\t    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n\t    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n\t  }\n\t\n\t  for (var i = 0; i < pendingList.length; i++) {\n\t    var token = pendingList[i];\n\t    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\t\n\t    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n\t  }\n\t\n\t  return contentBlock;\n\t}\n\t\n\tfunction pushTokens(block, str, styleName) {\n\t  var isEmptyStr = str === '';\n\t  var strs = str.split('\\n');\n\t  var lines = block.lines;\n\t\n\t  for (var i = 0; i < strs.length; i++) {\n\t    var text = strs[i];\n\t    var token = {\n\t      styleName: styleName,\n\t      text: text,\n\t      isLineHolder: !text && !isEmptyStr\n\t    }; // The first token should be appended to the last line.\n\t\n\t    if (!i) {\n\t      var tokens = (lines[lines.length - 1] || (lines[0] = {\n\t        tokens: []\n\t      })).tokens; // Consider cases:\n\t      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n\t      // (which is a placeholder) should be replaced by new token.\n\t      // (2) A image backage, where token likes {a|}.\n\t      // (3) A redundant '' will affect textAlign in line.\n\t      // (4) tokens with the same tplName should not be merged, because\n\t      // they should be displayed in different box (with border and padding).\n\t\n\t      var tokensLen = tokens.length;\n\t      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n\t      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n\t      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n\t    } // Other tokens always start a new line.\n\t    else {\n\t        // If there is '', insert it as a placeholder.\n\t        lines.push({\n\t          tokens: [token]\n\t        });\n\t      }\n\t  }\n\t}\n\t\n\tfunction makeFont(style) {\n\t  // FIXME in node-canvas fontWeight is before fontStyle\n\t  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n\t  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n\t  style.fontFamily || 'sans-serif'].join(' ');\n\t  return font && trim(font) || style.textFont || style.font;\n\t}\n\t\n\texports.DEFAULT_FONT = DEFAULT_FONT;\n\texports.$override = $override;\n\texports.getWidth = getWidth;\n\texports.getBoundingRect = getBoundingRect;\n\texports.adjustTextX = adjustTextX;\n\texports.adjustTextY = adjustTextY;\n\texports.adjustTextPositionOnRect = adjustTextPositionOnRect;\n\texports.truncateText = truncateText;\n\texports.getLineHeight = getLineHeight;\n\texports.measureText = measureText;\n\texports.parsePlainText = parsePlainText;\n\texports.parseRichText = parseRichText;\n\texports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 561:\n/***/ (function(module, exports) {\n\n\tvar PI2 = Math.PI * 2;\n\t\n\tfunction normalizeRadian(angle) {\n\t  angle %= PI2;\n\t\n\t  if (angle < 0) {\n\t    angle += PI2;\n\t  }\n\t\n\t  return angle;\n\t}\n\t\n\texports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 562:\n/***/ (function(module, exports) {\n\n\tfunction windingLine(x0, y0, x1, y1, x, y) {\n\t  if (y > y0 && y > y1 || y < y0 && y < y1) {\n\t    return 0;\n\t  } // Ignore horizontal line\n\t\n\t\n\t  if (y1 === y0) {\n\t    return 0;\n\t  }\n\t\n\t  var dir = y1 < y0 ? 1 : -1;\n\t  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\t\n\t  if (t === 1 || t === 0) {\n\t    dir = y1 < y0 ? 0.5 : -0.5;\n\t  }\n\t\n\t  var x_ = t * (x1 - x0) + x0;\n\t  return x_ > x ? dir : 0;\n\t}\n\t\n\tmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 231:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Element = __webpack_require__(558);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\t/**\n\t * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n\t * @module zrender/graphic/Group\n\t * @example\n\t *     var Group = require('zrender/container/Group');\n\t *     var Circle = require('zrender/graphic/shape/Circle');\n\t *     var g = new Group();\n\t *     g.position[0] = 100;\n\t *     g.position[1] = 100;\n\t *     g.add(new Circle({\n\t *         style: {\n\t *             x: 100,\n\t *             y: 100,\n\t *             r: 20,\n\t *         }\n\t *     }));\n\t *     zr.add(g);\n\t */\n\t\n\t/**\n\t * @alias module:zrender/graphic/Group\n\t * @constructor\n\t * @extends module:zrender/mixin/Transformable\n\t * @extends module:zrender/mixin/Eventful\n\t */\n\tvar Group = function (opts) {\n\t  opts = opts || {};\n\t  Element.call(this, opts);\n\t\n\t  for (var key in opts) {\n\t    if (opts.hasOwnProperty(key)) {\n\t      this[key] = opts[key];\n\t    }\n\t  }\n\t\n\t  this._children = [];\n\t  this.__storage = null;\n\t  this.__dirty = true;\n\t};\n\t\n\tGroup.prototype = {\n\t  constructor: Group,\n\t  isGroup: true,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  type: 'group',\n\t\n\t  /**\n\t   * 所有子孙元素是否响应鼠标事件\n\t   * @name module:/zrender/container/Group#silent\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  silent: false,\n\t\n\t  /**\n\t   * @return {Array.<module:zrender/Element>}\n\t   */\n\t  children: function () {\n\t    return this._children.slice();\n\t  },\n\t\n\t  /**\n\t   * 获取指定 index 的儿子节点\n\t   * @param  {number} idx\n\t   * @return {module:zrender/Element}\n\t   */\n\t  childAt: function (idx) {\n\t    return this._children[idx];\n\t  },\n\t\n\t  /**\n\t   * 获取指定名字的儿子节点\n\t   * @param  {string} name\n\t   * @return {module:zrender/Element}\n\t   */\n\t  childOfName: function (name) {\n\t    var children = this._children;\n\t\n\t    for (var i = 0; i < children.length; i++) {\n\t      if (children[i].name === name) {\n\t        return children[i];\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {number}\n\t   */\n\t  childCount: function () {\n\t    return this._children.length;\n\t  },\n\t\n\t  /**\n\t   * 添加子节点到最后\n\t   * @param {module:zrender/Element} child\n\t   */\n\t  add: function (child) {\n\t    if (child && child !== this && child.parent !== this) {\n\t      this._children.push(child);\n\t\n\t      this._doAdd(child);\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 添加子节点在 nextSibling 之前\n\t   * @param {module:zrender/Element} child\n\t   * @param {module:zrender/Element} nextSibling\n\t   */\n\t  addBefore: function (child, nextSibling) {\n\t    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n\t      var children = this._children;\n\t      var idx = children.indexOf(nextSibling);\n\t\n\t      if (idx >= 0) {\n\t        children.splice(idx, 0, child);\n\t\n\t        this._doAdd(child);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  },\n\t  _doAdd: function (child) {\n\t    if (child.parent) {\n\t      child.parent.remove(child);\n\t    }\n\t\n\t    child.parent = this;\n\t    var storage = this.__storage;\n\t    var zr = this.__zr;\n\t\n\t    if (storage && storage !== child.__storage) {\n\t      storage.addToStorage(child);\n\t\n\t      if (child instanceof Group) {\n\t        child.addChildrenToStorage(storage);\n\t      }\n\t    }\n\t\n\t    zr && zr.refresh();\n\t  },\n\t\n\t  /**\n\t   * 移除子节点\n\t   * @param {module:zrender/Element} child\n\t   */\n\t  remove: function (child) {\n\t    var zr = this.__zr;\n\t    var storage = this.__storage;\n\t    var children = this._children;\n\t    var idx = zrUtil.indexOf(children, child);\n\t\n\t    if (idx < 0) {\n\t      return this;\n\t    }\n\t\n\t    children.splice(idx, 1);\n\t    child.parent = null;\n\t\n\t    if (storage) {\n\t      storage.delFromStorage(child);\n\t\n\t      if (child instanceof Group) {\n\t        child.delChildrenFromStorage(storage);\n\t      }\n\t    }\n\t\n\t    zr && zr.refresh();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 移除所有子节点\n\t   */\n\t  removeAll: function () {\n\t    var children = this._children;\n\t    var storage = this.__storage;\n\t    var child;\n\t    var i;\n\t\n\t    for (i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t\n\t      if (storage) {\n\t        storage.delFromStorage(child);\n\t\n\t        if (child instanceof Group) {\n\t          child.delChildrenFromStorage(storage);\n\t        }\n\t      }\n\t\n\t      child.parent = null;\n\t    }\n\t\n\t    children.length = 0;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 遍历所有子节点\n\t   * @param  {Function} cb\n\t   * @param  {}   context\n\t   */\n\t  eachChild: function (cb, context) {\n\t    var children = this._children;\n\t\n\t    for (var i = 0; i < children.length; i++) {\n\t      var child = children[i];\n\t      cb.call(context, child, i);\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 深度优先遍历所有子孙节点\n\t   * @param  {Function} cb\n\t   * @param  {}   context\n\t   */\n\t  traverse: function (cb, context) {\n\t    for (var i = 0; i < this._children.length; i++) {\n\t      var child = this._children[i];\n\t      cb.call(context, child);\n\t\n\t      if (child.type === 'group') {\n\t        child.traverse(cb, context);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  },\n\t  addChildrenToStorage: function (storage) {\n\t    for (var i = 0; i < this._children.length; i++) {\n\t      var child = this._children[i];\n\t      storage.addToStorage(child);\n\t\n\t      if (child instanceof Group) {\n\t        child.addChildrenToStorage(storage);\n\t      }\n\t    }\n\t  },\n\t  delChildrenFromStorage: function (storage) {\n\t    for (var i = 0; i < this._children.length; i++) {\n\t      var child = this._children[i];\n\t      storage.delFromStorage(child);\n\t\n\t      if (child instanceof Group) {\n\t        child.delChildrenFromStorage(storage);\n\t      }\n\t    }\n\t  },\n\t  dirty: function () {\n\t    this.__dirty = true;\n\t    this.__zr && this.__zr.refresh();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  getBoundingRect: function (includeChildren) {\n\t    // TODO Caching\n\t    var rect = null;\n\t    var tmpRect = new BoundingRect(0, 0, 0, 0);\n\t    var children = includeChildren || this._children;\n\t    var tmpMat = [];\n\t\n\t    for (var i = 0; i < children.length; i++) {\n\t      var child = children[i];\n\t\n\t      if (child.ignore || child.invisible) {\n\t        continue;\n\t      }\n\t\n\t      var childRect = child.getBoundingRect();\n\t      var transform = child.getLocalTransform(tmpMat); // TODO\n\t      // The boundingRect cacluated by transforming original\n\t      // rect may be bigger than the actual bundingRect when rotation\n\t      // is used. (Consider a circle rotated aginst its center, where\n\t      // the actual boundingRect should be the same as that not be\n\t      // rotated.) But we can not find better approach to calculate\n\t      // actual boundingRect yet, considering performance.\n\t\n\t      if (transform) {\n\t        tmpRect.copy(childRect);\n\t        tmpRect.applyTransform(transform);\n\t        rect = rect || tmpRect.clone();\n\t        rect.union(tmpRect);\n\t      } else {\n\t        rect = rect || childRect.clone();\n\t        rect.union(childRect);\n\t      }\n\t    }\n\t\n\t    return rect || tmpRect;\n\t  }\n\t};\n\tzrUtil.inherits(Group, Element);\n\tvar _default = Group;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar matrix = __webpack_require__(85);\n\t\n\t/**\n\t * @module echarts/core/BoundingRect\n\t */\n\tvar v2ApplyTransform = vec2.applyTransform;\n\tvar mathMin = Math.min;\n\tvar mathMax = Math.max;\n\t/**\n\t * @alias module:echarts/core/BoundingRect\n\t */\n\t\n\tfunction BoundingRect(x, y, width, height) {\n\t  if (width < 0) {\n\t    x = x + width;\n\t    width = -width;\n\t  }\n\t\n\t  if (height < 0) {\n\t    y = y + height;\n\t    height = -height;\n\t  }\n\t  /**\n\t   * @type {number}\n\t   */\n\t\n\t\n\t  this.x = x;\n\t  /**\n\t   * @type {number}\n\t   */\n\t\n\t  this.y = y;\n\t  /**\n\t   * @type {number}\n\t   */\n\t\n\t  this.width = width;\n\t  /**\n\t   * @type {number}\n\t   */\n\t\n\t  this.height = height;\n\t}\n\t\n\tBoundingRect.prototype = {\n\t  constructor: BoundingRect,\n\t\n\t  /**\n\t   * @param {module:echarts/core/BoundingRect} other\n\t   */\n\t  union: function (other) {\n\t    var x = mathMin(other.x, this.x);\n\t    var y = mathMin(other.y, this.y);\n\t    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n\t    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n\t    this.x = x;\n\t    this.y = y;\n\t  },\n\t\n\t  /**\n\t   * @param {Array.<number>} m\n\t   * @methods\n\t   */\n\t  applyTransform: function () {\n\t    var lt = [];\n\t    var rb = [];\n\t    var lb = [];\n\t    var rt = [];\n\t    return function (m) {\n\t      // In case usage like this\n\t      // el.getBoundingRect().applyTransform(el.transform)\n\t      // And element has no transform\n\t      if (!m) {\n\t        return;\n\t      }\n\t\n\t      lt[0] = lb[0] = this.x;\n\t      lt[1] = rt[1] = this.y;\n\t      rb[0] = rt[0] = this.x + this.width;\n\t      rb[1] = lb[1] = this.y + this.height;\n\t      v2ApplyTransform(lt, lt, m);\n\t      v2ApplyTransform(rb, rb, m);\n\t      v2ApplyTransform(lb, lb, m);\n\t      v2ApplyTransform(rt, rt, m);\n\t      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n\t      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n\t      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n\t      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n\t      this.width = maxX - this.x;\n\t      this.height = maxY - this.y;\n\t    };\n\t  }(),\n\t\n\t  /**\n\t   * Calculate matrix of transforming from self to target rect\n\t   * @param  {module:zrender/core/BoundingRect} b\n\t   * @return {Array.<number>}\n\t   */\n\t  calculateTransform: function (b) {\n\t    var a = this;\n\t    var sx = b.width / a.width;\n\t    var sy = b.height / a.height;\n\t    var m = matrix.create(); // 矩阵右乘\n\t\n\t    matrix.translate(m, m, [-a.x, -a.y]);\n\t    matrix.scale(m, m, [sx, sy]);\n\t    matrix.translate(m, m, [b.x, b.y]);\n\t    return m;\n\t  },\n\t\n\t  /**\n\t   * @param {(module:echarts/core/BoundingRect|Object)} b\n\t   * @return {boolean}\n\t   */\n\t  intersect: function (b) {\n\t    if (!b) {\n\t      return false;\n\t    }\n\t\n\t    if (!(b instanceof BoundingRect)) {\n\t      // Normalize negative width/height.\n\t      b = BoundingRect.create(b);\n\t    }\n\t\n\t    var a = this;\n\t    var ax0 = a.x;\n\t    var ax1 = a.x + a.width;\n\t    var ay0 = a.y;\n\t    var ay1 = a.y + a.height;\n\t    var bx0 = b.x;\n\t    var bx1 = b.x + b.width;\n\t    var by0 = b.y;\n\t    var by1 = b.y + b.height;\n\t    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n\t  },\n\t  contain: function (x, y) {\n\t    var rect = this;\n\t    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n\t  },\n\t\n\t  /**\n\t   * @return {module:echarts/core/BoundingRect}\n\t   */\n\t  clone: function () {\n\t    return new BoundingRect(this.x, this.y, this.width, this.height);\n\t  },\n\t\n\t  /**\n\t   * Copy from another rect\n\t   */\n\t  copy: function (other) {\n\t    this.x = other.x;\n\t    this.y = other.y;\n\t    this.width = other.width;\n\t    this.height = other.height;\n\t  },\n\t  plain: function () {\n\t    return {\n\t      x: this.x,\n\t      y: this.y,\n\t      width: this.width,\n\t      height: this.height\n\t    };\n\t  }\n\t};\n\t/**\n\t * @param {Object|module:zrender/core/BoundingRect} rect\n\t * @param {number} rect.x\n\t * @param {number} rect.y\n\t * @param {number} rect.width\n\t * @param {number} rect.height\n\t * @return {module:zrender/core/BoundingRect}\n\t */\n\t\n\tBoundingRect.create = function (rect) {\n\t  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n\t};\n\t\n\tvar _default = BoundingRect;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar eventUtil = __webpack_require__(114);\n\t\n\t/**\n\t * Only implements needed gestures for mobile.\n\t */\n\tvar GestureMgr = function () {\n\t  /**\n\t   * @private\n\t   * @type {Array.<Object>}\n\t   */\n\t  this._track = [];\n\t};\n\t\n\tGestureMgr.prototype = {\n\t  constructor: GestureMgr,\n\t  recognize: function (event, target, root) {\n\t    this._doTrack(event, target, root);\n\t\n\t    return this._recognize(event);\n\t  },\n\t  clear: function () {\n\t    this._track.length = 0;\n\t    return this;\n\t  },\n\t  _doTrack: function (event, target, root) {\n\t    var touches = event.touches;\n\t\n\t    if (!touches) {\n\t      return;\n\t    }\n\t\n\t    var trackItem = {\n\t      points: [],\n\t      touches: [],\n\t      target: target,\n\t      event: event\n\t    };\n\t\n\t    for (var i = 0, len = touches.length; i < len; i++) {\n\t      var touch = touches[i];\n\t      var pos = eventUtil.clientToLocal(root, touch, {});\n\t      trackItem.points.push([pos.zrX, pos.zrY]);\n\t      trackItem.touches.push(touch);\n\t    }\n\t\n\t    this._track.push(trackItem);\n\t  },\n\t  _recognize: function (event) {\n\t    for (var eventName in recognizers) {\n\t      if (recognizers.hasOwnProperty(eventName)) {\n\t        var gestureInfo = recognizers[eventName](this._track, event);\n\t\n\t        if (gestureInfo) {\n\t          return gestureInfo;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction dist(pointPair) {\n\t  var dx = pointPair[1][0] - pointPair[0][0];\n\t  var dy = pointPair[1][1] - pointPair[0][1];\n\t  return Math.sqrt(dx * dx + dy * dy);\n\t}\n\t\n\tfunction center(pointPair) {\n\t  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n\t}\n\t\n\tvar recognizers = {\n\t  pinch: function (track, event) {\n\t    var trackLen = track.length;\n\t\n\t    if (!trackLen) {\n\t      return;\n\t    }\n\t\n\t    var pinchEnd = (track[trackLen - 1] || {}).points;\n\t    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\t\n\t    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n\t      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n\t      !isFinite(pinchScale) && (pinchScale = 1);\n\t      event.pinchScale = pinchScale;\n\t      var pinchCenter = center(pinchEnd);\n\t      event.pinchX = pinchCenter[0];\n\t      event.pinchY = pinchCenter[1];\n\t      return {\n\t        type: 'pinch',\n\t        target: track[0].target,\n\t        event: event\n\t      };\n\t    }\n\t  } // Only pinch currently.\n\t\n\t};\n\tvar _default = GestureMgr;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 563:\n/***/ (function(module, exports) {\n\n\t// Simple LRU cache use doubly linked list\n\t// @module zrender/core/LRU\n\t\n\t/**\n\t * Simple double linked list. Compared with array, it has O(1) remove operation.\n\t * @constructor\n\t */\n\tvar LinkedList = function () {\n\t  /**\n\t   * @type {module:zrender/core/LRU~Entry}\n\t   */\n\t  this.head = null;\n\t  /**\n\t   * @type {module:zrender/core/LRU~Entry}\n\t   */\n\t\n\t  this.tail = null;\n\t  this._len = 0;\n\t};\n\t\n\tvar linkedListProto = LinkedList.prototype;\n\t/**\n\t * Insert a new value at the tail\n\t * @param  {} val\n\t * @return {module:zrender/core/LRU~Entry}\n\t */\n\t\n\tlinkedListProto.insert = function (val) {\n\t  var entry = new Entry(val);\n\t  this.insertEntry(entry);\n\t  return entry;\n\t};\n\t/**\n\t * Insert an entry at the tail\n\t * @param  {module:zrender/core/LRU~Entry} entry\n\t */\n\t\n\t\n\tlinkedListProto.insertEntry = function (entry) {\n\t  if (!this.head) {\n\t    this.head = this.tail = entry;\n\t  } else {\n\t    this.tail.next = entry;\n\t    entry.prev = this.tail;\n\t    entry.next = null;\n\t    this.tail = entry;\n\t  }\n\t\n\t  this._len++;\n\t};\n\t/**\n\t * Remove entry.\n\t * @param  {module:zrender/core/LRU~Entry} entry\n\t */\n\t\n\t\n\tlinkedListProto.remove = function (entry) {\n\t  var prev = entry.prev;\n\t  var next = entry.next;\n\t\n\t  if (prev) {\n\t    prev.next = next;\n\t  } else {\n\t    // Is head\n\t    this.head = next;\n\t  }\n\t\n\t  if (next) {\n\t    next.prev = prev;\n\t  } else {\n\t    // Is tail\n\t    this.tail = prev;\n\t  }\n\t\n\t  entry.next = entry.prev = null;\n\t  this._len--;\n\t};\n\t/**\n\t * @return {number}\n\t */\n\t\n\t\n\tlinkedListProto.len = function () {\n\t  return this._len;\n\t};\n\t/**\n\t * Clear list\n\t */\n\t\n\t\n\tlinkedListProto.clear = function () {\n\t  this.head = this.tail = null;\n\t  this._len = 0;\n\t};\n\t/**\n\t * @constructor\n\t * @param {} val\n\t */\n\t\n\t\n\tvar Entry = function (val) {\n\t  /**\n\t   * @type {}\n\t   */\n\t  this.value = val;\n\t  /**\n\t   * @type {module:zrender/core/LRU~Entry}\n\t   */\n\t\n\t  this.next;\n\t  /**\n\t   * @type {module:zrender/core/LRU~Entry}\n\t   */\n\t\n\t  this.prev;\n\t};\n\t/**\n\t * LRU Cache\n\t * @constructor\n\t * @alias module:zrender/core/LRU\n\t */\n\t\n\t\n\tvar LRU = function (maxSize) {\n\t  this._list = new LinkedList();\n\t  this._map = {};\n\t  this._maxSize = maxSize || 10;\n\t  this._lastRemovedEntry = null;\n\t};\n\t\n\tvar LRUProto = LRU.prototype;\n\t/**\n\t * @param  {string} key\n\t * @param  {} value\n\t * @return {} Removed value\n\t */\n\t\n\tLRUProto.put = function (key, value) {\n\t  var list = this._list;\n\t  var map = this._map;\n\t  var removed = null;\n\t\n\t  if (map[key] == null) {\n\t    var len = list.len(); // Reuse last removed entry\n\t\n\t    var entry = this._lastRemovedEntry;\n\t\n\t    if (len >= this._maxSize && len > 0) {\n\t      // Remove the least recently used\n\t      var leastUsedEntry = list.head;\n\t      list.remove(leastUsedEntry);\n\t      delete map[leastUsedEntry.key];\n\t      removed = leastUsedEntry.value;\n\t      this._lastRemovedEntry = leastUsedEntry;\n\t    }\n\t\n\t    if (entry) {\n\t      entry.value = value;\n\t    } else {\n\t      entry = new Entry(value);\n\t    }\n\t\n\t    entry.key = key;\n\t    list.insertEntry(entry);\n\t    map[key] = entry;\n\t  }\n\t\n\t  return removed;\n\t};\n\t/**\n\t * @param  {string} key\n\t * @return {}\n\t */\n\t\n\t\n\tLRUProto.get = function (key) {\n\t  var entry = this._map[key];\n\t  var list = this._list;\n\t\n\t  if (entry != null) {\n\t    // Put the latest used entry in the tail\n\t    if (entry !== list.tail) {\n\t      list.remove(entry);\n\t      list.insertEntry(entry);\n\t    }\n\t\n\t    return entry.value;\n\t  }\n\t};\n\t/**\n\t * Clear the cache\n\t */\n\t\n\t\n\tLRUProto.clear = function () {\n\t  this._list.clear();\n\t\n\t  this._map = {};\n\t};\n\t\n\tvar _default = LRU;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 232:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar curve = __webpack_require__(84);\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar bbox = __webpack_require__(358);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar _config = __webpack_require__(230);\n\t\n\tvar dpr = _config.devicePixelRatio;\n\t\n\t/**\n\t * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n\t * 可以用于 isInsidePath 判断以及获取boundingRect\n\t *\n\t * @module zrender/core/PathProxy\n\t * @author Yi Shen (http://www.github.com/pissang)\n\t */\n\t// TODO getTotalLength, getPointAtLength\n\tvar CMD = {\n\t  M: 1,\n\t  L: 2,\n\t  C: 3,\n\t  Q: 4,\n\t  A: 5,\n\t  Z: 6,\n\t  // Rect\n\t  R: 7\n\t}; // var CMD_MEM_SIZE = {\n\t//     M: 3,\n\t//     L: 3,\n\t//     C: 7,\n\t//     Q: 5,\n\t//     A: 9,\n\t//     R: 5,\n\t//     Z: 1\n\t// };\n\t\n\tvar min = [];\n\tvar max = [];\n\tvar min2 = [];\n\tvar max2 = [];\n\tvar mathMin = Math.min;\n\tvar mathMax = Math.max;\n\tvar mathCos = Math.cos;\n\tvar mathSin = Math.sin;\n\tvar mathSqrt = Math.sqrt;\n\tvar mathAbs = Math.abs;\n\tvar hasTypedArray = typeof Float32Array != 'undefined';\n\t/**\n\t * @alias module:zrender/core/PathProxy\n\t * @constructor\n\t */\n\t\n\tvar PathProxy = function (notSaveData) {\n\t  this._saveData = !(notSaveData || false);\n\t\n\t  if (this._saveData) {\n\t    /**\n\t     * Path data. Stored as flat array\n\t     * @type {Array.<Object>}\n\t     */\n\t    this.data = [];\n\t  }\n\t\n\t  this._ctx = null;\n\t};\n\t/**\n\t * 快速计算Path包围盒（并不是最小包围盒）\n\t * @return {Object}\n\t */\n\t\n\t\n\tPathProxy.prototype = {\n\t  constructor: PathProxy,\n\t  _xi: 0,\n\t  _yi: 0,\n\t  _x0: 0,\n\t  _y0: 0,\n\t  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n\t  _ux: 0,\n\t  _uy: 0,\n\t  _len: 0,\n\t  _lineDash: null,\n\t  _dashOffset: 0,\n\t  _dashIdx: 0,\n\t  _dashSum: 0,\n\t\n\t  /**\n\t   * @readOnly\n\t   */\n\t  setScale: function (sx, sy) {\n\t    this._ux = mathAbs(1 / dpr / sx) || 0;\n\t    this._uy = mathAbs(1 / dpr / sy) || 0;\n\t  },\n\t  getContext: function () {\n\t    return this._ctx;\n\t  },\n\t\n\t  /**\n\t   * @param  {CanvasRenderingContext2D} ctx\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  beginPath: function (ctx) {\n\t    this._ctx = ctx;\n\t    ctx && ctx.beginPath();\n\t    ctx && (this.dpr = ctx.dpr); // Reset\n\t\n\t    if (this._saveData) {\n\t      this._len = 0;\n\t    }\n\t\n\t    if (this._lineDash) {\n\t      this._lineDash = null;\n\t      this._dashOffset = 0;\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @param  {number} x\n\t   * @param  {number} y\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  moveTo: function (x, y) {\n\t    this.addData(CMD.M, x, y);\n\t    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n\t    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n\t    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n\t    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\t\n\t    this._x0 = x;\n\t    this._y0 = y;\n\t    this._xi = x;\n\t    this._yi = y;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @param  {number} x\n\t   * @param  {number} y\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  lineTo: function (x, y) {\n\t    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n\t    || this._len < 5;\n\t    this.addData(CMD.L, x, y);\n\t\n\t    if (this._ctx && exceedUnit) {\n\t      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n\t    }\n\t\n\t    if (exceedUnit) {\n\t      this._xi = x;\n\t      this._yi = y;\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @param  {number} x1\n\t   * @param  {number} y1\n\t   * @param  {number} x2\n\t   * @param  {number} y2\n\t   * @param  {number} x3\n\t   * @param  {number} y3\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n\t    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\t\n\t    if (this._ctx) {\n\t      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n\t    }\n\t\n\t    this._xi = x3;\n\t    this._yi = y3;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @param  {number} x1\n\t   * @param  {number} y1\n\t   * @param  {number} x2\n\t   * @param  {number} y2\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  quadraticCurveTo: function (x1, y1, x2, y2) {\n\t    this.addData(CMD.Q, x1, y1, x2, y2);\n\t\n\t    if (this._ctx) {\n\t      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n\t    }\n\t\n\t    this._xi = x2;\n\t    this._yi = y2;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @param  {number} cx\n\t   * @param  {number} cy\n\t   * @param  {number} r\n\t   * @param  {number} startAngle\n\t   * @param  {number} endAngle\n\t   * @param  {boolean} anticlockwise\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n\t    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n\t    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\t    this._xi = mathCos(endAngle) * r + cx;\n\t    this._yi = mathSin(endAngle) * r + cx;\n\t    return this;\n\t  },\n\t  // TODO\n\t  arcTo: function (x1, y1, x2, y2, radius) {\n\t    if (this._ctx) {\n\t      this._ctx.arcTo(x1, y1, x2, y2, radius);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  // TODO\n\t  rect: function (x, y, w, h) {\n\t    this._ctx && this._ctx.rect(x, y, w, h);\n\t    this.addData(CMD.R, x, y, w, h);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  closePath: function () {\n\t    this.addData(CMD.Z);\n\t    var ctx = this._ctx;\n\t    var x0 = this._x0;\n\t    var y0 = this._y0;\n\t\n\t    if (ctx) {\n\t      this._needsDash() && this._dashedLineTo(x0, y0);\n\t      ctx.closePath();\n\t    }\n\t\n\t    this._xi = x0;\n\t    this._yi = y0;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n\t   * stroke 同样\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  fill: function (ctx) {\n\t    ctx && ctx.fill();\n\t    this.toStatic();\n\t  },\n\t\n\t  /**\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  stroke: function (ctx) {\n\t    ctx && ctx.stroke();\n\t    this.toStatic();\n\t  },\n\t\n\t  /**\n\t   * 必须在其它绘制命令前调用\n\t   * Must be invoked before all other path drawing methods\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  setLineDash: function (lineDash) {\n\t    if (lineDash instanceof Array) {\n\t      this._lineDash = lineDash;\n\t      this._dashIdx = 0;\n\t      var lineDashSum = 0;\n\t\n\t      for (var i = 0; i < lineDash.length; i++) {\n\t        lineDashSum += lineDash[i];\n\t      }\n\t\n\t      this._dashSum = lineDashSum;\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 必须在其它绘制命令前调用\n\t   * Must be invoked before all other path drawing methods\n\t   * @return {module:zrender/core/PathProxy}\n\t   */\n\t  setLineDashOffset: function (offset) {\n\t    this._dashOffset = offset;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   *\n\t   * @return {boolean}\n\t   */\n\t  len: function () {\n\t    return this._len;\n\t  },\n\t\n\t  /**\n\t   * 直接设置 Path 数据\n\t   */\n\t  setData: function (data) {\n\t    var len = data.length;\n\t\n\t    if (!(this.data && this.data.length == len) && hasTypedArray) {\n\t      this.data = new Float32Array(len);\n\t    }\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      this.data[i] = data[i];\n\t    }\n\t\n\t    this._len = len;\n\t  },\n\t\n\t  /**\n\t   * 添加子路径\n\t   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n\t   */\n\t  appendPath: function (path) {\n\t    if (!(path instanceof Array)) {\n\t      path = [path];\n\t    }\n\t\n\t    var len = path.length;\n\t    var appendSize = 0;\n\t    var offset = this._len;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      appendSize += path[i].len();\n\t    }\n\t\n\t    if (hasTypedArray && this.data instanceof Float32Array) {\n\t      this.data = new Float32Array(offset + appendSize);\n\t    }\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      var appendPathData = path[i].data;\n\t\n\t      for (var k = 0; k < appendPathData.length; k++) {\n\t        this.data[offset++] = appendPathData[k];\n\t      }\n\t    }\n\t\n\t    this._len = offset;\n\t  },\n\t\n\t  /**\n\t   * 填充 Path 数据。\n\t   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n\t   */\n\t  addData: function (cmd) {\n\t    if (!this._saveData) {\n\t      return;\n\t    }\n\t\n\t    var data = this.data;\n\t\n\t    if (this._len + arguments.length > data.length) {\n\t      // 因为之前的数组已经转换成静态的 Float32Array\n\t      // 所以不够用时需要扩展一个新的动态数组\n\t      this._expandData();\n\t\n\t      data = this.data;\n\t    }\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      data[this._len++] = arguments[i];\n\t    }\n\t\n\t    this._prevCmd = cmd;\n\t  },\n\t  _expandData: function () {\n\t    // Only if data is Float32Array\n\t    if (!(this.data instanceof Array)) {\n\t      var newData = [];\n\t\n\t      for (var i = 0; i < this._len; i++) {\n\t        newData[i] = this.data[i];\n\t      }\n\t\n\t      this.data = newData;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * If needs js implemented dashed line\n\t   * @return {boolean}\n\t   * @private\n\t   */\n\t  _needsDash: function () {\n\t    return this._lineDash;\n\t  },\n\t  _dashedLineTo: function (x1, y1) {\n\t    var dashSum = this._dashSum;\n\t    var offset = this._dashOffset;\n\t    var lineDash = this._lineDash;\n\t    var ctx = this._ctx;\n\t    var x0 = this._xi;\n\t    var y0 = this._yi;\n\t    var dx = x1 - x0;\n\t    var dy = y1 - y0;\n\t    var dist = mathSqrt(dx * dx + dy * dy);\n\t    var x = x0;\n\t    var y = y0;\n\t    var dash;\n\t    var nDash = lineDash.length;\n\t    var idx;\n\t    dx /= dist;\n\t    dy /= dist;\n\t\n\t    if (offset < 0) {\n\t      // Convert to positive offset\n\t      offset = dashSum + offset;\n\t    }\n\t\n\t    offset %= dashSum;\n\t    x -= offset * dx;\n\t    y -= offset * dy;\n\t\n\t    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n\t      idx = this._dashIdx;\n\t      dash = lineDash[idx];\n\t      x += dx * dash;\n\t      y += dy * dash;\n\t      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\t\n\t      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n\t        continue;\n\t      }\n\t\n\t      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n\t    } // Offset for next lineTo\n\t\n\t\n\t    dx = x - x1;\n\t    dy = y - y1;\n\t    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n\t  },\n\t  // Not accurate dashed line to\n\t  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n\t    var dashSum = this._dashSum;\n\t    var offset = this._dashOffset;\n\t    var lineDash = this._lineDash;\n\t    var ctx = this._ctx;\n\t    var x0 = this._xi;\n\t    var y0 = this._yi;\n\t    var t;\n\t    var dx;\n\t    var dy;\n\t    var cubicAt = curve.cubicAt;\n\t    var bezierLen = 0;\n\t    var idx = this._dashIdx;\n\t    var nDash = lineDash.length;\n\t    var x;\n\t    var y;\n\t    var tmpLen = 0;\n\t\n\t    if (offset < 0) {\n\t      // Convert to positive offset\n\t      offset = dashSum + offset;\n\t    }\n\t\n\t    offset %= dashSum; // Bezier approx length\n\t\n\t    for (t = 0; t < 1; t += 0.1) {\n\t      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n\t      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n\t      bezierLen += mathSqrt(dx * dx + dy * dy);\n\t    } // Find idx after add offset\n\t\n\t\n\t    for (; idx < nDash; idx++) {\n\t      tmpLen += lineDash[idx];\n\t\n\t      if (tmpLen > offset) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    t = (tmpLen - offset) / bezierLen;\n\t\n\t    while (t <= 1) {\n\t      x = cubicAt(x0, x1, x2, x3, t);\n\t      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n\t      // Bad result if dash is long\n\t\n\t      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n\t      t += lineDash[idx] / bezierLen;\n\t      idx = (idx + 1) % nDash;\n\t    } // Finish the last segment and calculate the new offset\n\t\n\t\n\t    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n\t    dx = x3 - x;\n\t    dy = y3 - y;\n\t    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n\t  },\n\t  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n\t    // Convert quadratic to cubic using degree elevation\n\t    var x3 = x2;\n\t    var y3 = y2;\n\t    x2 = (x2 + 2 * x1) / 3;\n\t    y2 = (y2 + 2 * y1) / 3;\n\t    x1 = (this._xi + 2 * x1) / 3;\n\t    y1 = (this._yi + 2 * y1) / 3;\n\t\n\t    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n\t  },\n\t\n\t  /**\n\t   * 转成静态的 Float32Array 减少堆内存占用\n\t   * Convert dynamic array to static Float32Array\n\t   */\n\t  toStatic: function () {\n\t    var data = this.data;\n\t\n\t    if (data instanceof Array) {\n\t      data.length = this._len;\n\t\n\t      if (hasTypedArray) {\n\t        this.data = new Float32Array(data);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  getBoundingRect: function () {\n\t    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n\t    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\t    var data = this.data;\n\t    var xi = 0;\n\t    var yi = 0;\n\t    var x0 = 0;\n\t    var y0 = 0;\n\t\n\t    for (var i = 0; i < data.length;) {\n\t      var cmd = data[i++];\n\t\n\t      if (i == 1) {\n\t        // 如果第一个命令是 L, C, Q\n\t        // 则 previous point 同绘制命令的第一个 point\n\t        //\n\t        // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t        xi = data[i];\n\t        yi = data[i + 1];\n\t        x0 = xi;\n\t        y0 = yi;\n\t      }\n\t\n\t      switch (cmd) {\n\t        case CMD.M:\n\t          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n\t          // 在 closePath 的时候使用\n\t          x0 = data[i++];\n\t          y0 = data[i++];\n\t          xi = x0;\n\t          yi = y0;\n\t          min2[0] = x0;\n\t          min2[1] = y0;\n\t          max2[0] = x0;\n\t          max2[1] = y0;\n\t          break;\n\t\n\t        case CMD.L:\n\t          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n\t          xi = data[i++];\n\t          yi = data[i++];\n\t          break;\n\t\n\t        case CMD.C:\n\t          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n\t          xi = data[i++];\n\t          yi = data[i++];\n\t          break;\n\t\n\t        case CMD.Q:\n\t          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n\t          xi = data[i++];\n\t          yi = data[i++];\n\t          break;\n\t\n\t        case CMD.A:\n\t          // TODO Arc 判断的开销比较大\n\t          var cx = data[i++];\n\t          var cy = data[i++];\n\t          var rx = data[i++];\n\t          var ry = data[i++];\n\t          var startAngle = data[i++];\n\t          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\t\n\t          var psi = data[i++];\n\t          var anticlockwise = 1 - data[i++];\n\t\n\t          if (i == 1) {\n\t            // 直接使用 arc 命令\n\t            // 第一个命令起点还未定义\n\t            x0 = mathCos(startAngle) * rx + cx;\n\t            y0 = mathSin(startAngle) * ry + cy;\n\t          }\n\t\n\t          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n\t          xi = mathCos(endAngle) * rx + cx;\n\t          yi = mathSin(endAngle) * ry + cy;\n\t          break;\n\t\n\t        case CMD.R:\n\t          x0 = xi = data[i++];\n\t          y0 = yi = data[i++];\n\t          var width = data[i++];\n\t          var height = data[i++]; // Use fromLine\n\t\n\t          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n\t          break;\n\t\n\t        case CMD.Z:\n\t          xi = x0;\n\t          yi = y0;\n\t          break;\n\t      } // Union\n\t\n\t\n\t      vec2.min(min, min, min2);\n\t      vec2.max(max, max, max2);\n\t    } // No data\n\t\n\t\n\t    if (i === 0) {\n\t      min[0] = min[1] = max[0] = max[1] = 0;\n\t    }\n\t\n\t    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t  },\n\t\n\t  /**\n\t   * Rebuild path from current data\n\t   * Rebuild path will not consider javascript implemented line dash.\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   */\n\t  rebuildPath: function (ctx) {\n\t    var d = this.data;\n\t    var x0, y0;\n\t    var xi, yi;\n\t    var x, y;\n\t    var ux = this._ux;\n\t    var uy = this._uy;\n\t    var len = this._len;\n\t\n\t    for (var i = 0; i < len;) {\n\t      var cmd = d[i++];\n\t\n\t      if (i == 1) {\n\t        // 如果第一个命令是 L, C, Q\n\t        // 则 previous point 同绘制命令的第一个 point\n\t        //\n\t        // 第一个命令为 Arc 的情况下会在后面特殊处理\n\t        xi = d[i];\n\t        yi = d[i + 1];\n\t        x0 = xi;\n\t        y0 = yi;\n\t      }\n\t\n\t      switch (cmd) {\n\t        case CMD.M:\n\t          x0 = xi = d[i++];\n\t          y0 = yi = d[i++];\n\t          ctx.moveTo(xi, yi);\n\t          break;\n\t\n\t        case CMD.L:\n\t          x = d[i++];\n\t          y = d[i++]; // Not draw too small seg between\n\t\n\t          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n\t            ctx.lineTo(x, y);\n\t            xi = x;\n\t            yi = y;\n\t          }\n\t\n\t          break;\n\t\n\t        case CMD.C:\n\t          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n\t          xi = d[i - 2];\n\t          yi = d[i - 1];\n\t          break;\n\t\n\t        case CMD.Q:\n\t          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n\t          xi = d[i - 2];\n\t          yi = d[i - 1];\n\t          break;\n\t\n\t        case CMD.A:\n\t          var cx = d[i++];\n\t          var cy = d[i++];\n\t          var rx = d[i++];\n\t          var ry = d[i++];\n\t          var theta = d[i++];\n\t          var dTheta = d[i++];\n\t          var psi = d[i++];\n\t          var fs = d[i++];\n\t          var r = rx > ry ? rx : ry;\n\t          var scaleX = rx > ry ? 1 : rx / ry;\n\t          var scaleY = rx > ry ? ry / rx : 1;\n\t          var isEllipse = Math.abs(rx - ry) > 1e-3;\n\t          var endAngle = theta + dTheta;\n\t\n\t          if (isEllipse) {\n\t            ctx.translate(cx, cy);\n\t            ctx.rotate(psi);\n\t            ctx.scale(scaleX, scaleY);\n\t            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n\t            ctx.scale(1 / scaleX, 1 / scaleY);\n\t            ctx.rotate(-psi);\n\t            ctx.translate(-cx, -cy);\n\t          } else {\n\t            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n\t          }\n\t\n\t          if (i == 1) {\n\t            // 直接使用 arc 命令\n\t            // 第一个命令起点还未定义\n\t            x0 = mathCos(theta) * rx + cx;\n\t            y0 = mathSin(theta) * ry + cy;\n\t          }\n\t\n\t          xi = mathCos(endAngle) * rx + cx;\n\t          yi = mathSin(endAngle) * ry + cy;\n\t          break;\n\t\n\t        case CMD.R:\n\t          x0 = xi = d[i];\n\t          y0 = yi = d[i + 1];\n\t          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n\t          break;\n\t\n\t        case CMD.Z:\n\t          ctx.closePath();\n\t          xi = x0;\n\t          yi = y0;\n\t      }\n\t    }\n\t  }\n\t};\n\tPathProxy.CMD = CMD;\n\tvar _default = PathProxy;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 358:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar curve = __webpack_require__(84);\n\t\n\t/**\n\t * @author Yi Shen(https://github.com/pissang)\n\t */\n\tvar mathMin = Math.min;\n\tvar mathMax = Math.max;\n\tvar mathSin = Math.sin;\n\tvar mathCos = Math.cos;\n\tvar PI2 = Math.PI * 2;\n\tvar start = vec2.create();\n\tvar end = vec2.create();\n\tvar extremity = vec2.create();\n\t/**\n\t * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n\t * @module zrender/core/bbox\n\t * @param {Array<Object>} points 顶点数组\n\t * @param {number} min\n\t * @param {number} max\n\t */\n\t\n\tfunction fromPoints(points, min, max) {\n\t  if (points.length === 0) {\n\t    return;\n\t  }\n\t\n\t  var p = points[0];\n\t  var left = p[0];\n\t  var right = p[0];\n\t  var top = p[1];\n\t  var bottom = p[1];\n\t  var i;\n\t\n\t  for (i = 1; i < points.length; i++) {\n\t    p = points[i];\n\t    left = mathMin(left, p[0]);\n\t    right = mathMax(right, p[0]);\n\t    top = mathMin(top, p[1]);\n\t    bottom = mathMax(bottom, p[1]);\n\t  }\n\t\n\t  min[0] = left;\n\t  min[1] = top;\n\t  max[0] = right;\n\t  max[1] = bottom;\n\t}\n\t/**\n\t * @memberOf module:zrender/core/bbox\n\t * @param {number} x0\n\t * @param {number} y0\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {Array.<number>} min\n\t * @param {Array.<number>} max\n\t */\n\t\n\t\n\tfunction fromLine(x0, y0, x1, y1, min, max) {\n\t  min[0] = mathMin(x0, x1);\n\t  min[1] = mathMin(y0, y1);\n\t  max[0] = mathMax(x0, x1);\n\t  max[1] = mathMax(y0, y1);\n\t}\n\t\n\tvar xDim = [];\n\tvar yDim = [];\n\t/**\n\t * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n\t * @memberOf module:zrender/core/bbox\n\t * @param {number} x0\n\t * @param {number} y0\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {number} x2\n\t * @param {number} y2\n\t * @param {number} x3\n\t * @param {number} y3\n\t * @param {Array.<number>} min\n\t * @param {Array.<number>} max\n\t */\n\t\n\tfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n\t  var cubicExtrema = curve.cubicExtrema;\n\t  var cubicAt = curve.cubicAt;\n\t  var i;\n\t  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n\t  min[0] = Infinity;\n\t  min[1] = Infinity;\n\t  max[0] = -Infinity;\n\t  max[1] = -Infinity;\n\t\n\t  for (i = 0; i < n; i++) {\n\t    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n\t    min[0] = mathMin(x, min[0]);\n\t    max[0] = mathMax(x, max[0]);\n\t  }\n\t\n\t  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\t\n\t  for (i = 0; i < n; i++) {\n\t    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n\t    min[1] = mathMin(y, min[1]);\n\t    max[1] = mathMax(y, max[1]);\n\t  }\n\t\n\t  min[0] = mathMin(x0, min[0]);\n\t  max[0] = mathMax(x0, max[0]);\n\t  min[0] = mathMin(x3, min[0]);\n\t  max[0] = mathMax(x3, max[0]);\n\t  min[1] = mathMin(y0, min[1]);\n\t  max[1] = mathMax(y0, max[1]);\n\t  min[1] = mathMin(y3, min[1]);\n\t  max[1] = mathMax(y3, max[1]);\n\t}\n\t/**\n\t * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n\t * @memberOf module:zrender/core/bbox\n\t * @param {number} x0\n\t * @param {number} y0\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {number} x2\n\t * @param {number} y2\n\t * @param {Array.<number>} min\n\t * @param {Array.<number>} max\n\t */\n\t\n\t\n\tfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n\t  var quadraticExtremum = curve.quadraticExtremum;\n\t  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\t\n\t  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n\t  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n\t  var x = quadraticAt(x0, x1, x2, tx);\n\t  var y = quadraticAt(y0, y1, y2, ty);\n\t  min[0] = mathMin(x0, x2, x);\n\t  min[1] = mathMin(y0, y2, y);\n\t  max[0] = mathMax(x0, x2, x);\n\t  max[1] = mathMax(y0, y2, y);\n\t}\n\t/**\n\t * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n\t * @method\n\t * @memberOf module:zrender/core/bbox\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} rx\n\t * @param {number} ry\n\t * @param {number} startAngle\n\t * @param {number} endAngle\n\t * @param {number} anticlockwise\n\t * @param {Array.<number>} min\n\t * @param {Array.<number>} max\n\t */\n\t\n\t\n\tfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n\t  var vec2Min = vec2.min;\n\t  var vec2Max = vec2.max;\n\t  var diff = Math.abs(startAngle - endAngle);\n\t\n\t  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n\t    // Is a circle\n\t    min[0] = x - rx;\n\t    min[1] = y - ry;\n\t    max[0] = x + rx;\n\t    max[1] = y + ry;\n\t    return;\n\t  }\n\t\n\t  start[0] = mathCos(startAngle) * rx + x;\n\t  start[1] = mathSin(startAngle) * ry + y;\n\t  end[0] = mathCos(endAngle) * rx + x;\n\t  end[1] = mathSin(endAngle) * ry + y;\n\t  vec2Min(min, start, end);\n\t  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\t\n\t  startAngle = startAngle % PI2;\n\t\n\t  if (startAngle < 0) {\n\t    startAngle = startAngle + PI2;\n\t  }\n\t\n\t  endAngle = endAngle % PI2;\n\t\n\t  if (endAngle < 0) {\n\t    endAngle = endAngle + PI2;\n\t  }\n\t\n\t  if (startAngle > endAngle && !anticlockwise) {\n\t    endAngle += PI2;\n\t  } else if (startAngle < endAngle && anticlockwise) {\n\t    startAngle += PI2;\n\t  }\n\t\n\t  if (anticlockwise) {\n\t    var tmp = endAngle;\n\t    endAngle = startAngle;\n\t    startAngle = tmp;\n\t  } // var number = 0;\n\t  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\t\n\t\n\t  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n\t    if (angle > startAngle) {\n\t      extremity[0] = mathCos(angle) * rx + x;\n\t      extremity[1] = mathSin(angle) * ry + y;\n\t      vec2Min(min, extremity, min);\n\t      vec2Max(max, extremity, max);\n\t    }\n\t  }\n\t}\n\t\n\texports.fromPoints = fromPoints;\n\texports.fromLine = fromLine;\n\texports.fromCubic = fromCubic;\n\texports.fromQuadratic = fromQuadratic;\n\texports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _vector = __webpack_require__(10);\n\t\n\tvar v2Create = _vector.create;\n\tvar v2DistSquare = _vector.distSquare;\n\t\n\t/**\n\t * 曲线辅助模块\n\t * @module zrender/core/curve\n\t * @author pissang(https://www.github.com/pissang)\n\t */\n\tvar mathPow = Math.pow;\n\tvar mathSqrt = Math.sqrt;\n\tvar EPSILON = 1e-8;\n\tvar EPSILON_NUMERIC = 1e-4;\n\tvar THREE_SQRT = mathSqrt(3);\n\tvar ONE_THIRD = 1 / 3; // 临时变量\n\t\n\tvar _v0 = v2Create();\n\t\n\tvar _v1 = v2Create();\n\t\n\tvar _v2 = v2Create();\n\t\n\tfunction isAroundZero(val) {\n\t  return val > -EPSILON && val < EPSILON;\n\t}\n\t\n\tfunction isNotAroundZero(val) {\n\t  return val > EPSILON || val < -EPSILON;\n\t}\n\t/**\n\t * 计算三次贝塞尔值\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} p3\n\t * @param  {number} t\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction cubicAt(p0, p1, p2, p3, t) {\n\t  var onet = 1 - t;\n\t  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n\t}\n\t/**\n\t * 计算三次贝塞尔导数值\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} p3\n\t * @param  {number} t\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n\t  var onet = 1 - t;\n\t  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n\t}\n\t/**\n\t * 计算三次贝塞尔方程根，使用盛金公式\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} p3\n\t * @param  {number} val\n\t * @param  {Array.<number>} roots\n\t * @return {number} 有效根数目\n\t */\n\t\n\t\n\tfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n\t  // Evaluate roots of cubic functions\n\t  var a = p3 + 3 * (p1 - p2) - p0;\n\t  var b = 3 * (p2 - p1 * 2 + p0);\n\t  var c = 3 * (p1 - p0);\n\t  var d = p0 - val;\n\t  var A = b * b - 3 * a * c;\n\t  var B = b * c - 9 * a * d;\n\t  var C = c * c - 3 * b * d;\n\t  var n = 0;\n\t\n\t  if (isAroundZero(A) && isAroundZero(B)) {\n\t    if (isAroundZero(b)) {\n\t      roots[0] = 0;\n\t    } else {\n\t      var t1 = -c / b; //t1, t2, t3, b is not zero\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t    }\n\t  } else {\n\t    var disc = B * B - 4 * A * C;\n\t\n\t    if (isAroundZero(disc)) {\n\t      var K = B / A;\n\t      var t1 = -b / a + K; // t1, a is not zero\n\t\n\t      var t2 = -K / 2; // t2, t3\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t\n\t      if (t2 >= 0 && t2 <= 1) {\n\t        roots[n++] = t2;\n\t      }\n\t    } else if (disc > 0) {\n\t      var discSqrt = mathSqrt(disc);\n\t      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n\t      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\t\n\t      if (Y1 < 0) {\n\t        Y1 = -mathPow(-Y1, ONE_THIRD);\n\t      } else {\n\t        Y1 = mathPow(Y1, ONE_THIRD);\n\t      }\n\t\n\t      if (Y2 < 0) {\n\t        Y2 = -mathPow(-Y2, ONE_THIRD);\n\t      } else {\n\t        Y2 = mathPow(Y2, ONE_THIRD);\n\t      }\n\t\n\t      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t    } else {\n\t      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n\t      var theta = Math.acos(T) / 3;\n\t      var ASqrt = mathSqrt(A);\n\t      var tmp = Math.cos(theta);\n\t      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n\t      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n\t      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t\n\t      if (t2 >= 0 && t2 <= 1) {\n\t        roots[n++] = t2;\n\t      }\n\t\n\t      if (t3 >= 0 && t3 <= 1) {\n\t        roots[n++] = t3;\n\t      }\n\t    }\n\t  }\n\t\n\t  return n;\n\t}\n\t/**\n\t * 计算三次贝塞尔方程极限值的位置\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} p3\n\t * @param  {Array.<number>} extrema\n\t * @return {number} 有效数目\n\t */\n\t\n\t\n\tfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n\t  var b = 6 * p2 - 12 * p1 + 6 * p0;\n\t  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n\t  var c = 3 * p1 - 3 * p0;\n\t  var n = 0;\n\t\n\t  if (isAroundZero(a)) {\n\t    if (isNotAroundZero(b)) {\n\t      var t1 = -c / b;\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        extrema[n++] = t1;\n\t      }\n\t    }\n\t  } else {\n\t    var disc = b * b - 4 * a * c;\n\t\n\t    if (isAroundZero(disc)) {\n\t      extrema[0] = -b / (2 * a);\n\t    } else if (disc > 0) {\n\t      var discSqrt = mathSqrt(disc);\n\t      var t1 = (-b + discSqrt) / (2 * a);\n\t      var t2 = (-b - discSqrt) / (2 * a);\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        extrema[n++] = t1;\n\t      }\n\t\n\t      if (t2 >= 0 && t2 <= 1) {\n\t        extrema[n++] = t2;\n\t      }\n\t    }\n\t  }\n\t\n\t  return n;\n\t}\n\t/**\n\t * 细分三次贝塞尔曲线\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} p3\n\t * @param  {number} t\n\t * @param  {Array.<number>} out\n\t */\n\t\n\t\n\tfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n\t  var p01 = (p1 - p0) * t + p0;\n\t  var p12 = (p2 - p1) * t + p1;\n\t  var p23 = (p3 - p2) * t + p2;\n\t  var p012 = (p12 - p01) * t + p01;\n\t  var p123 = (p23 - p12) * t + p12;\n\t  var p0123 = (p123 - p012) * t + p012; // Seg0\n\t\n\t  out[0] = p0;\n\t  out[1] = p01;\n\t  out[2] = p012;\n\t  out[3] = p0123; // Seg1\n\t\n\t  out[4] = p0123;\n\t  out[5] = p123;\n\t  out[6] = p23;\n\t  out[7] = p3;\n\t}\n\t/**\n\t * 投射点到三次贝塞尔曲线上，返回投射距离。\n\t * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n\t * @param {number} x0\n\t * @param {number} y0\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {number} x2\n\t * @param {number} y2\n\t * @param {number} x3\n\t * @param {number} y3\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {Array.<number>} [out] 投射点\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n\t  // http://pomax.github.io/bezierinfo/#projections\n\t  var t;\n\t  var interval = 0.005;\n\t  var d = Infinity;\n\t  var prev;\n\t  var next;\n\t  var d1;\n\t  var d2;\n\t  _v0[0] = x;\n\t  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n\t  // PENDING\n\t\n\t  for (var _t = 0; _t < 1; _t += 0.05) {\n\t    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n\t    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n\t    d1 = v2DistSquare(_v0, _v1);\n\t\n\t    if (d1 < d) {\n\t      t = _t;\n\t      d = d1;\n\t    }\n\t  }\n\t\n\t  d = Infinity; // At most 32 iteration\n\t\n\t  for (var i = 0; i < 32; i++) {\n\t    if (interval < EPSILON_NUMERIC) {\n\t      break;\n\t    }\n\t\n\t    prev = t - interval;\n\t    next = t + interval; // t - interval\n\t\n\t    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n\t    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\t    d1 = v2DistSquare(_v1, _v0);\n\t\n\t    if (prev >= 0 && d1 < d) {\n\t      t = prev;\n\t      d = d1;\n\t    } else {\n\t      // t + interval\n\t      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n\t      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n\t      d2 = v2DistSquare(_v2, _v0);\n\t\n\t      if (next <= 1 && d2 < d) {\n\t        t = next;\n\t        d = d2;\n\t      } else {\n\t        interval *= 0.5;\n\t      }\n\t    }\n\t  } // t\n\t\n\t\n\t  if (out) {\n\t    out[0] = cubicAt(x0, x1, x2, x3, t);\n\t    out[1] = cubicAt(y0, y1, y2, y3, t);\n\t  } // console.log(interval, i);\n\t\n\t\n\t  return mathSqrt(d);\n\t}\n\t/**\n\t * 计算二次方贝塞尔值\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} t\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction quadraticAt(p0, p1, p2, t) {\n\t  var onet = 1 - t;\n\t  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n\t}\n\t/**\n\t * 计算二次方贝塞尔导数值\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} t\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction quadraticDerivativeAt(p0, p1, p2, t) {\n\t  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n\t}\n\t/**\n\t * 计算二次方贝塞尔方程根\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} t\n\t * @param  {Array.<number>} roots\n\t * @return {number} 有效根数目\n\t */\n\t\n\t\n\tfunction quadraticRootAt(p0, p1, p2, val, roots) {\n\t  var a = p0 - 2 * p1 + p2;\n\t  var b = 2 * (p1 - p0);\n\t  var c = p0 - val;\n\t  var n = 0;\n\t\n\t  if (isAroundZero(a)) {\n\t    if (isNotAroundZero(b)) {\n\t      var t1 = -c / b;\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t    }\n\t  } else {\n\t    var disc = b * b - 4 * a * c;\n\t\n\t    if (isAroundZero(disc)) {\n\t      var t1 = -b / (2 * a);\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t    } else if (disc > 0) {\n\t      var discSqrt = mathSqrt(disc);\n\t      var t1 = (-b + discSqrt) / (2 * a);\n\t      var t2 = (-b - discSqrt) / (2 * a);\n\t\n\t      if (t1 >= 0 && t1 <= 1) {\n\t        roots[n++] = t1;\n\t      }\n\t\n\t      if (t2 >= 0 && t2 <= 1) {\n\t        roots[n++] = t2;\n\t      }\n\t    }\n\t  }\n\t\n\t  return n;\n\t}\n\t/**\n\t * 计算二次贝塞尔方程极限值\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction quadraticExtremum(p0, p1, p2) {\n\t  var divider = p0 + p2 - 2 * p1;\n\t\n\t  if (divider === 0) {\n\t    // p1 is center of p0 and p2\n\t    return 0.5;\n\t  } else {\n\t    return (p0 - p1) / divider;\n\t  }\n\t}\n\t/**\n\t * 细分二次贝塞尔曲线\n\t * @memberOf module:zrender/core/curve\n\t * @param  {number} p0\n\t * @param  {number} p1\n\t * @param  {number} p2\n\t * @param  {number} t\n\t * @param  {Array.<number>} out\n\t */\n\t\n\t\n\tfunction quadraticSubdivide(p0, p1, p2, t, out) {\n\t  var p01 = (p1 - p0) * t + p0;\n\t  var p12 = (p2 - p1) * t + p1;\n\t  var p012 = (p12 - p01) * t + p01; // Seg0\n\t\n\t  out[0] = p0;\n\t  out[1] = p01;\n\t  out[2] = p012; // Seg1\n\t\n\t  out[3] = p012;\n\t  out[4] = p12;\n\t  out[5] = p2;\n\t}\n\t/**\n\t * 投射点到二次贝塞尔曲线上，返回投射距离。\n\t * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n\t * @param {number} x0\n\t * @param {number} y0\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {number} x2\n\t * @param {number} y2\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {Array.<number>} out 投射点\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n\t  // http://pomax.github.io/bezierinfo/#projections\n\t  var t;\n\t  var interval = 0.005;\n\t  var d = Infinity;\n\t  _v0[0] = x;\n\t  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n\t  // PENDING\n\t\n\t  for (var _t = 0; _t < 1; _t += 0.05) {\n\t    _v1[0] = quadraticAt(x0, x1, x2, _t);\n\t    _v1[1] = quadraticAt(y0, y1, y2, _t);\n\t    var d1 = v2DistSquare(_v0, _v1);\n\t\n\t    if (d1 < d) {\n\t      t = _t;\n\t      d = d1;\n\t    }\n\t  }\n\t\n\t  d = Infinity; // At most 32 iteration\n\t\n\t  for (var i = 0; i < 32; i++) {\n\t    if (interval < EPSILON_NUMERIC) {\n\t      break;\n\t    }\n\t\n\t    var prev = t - interval;\n\t    var next = t + interval; // t - interval\n\t\n\t    _v1[0] = quadraticAt(x0, x1, x2, prev);\n\t    _v1[1] = quadraticAt(y0, y1, y2, prev);\n\t    var d1 = v2DistSquare(_v1, _v0);\n\t\n\t    if (prev >= 0 && d1 < d) {\n\t      t = prev;\n\t      d = d1;\n\t    } else {\n\t      // t + interval\n\t      _v2[0] = quadraticAt(x0, x1, x2, next);\n\t      _v2[1] = quadraticAt(y0, y1, y2, next);\n\t      var d2 = v2DistSquare(_v2, _v0);\n\t\n\t      if (next <= 1 && d2 < d) {\n\t        t = next;\n\t        d = d2;\n\t      } else {\n\t        interval *= 0.5;\n\t      }\n\t    }\n\t  } // t\n\t\n\t\n\t  if (out) {\n\t    out[0] = quadraticAt(x0, x1, x2, t);\n\t    out[1] = quadraticAt(y0, y1, y2, t);\n\t  } // console.log(interval, i);\n\t\n\t\n\t  return mathSqrt(d);\n\t}\n\t\n\texports.cubicAt = cubicAt;\n\texports.cubicDerivativeAt = cubicDerivativeAt;\n\texports.cubicRootAt = cubicRootAt;\n\texports.cubicExtrema = cubicExtrema;\n\texports.cubicSubdivide = cubicSubdivide;\n\texports.cubicProjectPoint = cubicProjectPoint;\n\texports.quadraticAt = quadraticAt;\n\texports.quadraticDerivativeAt = quadraticDerivativeAt;\n\texports.quadraticRootAt = quadraticRootAt;\n\texports.quadraticExtremum = quadraticExtremum;\n\texports.quadraticSubdivide = quadraticSubdivide;\n\texports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, exports) {\n\n\t/**\n\t * echarts设备环境识别\n\t *\n\t * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n\t * @author firede[firede@firede.us]\n\t * @desc thanks zepto.\n\t */\n\tvar env = {};\n\t\n\tif (typeof wx !== 'undefined') {\n\t  // In Weixin Application\n\t  env = {\n\t    browser: {},\n\t    os: {},\n\t    node: false,\n\t    wxa: true,\n\t    // Weixin Application\n\t    canvasSupported: true,\n\t    svgSupported: false,\n\t    touchEventsSupported: true\n\t  };\n\t} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n\t  // In worker\n\t  env = {\n\t    browser: {},\n\t    os: {},\n\t    node: false,\n\t    worker: true,\n\t    canvasSupported: true\n\t  };\n\t} else if (typeof navigator === 'undefined') {\n\t  // In node\n\t  env = {\n\t    browser: {},\n\t    os: {},\n\t    node: true,\n\t    worker: false,\n\t    // Assume canvas is supported\n\t    canvasSupported: true,\n\t    svgSupported: true\n\t  };\n\t} else {\n\t  env = detect(navigator.userAgent);\n\t}\n\t\n\tvar _default = env; // Zepto.js\n\t// (c) 2010-2013 Thomas Fuchs\n\t// Zepto.js may be freely distributed under the MIT license.\n\t\n\tfunction detect(ua) {\n\t  var os = {};\n\t  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n\t  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n\t  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n\t  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n\t  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n\t  // var touchpad = webos && ua.match(/TouchPad/);\n\t  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n\t  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n\t  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n\t  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n\t  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n\t  // var playbook = ua.match(/PlayBook/);\n\t  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\t\n\t  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n\t  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\t\n\t  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n\t  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n\t  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\t\n\t  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n\t  // - discern (more) between multiple browsers on android\n\t  // - decide if kindle fire in silk mode is android or not\n\t  // - Firefox on Android doesn't specify the Android version\n\t  // - possibly devide in os, device and browser hashes\n\t  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\t  // if (android) os.android = true, os.version = android[2];\n\t  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n\t  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n\t  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n\t  // if (webos) os.webos = true, os.version = webos[2];\n\t  // if (touchpad) os.touchpad = true;\n\t  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n\t  // if (bb10) os.bb10 = true, os.version = bb10[2];\n\t  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n\t  // if (playbook) browser.playbook = true;\n\t  // if (kindle) os.kindle = true, os.version = kindle[1];\n\t  // if (silk) browser.silk = true, browser.version = silk[1];\n\t  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n\t  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\t\n\t  if (firefox) {\n\t    browser.firefox = true;\n\t    browser.version = firefox[1];\n\t  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n\t  // if (webview) browser.webview = true;\n\t\n\t\n\t  if (ie) {\n\t    browser.ie = true;\n\t    browser.version = ie[1];\n\t  }\n\t\n\t  if (edge) {\n\t    browser.edge = true;\n\t    browser.version = edge[1];\n\t  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n\t  // not be set on win phone. So we do not consider Win Phone.\n\t\n\t\n\t  if (weChat) {\n\t    browser.weChat = true;\n\t  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n\t  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n\t  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n\t  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n\t  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\t\n\t\n\t  return {\n\t    browser: browser,\n\t    os: os,\n\t    node: false,\n\t    // 原生canvas支持，改极端点了\n\t    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n\t    canvasSupported: !!document.createElement('canvas').getContext,\n\t    svgSupported: typeof SVGRect !== 'undefined',\n\t    // works on most browsers\n\t    // IE10/11 does not support touch event, and MS Edge supports them but not by\n\t    // default, so we dont check navigator.maxTouchPoints for them here.\n\t    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n\t    // <http://caniuse.com/#search=pointer%20event>.\n\t    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n\t    // events currently. So we dont use that on other browsers unless tested sufficiently.\n\t    // Although IE 10 supports pointer event, it use old style and is different from the\n\t    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n\t    && (browser.edge || browser.ie && browser.version >= 11)\n\t  };\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Eventful = __webpack_require__(115);\n\t\n\texports.Dispatcher = Eventful;\n\t\n\tvar env = __webpack_require__(35);\n\t\n\t/**\n\t * 事件辅助类\n\t * @module zrender/core/event\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t */\n\tvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\n\tvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\t\n\tfunction getBoundingClientRect(el) {\n\t  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n\t  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n\t    left: 0,\n\t    top: 0\n\t  };\n\t} // `calculate` is optional, default false\n\t\n\t\n\tfunction clientToLocal(el, e, out, calculate) {\n\t  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n\t  // to the padding edge of the target element. The only browser using this convention\n\t  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n\t  // not support the properties.\n\t  // (see http://www.jacklmoore.com/notes/mouse-position/)\n\t  // In zr painter.dom, padding edge equals to border edge.\n\t  // FIXME\n\t  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n\t  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n\t  // is too complex. So css-transfrom dont support in this case temporarily.\n\t\n\t  if (calculate || !env.canvasSupported) {\n\t    defaultGetZrXY(el, e, out);\n\t  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n\t  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n\t  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n\t  // zoom-factor, overflow / opacity layers, transforms ...)\n\t  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n\t  // <https://bugs.jquery.com/ticket/8523#comment:14>\n\t  // BTW3, In ff, offsetX/offsetY is always 0.\n\t  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n\t      out.zrX = e.layerX;\n\t      out.zrY = e.layerY;\n\t    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n\t    else if (e.offsetX != null) {\n\t        out.zrX = e.offsetX;\n\t        out.zrY = e.offsetY;\n\t      } // For some other device, e.g., IOS safari.\n\t      else {\n\t          defaultGetZrXY(el, e, out);\n\t        }\n\t\n\t  return out;\n\t}\n\t\n\tfunction defaultGetZrXY(el, e, out) {\n\t  // This well-known method below does not support css transform.\n\t  var box = getBoundingClientRect(el);\n\t  out.zrX = e.clientX - box.left;\n\t  out.zrY = e.clientY - box.top;\n\t}\n\t/**\n\t * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n\t * `calculate` is optional, default false.\n\t */\n\t\n\t\n\tfunction normalizeEvent(el, e, calculate) {\n\t  e = e || window.event;\n\t\n\t  if (e.zrX != null) {\n\t    return e;\n\t  }\n\t\n\t  var eventType = e.type;\n\t  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\t\n\t  if (!isTouch) {\n\t    clientToLocal(el, e, e, calculate);\n\t    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n\t  } else {\n\t    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n\t    touch && clientToLocal(el, touch, e, calculate);\n\t  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n\t  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n\t  // If e.which has been defined, if may be readonly,\n\t  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\t\n\t\n\t  var button = e.button;\n\t\n\t  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n\t    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n\t  }\n\t\n\t  return e;\n\t}\n\t\n\tfunction addEventListener(el, name, handler) {\n\t  if (isDomLevel2) {\n\t    el.addEventListener(name, handler);\n\t  } else {\n\t    el.attachEvent('on' + name, handler);\n\t  }\n\t}\n\t\n\tfunction removeEventListener(el, name, handler) {\n\t  if (isDomLevel2) {\n\t    el.removeEventListener(name, handler);\n\t  } else {\n\t    el.detachEvent('on' + name, handler);\n\t  }\n\t}\n\t/**\n\t * preventDefault and stopPropagation.\n\t * Notice: do not do that in zrender. Upper application\n\t * do that if necessary.\n\t *\n\t * @memberOf module:zrender/core/event\n\t * @method\n\t * @param {Event} e : event对象\n\t */\n\t\n\t\n\tvar stop = isDomLevel2 ? function (e) {\n\t  e.preventDefault();\n\t  e.stopPropagation();\n\t  e.cancelBubble = true;\n\t} : function (e) {\n\t  e.returnValue = false;\n\t  e.cancelBubble = true;\n\t};\n\t\n\tfunction notLeftMouse(e) {\n\t  // If e.which is undefined, considered as left mouse event.\n\t  return e.which > 1;\n\t} // 做向上兼容\n\t\n\t\n\texports.clientToLocal = clientToLocal;\n\texports.normalizeEvent = normalizeEvent;\n\texports.addEventListener = addEventListener;\n\texports.removeEventListener = removeEventListener;\n\texports.stop = stop;\n\texports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 564:\n/***/ (function(module, exports) {\n\n\t/**\n\t * zrender: 生成唯一id\n\t *\n\t * @author errorrik (errorrik@gmail.com)\n\t */\n\tvar idStart = 0x0907;\n\t\n\tfunction _default() {\n\t  return idStart++;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 565:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _config = __webpack_require__(230);\n\t\n\tvar debugMode = _config.debugMode;\n\t\n\tvar log = function () {};\n\t\n\tif (debugMode === 1) {\n\t  log = function () {\n\t    for (var k in arguments) {\n\t      throw new Error(arguments[k]);\n\t    }\n\t  };\n\t} else if (debugMode > 1) {\n\t  log = function () {\n\t    for (var k in arguments) {\n\t      console.log(arguments[k]);\n\t    }\n\t  };\n\t}\n\t\n\tvar _default = log;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, exports) {\n\n\t/**\n\t * 3x2矩阵操作类\n\t * @exports zrender/tool/matrix\n\t */\n\tvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n\t/**\n\t * Create a identity matrix.\n\t * @return {Float32Array|Array.<number>}\n\t */\n\t\n\tfunction create() {\n\t  var out = new ArrayCtor(6);\n\t  identity(out);\n\t  return out;\n\t}\n\t/**\n\t * 设置矩阵为单位矩阵\n\t * @param {Float32Array|Array.<number>} out\n\t */\n\t\n\t\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t/**\n\t * 复制矩阵\n\t * @param {Float32Array|Array.<number>} out\n\t * @param {Float32Array|Array.<number>} m\n\t */\n\t\n\t\n\tfunction copy(out, m) {\n\t  out[0] = m[0];\n\t  out[1] = m[1];\n\t  out[2] = m[2];\n\t  out[3] = m[3];\n\t  out[4] = m[4];\n\t  out[5] = m[5];\n\t  return out;\n\t}\n\t/**\n\t * 矩阵相乘\n\t * @param {Float32Array|Array.<number>} out\n\t * @param {Float32Array|Array.<number>} m1\n\t * @param {Float32Array|Array.<number>} m2\n\t */\n\t\n\t\n\tfunction mul(out, m1, m2) {\n\t  // Consider matrix.mul(m, m2, m);\n\t  // where out is the same as m2.\n\t  // So use temp variable to escape error.\n\t  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n\t  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n\t  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n\t  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n\t  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n\t  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n\t  out[0] = out0;\n\t  out[1] = out1;\n\t  out[2] = out2;\n\t  out[3] = out3;\n\t  out[4] = out4;\n\t  out[5] = out5;\n\t  return out;\n\t}\n\t/**\n\t * 平移变换\n\t * @param {Float32Array|Array.<number>} out\n\t * @param {Float32Array|Array.<number>} a\n\t * @param {Float32Array|Array.<number>} v\n\t */\n\t\n\t\n\tfunction translate(out, a, v) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4] + v[0];\n\t  out[5] = a[5] + v[1];\n\t  return out;\n\t}\n\t/**\n\t * 旋转变换\n\t * @param {Float32Array|Array.<number>} out\n\t * @param {Float32Array|Array.<number>} a\n\t * @param {number} rad\n\t */\n\t\n\t\n\tfunction rotate(out, a, rad) {\n\t  var aa = a[0];\n\t  var ac = a[2];\n\t  var atx = a[4];\n\t  var ab = a[1];\n\t  var ad = a[3];\n\t  var aty = a[5];\n\t  var st = Math.sin(rad);\n\t  var ct = Math.cos(rad);\n\t  out[0] = aa * ct + ab * st;\n\t  out[1] = -aa * st + ab * ct;\n\t  out[2] = ac * ct + ad * st;\n\t  out[3] = -ac * st + ct * ad;\n\t  out[4] = ct * atx + st * aty;\n\t  out[5] = ct * aty - st * atx;\n\t  return out;\n\t}\n\t/**\n\t * 缩放变换\n\t * @param {Float32Array|Array.<number>} out\n\t * @param {Float32Array|Array.<number>} a\n\t * @param {Float32Array|Array.<number>} v\n\t */\n\t\n\t\n\tfunction scale(out, a, v) {\n\t  var vx = v[0];\n\t  var vy = v[1];\n\t  out[0] = a[0] * vx;\n\t  out[1] = a[1] * vy;\n\t  out[2] = a[2] * vx;\n\t  out[3] = a[3] * vy;\n\t  out[4] = a[4] * vx;\n\t  out[5] = a[5] * vy;\n\t  return out;\n\t}\n\t/**\n\t * 求逆矩阵\n\t * @param {Float32Array|Array.<number>} out\n\t * @param {Float32Array|Array.<number>} a\n\t */\n\t\n\t\n\tfunction invert(out, a) {\n\t  var aa = a[0];\n\t  var ac = a[2];\n\t  var atx = a[4];\n\t  var ab = a[1];\n\t  var ad = a[3];\n\t  var aty = a[5];\n\t  var det = aa * ad - ab * ac;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t\n\t  det = 1.0 / det;\n\t  out[0] = ad * det;\n\t  out[1] = -ab * det;\n\t  out[2] = -ac * det;\n\t  out[3] = aa * det;\n\t  out[4] = (ac * aty - ad * atx) * det;\n\t  out[5] = (ab * atx - aa * aty) * det;\n\t  return out;\n\t}\n\t/**\n\t * Clone a new matrix.\n\t * @param {Float32Array|Array.<number>} a\n\t */\n\t\n\t\n\tfunction clone(a) {\n\t  var b = create();\n\t  copy(b, a);\n\t  return b;\n\t}\n\t\n\texports.create = create;\n\texports.identity = identity;\n\texports.copy = copy;\n\texports.mul = mul;\n\texports.translate = translate;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.invert = invert;\n\texports.clone = clone;\n\n/***/ }),\n\n/***/ 359:\n/***/ (function(module, exports) {\n\n\t// https://github.com/mziccard/node-timsort\n\tvar DEFAULT_MIN_MERGE = 32;\n\tvar DEFAULT_MIN_GALLOPING = 7;\n\tvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\t\n\tfunction minRunLength(n) {\n\t  var r = 0;\n\t\n\t  while (n >= DEFAULT_MIN_MERGE) {\n\t    r |= n & 1;\n\t    n >>= 1;\n\t  }\n\t\n\t  return n + r;\n\t}\n\t\n\tfunction makeAscendingRun(array, lo, hi, compare) {\n\t  var runHi = lo + 1;\n\t\n\t  if (runHi === hi) {\n\t    return 1;\n\t  }\n\t\n\t  if (compare(array[runHi++], array[lo]) < 0) {\n\t    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n\t      runHi++;\n\t    }\n\t\n\t    reverseRun(array, lo, runHi);\n\t  } else {\n\t    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n\t      runHi++;\n\t    }\n\t  }\n\t\n\t  return runHi - lo;\n\t}\n\t\n\tfunction reverseRun(array, lo, hi) {\n\t  hi--;\n\t\n\t  while (lo < hi) {\n\t    var t = array[lo];\n\t    array[lo++] = array[hi];\n\t    array[hi--] = t;\n\t  }\n\t}\n\t\n\tfunction binaryInsertionSort(array, lo, hi, start, compare) {\n\t  if (start === lo) {\n\t    start++;\n\t  }\n\t\n\t  for (; start < hi; start++) {\n\t    var pivot = array[start];\n\t    var left = lo;\n\t    var right = start;\n\t    var mid;\n\t\n\t    while (left < right) {\n\t      mid = left + right >>> 1;\n\t\n\t      if (compare(pivot, array[mid]) < 0) {\n\t        right = mid;\n\t      } else {\n\t        left = mid + 1;\n\t      }\n\t    }\n\t\n\t    var n = start - left;\n\t\n\t    switch (n) {\n\t      case 3:\n\t        array[left + 3] = array[left + 2];\n\t\n\t      case 2:\n\t        array[left + 2] = array[left + 1];\n\t\n\t      case 1:\n\t        array[left + 1] = array[left];\n\t        break;\n\t\n\t      default:\n\t        while (n > 0) {\n\t          array[left + n] = array[left + n - 1];\n\t          n--;\n\t        }\n\t\n\t    }\n\t\n\t    array[left] = pivot;\n\t  }\n\t}\n\t\n\tfunction gallopLeft(value, array, start, length, hint, compare) {\n\t  var lastOffset = 0;\n\t  var maxOffset = 0;\n\t  var offset = 1;\n\t\n\t  if (compare(value, array[start + hint]) > 0) {\n\t    maxOffset = length - hint;\n\t\n\t    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n\t      lastOffset = offset;\n\t      offset = (offset << 1) + 1;\n\t\n\t      if (offset <= 0) {\n\t        offset = maxOffset;\n\t      }\n\t    }\n\t\n\t    if (offset > maxOffset) {\n\t      offset = maxOffset;\n\t    }\n\t\n\t    lastOffset += hint;\n\t    offset += hint;\n\t  } else {\n\t    maxOffset = hint + 1;\n\t\n\t    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n\t      lastOffset = offset;\n\t      offset = (offset << 1) + 1;\n\t\n\t      if (offset <= 0) {\n\t        offset = maxOffset;\n\t      }\n\t    }\n\t\n\t    if (offset > maxOffset) {\n\t      offset = maxOffset;\n\t    }\n\t\n\t    var tmp = lastOffset;\n\t    lastOffset = hint - offset;\n\t    offset = hint - tmp;\n\t  }\n\t\n\t  lastOffset++;\n\t\n\t  while (lastOffset < offset) {\n\t    var m = lastOffset + (offset - lastOffset >>> 1);\n\t\n\t    if (compare(value, array[start + m]) > 0) {\n\t      lastOffset = m + 1;\n\t    } else {\n\t      offset = m;\n\t    }\n\t  }\n\t\n\t  return offset;\n\t}\n\t\n\tfunction gallopRight(value, array, start, length, hint, compare) {\n\t  var lastOffset = 0;\n\t  var maxOffset = 0;\n\t  var offset = 1;\n\t\n\t  if (compare(value, array[start + hint]) < 0) {\n\t    maxOffset = hint + 1;\n\t\n\t    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n\t      lastOffset = offset;\n\t      offset = (offset << 1) + 1;\n\t\n\t      if (offset <= 0) {\n\t        offset = maxOffset;\n\t      }\n\t    }\n\t\n\t    if (offset > maxOffset) {\n\t      offset = maxOffset;\n\t    }\n\t\n\t    var tmp = lastOffset;\n\t    lastOffset = hint - offset;\n\t    offset = hint - tmp;\n\t  } else {\n\t    maxOffset = length - hint;\n\t\n\t    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n\t      lastOffset = offset;\n\t      offset = (offset << 1) + 1;\n\t\n\t      if (offset <= 0) {\n\t        offset = maxOffset;\n\t      }\n\t    }\n\t\n\t    if (offset > maxOffset) {\n\t      offset = maxOffset;\n\t    }\n\t\n\t    lastOffset += hint;\n\t    offset += hint;\n\t  }\n\t\n\t  lastOffset++;\n\t\n\t  while (lastOffset < offset) {\n\t    var m = lastOffset + (offset - lastOffset >>> 1);\n\t\n\t    if (compare(value, array[start + m]) < 0) {\n\t      offset = m;\n\t    } else {\n\t      lastOffset = m + 1;\n\t    }\n\t  }\n\t\n\t  return offset;\n\t}\n\t\n\tfunction TimSort(array, compare) {\n\t  var minGallop = DEFAULT_MIN_GALLOPING;\n\t  var length = 0;\n\t  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n\t  var stackLength = 0;\n\t  var runStart;\n\t  var runLength;\n\t  var stackSize = 0;\n\t  length = array.length;\n\t\n\t  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n\t    tmpStorageLength = length >>> 1;\n\t  }\n\t\n\t  var tmp = [];\n\t  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\t  runStart = [];\n\t  runLength = [];\n\t\n\t  function pushRun(_runStart, _runLength) {\n\t    runStart[stackSize] = _runStart;\n\t    runLength[stackSize] = _runLength;\n\t    stackSize += 1;\n\t  }\n\t\n\t  function mergeRuns() {\n\t    while (stackSize > 1) {\n\t      var n = stackSize - 2;\n\t\n\t      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n\t        if (runLength[n - 1] < runLength[n + 1]) {\n\t          n--;\n\t        }\n\t      } else if (runLength[n] > runLength[n + 1]) {\n\t        break;\n\t      }\n\t\n\t      mergeAt(n);\n\t    }\n\t  }\n\t\n\t  function forceMergeRuns() {\n\t    while (stackSize > 1) {\n\t      var n = stackSize - 2;\n\t\n\t      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n\t        n--;\n\t      }\n\t\n\t      mergeAt(n);\n\t    }\n\t  }\n\t\n\t  function mergeAt(i) {\n\t    var start1 = runStart[i];\n\t    var length1 = runLength[i];\n\t    var start2 = runStart[i + 1];\n\t    var length2 = runLength[i + 1];\n\t    runLength[i] = length1 + length2;\n\t\n\t    if (i === stackSize - 3) {\n\t      runStart[i + 1] = runStart[i + 2];\n\t      runLength[i + 1] = runLength[i + 2];\n\t    }\n\t\n\t    stackSize--;\n\t    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n\t    start1 += k;\n\t    length1 -= k;\n\t\n\t    if (length1 === 0) {\n\t      return;\n\t    }\n\t\n\t    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\t\n\t    if (length2 === 0) {\n\t      return;\n\t    }\n\t\n\t    if (length1 <= length2) {\n\t      mergeLow(start1, length1, start2, length2);\n\t    } else {\n\t      mergeHigh(start1, length1, start2, length2);\n\t    }\n\t  }\n\t\n\t  function mergeLow(start1, length1, start2, length2) {\n\t    var i = 0;\n\t\n\t    for (i = 0; i < length1; i++) {\n\t      tmp[i] = array[start1 + i];\n\t    }\n\t\n\t    var cursor1 = 0;\n\t    var cursor2 = start2;\n\t    var dest = start1;\n\t    array[dest++] = array[cursor2++];\n\t\n\t    if (--length2 === 0) {\n\t      for (i = 0; i < length1; i++) {\n\t        array[dest + i] = tmp[cursor1 + i];\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    if (length1 === 1) {\n\t      for (i = 0; i < length2; i++) {\n\t        array[dest + i] = array[cursor2 + i];\n\t      }\n\t\n\t      array[dest + length2] = tmp[cursor1];\n\t      return;\n\t    }\n\t\n\t    var _minGallop = minGallop;\n\t    var count1, count2, exit;\n\t\n\t    while (1) {\n\t      count1 = 0;\n\t      count2 = 0;\n\t      exit = false;\n\t\n\t      do {\n\t        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n\t          array[dest++] = array[cursor2++];\n\t          count2++;\n\t          count1 = 0;\n\t\n\t          if (--length2 === 0) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        } else {\n\t          array[dest++] = tmp[cursor1++];\n\t          count1++;\n\t          count2 = 0;\n\t\n\t          if (--length1 === 1) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        }\n\t      } while ((count1 | count2) < _minGallop);\n\t\n\t      if (exit) {\n\t        break;\n\t      }\n\t\n\t      do {\n\t        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\t\n\t        if (count1 !== 0) {\n\t          for (i = 0; i < count1; i++) {\n\t            array[dest + i] = tmp[cursor1 + i];\n\t          }\n\t\n\t          dest += count1;\n\t          cursor1 += count1;\n\t          length1 -= count1;\n\t\n\t          if (length1 <= 1) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        }\n\t\n\t        array[dest++] = array[cursor2++];\n\t\n\t        if (--length2 === 0) {\n\t          exit = true;\n\t          break;\n\t        }\n\t\n\t        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\t\n\t        if (count2 !== 0) {\n\t          for (i = 0; i < count2; i++) {\n\t            array[dest + i] = array[cursor2 + i];\n\t          }\n\t\n\t          dest += count2;\n\t          cursor2 += count2;\n\t          length2 -= count2;\n\t\n\t          if (length2 === 0) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        }\n\t\n\t        array[dest++] = tmp[cursor1++];\n\t\n\t        if (--length1 === 1) {\n\t          exit = true;\n\t          break;\n\t        }\n\t\n\t        _minGallop--;\n\t      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\t\n\t      if (exit) {\n\t        break;\n\t      }\n\t\n\t      if (_minGallop < 0) {\n\t        _minGallop = 0;\n\t      }\n\t\n\t      _minGallop += 2;\n\t    }\n\t\n\t    minGallop = _minGallop;\n\t    minGallop < 1 && (minGallop = 1);\n\t\n\t    if (length1 === 1) {\n\t      for (i = 0; i < length2; i++) {\n\t        array[dest + i] = array[cursor2 + i];\n\t      }\n\t\n\t      array[dest + length2] = tmp[cursor1];\n\t    } else if (length1 === 0) {\n\t      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n\t    } else {\n\t      for (i = 0; i < length1; i++) {\n\t        array[dest + i] = tmp[cursor1 + i];\n\t      }\n\t    }\n\t  }\n\t\n\t  function mergeHigh(start1, length1, start2, length2) {\n\t    var i = 0;\n\t\n\t    for (i = 0; i < length2; i++) {\n\t      tmp[i] = array[start2 + i];\n\t    }\n\t\n\t    var cursor1 = start1 + length1 - 1;\n\t    var cursor2 = length2 - 1;\n\t    var dest = start2 + length2 - 1;\n\t    var customCursor = 0;\n\t    var customDest = 0;\n\t    array[dest--] = array[cursor1--];\n\t\n\t    if (--length1 === 0) {\n\t      customCursor = dest - (length2 - 1);\n\t\n\t      for (i = 0; i < length2; i++) {\n\t        array[customCursor + i] = tmp[i];\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    if (length2 === 1) {\n\t      dest -= length1;\n\t      cursor1 -= length1;\n\t      customDest = dest + 1;\n\t      customCursor = cursor1 + 1;\n\t\n\t      for (i = length1 - 1; i >= 0; i--) {\n\t        array[customDest + i] = array[customCursor + i];\n\t      }\n\t\n\t      array[dest] = tmp[cursor2];\n\t      return;\n\t    }\n\t\n\t    var _minGallop = minGallop;\n\t\n\t    while (true) {\n\t      var count1 = 0;\n\t      var count2 = 0;\n\t      var exit = false;\n\t\n\t      do {\n\t        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n\t          array[dest--] = array[cursor1--];\n\t          count1++;\n\t          count2 = 0;\n\t\n\t          if (--length1 === 0) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        } else {\n\t          array[dest--] = tmp[cursor2--];\n\t          count2++;\n\t          count1 = 0;\n\t\n\t          if (--length2 === 1) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        }\n\t      } while ((count1 | count2) < _minGallop);\n\t\n\t      if (exit) {\n\t        break;\n\t      }\n\t\n\t      do {\n\t        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\t\n\t        if (count1 !== 0) {\n\t          dest -= count1;\n\t          cursor1 -= count1;\n\t          length1 -= count1;\n\t          customDest = dest + 1;\n\t          customCursor = cursor1 + 1;\n\t\n\t          for (i = count1 - 1; i >= 0; i--) {\n\t            array[customDest + i] = array[customCursor + i];\n\t          }\n\t\n\t          if (length1 === 0) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        }\n\t\n\t        array[dest--] = tmp[cursor2--];\n\t\n\t        if (--length2 === 1) {\n\t          exit = true;\n\t          break;\n\t        }\n\t\n\t        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\t\n\t        if (count2 !== 0) {\n\t          dest -= count2;\n\t          cursor2 -= count2;\n\t          length2 -= count2;\n\t          customDest = dest + 1;\n\t          customCursor = cursor2 + 1;\n\t\n\t          for (i = 0; i < count2; i++) {\n\t            array[customDest + i] = tmp[customCursor + i];\n\t          }\n\t\n\t          if (length2 <= 1) {\n\t            exit = true;\n\t            break;\n\t          }\n\t        }\n\t\n\t        array[dest--] = array[cursor1--];\n\t\n\t        if (--length1 === 0) {\n\t          exit = true;\n\t          break;\n\t        }\n\t\n\t        _minGallop--;\n\t      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\t\n\t      if (exit) {\n\t        break;\n\t      }\n\t\n\t      if (_minGallop < 0) {\n\t        _minGallop = 0;\n\t      }\n\t\n\t      _minGallop += 2;\n\t    }\n\t\n\t    minGallop = _minGallop;\n\t\n\t    if (minGallop < 1) {\n\t      minGallop = 1;\n\t    }\n\t\n\t    if (length2 === 1) {\n\t      dest -= length1;\n\t      cursor1 -= length1;\n\t      customDest = dest + 1;\n\t      customCursor = cursor1 + 1;\n\t\n\t      for (i = length1 - 1; i >= 0; i--) {\n\t        array[customDest + i] = array[customCursor + i];\n\t      }\n\t\n\t      array[dest] = tmp[cursor2];\n\t    } else if (length2 === 0) {\n\t      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n\t    } else {\n\t      customCursor = dest - (length2 - 1);\n\t\n\t      for (i = 0; i < length2; i++) {\n\t        array[customCursor + i] = tmp[i];\n\t      }\n\t    }\n\t  }\n\t\n\t  this.mergeRuns = mergeRuns;\n\t  this.forceMergeRuns = forceMergeRuns;\n\t  this.pushRun = pushRun;\n\t}\n\t\n\tfunction sort(array, compare, lo, hi) {\n\t  if (!lo) {\n\t    lo = 0;\n\t  }\n\t\n\t  if (!hi) {\n\t    hi = array.length;\n\t  }\n\t\n\t  var remaining = hi - lo;\n\t\n\t  if (remaining < 2) {\n\t    return;\n\t  }\n\t\n\t  var runLength = 0;\n\t\n\t  if (remaining < DEFAULT_MIN_MERGE) {\n\t    runLength = makeAscendingRun(array, lo, hi, compare);\n\t    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n\t    return;\n\t  }\n\t\n\t  var ts = new TimSort(array, compare);\n\t  var minRun = minRunLength(remaining);\n\t\n\t  do {\n\t    runLength = makeAscendingRun(array, lo, hi, compare);\n\t\n\t    if (runLength < minRun) {\n\t      var force = remaining;\n\t\n\t      if (force > minRun) {\n\t        force = minRun;\n\t      }\n\t\n\t      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n\t      runLength = force;\n\t    }\n\t\n\t    ts.pushRun(lo, runLength);\n\t    ts.mergeRuns();\n\t    remaining -= runLength;\n\t    lo += runLength;\n\t  } while (remaining !== 0);\n\t\n\t  ts.forceMergeRuns();\n\t}\n\t\n\tmodule.exports = sort;\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\t/**\n\t * @module zrender/core/util\n\t */\n\t// 用于处理merge时无法遍历Date等对象的问题\n\tvar BUILTIN_OBJECT = {\n\t  '[object Function]': 1,\n\t  '[object RegExp]': 1,\n\t  '[object Date]': 1,\n\t  '[object Error]': 1,\n\t  '[object CanvasGradient]': 1,\n\t  '[object CanvasPattern]': 1,\n\t  // For node-canvas\n\t  '[object Image]': 1,\n\t  '[object Canvas]': 1\n\t};\n\tvar TYPED_ARRAY = {\n\t  '[object Int8Array]': 1,\n\t  '[object Uint8Array]': 1,\n\t  '[object Uint8ClampedArray]': 1,\n\t  '[object Int16Array]': 1,\n\t  '[object Uint16Array]': 1,\n\t  '[object Int32Array]': 1,\n\t  '[object Uint32Array]': 1,\n\t  '[object Float32Array]': 1,\n\t  '[object Float64Array]': 1\n\t};\n\tvar objToString = Object.prototype.toString;\n\tvar arrayProto = Array.prototype;\n\tvar nativeForEach = arrayProto.forEach;\n\tvar nativeFilter = arrayProto.filter;\n\tvar nativeSlice = arrayProto.slice;\n\tvar nativeMap = arrayProto.map;\n\tvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\t\n\tvar methods = {};\n\t\n\tfunction $override(name, fn) {\n\t  // Clear ctx instance for different environment\n\t  if (name === 'createCanvas') {\n\t    _ctx = null;\n\t  }\n\t\n\t  methods[name] = fn;\n\t}\n\t/**\n\t * Those data types can be cloned:\n\t *     Plain object, Array, TypedArray, number, string, null, undefined.\n\t * Those data types will be assgined using the orginal data:\n\t *     BUILTIN_OBJECT\n\t * Instance of user defined class will be cloned to a plain object, without\n\t * properties in prototype.\n\t * Other data types is not supported (not sure what will happen).\n\t *\n\t * Caution: do not support clone Date, for performance consideration.\n\t * (There might be a large number of date in `series.data`).\n\t * So date should not be modified in and out of echarts.\n\t *\n\t * @param {*} source\n\t * @return {*} new\n\t */\n\t\n\t\n\tfunction clone(source) {\n\t  if (source == null || typeof source != 'object') {\n\t    return source;\n\t  }\n\t\n\t  var result = source;\n\t  var typeStr = objToString.call(source);\n\t\n\t  if (typeStr === '[object Array]') {\n\t    if (!isPrimitive(source)) {\n\t      result = [];\n\t\n\t      for (var i = 0, len = source.length; i < len; i++) {\n\t        result[i] = clone(source[i]);\n\t      }\n\t    }\n\t  } else if (TYPED_ARRAY[typeStr]) {\n\t    if (!isPrimitive(source)) {\n\t      var Ctor = source.constructor;\n\t\n\t      if (source.constructor.from) {\n\t        result = Ctor.from(source);\n\t      } else {\n\t        result = new Ctor(source.length);\n\t\n\t        for (var i = 0, len = source.length; i < len; i++) {\n\t          result[i] = clone(source[i]);\n\t        }\n\t      }\n\t    }\n\t  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n\t    result = {};\n\t\n\t    for (var key in source) {\n\t      if (source.hasOwnProperty(key)) {\n\t        result[key] = clone(source[key]);\n\t      }\n\t    }\n\t  }\n\t\n\t  return result;\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} target\n\t * @param {*} source\n\t * @param {boolean} [overwrite=false]\n\t */\n\t\n\t\n\tfunction merge(target, source, overwrite) {\n\t  // We should escapse that source is string\n\t  // and enter for ... in ...\n\t  if (!isObject(source) || !isObject(target)) {\n\t    return overwrite ? clone(source) : target;\n\t  }\n\t\n\t  for (var key in source) {\n\t    if (source.hasOwnProperty(key)) {\n\t      var targetProp = target[key];\n\t      var sourceProp = source[key];\n\t\n\t      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n\t        // 如果需要递归覆盖，就递归调用merge\n\t        merge(targetProp, sourceProp, overwrite);\n\t      } else if (overwrite || !(key in target)) {\n\t        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n\t        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n\t        target[key] = clone(source[key], true);\n\t      }\n\t    }\n\t  }\n\t\n\t  return target;\n\t}\n\t/**\n\t * @param {Array} targetAndSources The first item is target, and the rests are source.\n\t * @param {boolean} [overwrite=false]\n\t * @return {*} target\n\t */\n\t\n\t\n\tfunction mergeAll(targetAndSources, overwrite) {\n\t  var result = targetAndSources[0];\n\t\n\t  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n\t    result = merge(result, targetAndSources[i], overwrite);\n\t  }\n\t\n\t  return result;\n\t}\n\t/**\n\t * @param {*} target\n\t * @param {*} source\n\t * @memberOf module:zrender/core/util\n\t */\n\t\n\t\n\tfunction extend(target, source) {\n\t  for (var key in source) {\n\t    if (source.hasOwnProperty(key)) {\n\t      target[key] = source[key];\n\t    }\n\t  }\n\t\n\t  return target;\n\t}\n\t/**\n\t * @param {*} target\n\t * @param {*} source\n\t * @param {boolean} [overlay=false]\n\t * @memberOf module:zrender/core/util\n\t */\n\t\n\t\n\tfunction defaults(target, source, overlay) {\n\t  for (var key in source) {\n\t    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n\t      target[key] = source[key];\n\t    }\n\t  }\n\t\n\t  return target;\n\t}\n\t\n\tvar createCanvas = function () {\n\t  return methods.createCanvas();\n\t};\n\t\n\tmethods.createCanvas = function () {\n\t  return document.createElement('canvas');\n\t}; // FIXME\n\t\n\t\n\tvar _ctx;\n\t\n\tfunction getContext() {\n\t  if (!_ctx) {\n\t    // Use util.createCanvas instead of createCanvas\n\t    // because createCanvas may be overwritten in different environment\n\t    _ctx = createCanvas().getContext('2d');\n\t  }\n\t\n\t  return _ctx;\n\t}\n\t/**\n\t * 查询数组中元素的index\n\t * @memberOf module:zrender/core/util\n\t */\n\t\n\t\n\tfunction indexOf(array, value) {\n\t  if (array) {\n\t    if (array.indexOf) {\n\t      return array.indexOf(value);\n\t    }\n\t\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      if (array[i] === value) {\n\t        return i;\n\t      }\n\t    }\n\t  }\n\t\n\t  return -1;\n\t}\n\t/**\n\t * 构造类继承关系\n\t *\n\t * @memberOf module:zrender/core/util\n\t * @param {Function} clazz 源类\n\t * @param {Function} baseClazz 基类\n\t */\n\t\n\t\n\tfunction inherits(clazz, baseClazz) {\n\t  var clazzPrototype = clazz.prototype;\n\t\n\t  function F() {}\n\t\n\t  F.prototype = baseClazz.prototype;\n\t  clazz.prototype = new F();\n\t\n\t  for (var prop in clazzPrototype) {\n\t    clazz.prototype[prop] = clazzPrototype[prop];\n\t  }\n\t\n\t  clazz.prototype.constructor = clazz;\n\t  clazz.superClass = baseClazz;\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {Object|Function} target\n\t * @param {Object|Function} sorce\n\t * @param {boolean} overlay\n\t */\n\t\n\t\n\tfunction mixin(target, source, overlay) {\n\t  target = 'prototype' in target ? target.prototype : target;\n\t  source = 'prototype' in source ? source.prototype : source;\n\t  defaults(target, source, overlay);\n\t}\n\t/**\n\t * Consider typed array.\n\t * @param {Array|TypedArray} data\n\t */\n\t\n\t\n\tfunction isArrayLike(data) {\n\t  if (!data) {\n\t    return;\n\t  }\n\t\n\t  if (typeof data == 'string') {\n\t    return false;\n\t  }\n\t\n\t  return typeof data.length == 'number';\n\t}\n\t/**\n\t * 数组或对象遍历\n\t * @memberOf module:zrender/core/util\n\t * @param {Object|Array} obj\n\t * @param {Function} cb\n\t * @param {*} [context]\n\t */\n\t\n\t\n\tfunction each(obj, cb, context) {\n\t  if (!(obj && cb)) {\n\t    return;\n\t  }\n\t\n\t  if (obj.forEach && obj.forEach === nativeForEach) {\n\t    obj.forEach(cb, context);\n\t  } else if (obj.length === +obj.length) {\n\t    for (var i = 0, len = obj.length; i < len; i++) {\n\t      cb.call(context, obj[i], i, obj);\n\t    }\n\t  } else {\n\t    for (var key in obj) {\n\t      if (obj.hasOwnProperty(key)) {\n\t        cb.call(context, obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t}\n\t/**\n\t * 数组映射\n\t * @memberOf module:zrender/core/util\n\t * @param {Array} obj\n\t * @param {Function} cb\n\t * @param {*} [context]\n\t * @return {Array}\n\t */\n\t\n\t\n\tfunction map(obj, cb, context) {\n\t  if (!(obj && cb)) {\n\t    return;\n\t  }\n\t\n\t  if (obj.map && obj.map === nativeMap) {\n\t    return obj.map(cb, context);\n\t  } else {\n\t    var result = [];\n\t\n\t    for (var i = 0, len = obj.length; i < len; i++) {\n\t      result.push(cb.call(context, obj[i], i, obj));\n\t    }\n\t\n\t    return result;\n\t  }\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {Array} obj\n\t * @param {Function} cb\n\t * @param {Object} [memo]\n\t * @param {*} [context]\n\t * @return {Array}\n\t */\n\t\n\t\n\tfunction reduce(obj, cb, memo, context) {\n\t  if (!(obj && cb)) {\n\t    return;\n\t  }\n\t\n\t  if (obj.reduce && obj.reduce === nativeReduce) {\n\t    return obj.reduce(cb, memo, context);\n\t  } else {\n\t    for (var i = 0, len = obj.length; i < len; i++) {\n\t      memo = cb.call(context, memo, obj[i], i, obj);\n\t    }\n\t\n\t    return memo;\n\t  }\n\t}\n\t/**\n\t * 数组过滤\n\t * @memberOf module:zrender/core/util\n\t * @param {Array} obj\n\t * @param {Function} cb\n\t * @param {*} [context]\n\t * @return {Array}\n\t */\n\t\n\t\n\tfunction filter(obj, cb, context) {\n\t  if (!(obj && cb)) {\n\t    return;\n\t  }\n\t\n\t  if (obj.filter && obj.filter === nativeFilter) {\n\t    return obj.filter(cb, context);\n\t  } else {\n\t    var result = [];\n\t\n\t    for (var i = 0, len = obj.length; i < len; i++) {\n\t      if (cb.call(context, obj[i], i, obj)) {\n\t        result.push(obj[i]);\n\t      }\n\t    }\n\t\n\t    return result;\n\t  }\n\t}\n\t/**\n\t * 数组项查找\n\t * @memberOf module:zrender/core/util\n\t * @param {Array} obj\n\t * @param {Function} cb\n\t * @param {*} [context]\n\t * @return {*}\n\t */\n\t\n\t\n\tfunction find(obj, cb, context) {\n\t  if (!(obj && cb)) {\n\t    return;\n\t  }\n\t\n\t  for (var i = 0, len = obj.length; i < len; i++) {\n\t    if (cb.call(context, obj[i], i, obj)) {\n\t      return obj[i];\n\t    }\n\t  }\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {Function} func\n\t * @param {*} context\n\t * @return {Function}\n\t */\n\t\n\t\n\tfunction bind(func, context) {\n\t  var args = nativeSlice.call(arguments, 2);\n\t  return function () {\n\t    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n\t  };\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {Function} func\n\t * @return {Function}\n\t */\n\t\n\t\n\tfunction curry(func) {\n\t  var args = nativeSlice.call(arguments, 1);\n\t  return function () {\n\t    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n\t  };\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isArray(value) {\n\t  return objToString.call(value) === '[object Array]';\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isFunction(value) {\n\t  return typeof value === 'function';\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isString(value) {\n\t  return objToString.call(value) === '[object String]';\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return type === 'function' || !!value && type == 'object';\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isBuiltInObject(value) {\n\t  return !!BUILTIN_OBJECT[objToString.call(value)];\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isTypedArray(value) {\n\t  return !!TYPED_ARRAY[objToString.call(value)];\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction isDom(value) {\n\t  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n\t}\n\t/**\n\t * Whether is exactly NaN. Notice isNaN('a') returns true.\n\t * @param {*} value\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction eqNaN(value) {\n\t  return value !== value;\n\t}\n\t/**\n\t * If value1 is not null, then return value1, otherwise judget rest of values.\n\t * Low performance.\n\t * @memberOf module:zrender/core/util\n\t * @return {*} Final value\n\t */\n\t\n\t\n\tfunction retrieve(values) {\n\t  for (var i = 0, len = arguments.length; i < len; i++) {\n\t    if (arguments[i] != null) {\n\t      return arguments[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction retrieve2(value0, value1) {\n\t  return value0 != null ? value0 : value1;\n\t}\n\t\n\tfunction retrieve3(value0, value1, value2) {\n\t  return value0 != null ? value0 : value1 != null ? value1 : value2;\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {Array} arr\n\t * @param {number} startIndex\n\t * @param {number} endIndex\n\t * @return {Array}\n\t */\n\t\n\t\n\tfunction slice() {\n\t  return Function.call.apply(nativeSlice, arguments);\n\t}\n\t/**\n\t * Normalize css liked array configuration\n\t * e.g.\n\t *  3 => [3, 3, 3, 3]\n\t *  [4, 2] => [4, 2, 4, 2]\n\t *  [4, 3, 2] => [4, 3, 2, 3]\n\t * @param {number|Array.<number>} val\n\t * @return {Array.<number>}\n\t */\n\t\n\t\n\tfunction normalizeCssArray(val) {\n\t  if (typeof val === 'number') {\n\t    return [val, val, val, val];\n\t  }\n\t\n\t  var len = val.length;\n\t\n\t  if (len === 2) {\n\t    // vertical | horizontal\n\t    return [val[0], val[1], val[0], val[1]];\n\t  } else if (len === 3) {\n\t    // top | horizontal | bottom\n\t    return [val[0], val[1], val[2], val[1]];\n\t  }\n\t\n\t  return val;\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {boolean} condition\n\t * @param {string} message\n\t */\n\t\n\t\n\tfunction assert(condition, message) {\n\t  if (!condition) {\n\t    throw new Error(message);\n\t  }\n\t}\n\t/**\n\t * @memberOf module:zrender/core/util\n\t * @param {string} str string to be trimed\n\t * @return {string} trimed string\n\t */\n\t\n\t\n\tfunction trim(str) {\n\t  if (str == null) {\n\t    return null;\n\t  } else if (typeof str.trim === 'function') {\n\t    return str.trim();\n\t  } else {\n\t    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t  }\n\t}\n\t\n\tvar primitiveKey = '__ec_primitive__';\n\t/**\n\t * Set an object as primitive to be ignored traversing children in clone or merge\n\t */\n\t\n\tfunction setAsPrimitive(obj) {\n\t  obj[primitiveKey] = true;\n\t}\n\t\n\tfunction isPrimitive(obj) {\n\t  return obj[primitiveKey];\n\t}\n\t/**\n\t * @constructor\n\t * @param {Object} obj Only apply `ownProperty`.\n\t */\n\t\n\t\n\tfunction HashMap(obj) {\n\t  var isArr = isArray(obj);\n\t  var thisMap = this;\n\t  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\t\n\t  function visit(value, key) {\n\t    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n\t  }\n\t} // Add prefix to avoid conflict with Object.prototype.\n\t\n\t\n\tHashMap.prototype = {\n\t  constructor: HashMap,\n\t  // Do not provide `has` method to avoid defining what is `has`.\n\t  // (We usually treat `null` and `undefined` as the same, different\n\t  // from ES6 Map).\n\t  get: function (key) {\n\t    return this.hasOwnProperty(key) ? this[key] : null;\n\t  },\n\t  set: function (key, value) {\n\t    // Comparing with invocation chaining, `return value` is more commonly\n\t    // used in this case: `var someVal = map.set('a', genVal());`\n\t    return this[key] = value;\n\t  },\n\t  // Although util.each can be performed on this hashMap directly, user\n\t  // should not use the exposed keys, who are prefixed.\n\t  each: function (cb, context) {\n\t    context !== void 0 && (cb = bind(cb, context));\n\t\n\t    for (var key in this) {\n\t      this.hasOwnProperty(key) && cb(this[key], key);\n\t    }\n\t  },\n\t  // Do not use this method if performance sensitive.\n\t  removeKey: function (key) {\n\t    delete this[key];\n\t  }\n\t};\n\t\n\tfunction createHashMap(obj) {\n\t  return new HashMap(obj);\n\t}\n\t\n\tfunction concatArray(a, b) {\n\t  var newArray = new a.constructor(a.length + b.length);\n\t\n\t  for (var i = 0; i < a.length; i++) {\n\t    newArray[i] = a[i];\n\t  }\n\t\n\t  var offset = a.length;\n\t\n\t  for (i = 0; i < b.length; i++) {\n\t    newArray[i + offset] = b[i];\n\t  }\n\t\n\t  return newArray;\n\t}\n\t\n\tfunction noop() {}\n\t\n\texports.$override = $override;\n\texports.clone = clone;\n\texports.merge = merge;\n\texports.mergeAll = mergeAll;\n\texports.extend = extend;\n\texports.defaults = defaults;\n\texports.createCanvas = createCanvas;\n\texports.getContext = getContext;\n\texports.indexOf = indexOf;\n\texports.inherits = inherits;\n\texports.mixin = mixin;\n\texports.isArrayLike = isArrayLike;\n\texports.each = each;\n\texports.map = map;\n\texports.reduce = reduce;\n\texports.filter = filter;\n\texports.find = find;\n\texports.bind = bind;\n\texports.curry = curry;\n\texports.isArray = isArray;\n\texports.isFunction = isFunction;\n\texports.isString = isString;\n\texports.isObject = isObject;\n\texports.isBuiltInObject = isBuiltInObject;\n\texports.isTypedArray = isTypedArray;\n\texports.isDom = isDom;\n\texports.eqNaN = eqNaN;\n\texports.retrieve = retrieve;\n\texports.retrieve2 = retrieve2;\n\texports.retrieve3 = retrieve3;\n\texports.slice = slice;\n\texports.normalizeCssArray = normalizeCssArray;\n\texports.assert = assert;\n\texports.trim = trim;\n\texports.setAsPrimitive = setAsPrimitive;\n\texports.isPrimitive = isPrimitive;\n\texports.createHashMap = createHashMap;\n\texports.concatArray = concatArray;\n\texports.noop = noop;\n\n/***/ }),\n\n/***/ 10:\n/***/ (function(module, exports) {\n\n\tvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n\t/**\n\t * 创建一个向量\n\t * @param {number} [x=0]\n\t * @param {number} [y=0]\n\t * @return {Vector2}\n\t */\n\t\n\tfunction create(x, y) {\n\t  var out = new ArrayCtor(2);\n\t\n\t  if (x == null) {\n\t    x = 0;\n\t  }\n\t\n\t  if (y == null) {\n\t    y = 0;\n\t  }\n\t\n\t  out[0] = x;\n\t  out[1] = y;\n\t  return out;\n\t}\n\t/**\n\t * 复制向量数据\n\t * @param {Vector2} out\n\t * @param {Vector2} v\n\t * @return {Vector2}\n\t */\n\t\n\t\n\tfunction copy(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = v[1];\n\t  return out;\n\t}\n\t/**\n\t * 克隆一个向量\n\t * @param {Vector2} v\n\t * @return {Vector2}\n\t */\n\t\n\t\n\tfunction clone(v) {\n\t  var out = new ArrayCtor(2);\n\t  out[0] = v[0];\n\t  out[1] = v[1];\n\t  return out;\n\t}\n\t/**\n\t * 设置向量的两个项\n\t * @param {Vector2} out\n\t * @param {number} a\n\t * @param {number} b\n\t * @return {Vector2} 结果\n\t */\n\t\n\t\n\tfunction set(out, a, b) {\n\t  out[0] = a;\n\t  out[1] = b;\n\t  return out;\n\t}\n\t/**\n\t * 向量相加\n\t * @param {Vector2} out\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t */\n\t\n\t\n\tfunction add(out, v1, v2) {\n\t  out[0] = v1[0] + v2[0];\n\t  out[1] = v1[1] + v2[1];\n\t  return out;\n\t}\n\t/**\n\t * 向量缩放后相加\n\t * @param {Vector2} out\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t * @param {number} a\n\t */\n\t\n\t\n\tfunction scaleAndAdd(out, v1, v2, a) {\n\t  out[0] = v1[0] + v2[0] * a;\n\t  out[1] = v1[1] + v2[1] * a;\n\t  return out;\n\t}\n\t/**\n\t * 向量相减\n\t * @param {Vector2} out\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t */\n\t\n\t\n\tfunction sub(out, v1, v2) {\n\t  out[0] = v1[0] - v2[0];\n\t  out[1] = v1[1] - v2[1];\n\t  return out;\n\t}\n\t/**\n\t * 向量长度\n\t * @param {Vector2} v\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction len(v) {\n\t  return Math.sqrt(lenSquare(v));\n\t}\n\t\n\tvar length = len; // jshint ignore:line\n\t\n\t/**\n\t * 向量长度平方\n\t * @param {Vector2} v\n\t * @return {number}\n\t */\n\t\n\tfunction lenSquare(v) {\n\t  return v[0] * v[0] + v[1] * v[1];\n\t}\n\t\n\tvar lengthSquare = lenSquare;\n\t/**\n\t * 向量乘法\n\t * @param {Vector2} out\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t */\n\t\n\tfunction mul(out, v1, v2) {\n\t  out[0] = v1[0] * v2[0];\n\t  out[1] = v1[1] * v2[1];\n\t  return out;\n\t}\n\t/**\n\t * 向量除法\n\t * @param {Vector2} out\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t */\n\t\n\t\n\tfunction div(out, v1, v2) {\n\t  out[0] = v1[0] / v2[0];\n\t  out[1] = v1[1] / v2[1];\n\t  return out;\n\t}\n\t/**\n\t * 向量点乘\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction dot(v1, v2) {\n\t  return v1[0] * v2[0] + v1[1] * v2[1];\n\t}\n\t/**\n\t * 向量缩放\n\t * @param {Vector2} out\n\t * @param {Vector2} v\n\t * @param {number} s\n\t */\n\t\n\t\n\tfunction scale(out, v, s) {\n\t  out[0] = v[0] * s;\n\t  out[1] = v[1] * s;\n\t  return out;\n\t}\n\t/**\n\t * 向量归一化\n\t * @param {Vector2} out\n\t * @param {Vector2} v\n\t */\n\t\n\t\n\tfunction normalize(out, v) {\n\t  var d = len(v);\n\t\n\t  if (d === 0) {\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t  } else {\n\t    out[0] = v[0] / d;\n\t    out[1] = v[1] / d;\n\t  }\n\t\n\t  return out;\n\t}\n\t/**\n\t * 计算向量间距离\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t * @return {number}\n\t */\n\t\n\t\n\tfunction distance(v1, v2) {\n\t  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n\t}\n\t\n\tvar dist = distance;\n\t/**\n\t * 向量距离平方\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t * @return {number}\n\t */\n\t\n\tfunction distanceSquare(v1, v2) {\n\t  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n\t}\n\t\n\tvar distSquare = distanceSquare;\n\t/**\n\t * 求负向量\n\t * @param {Vector2} out\n\t * @param {Vector2} v\n\t */\n\t\n\tfunction negate(out, v) {\n\t  out[0] = -v[0];\n\t  out[1] = -v[1];\n\t  return out;\n\t}\n\t/**\n\t * 插值两个点\n\t * @param {Vector2} out\n\t * @param {Vector2} v1\n\t * @param {Vector2} v2\n\t * @param {number} t\n\t */\n\t\n\t\n\tfunction lerp(out, v1, v2, t) {\n\t  out[0] = v1[0] + t * (v2[0] - v1[0]);\n\t  out[1] = v1[1] + t * (v2[1] - v1[1]);\n\t  return out;\n\t}\n\t/**\n\t * 矩阵左乘向量\n\t * @param {Vector2} out\n\t * @param {Vector2} v\n\t * @param {Vector2} m\n\t */\n\t\n\t\n\tfunction applyTransform(out, v, m) {\n\t  var x = v[0];\n\t  var y = v[1];\n\t  out[0] = m[0] * x + m[2] * y + m[4];\n\t  out[1] = m[1] * x + m[3] * y + m[5];\n\t  return out;\n\t}\n\t/**\n\t * 求两个向量最小值\n\t * @param  {Vector2} out\n\t * @param  {Vector2} v1\n\t * @param  {Vector2} v2\n\t */\n\t\n\t\n\tfunction min(out, v1, v2) {\n\t  out[0] = Math.min(v1[0], v2[0]);\n\t  out[1] = Math.min(v1[1], v2[1]);\n\t  return out;\n\t}\n\t/**\n\t * 求两个向量最大值\n\t * @param  {Vector2} out\n\t * @param  {Vector2} v1\n\t * @param  {Vector2} v2\n\t */\n\t\n\t\n\tfunction max(out, v1, v2) {\n\t  out[0] = Math.max(v1[0], v2[0]);\n\t  out[1] = Math.max(v1[1], v2[1]);\n\t  return out;\n\t}\n\t\n\texports.create = create;\n\texports.copy = copy;\n\texports.clone = clone;\n\texports.set = set;\n\texports.add = add;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.sub = sub;\n\texports.len = len;\n\texports.length = length;\n\texports.lenSquare = lenSquare;\n\texports.lengthSquare = lengthSquare;\n\texports.mul = mul;\n\texports.div = div;\n\texports.dot = dot;\n\texports.scale = scale;\n\texports.normalize = normalize;\n\texports.distance = distance;\n\texports.dist = dist;\n\texports.distanceSquare = distanceSquare;\n\texports.distSquare = distSquare;\n\texports.negate = negate;\n\texports.lerp = lerp;\n\texports.applyTransform = applyTransform;\n\texports.min = min;\n\texports.max = max;\n\n/***/ }),\n\n/***/ 1500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _event = __webpack_require__(114);\n\t\n\tvar addEventListener = _event.addEventListener;\n\tvar removeEventListener = _event.removeEventListener;\n\tvar normalizeEvent = _event.normalizeEvent;\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Eventful = __webpack_require__(115);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar GestureMgr = __webpack_require__(1499);\n\t\n\tvar TOUCH_CLICK_DELAY = 300;\n\tvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n\tvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\n\tvar pointerEventNames = {\n\t  pointerdown: 1,\n\t  pointerup: 1,\n\t  pointermove: 1,\n\t  pointerout: 1\n\t};\n\tvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n\t  var nm = name.replace('mouse', 'pointer');\n\t  return pointerEventNames[nm] ? nm : name;\n\t});\n\t\n\tfunction eventNameFix(name) {\n\t  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n\t}\n\t\n\tfunction processGesture(proxy, event, stage) {\n\t  var gestureMgr = proxy._gestureMgr;\n\t  stage === 'start' && gestureMgr.clear();\n\t  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n\t  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\t\n\t  if (gestureInfo) {\n\t    var type = gestureInfo.type;\n\t    event.gestureEvent = type;\n\t    proxy.handler.dispatchToElement({\n\t      target: gestureInfo.target\n\t    }, type, gestureInfo.event);\n\t  }\n\t} // function onMSGestureChange(proxy, event) {\n\t//     if (event.translationX || event.translationY) {\n\t//         // mousemove is carried by MSGesture to reduce the sensitivity.\n\t//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n\t//     }\n\t//     if (event.scale !== 1) {\n\t//         event.pinchX = event.offsetX;\n\t//         event.pinchY = event.offsetY;\n\t//         event.pinchScale = event.scale;\n\t//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n\t//     }\n\t// }\n\t\n\t/**\n\t * Prevent mouse event from being dispatched after Touch Events action\n\t * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n\t * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n\t * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n\t * Result: Blocking Mouse Events for 700ms.\n\t */\n\t\n\t\n\tfunction setTouchTimer(instance) {\n\t  instance._touching = true;\n\t  clearTimeout(instance._touchTimer);\n\t  instance._touchTimer = setTimeout(function () {\n\t    instance._touching = false;\n\t  }, 700);\n\t}\n\t\n\tvar domHandlers = {\n\t  /**\n\t   * Mouse move handler\n\t   * @inner\n\t   * @param {Event} event\n\t   */\n\t  mousemove: function (event) {\n\t    event = normalizeEvent(this.dom, event);\n\t    this.trigger('mousemove', event);\n\t  },\n\t\n\t  /**\n\t   * Mouse out handler\n\t   * @inner\n\t   * @param {Event} event\n\t   */\n\t  mouseout: function (event) {\n\t    event = normalizeEvent(this.dom, event);\n\t    var element = event.toElement || event.relatedTarget;\n\t\n\t    if (element != this.dom) {\n\t      while (element && element.nodeType != 9) {\n\t        // 忽略包含在root中的dom引起的mouseOut\n\t        if (element === this.dom) {\n\t          return;\n\t        }\n\t\n\t        element = element.parentNode;\n\t      }\n\t    }\n\t\n\t    this.trigger('mouseout', event);\n\t  },\n\t\n\t  /**\n\t   * Touch开始响应函数\n\t   * @inner\n\t   * @param {Event} event\n\t   */\n\t  touchstart: function (event) {\n\t    // Default mouse behaviour should not be disabled here.\n\t    // For example, page may needs to be slided.\n\t    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n\t    // mouse event in upper applicatoin.\n\t\n\t    event.zrByTouch = true;\n\t    this._lastTouchMoment = new Date();\n\t    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n\t    // be triggered, and must before `mousedown` triggered.\n\t\n\t    domHandlers.mousemove.call(this, event);\n\t    domHandlers.mousedown.call(this, event);\n\t    setTouchTimer(this);\n\t  },\n\t\n\t  /**\n\t   * Touch移动响应函数\n\t   * @inner\n\t   * @param {Event} event\n\t   */\n\t  touchmove: function (event) {\n\t    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n\t    // mouse event in upper applicatoin.\n\t\n\t    event.zrByTouch = true;\n\t    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n\t    // there is gestrue event, because mouse move and pinch may\n\t    // be used at the same time.\n\t\n\t    domHandlers.mousemove.call(this, event);\n\t    setTouchTimer(this);\n\t  },\n\t\n\t  /**\n\t   * Touch结束响应函数\n\t   * @inner\n\t   * @param {Event} event\n\t   */\n\t  touchend: function (event) {\n\t    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n\t    // mouse event in upper applicatoin.\n\t\n\t    event.zrByTouch = true;\n\t    processGesture(this, event, 'end');\n\t    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n\t    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n\t    // we can conveniently implement \"hover style\" in both PC and touch device just\n\t    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n\t    // to remove \"hover style\" on an element, without any additional code for\n\t    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n\t    // style\" will remain for user view)\n\t    // click event should always be triggered no matter whether\n\t    // there is gestrue event. System click can not be prevented.\n\t\n\t    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n\t      domHandlers.click.call(this, event);\n\t    }\n\t\n\t    setTouchTimer(this);\n\t  },\n\t  pointerdown: function (event) {\n\t    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n\t    //     this._msGesture.addPointer(event.pointerId);\n\t    // }\n\t  },\n\t  pointermove: function (event) {\n\t    // FIXME\n\t    // pointermove is so sensitive that it always triggered when\n\t    // tap(click) on touch screen, which affect some judgement in\n\t    // upper application. So, we dont support mousemove on MS touch\n\t    // device yet.\n\t    if (!isPointerFromTouch(event)) {\n\t      domHandlers.mousemove.call(this, event);\n\t    }\n\t  },\n\t  pointerup: function (event) {\n\t    domHandlers.mouseup.call(this, event);\n\t  },\n\t  pointerout: function (event) {\n\t    // pointerout will be triggered when tap on touch screen\n\t    // (IE11+/Edge on MS Surface) after click event triggered,\n\t    // which is inconsistent with the mousout behavior we defined\n\t    // in touchend. So we unify them.\n\t    // (check domHandlers.touchend for detailed explanation)\n\t    if (!isPointerFromTouch(event)) {\n\t      domHandlers.mouseout.call(this, event);\n\t    }\n\t  }\n\t};\n\t\n\tfunction isPointerFromTouch(event) {\n\t  var pointerType = event.pointerType;\n\t  return pointerType === 'pen' || pointerType === 'touch';\n\t} // function useMSGuesture(handlerProxy, event) {\n\t//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n\t// }\n\t// Common handlers\n\t\n\t\n\tzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n\t  domHandlers[name] = function (event) {\n\t    event = normalizeEvent(this.dom, event);\n\t    this.trigger(name, event);\n\t  };\n\t});\n\t/**\n\t * 为控制类实例初始化dom 事件处理函数\n\t *\n\t * @inner\n\t * @param {module:zrender/Handler} instance 控制类实例\n\t */\n\t\n\tfunction initDomHandler(instance) {\n\t  zrUtil.each(touchHandlerNames, function (name) {\n\t    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n\t  });\n\t  zrUtil.each(pointerHandlerNames, function (name) {\n\t    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n\t  });\n\t  zrUtil.each(mouseHandlerNames, function (name) {\n\t    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n\t  });\n\t\n\t  function makeMouseHandler(fn, instance) {\n\t    return function () {\n\t      if (instance._touching) {\n\t        return;\n\t      }\n\t\n\t      return fn.apply(instance, arguments);\n\t    };\n\t  }\n\t}\n\t\n\tfunction HandlerDomProxy(dom) {\n\t  Eventful.call(this);\n\t  this.dom = dom;\n\t  /**\n\t   * @private\n\t   * @type {boolean}\n\t   */\n\t\n\t  this._touching = false;\n\t  /**\n\t   * @private\n\t   * @type {number}\n\t   */\n\t\n\t  this._touchTimer;\n\t  /**\n\t   * @private\n\t   * @type {module:zrender/core/GestureMgr}\n\t   */\n\t\n\t  this._gestureMgr = new GestureMgr();\n\t  this._handlers = {};\n\t  initDomHandler(this);\n\t\n\t  if (env.pointerEventsSupported) {\n\t    // Only IE11+/Edge\n\t    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n\t    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n\t    // at the same time.\n\t    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n\t    // screen, which do not occurs in pointer event.\n\t    // So we use pointer event to both detect touch gesture and mouse behavior.\n\t    mountHandlers(pointerHandlerNames, this); // FIXME\n\t    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n\t    // which does not prevent defuault behavior occasionally (which may cause view port\n\t    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n\t    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n\t    // touch screen. And we only support click behavior on MS touch screen now.\n\t    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n\t    // We dont support touch on IE on win7.\n\t    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n\t    // if (typeof MSGesture === 'function') {\n\t    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n\t    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n\t    // }\n\t  } else {\n\t    if (env.touchEventsSupported) {\n\t      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n\t      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n\t    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n\t    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n\t    // mouse event can not be handle in those devices.\n\t    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n\t    // mouseevent after touch event triggered, see `setTouchTimer`.\n\t\n\t\n\t    mountHandlers(mouseHandlerNames, this);\n\t  }\n\t\n\t  function mountHandlers(handlerNames, instance) {\n\t    zrUtil.each(handlerNames, function (name) {\n\t      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n\t    }, instance);\n\t  }\n\t}\n\t\n\tvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\t\n\thandlerDomProxyProto.dispose = function () {\n\t  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\t\n\t  for (var i = 0; i < handlerNames.length; i++) {\n\t    var name = handlerNames[i];\n\t    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n\t  }\n\t};\n\t\n\thandlerDomProxyProto.setCursor = function (cursorStyle) {\n\t  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n\t};\n\t\n\tzrUtil.mixin(HandlerDomProxy, Eventful);\n\tvar _default = HandlerDomProxy;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1501:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\t// CompoundPath to improve performance\n\tvar _default = Path.extend({\n\t  type: 'compound',\n\t  shape: {\n\t    paths: null\n\t  },\n\t  _updatePathDirty: function () {\n\t    var dirtyPath = this.__dirtyPath;\n\t    var paths = this.shape.paths;\n\t\n\t    for (var i = 0; i < paths.length; i++) {\n\t      // Mark as dirty if any subpath is dirty\n\t      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n\t    }\n\t\n\t    this.__dirtyPath = dirtyPath;\n\t    this.__dirty = this.__dirty || dirtyPath;\n\t  },\n\t  beforeBrush: function () {\n\t    this._updatePathDirty();\n\t\n\t    var paths = this.shape.paths || [];\n\t    var scale = this.getGlobalScale(); // Update path scale\n\t\n\t    for (var i = 0; i < paths.length; i++) {\n\t      if (!paths[i].path) {\n\t        paths[i].createPathProxy();\n\t      }\n\t\n\t      paths[i].path.setScale(scale[0], scale[1]);\n\t    }\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var paths = shape.paths || [];\n\t\n\t    for (var i = 0; i < paths.length; i++) {\n\t      paths[i].buildPath(ctx, paths[i].shape, true);\n\t    }\n\t  },\n\t  afterBrush: function () {\n\t    var paths = this.shape.paths || [];\n\t\n\t    for (var i = 0; i < paths.length; i++) {\n\t      paths[i].__dirtyPath = false;\n\t    }\n\t  },\n\t  getBoundingRect: function () {\n\t    this._updatePathDirty();\n\t\n\t    return Path.prototype.getBoundingRect.call(this);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 233:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Style = __webpack_require__(568);\n\t\n\tvar Element = __webpack_require__(558);\n\t\n\tvar RectText = __webpack_require__(1509);\n\t\n\t/**\n\t * 可绘制的图形基类\n\t * Base class of all displayable graphic objects\n\t * @module zrender/graphic/Displayable\n\t */\n\t\n\t/**\n\t * @alias module:zrender/graphic/Displayable\n\t * @extends module:zrender/Element\n\t * @extends module:zrender/graphic/mixin/RectText\n\t */\n\tfunction Displayable(opts) {\n\t  opts = opts || {};\n\t  Element.call(this, opts); // Extend properties\n\t\n\t  for (var name in opts) {\n\t    if (opts.hasOwnProperty(name) && name !== 'style') {\n\t      this[name] = opts[name];\n\t    }\n\t  }\n\t  /**\n\t   * @type {module:zrender/graphic/Style}\n\t   */\n\t\n\t\n\t  this.style = new Style(opts.style, this);\n\t  this._rect = null; // Shapes for cascade clipping.\n\t\n\t  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n\t  // Stateful.call(this, opts);\n\t}\n\t\n\tDisplayable.prototype = {\n\t  constructor: Displayable,\n\t  type: 'displayable',\n\t\n\t  /**\n\t   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n\t   * Dirty flag. From which painter will determine if this displayable object needs brush\n\t   * @name module:zrender/graphic/Displayable#__dirty\n\t   * @type {boolean}\n\t   */\n\t  __dirty: true,\n\t\n\t  /**\n\t   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n\t   * If ignore drawing of the displayable object. Mouse event will still be triggered\n\t   * @name module:/zrender/graphic/Displayable#invisible\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  invisible: false,\n\t\n\t  /**\n\t   * @name module:/zrender/graphic/Displayable#z\n\t   * @type {number}\n\t   * @default 0\n\t   */\n\t  z: 0,\n\t\n\t  /**\n\t   * @name module:/zrender/graphic/Displayable#z\n\t   * @type {number}\n\t   * @default 0\n\t   */\n\t  z2: 0,\n\t\n\t  /**\n\t   * z层level，决定绘画在哪层canvas中\n\t   * @name module:/zrender/graphic/Displayable#zlevel\n\t   * @type {number}\n\t   * @default 0\n\t   */\n\t  zlevel: 0,\n\t\n\t  /**\n\t   * 是否可拖拽\n\t   * @name module:/zrender/graphic/Displayable#draggable\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  draggable: false,\n\t\n\t  /**\n\t   * 是否正在拖拽\n\t   * @name module:/zrender/graphic/Displayable#draggable\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  dragging: false,\n\t\n\t  /**\n\t   * 是否相应鼠标事件\n\t   * @name module:/zrender/graphic/Displayable#silent\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  silent: false,\n\t\n\t  /**\n\t   * If enable culling\n\t   * @type {boolean}\n\t   * @default false\n\t   */\n\t  culling: false,\n\t\n\t  /**\n\t   * Mouse cursor when hovered\n\t   * @name module:/zrender/graphic/Displayable#cursor\n\t   * @type {string}\n\t   */\n\t  cursor: 'pointer',\n\t\n\t  /**\n\t   * If hover area is bounding rect\n\t   * @name module:/zrender/graphic/Displayable#rectHover\n\t   * @type {string}\n\t   */\n\t  rectHover: false,\n\t\n\t  /**\n\t   * Render the element progressively when the value >= 0,\n\t   * usefull for large data.\n\t   * @type {boolean}\n\t   */\n\t  progressive: false,\n\t\n\t  /**\n\t   * @type {boolean}\n\t   */\n\t  incremental: false,\n\t  // inplace is used with incremental\n\t  inplace: false,\n\t  beforeBrush: function (ctx) {},\n\t  afterBrush: function (ctx) {},\n\t\n\t  /**\n\t   * 图形绘制方法\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   */\n\t  // Interface\n\t  brush: function (ctx, prevEl) {},\n\t\n\t  /**\n\t   * 获取最小包围盒\n\t   * @return {module:zrender/core/BoundingRect}\n\t   */\n\t  // Interface\n\t  getBoundingRect: function () {},\n\t\n\t  /**\n\t   * 判断坐标 x, y 是否在图形上\n\t   * If displayable element contain coord x, y\n\t   * @param  {number} x\n\t   * @param  {number} y\n\t   * @return {boolean}\n\t   */\n\t  contain: function (x, y) {\n\t    return this.rectContain(x, y);\n\t  },\n\t\n\t  /**\n\t   * @param  {Function} cb\n\t   * @param  {}   context\n\t   */\n\t  traverse: function (cb, context) {\n\t    cb.call(context, this);\n\t  },\n\t\n\t  /**\n\t   * 判断坐标 x, y 是否在图形的包围盒上\n\t   * If bounding rect of element contain coord x, y\n\t   * @param  {number} x\n\t   * @param  {number} y\n\t   * @return {boolean}\n\t   */\n\t  rectContain: function (x, y) {\n\t    var coord = this.transformCoordToLocal(x, y);\n\t    var rect = this.getBoundingRect();\n\t    return rect.contain(coord[0], coord[1]);\n\t  },\n\t\n\t  /**\n\t   * 标记图形元素为脏，并且在下一帧重绘\n\t   * Mark displayable element dirty and refresh next frame\n\t   */\n\t  dirty: function () {\n\t    this.__dirty = true;\n\t    this._rect = null;\n\t    this.__zr && this.__zr.refresh();\n\t  },\n\t\n\t  /**\n\t   * 图形是否会触发事件\n\t   * If displayable object binded any event\n\t   * @return {boolean}\n\t   */\n\t  // TODO, 通过 bind 绑定的事件\n\t  // isSilent: function () {\n\t  //     return !(\n\t  //         this.hoverable || this.draggable\n\t  //         || this.onmousemove || this.onmouseover || this.onmouseout\n\t  //         || this.onmousedown || this.onmouseup || this.onclick\n\t  //         || this.ondragenter || this.ondragover || this.ondragleave\n\t  //         || this.ondrop\n\t  //     );\n\t  // },\n\t\n\t  /**\n\t   * Alias for animate('style')\n\t   * @param {boolean} loop\n\t   */\n\t  animateStyle: function (loop) {\n\t    return this.animate('style', loop);\n\t  },\n\t  attrKV: function (key, value) {\n\t    if (key !== 'style') {\n\t      Element.prototype.attrKV.call(this, key, value);\n\t    } else {\n\t      this.style.set(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Object|string} key\n\t   * @param {*} value\n\t   */\n\t  setStyle: function (key, value) {\n\t    this.style.set(key, value);\n\t    this.dirty(false);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Use given style object\n\t   * @param  {Object} obj\n\t   */\n\t  useStyle: function (obj) {\n\t    this.style = new Style(obj, this);\n\t    this.dirty(false);\n\t    return this;\n\t  }\n\t};\n\tzrUtil.inherits(Displayable, Element);\n\tzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\t\n\tvar _default = Displayable;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 360:\n/***/ (function(module, exports) {\n\n\t/**\n\t * @param {Array.<Object>} colorStops\n\t */\n\tvar Gradient = function (colorStops) {\n\t  this.colorStops = colorStops || [];\n\t};\n\t\n\tGradient.prototype = {\n\t  constructor: Gradient,\n\t  addColorStop: function (offset, color) {\n\t    this.colorStops.push({\n\t      offset: offset,\n\t      color: color\n\t    });\n\t  }\n\t};\n\tvar _default = Gradient;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 566:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Displayable = __webpack_require__(233);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar imageHelper = __webpack_require__(361);\n\t\n\t/**\n\t * @alias zrender/graphic/Image\n\t * @extends module:zrender/graphic/Displayable\n\t * @constructor\n\t * @param {Object} opts\n\t */\n\tfunction ZImage(opts) {\n\t  Displayable.call(this, opts);\n\t}\n\t\n\tZImage.prototype = {\n\t  constructor: ZImage,\n\t  type: 'image',\n\t  brush: function (ctx, prevEl) {\n\t    var style = this.style;\n\t    var src = style.image; // Must bind each time\n\t\n\t    style.bind(ctx, this, prevEl);\n\t    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\t\n\t    if (!image || !imageHelper.isImageReady(image)) {\n\t      return;\n\t    } // 图片已经加载完成\n\t    // if (image.nodeName.toUpperCase() == 'IMG') {\n\t    //     if (!image.complete) {\n\t    //         return;\n\t    //     }\n\t    // }\n\t    // Else is canvas\n\t\n\t\n\t    var x = style.x || 0;\n\t    var y = style.y || 0;\n\t    var width = style.width;\n\t    var height = style.height;\n\t    var aspect = image.width / image.height;\n\t\n\t    if (width == null && height != null) {\n\t      // Keep image/height ratio\n\t      width = height * aspect;\n\t    } else if (height == null && width != null) {\n\t      height = width / aspect;\n\t    } else if (width == null && height == null) {\n\t      width = image.width;\n\t      height = image.height;\n\t    } // 设置transform\n\t\n\t\n\t    this.setTransform(ctx);\n\t\n\t    if (style.sWidth && style.sHeight) {\n\t      var sx = style.sx || 0;\n\t      var sy = style.sy || 0;\n\t      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n\t    } else if (style.sx && style.sy) {\n\t      var sx = style.sx;\n\t      var sy = style.sy;\n\t      var sWidth = width - sx;\n\t      var sHeight = height - sy;\n\t      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n\t    } else {\n\t      ctx.drawImage(image, x, y, width, height);\n\t    } // Draw rect text\n\t\n\t\n\t    if (style.text != null) {\n\t      // Only restore transform when needs draw text.\n\t      this.restoreTransform(ctx);\n\t      this.drawRectText(ctx, this.getBoundingRect());\n\t    }\n\t  },\n\t  getBoundingRect: function () {\n\t    var style = this.style;\n\t\n\t    if (!this._rect) {\n\t      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n\t    }\n\t\n\t    return this._rect;\n\t  }\n\t};\n\tzrUtil.inherits(ZImage, Displayable);\n\tvar _default = ZImage;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar inherits = _util.inherits;\n\t\n\tvar Displayble = __webpack_require__(233);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\t/**\n\t * Displayable for incremental rendering. It will be rendered in a separate layer\n\t * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n\t * addDisplayables will render the added displayables incremetally.\n\t *\n\t * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n\t */\n\t// TODO Style override ?\n\tfunction IncrementalDisplayble(opts) {\n\t  Displayble.call(this, opts);\n\t  this._displayables = [];\n\t  this._temporaryDisplayables = [];\n\t  this._cursor = 0;\n\t  this.notClear = true;\n\t}\n\t\n\tIncrementalDisplayble.prototype.incremental = true;\n\t\n\tIncrementalDisplayble.prototype.clearDisplaybles = function () {\n\t  this._displayables = [];\n\t  this._temporaryDisplayables = [];\n\t  this._cursor = 0;\n\t  this.dirty();\n\t  this.notClear = false;\n\t};\n\t\n\tIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n\t  if (notPersistent) {\n\t    this._temporaryDisplayables.push(displayable);\n\t  } else {\n\t    this._displayables.push(displayable);\n\t  }\n\t\n\t  this.dirty();\n\t};\n\t\n\tIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n\t  notPersistent = notPersistent || false;\n\t\n\t  for (var i = 0; i < displayables.length; i++) {\n\t    this.addDisplayable(displayables[i], notPersistent);\n\t  }\n\t};\n\t\n\tIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n\t  for (var i = this._cursor; i < this._displayables.length; i++) {\n\t    cb && cb(this._displayables[i]);\n\t  }\n\t\n\t  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n\t    cb && cb(this._temporaryDisplayables[i]);\n\t  }\n\t};\n\t\n\tIncrementalDisplayble.prototype.update = function () {\n\t  this.updateTransform();\n\t\n\t  for (var i = this._cursor; i < this._displayables.length; i++) {\n\t    var displayable = this._displayables[i]; // PENDING\n\t\n\t    displayable.parent = this;\n\t    displayable.update();\n\t    displayable.parent = null;\n\t  }\n\t\n\t  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n\t    var displayable = this._temporaryDisplayables[i]; // PENDING\n\t\n\t    displayable.parent = this;\n\t    displayable.update();\n\t    displayable.parent = null;\n\t  }\n\t};\n\t\n\tIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n\t  // Render persistant displayables.\n\t  for (var i = this._cursor; i < this._displayables.length; i++) {\n\t    var displayable = this._temporaryDisplayables[i];\n\t    displayable.beforeBrush && displayable.beforeBrush(ctx);\n\t    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n\t    displayable.afterBrush && displayable.afterBrush(ctx);\n\t  }\n\t\n\t  this._cursor = i; // Render temporary displayables.\n\t\n\t  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n\t    var displayable = this._temporaryDisplayables[i];\n\t    displayable.beforeBrush && displayable.beforeBrush(ctx);\n\t    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n\t    displayable.afterBrush && displayable.afterBrush(ctx);\n\t  }\n\t\n\t  this._temporaryDisplayables = [];\n\t  this.notClear = true;\n\t};\n\t\n\tvar m = [];\n\t\n\tIncrementalDisplayble.prototype.getBoundingRect = function () {\n\t  if (!this._rect) {\n\t    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\t\n\t    for (var i = 0; i < this._displayables.length; i++) {\n\t      var displayable = this._displayables[i];\n\t      var childRect = displayable.getBoundingRect().clone();\n\t\n\t      if (displayable.needLocalTransform()) {\n\t        childRect.applyTransform(displayable.getLocalTransform(m));\n\t      }\n\t\n\t      rect.union(childRect);\n\t    }\n\t\n\t    this._rect = rect;\n\t  }\n\t\n\t  return this._rect;\n\t};\n\t\n\tIncrementalDisplayble.prototype.contain = function (x, y) {\n\t  var localPos = this.transformCoordToLocal(x, y);\n\t  var rect = this.getBoundingRect();\n\t\n\t  if (rect.contain(localPos[0], localPos[1])) {\n\t    for (var i = 0; i < this._displayables.length; i++) {\n\t      var displayable = this._displayables[i];\n\t\n\t      if (displayable.contain(x, y)) {\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\tinherits(IncrementalDisplayble, Displayble);\n\tvar _default = IncrementalDisplayble;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Gradient = __webpack_require__(360);\n\t\n\t/**\n\t * x, y, x2, y2 are all percent from 0 to 1\n\t * @param {number} [x=0]\n\t * @param {number} [y=0]\n\t * @param {number} [x2=1]\n\t * @param {number} [y2=0]\n\t * @param {Array.<Object>} colorStops\n\t * @param {boolean} [globalCoord=false]\n\t */\n\tvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n\t  // Should do nothing more in this constructor. Because gradient can be\n\t  // declard by `color: {type: 'linear', colorStops: ...}`, where\n\t  // this constructor will not be called.\n\t  this.x = x == null ? 0 : x;\n\t  this.y = y == null ? 0 : y;\n\t  this.x2 = x2 == null ? 1 : x2;\n\t  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\t\n\t  this.type = 'linear'; // If use global coord\n\t\n\t  this.global = globalCoord || false;\n\t  Gradient.call(this, colorStops);\n\t};\n\t\n\tLinearGradient.prototype = {\n\t  constructor: LinearGradient\n\t};\n\tzrUtil.inherits(LinearGradient, Gradient);\n\tvar _default = LinearGradient;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 42:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Displayable = __webpack_require__(233);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar PathProxy = __webpack_require__(232);\n\t\n\tvar pathContain = __webpack_require__(1496);\n\t\n\tvar Pattern = __webpack_require__(567);\n\t\n\tvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\tvar abs = Math.abs;\n\tvar pathProxyForDraw = new PathProxy(true);\n\t/**\n\t * @alias module:zrender/graphic/Path\n\t * @extends module:zrender/graphic/Displayable\n\t * @constructor\n\t * @param {Object} opts\n\t */\n\t\n\tfunction Path(opts) {\n\t  Displayable.call(this, opts);\n\t  /**\n\t   * @type {module:zrender/core/PathProxy}\n\t   * @readOnly\n\t   */\n\t\n\t  this.path = null;\n\t}\n\t\n\tPath.prototype = {\n\t  constructor: Path,\n\t  type: 'path',\n\t  __dirtyPath: true,\n\t  strokeContainThreshold: 5,\n\t  brush: function (ctx, prevEl) {\n\t    var style = this.style;\n\t    var path = this.path || pathProxyForDraw;\n\t    var hasStroke = style.hasStroke();\n\t    var hasFill = style.hasFill();\n\t    var fill = style.fill;\n\t    var stroke = style.stroke;\n\t    var hasFillGradient = hasFill && !!fill.colorStops;\n\t    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n\t    var hasFillPattern = hasFill && !!fill.image;\n\t    var hasStrokePattern = hasStroke && !!stroke.image;\n\t    style.bind(ctx, this, prevEl);\n\t    this.setTransform(ctx);\n\t\n\t    if (this.__dirty) {\n\t      var rect; // Update gradient because bounding rect may changed\n\t\n\t      if (hasFillGradient) {\n\t        rect = rect || this.getBoundingRect();\n\t        this._fillGradient = style.getGradient(ctx, fill, rect);\n\t      }\n\t\n\t      if (hasStrokeGradient) {\n\t        rect = rect || this.getBoundingRect();\n\t        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n\t      }\n\t    } // Use the gradient or pattern\n\t\n\t\n\t    if (hasFillGradient) {\n\t      // PENDING If may have affect the state\n\t      ctx.fillStyle = this._fillGradient;\n\t    } else if (hasFillPattern) {\n\t      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n\t    }\n\t\n\t    if (hasStrokeGradient) {\n\t      ctx.strokeStyle = this._strokeGradient;\n\t    } else if (hasStrokePattern) {\n\t      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n\t    }\n\t\n\t    var lineDash = style.lineDash;\n\t    var lineDashOffset = style.lineDashOffset;\n\t    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\t\n\t    var scale = this.getGlobalScale();\n\t    path.setScale(scale[0], scale[1]); // Proxy context\n\t    // Rebuild path in following 2 cases\n\t    // 1. Path is dirty\n\t    // 2. Path needs javascript implemented lineDash stroking.\n\t    //    In this case, lineDash information will not be saved in PathProxy\n\t\n\t    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n\t      path.beginPath(ctx); // Setting line dash before build path\n\t\n\t      if (lineDash && !ctxLineDash) {\n\t        path.setLineDash(lineDash);\n\t        path.setLineDashOffset(lineDashOffset);\n\t      }\n\t\n\t      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\t\n\t      if (this.path) {\n\t        this.__dirtyPath = false;\n\t      }\n\t    } else {\n\t      // Replay path building\n\t      ctx.beginPath();\n\t      this.path.rebuildPath(ctx);\n\t    }\n\t\n\t    hasFill && path.fill(ctx);\n\t\n\t    if (lineDash && ctxLineDash) {\n\t      ctx.setLineDash(lineDash);\n\t      ctx.lineDashOffset = lineDashOffset;\n\t    }\n\t\n\t    hasStroke && path.stroke(ctx);\n\t\n\t    if (lineDash && ctxLineDash) {\n\t      // PENDING\n\t      // Remove lineDash\n\t      ctx.setLineDash([]);\n\t    } // Draw rect text\n\t\n\t\n\t    if (style.text != null) {\n\t      // Only restore transform when needs draw text.\n\t      this.restoreTransform(ctx);\n\t      this.drawRectText(ctx, this.getBoundingRect());\n\t    }\n\t  },\n\t  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n\t  // Like in circle\n\t  buildPath: function (ctx, shapeCfg, inBundle) {},\n\t  createPathProxy: function () {\n\t    this.path = new PathProxy();\n\t  },\n\t  getBoundingRect: function () {\n\t    var rect = this._rect;\n\t    var style = this.style;\n\t    var needsUpdateRect = !rect;\n\t\n\t    if (needsUpdateRect) {\n\t      var path = this.path;\n\t\n\t      if (!path) {\n\t        // Create path on demand.\n\t        path = this.path = new PathProxy();\n\t      }\n\t\n\t      if (this.__dirtyPath) {\n\t        path.beginPath();\n\t        this.buildPath(path, this.shape, false);\n\t      }\n\t\n\t      rect = path.getBoundingRect();\n\t    }\n\t\n\t    this._rect = rect;\n\t\n\t    if (style.hasStroke()) {\n\t      // Needs update rect with stroke lineWidth when\n\t      // 1. Element changes scale or lineWidth\n\t      // 2. Shape is changed\n\t      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\t\n\t      if (this.__dirty || needsUpdateRect) {\n\t        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\t\n\t        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\t\n\t        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\t\n\t        if (!style.hasFill()) {\n\t          w = Math.max(w, this.strokeContainThreshold || 4);\n\t        } // Consider line width\n\t        // Line scale can't be 0;\n\t\n\t\n\t        if (lineScale > 1e-10) {\n\t          rectWithStroke.width += w / lineScale;\n\t          rectWithStroke.height += w / lineScale;\n\t          rectWithStroke.x -= w / lineScale / 2;\n\t          rectWithStroke.y -= w / lineScale / 2;\n\t        }\n\t      } // Return rect with stroke\n\t\n\t\n\t      return rectWithStroke;\n\t    }\n\t\n\t    return rect;\n\t  },\n\t  contain: function (x, y) {\n\t    var localPos = this.transformCoordToLocal(x, y);\n\t    var rect = this.getBoundingRect();\n\t    var style = this.style;\n\t    x = localPos[0];\n\t    y = localPos[1];\n\t\n\t    if (rect.contain(x, y)) {\n\t      var pathData = this.path.data;\n\t\n\t      if (style.hasStroke()) {\n\t        var lineWidth = style.lineWidth;\n\t        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\t\n\t        if (lineScale > 1e-10) {\n\t          // Only add extra hover lineWidth when there are no fill\n\t          if (!style.hasFill()) {\n\t            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n\t          }\n\t\n\t          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n\t            return true;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (style.hasFill()) {\n\t        return pathContain.contain(pathData, x, y);\n\t      }\n\t    }\n\t\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * @param  {boolean} dirtyPath\n\t   */\n\t  dirty: function (dirtyPath) {\n\t    if (dirtyPath == null) {\n\t      dirtyPath = true;\n\t    } // Only mark dirty, not mark clean\n\t\n\t\n\t    if (dirtyPath) {\n\t      this.__dirtyPath = dirtyPath;\n\t      this._rect = null;\n\t    }\n\t\n\t    this.__dirty = true;\n\t    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\t\n\t    if (this.__clipTarget) {\n\t      this.__clipTarget.dirty();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Alias for animate('shape')\n\t   * @param {boolean} loop\n\t   */\n\t  animateShape: function (loop) {\n\t    return this.animate('shape', loop);\n\t  },\n\t  // Overwrite attrKV\n\t  attrKV: function (key, value) {\n\t    // FIXME\n\t    if (key === 'shape') {\n\t      this.setShape(value);\n\t      this.__dirtyPath = true;\n\t      this._rect = null;\n\t    } else {\n\t      Displayable.prototype.attrKV.call(this, key, value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Object|string} key\n\t   * @param {*} value\n\t   */\n\t  setShape: function (key, value) {\n\t    var shape = this.shape; // Path from string may not have shape\n\t\n\t    if (shape) {\n\t      if (zrUtil.isObject(key)) {\n\t        for (var name in key) {\n\t          if (key.hasOwnProperty(name)) {\n\t            shape[name] = key[name];\n\t          }\n\t        }\n\t      } else {\n\t        shape[key] = value;\n\t      }\n\t\n\t      this.dirty(true);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  getLineScale: function () {\n\t    var m = this.transform; // Get the line scale.\n\t    // Determinant of `m` means how much the area is enlarged by the\n\t    // transformation. So its square root can be used as a scale factor\n\t    // for width.\n\t\n\t    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n\t  }\n\t};\n\t/**\n\t * 扩展一个 Path element, 比如星形，圆等。\n\t * Extend a path element\n\t * @param {Object} props\n\t * @param {string} props.type Path type\n\t * @param {Function} props.init Initialize\n\t * @param {Function} props.buildPath Overwrite buildPath method\n\t * @param {Object} [props.style] Extended default style config\n\t * @param {Object} [props.shape] Extended default shape config\n\t */\n\t\n\tPath.extend = function (defaults) {\n\t  var Sub = function (opts) {\n\t    Path.call(this, opts);\n\t\n\t    if (defaults.style) {\n\t      // Extend default style\n\t      this.style.extendFrom(defaults.style, false);\n\t    } // Extend default shape\n\t\n\t\n\t    var defaultShape = defaults.shape;\n\t\n\t    if (defaultShape) {\n\t      this.shape = this.shape || {};\n\t      var thisShape = this.shape;\n\t\n\t      for (var name in defaultShape) {\n\t        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n\t          thisShape[name] = defaultShape[name];\n\t        }\n\t      }\n\t    }\n\t\n\t    defaults.init && defaults.init.call(this, opts);\n\t  };\n\t\n\t  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\t\n\t  for (var name in defaults) {\n\t    // Extending prototype values and methods\n\t    if (name !== 'style' && name !== 'shape') {\n\t      Sub.prototype[name] = defaults[name];\n\t    }\n\t  }\n\t\n\t  return Sub;\n\t};\n\t\n\tzrUtil.inherits(Path, Displayable);\n\tvar _default = Path;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 567:\n/***/ (function(module, exports) {\n\n\tvar Pattern = function (image, repeat) {\n\t  // Should do nothing more in this constructor. Because gradient can be\n\t  // declard by `color: {image: ...}`, where this constructor will not be called.\n\t  this.image = image;\n\t  this.repeat = repeat; // Can be cloned\n\t\n\t  this.type = 'pattern';\n\t};\n\t\n\tPattern.prototype.getCanvasPattern = function (ctx) {\n\t  return ctx.createPattern(this.image, this.repeat || 'repeat');\n\t};\n\t\n\tvar _default = Pattern;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1504:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Gradient = __webpack_require__(360);\n\t\n\t/**\n\t * x, y, r are all percent from 0 to 1\n\t * @param {number} [x=0.5]\n\t * @param {number} [y=0.5]\n\t * @param {number} [r=0.5]\n\t * @param {Array.<Object>} [colorStops]\n\t * @param {boolean} [globalCoord=false]\n\t */\n\tvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n\t  // Should do nothing more in this constructor. Because gradient can be\n\t  // declard by `color: {type: 'radial', colorStops: ...}`, where\n\t  // this constructor will not be called.\n\t  this.x = x == null ? 0.5 : x;\n\t  this.y = y == null ? 0.5 : y;\n\t  this.r = r == null ? 0.5 : r; // Can be cloned\n\t\n\t  this.type = 'radial'; // If use global coord\n\t\n\t  this.global = globalCoord || false;\n\t  Gradient.call(this, colorStops);\n\t};\n\t\n\tRadialGradient.prototype = {\n\t  constructor: RadialGradient\n\t};\n\tzrUtil.inherits(RadialGradient, Gradient);\n\tvar _default = RadialGradient;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 568:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar fixShadow = __webpack_require__(569);\n\t\n\tvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n\t// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\t\n\tvar Style = function (opts, host) {\n\t  this.extendFrom(opts, false);\n\t  this.host = host;\n\t};\n\t\n\tfunction createLinearGradient(ctx, obj, rect) {\n\t  var x = obj.x == null ? 0 : obj.x;\n\t  var x2 = obj.x2 == null ? 1 : obj.x2;\n\t  var y = obj.y == null ? 0 : obj.y;\n\t  var y2 = obj.y2 == null ? 0 : obj.y2;\n\t\n\t  if (!obj.global) {\n\t    x = x * rect.width + rect.x;\n\t    x2 = x2 * rect.width + rect.x;\n\t    y = y * rect.height + rect.y;\n\t    y2 = y2 * rect.height + rect.y;\n\t  }\n\t\n\t  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\t  return canvasGradient;\n\t}\n\t\n\tfunction createRadialGradient(ctx, obj, rect) {\n\t  var width = rect.width;\n\t  var height = rect.height;\n\t  var min = Math.min(width, height);\n\t  var x = obj.x == null ? 0.5 : obj.x;\n\t  var y = obj.y == null ? 0.5 : obj.y;\n\t  var r = obj.r == null ? 0.5 : obj.r;\n\t\n\t  if (!obj.global) {\n\t    x = x * width + rect.x;\n\t    y = y * height + rect.y;\n\t    r = r * min;\n\t  }\n\t\n\t  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\t  return canvasGradient;\n\t}\n\t\n\tStyle.prototype = {\n\t  constructor: Style,\n\t\n\t  /**\n\t   * @type {module:zrender/graphic/Displayable}\n\t   */\n\t  host: null,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  fill: '#000',\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  stroke: null,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  opacity: 1,\n\t\n\t  /**\n\t   * @type {Array.<number>}\n\t   */\n\t  lineDash: null,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  lineDashOffset: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  shadowBlur: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  shadowOffsetX: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  shadowOffsetY: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  lineWidth: 1,\n\t\n\t  /**\n\t   * If stroke ignore scale\n\t   * @type {Boolean}\n\t   */\n\t  strokeNoScale: false,\n\t  // Bounding rect text configuration\n\t  // Not affected by element transform\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  text: null,\n\t\n\t  /**\n\t   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n\t   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n\t   * So do not visit it directly in upper application (like echarts),\n\t   * but use `contain/text#makeFont` instead.\n\t   * @type {string}\n\t   */\n\t  font: null,\n\t\n\t  /**\n\t   * The same as font. Use font please.\n\t   * @deprecated\n\t   * @type {string}\n\t   */\n\t  textFont: null,\n\t\n\t  /**\n\t   * It helps merging respectively, rather than parsing an entire font string.\n\t   * @type {string}\n\t   */\n\t  fontStyle: null,\n\t\n\t  /**\n\t   * It helps merging respectively, rather than parsing an entire font string.\n\t   * @type {string}\n\t   */\n\t  fontWeight: null,\n\t\n\t  /**\n\t   * It helps merging respectively, rather than parsing an entire font string.\n\t   * Should be 12 but not '12px'.\n\t   * @type {number}\n\t   */\n\t  fontSize: null,\n\t\n\t  /**\n\t   * It helps merging respectively, rather than parsing an entire font string.\n\t   * @type {string}\n\t   */\n\t  fontFamily: null,\n\t\n\t  /**\n\t   * Reserved for special functinality, like 'hr'.\n\t   * @type {string}\n\t   */\n\t  textTag: null,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textFill: '#000',\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textStroke: null,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textWidth: null,\n\t\n\t  /**\n\t   * Only for textBackground.\n\t   * @type {number}\n\t   */\n\t  textHeight: null,\n\t\n\t  /**\n\t   * textStroke may be set as some color as a default\n\t   * value in upper applicaion, where the default value\n\t   * of textStrokeWidth should be 0 to make sure that\n\t   * user can choose to do not use text stroke.\n\t   * @type {number}\n\t   */\n\t  textStrokeWidth: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textLineHeight: null,\n\t\n\t  /**\n\t   * 'inside', 'left', 'right', 'top', 'bottom'\n\t   * [x, y]\n\t   * Based on x, y of rect.\n\t   * @type {string|Array.<number>}\n\t   * @default 'inside'\n\t   */\n\t  textPosition: 'inside',\n\t\n\t  /**\n\t   * If not specified, use the boundingRect of a `displayable`.\n\t   * @type {Object}\n\t   */\n\t  textRect: null,\n\t\n\t  /**\n\t   * [x, y]\n\t   * @type {Array.<number>}\n\t   */\n\t  textOffset: null,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textAlign: null,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textVerticalAlign: null,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textDistance: 5,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textShadowColor: 'transparent',\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textShadowBlur: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textShadowOffsetX: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textShadowOffsetY: 0,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textBoxShadowColor: 'transparent',\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textBoxShadowBlur: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textBoxShadowOffsetX: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textBoxShadowOffsetY: 0,\n\t\n\t  /**\n\t   * Whether transform text.\n\t   * Only useful in Path and Image element\n\t   * @type {boolean}\n\t   */\n\t  transformText: false,\n\t\n\t  /**\n\t   * Text rotate around position of Path or Image\n\t   * Only useful in Path and Image element and transformText is false.\n\t   */\n\t  textRotation: 0,\n\t\n\t  /**\n\t   * Text origin of text rotation, like [10, 40].\n\t   * Based on x, y of rect.\n\t   * Useful in label rotation of circular symbol.\n\t   * By default, this origin is textPosition.\n\t   * Can be 'center'.\n\t   * @type {string|Array.<number>}\n\t   */\n\t  textOrigin: null,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textBackgroundColor: null,\n\t\n\t  /**\n\t   * @type {string}\n\t   */\n\t  textBorderColor: null,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textBorderWidth: 0,\n\t\n\t  /**\n\t   * @type {number}\n\t   */\n\t  textBorderRadius: 0,\n\t\n\t  /**\n\t   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n\t   * @type {number|Array.<number>}\n\t   */\n\t  textPadding: null,\n\t\n\t  /**\n\t   * Text styles for rich text.\n\t   * @type {Object}\n\t   */\n\t  rich: null,\n\t\n\t  /**\n\t   * {outerWidth, outerHeight, ellipsis, placeholder}\n\t   * @type {Object}\n\t   */\n\t  truncate: null,\n\t\n\t  /**\n\t   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n\t   * @type {string}\n\t   */\n\t  blend: null,\n\t\n\t  /**\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   */\n\t  bind: function (ctx, el, prevEl) {\n\t    var style = this;\n\t    var prevStyle = prevEl && prevEl.style;\n\t    var firstDraw = !prevStyle;\n\t\n\t    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n\t      var prop = STYLE_COMMON_PROPS[i];\n\t      var styleName = prop[0];\n\t\n\t      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n\t        // FIXME Invalid property value will cause style leak from previous element.\n\t        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n\t      }\n\t    }\n\t\n\t    if (firstDraw || style.fill !== prevStyle.fill) {\n\t      ctx.fillStyle = style.fill;\n\t    }\n\t\n\t    if (firstDraw || style.stroke !== prevStyle.stroke) {\n\t      ctx.strokeStyle = style.stroke;\n\t    }\n\t\n\t    if (firstDraw || style.opacity !== prevStyle.opacity) {\n\t      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n\t    }\n\t\n\t    if (firstDraw || style.blend !== prevStyle.blend) {\n\t      ctx.globalCompositeOperation = style.blend || 'source-over';\n\t    }\n\t\n\t    if (this.hasStroke()) {\n\t      var lineWidth = style.lineWidth;\n\t      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n\t    }\n\t  },\n\t  hasFill: function () {\n\t    var fill = this.fill;\n\t    return fill != null && fill !== 'none';\n\t  },\n\t  hasStroke: function () {\n\t    var stroke = this.stroke;\n\t    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n\t  },\n\t\n\t  /**\n\t   * Extend from other style\n\t   * @param {zrender/graphic/Style} otherStyle\n\t   * @param {boolean} overwrite true: overwrirte any way.\n\t   *                            false: overwrite only when !target.hasOwnProperty\n\t   *                            others: overwrite when property is not null/undefined.\n\t   */\n\t  extendFrom: function (otherStyle, overwrite) {\n\t    if (otherStyle) {\n\t      for (var name in otherStyle) {\n\t        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n\t          this[name] = otherStyle[name];\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Batch setting style with a given object\n\t   * @param {Object|string} obj\n\t   * @param {*} [obj]\n\t   */\n\t  set: function (obj, value) {\n\t    if (typeof obj === 'string') {\n\t      this[obj] = value;\n\t    } else {\n\t      this.extendFrom(obj, true);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Clone\n\t   * @return {zrender/graphic/Style} [description]\n\t   */\n\t  clone: function () {\n\t    var newStyle = new this.constructor();\n\t    newStyle.extendFrom(this, true);\n\t    return newStyle;\n\t  },\n\t  getGradient: function (ctx, obj, rect) {\n\t    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n\t    var canvasGradient = method(ctx, obj, rect);\n\t    var colorStops = obj.colorStops;\n\t\n\t    for (var i = 0; i < colorStops.length; i++) {\n\t      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n\t    }\n\t\n\t    return canvasGradient;\n\t  }\n\t};\n\tvar styleProto = Style.prototype;\n\t\n\tfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n\t  var prop = STYLE_COMMON_PROPS[i];\n\t\n\t  if (!(prop[0] in styleProto)) {\n\t    styleProto[prop[0]] = prop[1];\n\t  }\n\t} // Provide for others\n\t\n\t\n\tStyle.getGradient = styleProto.getGradient;\n\tvar _default = Style;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1505:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Displayable = __webpack_require__(233);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar textContain = __webpack_require__(113);\n\t\n\tvar textHelper = __webpack_require__(572);\n\t\n\t/**\n\t * @alias zrender/graphic/Text\n\t * @extends module:zrender/graphic/Displayable\n\t * @constructor\n\t * @param {Object} opts\n\t */\n\tvar Text = function (opts) {\n\t  // jshint ignore:line\n\t  Displayable.call(this, opts);\n\t};\n\t\n\tText.prototype = {\n\t  constructor: Text,\n\t  type: 'text',\n\t  brush: function (ctx, prevEl) {\n\t    var style = this.style; // Optimize, avoid normalize every time.\n\t\n\t    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\t\n\t    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n\t    var text = style.text; // Convert to string\n\t\n\t    text != null && (text += ''); // Always bind style\n\t\n\t    style.bind(ctx, this, prevEl);\n\t\n\t    if (!textHelper.needDrawText(text, style)) {\n\t      return;\n\t    }\n\t\n\t    this.setTransform(ctx);\n\t    textHelper.renderText(this, ctx, text, style);\n\t    this.restoreTransform(ctx);\n\t  },\n\t  getBoundingRect: function () {\n\t    var style = this.style; // Optimize, avoid normalize every time.\n\t\n\t    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\t\n\t    if (!this._rect) {\n\t      var text = style.text;\n\t      text != null ? text += '' : text = '';\n\t      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n\t      rect.x += style.x || 0;\n\t      rect.y += style.y || 0;\n\t\n\t      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n\t        var w = style.textStrokeWidth;\n\t        rect.x -= w / 2;\n\t        rect.y -= w / 2;\n\t        rect.width += w;\n\t        rect.height += w;\n\t      }\n\t\n\t      this._rect = rect;\n\t    }\n\t\n\t    return this._rect;\n\t  }\n\t};\n\tzrUtil.inherits(Text, Displayable);\n\tvar _default = Text;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1506:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar env = __webpack_require__(35);\n\t\n\t// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n\t// where exception \"unexpected call to method or property access\"\n\t// might be thrown when calling ctx.fill or ctx.stroke after a path\n\t// whose area size is zero is drawn and ctx.clip() is called and\n\t// shadowBlur is set. See #4572, #3112, #5777.\n\t// (e.g.,\n\t//  ctx.moveTo(10, 10);\n\t//  ctx.lineTo(20, 10);\n\t//  ctx.closePath();\n\t//  ctx.clip();\n\t//  ctx.shadowBlur = 10;\n\t//  ...\n\t//  ctx.fill();\n\t// )\n\tvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\t\n\tfunction _default(orignalBrush) {\n\t  // version string can be: '11.0'\n\t  return env.browser.ie && env.browser.version >= 11 ? function () {\n\t    var clipPaths = this.__clipPaths;\n\t    var style = this.style;\n\t    var modified;\n\t\n\t    if (clipPaths) {\n\t      for (var i = 0; i < clipPaths.length; i++) {\n\t        var clipPath = clipPaths[i];\n\t        var shape = clipPath && clipPath.shape;\n\t        var type = clipPath && clipPath.type;\n\t\n\t        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n\t          for (var j = 0; j < shadowTemp.length; j++) {\n\t            // It is save to put shadowTemp static, because shadowTemp\n\t            // will be all modified each item brush called.\n\t            shadowTemp[j][2] = style[shadowTemp[j][0]];\n\t            style[shadowTemp[j][0]] = shadowTemp[j][1];\n\t          }\n\t\n\t          modified = true;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    orignalBrush.apply(this, arguments);\n\t\n\t    if (modified) {\n\t      for (var j = 0; j < shadowTemp.length; j++) {\n\t        style[shadowTemp[j][0]] = shadowTemp[j][2];\n\t      }\n\t    }\n\t  } : orignalBrush;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 569:\n/***/ (function(module, exports) {\n\n\tvar SHADOW_PROPS = {\n\t  'shadowBlur': 1,\n\t  'shadowOffsetX': 1,\n\t  'shadowOffsetY': 1,\n\t  'textShadowBlur': 1,\n\t  'textShadowOffsetX': 1,\n\t  'textShadowOffsetY': 1,\n\t  'textBoxShadowBlur': 1,\n\t  'textBoxShadowOffsetX': 1,\n\t  'textBoxShadowOffsetY': 1\n\t};\n\t\n\tfunction _default(ctx, propName, value) {\n\t  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n\t    return value *= ctx.dpr;\n\t  }\n\t\n\t  return value;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 361:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar LRU = __webpack_require__(563);\n\t\n\tvar globalImageCache = new LRU(50);\n\t/**\n\t * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n\t * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n\t */\n\t\n\tfunction findExistImage(newImageOrSrc) {\n\t  if (typeof newImageOrSrc === 'string') {\n\t    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\t    return cachedImgObj && cachedImgObj.image;\n\t  } else {\n\t    return newImageOrSrc;\n\t  }\n\t}\n\t/**\n\t * Caution: User should cache loaded images, but not just count on LRU.\n\t * Consider if required images more than LRU size, will dead loop occur?\n\t *\n\t * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n\t * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n\t * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n\t * @param {Function} [cb] params: (image, cbPayload)\n\t * @param {Object} [cbPayload] Payload on cb calling.\n\t * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n\t */\n\t\n\t\n\tfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n\t  if (!newImageOrSrc) {\n\t    return image;\n\t  } else if (typeof newImageOrSrc === 'string') {\n\t    // Image should not be loaded repeatly.\n\t    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n\t      return image;\n\t    } // Only when there is no existent image or existent image src\n\t    // is different, this method is responsible for load.\n\t\n\t\n\t    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\t    var pendingWrap = {\n\t      hostEl: hostEl,\n\t      cb: cb,\n\t      cbPayload: cbPayload\n\t    };\n\t\n\t    if (cachedImgObj) {\n\t      image = cachedImgObj.image;\n\t      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n\t    } else {\n\t      !image && (image = new Image());\n\t      image.onload = imageOnLoad;\n\t      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n\t        image: image,\n\t        pending: [pendingWrap]\n\t      });\n\t      image.src = image.__zrImageSrc = newImageOrSrc;\n\t    }\n\t\n\t    return image;\n\t  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n\t  else {\n\t      return newImageOrSrc;\n\t    }\n\t}\n\t\n\tfunction imageOnLoad() {\n\t  var cachedImgObj = this.__cachedImgObj;\n\t  this.onload = this.__cachedImgObj = null;\n\t\n\t  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n\t    var pendingWrap = cachedImgObj.pending[i];\n\t    var cb = pendingWrap.cb;\n\t    cb && cb(this, pendingWrap.cbPayload);\n\t    pendingWrap.hostEl.dirty();\n\t  }\n\t\n\t  cachedImgObj.pending.length = 0;\n\t}\n\t\n\tfunction isImageReady(image) {\n\t  return image && image.width && image.height;\n\t}\n\t\n\texports.findExistImage = findExistImage;\n\texports.createOrUpdateImage = createOrUpdateImage;\n\texports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 570:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar smoothSpline = __webpack_require__(1508);\n\t\n\tvar smoothBezier = __webpack_require__(1507);\n\t\n\tfunction buildPath(ctx, shape, closePath) {\n\t  var points = shape.points;\n\t  var smooth = shape.smooth;\n\t\n\t  if (points && points.length >= 2) {\n\t    if (smooth && smooth !== 'spline') {\n\t      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n\t      ctx.moveTo(points[0][0], points[0][1]);\n\t      var len = points.length;\n\t\n\t      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n\t        var cp1 = controlPoints[i * 2];\n\t        var cp2 = controlPoints[i * 2 + 1];\n\t        var p = points[(i + 1) % len];\n\t        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n\t      }\n\t    } else {\n\t      if (smooth === 'spline') {\n\t        points = smoothSpline(points, closePath);\n\t      }\n\t\n\t      ctx.moveTo(points[0][0], points[0][1]);\n\t\n\t      for (var i = 1, l = points.length; i < l; i++) {\n\t        ctx.lineTo(points[i][0], points[i][1]);\n\t      }\n\t    }\n\t\n\t    closePath && ctx.closePath();\n\t  }\n\t}\n\t\n\texports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 571:\n/***/ (function(module, exports) {\n\n\tfunction buildPath(ctx, shape) {\n\t  var x = shape.x;\n\t  var y = shape.y;\n\t  var width = shape.width;\n\t  var height = shape.height;\n\t  var r = shape.r;\n\t  var r1;\n\t  var r2;\n\t  var r3;\n\t  var r4; // Convert width and height to positive for better borderRadius\n\t\n\t  if (width < 0) {\n\t    x = x + width;\n\t    width = -width;\n\t  }\n\t\n\t  if (height < 0) {\n\t    y = y + height;\n\t    height = -height;\n\t  }\n\t\n\t  if (typeof r === 'number') {\n\t    r1 = r2 = r3 = r4 = r;\n\t  } else if (r instanceof Array) {\n\t    if (r.length === 1) {\n\t      r1 = r2 = r3 = r4 = r[0];\n\t    } else if (r.length === 2) {\n\t      r1 = r3 = r[0];\n\t      r2 = r4 = r[1];\n\t    } else if (r.length === 3) {\n\t      r1 = r[0];\n\t      r2 = r4 = r[1];\n\t      r3 = r[2];\n\t    } else {\n\t      r1 = r[0];\n\t      r2 = r[1];\n\t      r3 = r[2];\n\t      r4 = r[3];\n\t    }\n\t  } else {\n\t    r1 = r2 = r3 = r4 = 0;\n\t  }\n\t\n\t  var total;\n\t\n\t  if (r1 + r2 > width) {\n\t    total = r1 + r2;\n\t    r1 *= width / total;\n\t    r2 *= width / total;\n\t  }\n\t\n\t  if (r3 + r4 > width) {\n\t    total = r3 + r4;\n\t    r3 *= width / total;\n\t    r4 *= width / total;\n\t  }\n\t\n\t  if (r2 + r3 > height) {\n\t    total = r2 + r3;\n\t    r2 *= height / total;\n\t    r3 *= height / total;\n\t  }\n\t\n\t  if (r1 + r4 > height) {\n\t    total = r1 + r4;\n\t    r1 *= height / total;\n\t    r4 *= height / total;\n\t  }\n\t\n\t  ctx.moveTo(x + r1, y);\n\t  ctx.lineTo(x + width - r2, y);\n\t  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n\t  ctx.lineTo(x + width, y + height - r3);\n\t  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n\t  ctx.lineTo(x + r4, y + height);\n\t  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n\t  ctx.lineTo(x, y + r1);\n\t  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n\t}\n\t\n\texports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1507:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _vector = __webpack_require__(10);\n\t\n\tvar v2Min = _vector.min;\n\tvar v2Max = _vector.max;\n\tvar v2Scale = _vector.scale;\n\tvar v2Distance = _vector.distance;\n\tvar v2Add = _vector.add;\n\tvar v2Clone = _vector.clone;\n\tvar v2Sub = _vector.sub;\n\t\n\t/**\n\t * 贝塞尔平滑曲线\n\t * @module zrender/shape/util/smoothBezier\n\t * @author pissang (https://www.github.com/pissang)\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t */\n\t\n\t/**\n\t * 贝塞尔平滑曲线\n\t * @alias module:zrender/shape/util/smoothBezier\n\t * @param {Array} points 线段顶点数组\n\t * @param {number} smooth 平滑等级, 0-1\n\t * @param {boolean} isLoop\n\t * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n\t *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n\t *                           整个折线的包围盒做一个并集用来约束控制点。\n\t * @param {Array} 计算出来的控制点数组\n\t */\n\tfunction _default(points, smooth, isLoop, constraint) {\n\t  var cps = [];\n\t  var v = [];\n\t  var v1 = [];\n\t  var v2 = [];\n\t  var prevPoint;\n\t  var nextPoint;\n\t  var min, max;\n\t\n\t  if (constraint) {\n\t    min = [Infinity, Infinity];\n\t    max = [-Infinity, -Infinity];\n\t\n\t    for (var i = 0, len = points.length; i < len; i++) {\n\t      v2Min(min, min, points[i]);\n\t      v2Max(max, max, points[i]);\n\t    } // 与指定的包围盒做并集\n\t\n\t\n\t    v2Min(min, min, constraint[0]);\n\t    v2Max(max, max, constraint[1]);\n\t  }\n\t\n\t  for (var i = 0, len = points.length; i < len; i++) {\n\t    var point = points[i];\n\t\n\t    if (isLoop) {\n\t      prevPoint = points[i ? i - 1 : len - 1];\n\t      nextPoint = points[(i + 1) % len];\n\t    } else {\n\t      if (i === 0 || i === len - 1) {\n\t        cps.push(v2Clone(points[i]));\n\t        continue;\n\t      } else {\n\t        prevPoint = points[i - 1];\n\t        nextPoint = points[i + 1];\n\t      }\n\t    }\n\t\n\t    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\t\n\t    v2Scale(v, v, smooth);\n\t    var d0 = v2Distance(point, prevPoint);\n\t    var d1 = v2Distance(point, nextPoint);\n\t    var sum = d0 + d1;\n\t\n\t    if (sum !== 0) {\n\t      d0 /= sum;\n\t      d1 /= sum;\n\t    }\n\t\n\t    v2Scale(v1, v, -d0);\n\t    v2Scale(v2, v, d1);\n\t    var cp0 = v2Add([], point, v1);\n\t    var cp1 = v2Add([], point, v2);\n\t\n\t    if (constraint) {\n\t      v2Max(cp0, cp0, min);\n\t      v2Min(cp0, cp0, max);\n\t      v2Max(cp1, cp1, min);\n\t      v2Min(cp1, cp1, max);\n\t    }\n\t\n\t    cps.push(cp0);\n\t    cps.push(cp1);\n\t  }\n\t\n\t  if (isLoop) {\n\t    cps.push(cps.shift());\n\t  }\n\t\n\t  return cps;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1508:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _vector = __webpack_require__(10);\n\t\n\tvar v2Distance = _vector.distance;\n\t\n\t/**\n\t * Catmull-Rom spline 插值折线\n\t * @module zrender/shape/util/smoothSpline\n\t * @author pissang (https://www.github.com/pissang)\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         errorrik (errorrik@gmail.com)\n\t */\n\t\n\t/**\n\t * @inner\n\t */\n\tfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n\t  var v0 = (p2 - p0) * 0.5;\n\t  var v1 = (p3 - p1) * 0.5;\n\t  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t}\n\t/**\n\t * @alias module:zrender/shape/util/smoothSpline\n\t * @param {Array} points 线段顶点数组\n\t * @param {boolean} isLoop\n\t * @return {Array}\n\t */\n\t\n\t\n\tfunction _default(points, isLoop) {\n\t  var len = points.length;\n\t  var ret = [];\n\t  var distance = 0;\n\t\n\t  for (var i = 1; i < len; i++) {\n\t    distance += v2Distance(points[i - 1], points[i]);\n\t  }\n\t\n\t  var segs = distance / 2;\n\t  segs = segs < len ? len : segs;\n\t\n\t  for (var i = 0; i < segs; i++) {\n\t    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n\t    var idx = Math.floor(pos);\n\t    var w = pos - idx;\n\t    var p0;\n\t    var p1 = points[idx % len];\n\t    var p2;\n\t    var p3;\n\t\n\t    if (!isLoop) {\n\t      p0 = points[idx === 0 ? idx : idx - 1];\n\t      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n\t      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n\t    } else {\n\t      p0 = points[(idx - 1 + len) % len];\n\t      p2 = points[(idx + 1) % len];\n\t      p3 = points[(idx + 2) % len];\n\t    }\n\t\n\t    var w2 = w * w;\n\t    var w3 = w * w2;\n\t    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 572:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _util = __webpack_require__(3);\n\t\n\tvar retrieve2 = _util.retrieve2;\n\tvar retrieve3 = _util.retrieve3;\n\tvar each = _util.each;\n\tvar normalizeCssArray = _util.normalizeCssArray;\n\tvar isString = _util.isString;\n\tvar isObject = _util.isObject;\n\t\n\tvar textContain = __webpack_require__(113);\n\t\n\tvar roundRectHelper = __webpack_require__(571);\n\t\n\tvar imageHelper = __webpack_require__(361);\n\t\n\tvar fixShadow = __webpack_require__(569);\n\t\n\t// TODO: Have not support 'start', 'end' yet.\n\tvar VALID_TEXT_ALIGN = {\n\t  left: 1,\n\t  right: 1,\n\t  center: 1\n\t};\n\tvar VALID_TEXT_VERTICAL_ALIGN = {\n\t  top: 1,\n\t  bottom: 1,\n\t  middle: 1\n\t};\n\t/**\n\t * @param {module:zrender/graphic/Style} style\n\t * @return {module:zrender/graphic/Style} The input style.\n\t */\n\t\n\tfunction normalizeTextStyle(style) {\n\t  normalizeStyle(style);\n\t  each(style.rich, normalizeStyle);\n\t  return style;\n\t}\n\t\n\tfunction normalizeStyle(style) {\n\t  if (style) {\n\t    style.font = textContain.makeFont(style);\n\t    var textAlign = style.textAlign;\n\t    textAlign === 'middle' && (textAlign = 'center');\n\t    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\t\n\t    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n\t    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n\t    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n\t    var textPadding = style.textPadding;\n\t\n\t    if (textPadding) {\n\t      style.textPadding = normalizeCssArray(style.textPadding);\n\t    }\n\t  }\n\t}\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {string} text\n\t * @param {module:zrender/graphic/Style} style\n\t * @param {Object|boolean} [rect] {x, y, width, height}\n\t *                  If set false, rect text is not used.\n\t */\n\t\n\t\n\tfunction renderText(hostEl, ctx, text, style, rect) {\n\t  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n\t}\n\t\n\tfunction renderPlainText(hostEl, ctx, text, style, rect) {\n\t  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\t  var textPadding = style.textPadding;\n\t  var contentBlock = hostEl.__textCotentBlock;\n\t\n\t  if (!contentBlock || hostEl.__dirty) {\n\t    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n\t  }\n\t\n\t  var outerHeight = contentBlock.outerHeight;\n\t  var textLines = contentBlock.lines;\n\t  var lineHeight = contentBlock.lineHeight;\n\t  var boxPos = getBoxPosition(outerHeight, style, rect);\n\t  var baseX = boxPos.baseX;\n\t  var baseY = boxPos.baseY;\n\t  var textAlign = boxPos.textAlign;\n\t  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\t\n\t  applyTextRotation(ctx, style, rect, baseX, baseY);\n\t  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n\t  var textX = baseX;\n\t  var textY = boxY;\n\t  var needDrawBg = needDrawBackground(style);\n\t\n\t  if (needDrawBg || textPadding) {\n\t    // Consider performance, do not call getTextWidth util necessary.\n\t    var textWidth = textContain.getWidth(text, font);\n\t    var outerWidth = textWidth;\n\t    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n\t    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\t    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\t\n\t    if (textPadding) {\n\t      textX = getTextXForPadding(baseX, textAlign, textPadding);\n\t      textY += textPadding[0];\n\t    }\n\t  }\n\t\n\t  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n\t  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\t\n\t  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\t\n\t  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n\t  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n\t  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n\t  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\t\n\t  textY += lineHeight / 2;\n\t  var textStrokeWidth = style.textStrokeWidth;\n\t  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n\t  var textFill = getFill(style.textFill);\n\t\n\t  if (textStroke) {\n\t    setCtx(ctx, 'lineWidth', textStrokeWidth);\n\t    setCtx(ctx, 'strokeStyle', textStroke);\n\t  }\n\t\n\t  if (textFill) {\n\t    setCtx(ctx, 'fillStyle', textFill);\n\t  }\n\t\n\t  for (var i = 0; i < textLines.length; i++) {\n\t    // Fill after stroke so the outline will not cover the main part.\n\t    textStroke && ctx.strokeText(textLines[i], textX, textY);\n\t    textFill && ctx.fillText(textLines[i], textX, textY);\n\t    textY += lineHeight;\n\t  }\n\t}\n\t\n\tfunction renderRichText(hostEl, ctx, text, style, rect) {\n\t  var contentBlock = hostEl.__textCotentBlock;\n\t\n\t  if (!contentBlock || hostEl.__dirty) {\n\t    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n\t  }\n\t\n\t  drawRichText(hostEl, ctx, contentBlock, style, rect);\n\t}\n\t\n\tfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n\t  var contentWidth = contentBlock.width;\n\t  var outerWidth = contentBlock.outerWidth;\n\t  var outerHeight = contentBlock.outerHeight;\n\t  var textPadding = style.textPadding;\n\t  var boxPos = getBoxPosition(outerHeight, style, rect);\n\t  var baseX = boxPos.baseX;\n\t  var baseY = boxPos.baseY;\n\t  var textAlign = boxPos.textAlign;\n\t  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\t\n\t  applyTextRotation(ctx, style, rect, baseX, baseY);\n\t  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\t  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n\t  var xLeft = boxX;\n\t  var lineTop = boxY;\n\t\n\t  if (textPadding) {\n\t    xLeft += textPadding[3];\n\t    lineTop += textPadding[0];\n\t  }\n\t\n\t  var xRight = xLeft + contentWidth;\n\t  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\t\n\t  for (var i = 0; i < contentBlock.lines.length; i++) {\n\t    var line = contentBlock.lines[i];\n\t    var tokens = line.tokens;\n\t    var tokenCount = tokens.length;\n\t    var lineHeight = line.lineHeight;\n\t    var usedWidth = line.width;\n\t    var leftIndex = 0;\n\t    var lineXLeft = xLeft;\n\t    var lineXRight = xRight;\n\t    var rightIndex = tokenCount - 1;\n\t    var token;\n\t\n\t    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n\t      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n\t      usedWidth -= token.width;\n\t      lineXLeft += token.width;\n\t      leftIndex++;\n\t    }\n\t\n\t    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n\t      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n\t      usedWidth -= token.width;\n\t      lineXRight -= token.width;\n\t      rightIndex--;\n\t    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\t\n\t\n\t    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\t\n\t    while (leftIndex <= rightIndex) {\n\t      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\t\n\t      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n\t      lineXLeft += token.width;\n\t      leftIndex++;\n\t    }\n\t\n\t    lineTop += lineHeight;\n\t  }\n\t}\n\t\n\tfunction applyTextRotation(ctx, style, rect, x, y) {\n\t  // textRotation only apply in RectText.\n\t  if (rect && style.textRotation) {\n\t    var origin = style.textOrigin;\n\t\n\t    if (origin === 'center') {\n\t      x = rect.width / 2 + rect.x;\n\t      y = rect.height / 2 + rect.y;\n\t    } else if (origin) {\n\t      x = origin[0] + rect.x;\n\t      y = origin[1] + rect.y;\n\t    }\n\t\n\t    ctx.translate(x, y); // Positive: anticlockwise\n\t\n\t    ctx.rotate(-style.textRotation);\n\t    ctx.translate(-x, -y);\n\t  }\n\t}\n\t\n\tfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n\t  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n\t  // the bias of \"Microsoft YaHei\".\n\t\n\t  var textVerticalAlign = token.textVerticalAlign;\n\t  var y = lineTop + lineHeight / 2;\n\t\n\t  if (textVerticalAlign === 'top') {\n\t    y = lineTop + token.height / 2;\n\t  } else if (textVerticalAlign === 'bottom') {\n\t    y = lineTop + lineHeight - token.height / 2;\n\t  }\n\t\n\t  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n\t  var textPadding = token.textPadding;\n\t\n\t  if (textPadding) {\n\t    x = getTextXForPadding(x, textAlign, textPadding);\n\t    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n\t  }\n\t\n\t  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n\t  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n\t  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n\t  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\t  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n\t  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\t\n\t  setCtx(ctx, 'textBaseline', 'middle');\n\t  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\t  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n\t  var textFill = getFill(tokenStyle.textFill || style.textFill);\n\t  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\t\n\t  if (textStroke) {\n\t    setCtx(ctx, 'lineWidth', textStrokeWidth);\n\t    setCtx(ctx, 'strokeStyle', textStroke);\n\t    ctx.strokeText(token.text, x, y);\n\t  }\n\t\n\t  if (textFill) {\n\t    setCtx(ctx, 'fillStyle', textFill);\n\t    ctx.fillText(token.text, x, y);\n\t  }\n\t}\n\t\n\tfunction needDrawBackground(style) {\n\t  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n\t} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n\t// shape: {x, y, width, height}\n\t\n\t\n\tfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n\t  var textBackgroundColor = style.textBackgroundColor;\n\t  var textBorderWidth = style.textBorderWidth;\n\t  var textBorderColor = style.textBorderColor;\n\t  var isPlainBg = isString(textBackgroundColor);\n\t  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n\t  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n\t  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n\t  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\t\n\t  if (isPlainBg || textBorderWidth && textBorderColor) {\n\t    ctx.beginPath();\n\t    var textBorderRadius = style.textBorderRadius;\n\t\n\t    if (!textBorderRadius) {\n\t      ctx.rect(x, y, width, height);\n\t    } else {\n\t      roundRectHelper.buildPath(ctx, {\n\t        x: x,\n\t        y: y,\n\t        width: width,\n\t        height: height,\n\t        r: textBorderRadius\n\t      });\n\t    }\n\t\n\t    ctx.closePath();\n\t  }\n\t\n\t  if (isPlainBg) {\n\t    setCtx(ctx, 'fillStyle', textBackgroundColor);\n\t    ctx.fill();\n\t  } else if (isObject(textBackgroundColor)) {\n\t    var image = textBackgroundColor.image;\n\t    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\t\n\t    if (image && imageHelper.isImageReady(image)) {\n\t      ctx.drawImage(image, x, y, width, height);\n\t    }\n\t  }\n\t\n\t  if (textBorderWidth && textBorderColor) {\n\t    setCtx(ctx, 'lineWidth', textBorderWidth);\n\t    setCtx(ctx, 'strokeStyle', textBorderColor);\n\t    ctx.stroke();\n\t  }\n\t}\n\t\n\tfunction onBgImageLoaded(image, textBackgroundColor) {\n\t  // Replace image, so that `contain/text.js#parseRichText`\n\t  // will get correct result in next tick.\n\t  textBackgroundColor.image = image;\n\t}\n\t\n\tfunction getBoxPosition(blockHeiht, style, rect) {\n\t  var baseX = style.x || 0;\n\t  var baseY = style.y || 0;\n\t  var textAlign = style.textAlign;\n\t  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\t\n\t  if (rect) {\n\t    var textPosition = style.textPosition;\n\t\n\t    if (textPosition instanceof Array) {\n\t      // Percent\n\t      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n\t      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n\t    } else {\n\t      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n\t      baseX = res.x;\n\t      baseY = res.y; // Default align and baseline when has textPosition\n\t\n\t      textAlign = textAlign || res.textAlign;\n\t      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n\t    } // textOffset is only support in RectText, otherwise\n\t    // we have to adjust boundingRect for textOffset.\n\t\n\t\n\t    var textOffset = style.textOffset;\n\t\n\t    if (textOffset) {\n\t      baseX += textOffset[0];\n\t      baseY += textOffset[1];\n\t    }\n\t  }\n\t\n\t  return {\n\t    baseX: baseX,\n\t    baseY: baseY,\n\t    textAlign: textAlign,\n\t    textVerticalAlign: textVerticalAlign\n\t  };\n\t}\n\t\n\tfunction setCtx(ctx, prop, value) {\n\t  ctx[prop] = fixShadow(ctx, prop, value);\n\t  return ctx[prop];\n\t}\n\t/**\n\t * @param {string} [stroke] If specified, do not check style.textStroke.\n\t * @param {string} [lineWidth] If specified, do not check style.textStroke.\n\t * @param {number} style\n\t */\n\t\n\t\n\tfunction getStroke(stroke, lineWidth) {\n\t  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n\t  : stroke.image || stroke.colorStops ? '#000' : stroke;\n\t}\n\t\n\tfunction getFill(fill) {\n\t  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n\t  : fill.image || fill.colorStops ? '#000' : fill;\n\t}\n\t\n\tfunction parsePercent(value, maxValue) {\n\t  if (typeof value === 'string') {\n\t    if (value.lastIndexOf('%') >= 0) {\n\t      return parseFloat(value) / 100 * maxValue;\n\t    }\n\t\n\t    return parseFloat(value);\n\t  }\n\t\n\t  return value;\n\t}\n\t\n\tfunction getTextXForPadding(x, textAlign, textPadding) {\n\t  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n\t}\n\t/**\n\t * @param {string} text\n\t * @param {module:zrender/Style} style\n\t * @return {boolean}\n\t */\n\t\n\t\n\tfunction needDrawText(text, style) {\n\t  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n\t}\n\t\n\texports.normalizeTextStyle = normalizeTextStyle;\n\texports.renderText = renderText;\n\texports.getStroke = getStroke;\n\texports.getFill = getFill;\n\texports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1509:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar textHelper = __webpack_require__(572);\n\t\n\tvar BoundingRect = __webpack_require__(34);\n\t\n\t/**\n\t * Mixin for drawing text in a element bounding rect\n\t * @module zrender/mixin/RectText\n\t */\n\tvar tmpRect = new BoundingRect();\n\t\n\tvar RectText = function () {};\n\t\n\tRectText.prototype = {\n\t  constructor: RectText,\n\t\n\t  /**\n\t   * Draw text in a rect with specified position.\n\t   * @param  {CanvasRenderingContext2D} ctx\n\t   * @param  {Object} rect Displayable rect\n\t   */\n\t  drawRectText: function (ctx, rect) {\n\t    var style = this.style;\n\t    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\t\n\t    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\t    var text = style.text; // Convert to string\n\t\n\t    text != null && (text += '');\n\t\n\t    if (!textHelper.needDrawText(text, style)) {\n\t      return;\n\t    } // FIXME\n\t\n\t\n\t    ctx.save(); // Transform rect to view space\n\t\n\t    var transform = this.transform;\n\t\n\t    if (!style.transformText) {\n\t      if (transform) {\n\t        tmpRect.copy(rect);\n\t        tmpRect.applyTransform(transform);\n\t        rect = tmpRect;\n\t      }\n\t    } else {\n\t      this.setTransform(ctx);\n\t    } // transformText and textRotation can not be used at the same time.\n\t\n\t\n\t    textHelper.renderText(this, ctx, text, style, rect);\n\t    ctx.restore();\n\t  }\n\t};\n\tvar _default = RectText;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1510:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\t/**\n\t * 圆弧\n\t * @module zrender/graphic/shape/Arc\n\t */\n\tvar _default = Path.extend({\n\t  type: 'arc',\n\t  shape: {\n\t    cx: 0,\n\t    cy: 0,\n\t    r: 0,\n\t    startAngle: 0,\n\t    endAngle: Math.PI * 2,\n\t    clockwise: true\n\t  },\n\t  style: {\n\t    stroke: '#000',\n\t    fill: null\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var x = shape.cx;\n\t    var y = shape.cy;\n\t    var r = Math.max(shape.r, 0);\n\t    var startAngle = shape.startAngle;\n\t    var endAngle = shape.endAngle;\n\t    var clockwise = shape.clockwise;\n\t    var unitX = Math.cos(startAngle);\n\t    var unitY = Math.sin(startAngle);\n\t    ctx.moveTo(unitX * r + x, unitY * r + y);\n\t    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1511:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\tvar vec2 = __webpack_require__(10);\n\t\n\tvar _curve = __webpack_require__(84);\n\t\n\tvar quadraticSubdivide = _curve.quadraticSubdivide;\n\tvar cubicSubdivide = _curve.cubicSubdivide;\n\tvar quadraticAt = _curve.quadraticAt;\n\tvar cubicAt = _curve.cubicAt;\n\tvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\n\tvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\t\n\t/**\n\t * 贝塞尔曲线\n\t * @module zrender/shape/BezierCurve\n\t */\n\tvar out = [];\n\t\n\tfunction someVectorAt(shape, t, isTangent) {\n\t  var cpx2 = shape.cpx2;\n\t  var cpy2 = shape.cpy2;\n\t\n\t  if (cpx2 === null || cpy2 === null) {\n\t    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n\t  } else {\n\t    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n\t  }\n\t}\n\t\n\tvar _default = Path.extend({\n\t  type: 'bezier-curve',\n\t  shape: {\n\t    x1: 0,\n\t    y1: 0,\n\t    x2: 0,\n\t    y2: 0,\n\t    cpx1: 0,\n\t    cpy1: 0,\n\t    // cpx2: 0,\n\t    // cpy2: 0\n\t    // Curve show percent, for animating\n\t    percent: 1\n\t  },\n\t  style: {\n\t    stroke: '#000',\n\t    fill: null\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var x1 = shape.x1;\n\t    var y1 = shape.y1;\n\t    var x2 = shape.x2;\n\t    var y2 = shape.y2;\n\t    var cpx1 = shape.cpx1;\n\t    var cpy1 = shape.cpy1;\n\t    var cpx2 = shape.cpx2;\n\t    var cpy2 = shape.cpy2;\n\t    var percent = shape.percent;\n\t\n\t    if (percent === 0) {\n\t      return;\n\t    }\n\t\n\t    ctx.moveTo(x1, y1);\n\t\n\t    if (cpx2 == null || cpy2 == null) {\n\t      if (percent < 1) {\n\t        quadraticSubdivide(x1, cpx1, x2, percent, out);\n\t        cpx1 = out[1];\n\t        x2 = out[2];\n\t        quadraticSubdivide(y1, cpy1, y2, percent, out);\n\t        cpy1 = out[1];\n\t        y2 = out[2];\n\t      }\n\t\n\t      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n\t    } else {\n\t      if (percent < 1) {\n\t        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n\t        cpx1 = out[1];\n\t        cpx2 = out[2];\n\t        x2 = out[3];\n\t        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n\t        cpy1 = out[1];\n\t        cpy2 = out[2];\n\t        y2 = out[3];\n\t      }\n\t\n\t      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get point at percent\n\t   * @param  {number} t\n\t   * @return {Array.<number>}\n\t   */\n\t  pointAt: function (t) {\n\t    return someVectorAt(this.shape, t, false);\n\t  },\n\t\n\t  /**\n\t   * Get tangent at percent\n\t   * @param  {number} t\n\t   * @return {Array.<number>}\n\t   */\n\t  tangentAt: function (t) {\n\t    var p = someVectorAt(this.shape, t, true);\n\t    return vec2.normalize(p, p);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1512:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\t/**\n\t * 圆形\n\t * @module zrender/shape/Circle\n\t */\n\tvar _default = Path.extend({\n\t  type: 'circle',\n\t  shape: {\n\t    cx: 0,\n\t    cy: 0,\n\t    r: 0\n\t  },\n\t  buildPath: function (ctx, shape, inBundle) {\n\t    // Better stroking in ShapeBundle\n\t    // Always do it may have performence issue ( fill may be 2x more cost)\n\t    if (inBundle) {\n\t      ctx.moveTo(shape.cx + shape.r, shape.cy);\n\t    } // else {\n\t    //     if (ctx.allocate && !ctx.data.length) {\n\t    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n\t    //     }\n\t    // }\n\t    // Better stroking in ShapeBundle\n\t    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\t\n\t\n\t    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1513:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\t/**\n\t * 直线\n\t * @module zrender/graphic/shape/Line\n\t */\n\tvar _default = Path.extend({\n\t  type: 'line',\n\t  shape: {\n\t    // Start point\n\t    x1: 0,\n\t    y1: 0,\n\t    // End point\n\t    x2: 0,\n\t    y2: 0,\n\t    percent: 1\n\t  },\n\t  style: {\n\t    stroke: '#000',\n\t    fill: null\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var x1 = shape.x1;\n\t    var y1 = shape.y1;\n\t    var x2 = shape.x2;\n\t    var y2 = shape.y2;\n\t    var percent = shape.percent;\n\t\n\t    if (percent === 0) {\n\t      return;\n\t    }\n\t\n\t    ctx.moveTo(x1, y1);\n\t\n\t    if (percent < 1) {\n\t      x2 = x1 * (1 - percent) + x2 * percent;\n\t      y2 = y1 * (1 - percent) + y2 * percent;\n\t    }\n\t\n\t    ctx.lineTo(x2, y2);\n\t  },\n\t\n\t  /**\n\t   * Get point at percent\n\t   * @param  {number} percent\n\t   * @return {Array.<number>}\n\t   */\n\t  pointAt: function (p) {\n\t    var shape = this.shape;\n\t    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1514:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\tvar polyHelper = __webpack_require__(570);\n\t\n\t/**\n\t * 多边形\n\t * @module zrender/shape/Polygon\n\t */\n\tvar _default = Path.extend({\n\t  type: 'polygon',\n\t  shape: {\n\t    points: null,\n\t    smooth: false,\n\t    smoothConstraint: null\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    polyHelper.buildPath(ctx, shape, true);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1515:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\tvar polyHelper = __webpack_require__(570);\n\t\n\t/**\n\t * @module zrender/graphic/shape/Polyline\n\t */\n\tvar _default = Path.extend({\n\t  type: 'polyline',\n\t  shape: {\n\t    points: null,\n\t    smooth: false,\n\t    smoothConstraint: null\n\t  },\n\t  style: {\n\t    stroke: '#000',\n\t    fill: null\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    polyHelper.buildPath(ctx, shape, false);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1516:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\tvar roundRectHelper = __webpack_require__(571);\n\t\n\t/**\n\t * 矩形\n\t * @module zrender/graphic/shape/Rect\n\t */\n\tvar _default = Path.extend({\n\t  type: 'rect',\n\t  shape: {\n\t    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n\t    // r缩写为1         相当于 [1, 1, 1, 1]\n\t    // r缩写为[1]       相当于 [1, 1, 1, 1]\n\t    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n\t    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n\t    r: 0,\n\t    x: 0,\n\t    y: 0,\n\t    width: 0,\n\t    height: 0\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var x = shape.x;\n\t    var y = shape.y;\n\t    var width = shape.width;\n\t    var height = shape.height;\n\t\n\t    if (!shape.r) {\n\t      ctx.rect(x, y, width, height);\n\t    } else {\n\t      roundRectHelper.buildPath(ctx, shape);\n\t    }\n\t\n\t    ctx.closePath();\n\t    return;\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1517:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\t/**\n\t * 圆环\n\t * @module zrender/graphic/shape/Ring\n\t */\n\tvar _default = Path.extend({\n\t  type: 'ring',\n\t  shape: {\n\t    cx: 0,\n\t    cy: 0,\n\t    r: 0,\n\t    r0: 0\n\t  },\n\t  buildPath: function (ctx, shape) {\n\t    var x = shape.cx;\n\t    var y = shape.cy;\n\t    var PI2 = Math.PI * 2;\n\t    ctx.moveTo(x + shape.r, y);\n\t    ctx.arc(x, y, shape.r, 0, PI2, false);\n\t    ctx.moveTo(x + shape.r0, y);\n\t    ctx.arc(x, y, shape.r0, 0, PI2, true);\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\tvar fixClipWithShadow = __webpack_require__(1506);\n\t\n\t/**\n\t * 扇形\n\t * @module zrender/graphic/shape/Sector\n\t */\n\tvar _default = Path.extend({\n\t  type: 'sector',\n\t  shape: {\n\t    cx: 0,\n\t    cy: 0,\n\t    r0: 0,\n\t    r: 0,\n\t    startAngle: 0,\n\t    endAngle: Math.PI * 2,\n\t    clockwise: true\n\t  },\n\t  brush: fixClipWithShadow(Path.prototype.brush),\n\t  buildPath: function (ctx, shape) {\n\t    var x = shape.cx;\n\t    var y = shape.cy;\n\t    var r0 = Math.max(shape.r0 || 0, 0);\n\t    var r = Math.max(shape.r, 0);\n\t    var startAngle = shape.startAngle;\n\t    var endAngle = shape.endAngle;\n\t    var clockwise = shape.clockwise;\n\t    var unitX = Math.cos(startAngle);\n\t    var unitY = Math.sin(startAngle);\n\t    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\t    ctx.lineTo(unitX * r + x, unitY * r + y);\n\t    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\t    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\t\n\t    if (r0 !== 0) {\n\t      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n\t    }\n\t\n\t    ctx.closePath();\n\t  }\n\t});\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1519:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Animator = __webpack_require__(559);\n\t\n\tvar log = __webpack_require__(565);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar isString = _util.isString;\n\tvar isFunction = _util.isFunction;\n\tvar isObject = _util.isObject;\n\tvar isArrayLike = _util.isArrayLike;\n\tvar indexOf = _util.indexOf;\n\t\n\t/**\n\t * @alias modue:zrender/mixin/Animatable\n\t * @constructor\n\t */\n\tvar Animatable = function () {\n\t  /**\n\t   * @type {Array.<module:zrender/animation/Animator>}\n\t   * @readOnly\n\t   */\n\t  this.animators = [];\n\t};\n\t\n\tAnimatable.prototype = {\n\t  constructor: Animatable,\n\t\n\t  /**\n\t   * 动画\n\t   *\n\t   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n\t   * @param {boolean} [loop] Whether to loop animation.\n\t   * @return {module:zrender/animation/Animator}\n\t   * @example:\n\t   *     el.animate('style', false)\n\t   *         .when(1000, {x: 10} )\n\t   *         .done(function(){ // Animation done })\n\t   *         .start()\n\t   */\n\t  animate: function (path, loop) {\n\t    var target;\n\t    var animatingShape = false;\n\t    var el = this;\n\t    var zr = this.__zr;\n\t\n\t    if (path) {\n\t      var pathSplitted = path.split('.');\n\t      var prop = el; // If animating shape\n\t\n\t      animatingShape = pathSplitted[0] === 'shape';\n\t\n\t      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n\t        if (!prop) {\n\t          continue;\n\t        }\n\t\n\t        prop = prop[pathSplitted[i]];\n\t      }\n\t\n\t      if (prop) {\n\t        target = prop;\n\t      }\n\t    } else {\n\t      target = el;\n\t    }\n\t\n\t    if (!target) {\n\t      log('Property \"' + path + '\" is not existed in element ' + el.id);\n\t      return;\n\t    }\n\t\n\t    var animators = el.animators;\n\t    var animator = new Animator(target, loop);\n\t    animator.during(function (target) {\n\t      el.dirty(animatingShape);\n\t    }).done(function () {\n\t      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n\t      animators.splice(indexOf(animators, animator), 1);\n\t    });\n\t    animators.push(animator); // If animate after added to the zrender\n\t\n\t    if (zr) {\n\t      zr.animation.addAnimator(animator);\n\t    }\n\t\n\t    return animator;\n\t  },\n\t\n\t  /**\n\t   * 停止动画\n\t   * @param {boolean} forwardToLast If move to last frame before stop\n\t   */\n\t  stopAnimation: function (forwardToLast) {\n\t    var animators = this.animators;\n\t    var len = animators.length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      animators[i].stop(forwardToLast);\n\t    }\n\t\n\t    animators.length = 0;\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Caution: this method will stop previous animation.\n\t   * So do not use this method to one element twice before\n\t   * animation starts, unless you know what you are doing.\n\t   * @param {Object} target\n\t   * @param {number} [time=500] Time in ms\n\t   * @param {string} [easing='linear']\n\t   * @param {number} [delay=0]\n\t   * @param {Function} [callback]\n\t   * @param {Function} [forceAnimate] Prevent stop animation and callback\n\t   *        immediently when target values are the same as current values.\n\t   *\n\t   * @example\n\t   *  // Animate position\n\t   *  el.animateTo({\n\t   *      position: [10, 10]\n\t   *  }, function () { // done })\n\t   *\n\t   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n\t   *  el.animateTo({\n\t   *      shape: {\n\t   *          width: 500\n\t   *      },\n\t   *      style: {\n\t   *          fill: 'red'\n\t   *      }\n\t   *      position: [10, 10]\n\t   *  }, 100, 100, 'cubicOut', function () { // done })\n\t   */\n\t  // TODO Return animation key\n\t  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n\t    // animateTo(target, time, easing, callback);\n\t    if (isString(delay)) {\n\t      callback = easing;\n\t      easing = delay;\n\t      delay = 0;\n\t    } // animateTo(target, time, delay, callback);\n\t    else if (isFunction(easing)) {\n\t        callback = easing;\n\t        easing = 'linear';\n\t        delay = 0;\n\t      } // animateTo(target, time, callback);\n\t      else if (isFunction(delay)) {\n\t          callback = delay;\n\t          delay = 0;\n\t        } // animateTo(target, callback)\n\t        else if (isFunction(time)) {\n\t            callback = time;\n\t            time = 500;\n\t          } // animateTo(target)\n\t          else if (!time) {\n\t              time = 500;\n\t            } // Stop all previous animations\n\t\n\t\n\t    this.stopAnimation();\n\t\n\t    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n\t    // if there is nothing to animate\n\t\n\t\n\t    var animators = this.animators.slice();\n\t    var count = animators.length;\n\t\n\t    function done() {\n\t      count--;\n\t\n\t      if (!count) {\n\t        callback && callback();\n\t      }\n\t    } // No animators. This should be checked before animators[i].start(),\n\t    // because 'done' may be executed immediately if no need to animate.\n\t\n\t\n\t    if (!count) {\n\t      callback && callback();\n\t    } // Start after all animators created\n\t    // Incase any animator is done immediately when all animation properties are not changed\n\t\n\t\n\t    for (var i = 0; i < animators.length; i++) {\n\t      animators[i].done(done).start(easing, forceAnimate);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {string} path=''\n\t   * @param {Object} source=this\n\t   * @param {Object} target\n\t   * @param {number} [time=500]\n\t   * @param {number} [delay=0]\n\t   *\n\t   * @example\n\t   *  // Animate position\n\t   *  el._animateToShallow({\n\t   *      position: [10, 10]\n\t   *  })\n\t   *\n\t   *  // Animate shape, style and position in 100ms, delayed 100ms\n\t   *  el._animateToShallow({\n\t   *      shape: {\n\t   *          width: 500\n\t   *      },\n\t   *      style: {\n\t   *          fill: 'red'\n\t   *      }\n\t   *      position: [10, 10]\n\t   *  }, 100, 100)\n\t   */\n\t  _animateToShallow: function (path, source, target, time, delay) {\n\t    var objShallow = {};\n\t    var propertyCount = 0;\n\t\n\t    for (var name in target) {\n\t      if (!target.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      if (source[name] != null) {\n\t        if (isObject(target[name]) && !isArrayLike(target[name])) {\n\t          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n\t        } else {\n\t          objShallow[name] = target[name];\n\t          propertyCount++;\n\t        }\n\t      } else if (target[name] != null) {\n\t        // Attr directly if not has property\n\t        // FIXME, if some property not needed for element ?\n\t        if (!path) {\n\t          this.attr(name, target[name]);\n\t        } else {\n\t          // Shape or style\n\t          var props = {};\n\t          props[path] = {};\n\t          props[path][name] = target[name];\n\t          this.attr(props);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (propertyCount > 0) {\n\t      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n\t    }\n\t\n\t    return this;\n\t  }\n\t};\n\tvar _default = Animatable;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1520:\n/***/ (function(module, exports) {\n\n\t// TODO Draggable for group\n\t// FIXME Draggable on element which has parent rotation or scale\n\tfunction Draggable() {\n\t  this.on('mousedown', this._dragStart, this);\n\t  this.on('mousemove', this._drag, this);\n\t  this.on('mouseup', this._dragEnd, this);\n\t  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n\t  // this._draggingTarget = null;\n\t  // this._x = 0;\n\t  // this._y = 0;\n\t}\n\t\n\tDraggable.prototype = {\n\t  constructor: Draggable,\n\t  _dragStart: function (e) {\n\t    var draggingTarget = e.target;\n\t\n\t    if (draggingTarget && draggingTarget.draggable) {\n\t      this._draggingTarget = draggingTarget;\n\t      draggingTarget.dragging = true;\n\t      this._x = e.offsetX;\n\t      this._y = e.offsetY;\n\t      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n\t    }\n\t  },\n\t  _drag: function (e) {\n\t    var draggingTarget = this._draggingTarget;\n\t\n\t    if (draggingTarget) {\n\t      var x = e.offsetX;\n\t      var y = e.offsetY;\n\t      var dx = x - this._x;\n\t      var dy = y - this._y;\n\t      this._x = x;\n\t      this._y = y;\n\t      draggingTarget.drift(dx, dy, e);\n\t      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\t      var dropTarget = this.findHover(x, y, draggingTarget).target;\n\t      var lastDropTarget = this._dropTarget;\n\t      this._dropTarget = dropTarget;\n\t\n\t      if (draggingTarget !== dropTarget) {\n\t        if (lastDropTarget && dropTarget !== lastDropTarget) {\n\t          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n\t        }\n\t\n\t        if (dropTarget && dropTarget !== lastDropTarget) {\n\t          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n\t        }\n\t      }\n\t    }\n\t  },\n\t  _dragEnd: function (e) {\n\t    var draggingTarget = this._draggingTarget;\n\t\n\t    if (draggingTarget) {\n\t      draggingTarget.dragging = false;\n\t    }\n\t\n\t    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\t\n\t    if (this._dropTarget) {\n\t      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n\t    }\n\t\n\t    this._draggingTarget = null;\n\t    this._dropTarget = null;\n\t  }\n\t};\n\t\n\tfunction param(target, e) {\n\t  return {\n\t    target: target,\n\t    topTarget: e && e.topTarget\n\t  };\n\t}\n\t\n\tvar _default = Draggable;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 115:\n/***/ (function(module, exports) {\n\n\t/**\n\t * 事件扩展\n\t * @module zrender/mixin/Eventful\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n\t *         pissang (https://www.github.com/pissang)\n\t */\n\tvar arrySlice = Array.prototype.slice;\n\t/**\n\t * 事件分发器\n\t * @alias module:zrender/mixin/Eventful\n\t * @constructor\n\t */\n\t\n\tvar Eventful = function () {\n\t  this._$handlers = {};\n\t};\n\t\n\tEventful.prototype = {\n\t  constructor: Eventful,\n\t\n\t  /**\n\t   * 单次触发绑定，trigger后销毁\n\t   *\n\t   * @param {string} event 事件名\n\t   * @param {Function} handler 响应函数\n\t   * @param {Object} context\n\t   */\n\t  one: function (event, handler, context) {\n\t    var _h = this._$handlers;\n\t\n\t    if (!handler || !event) {\n\t      return this;\n\t    }\n\t\n\t    if (!_h[event]) {\n\t      _h[event] = [];\n\t    }\n\t\n\t    for (var i = 0; i < _h[event].length; i++) {\n\t      if (_h[event][i].h === handler) {\n\t        return this;\n\t      }\n\t    }\n\t\n\t    _h[event].push({\n\t      h: handler,\n\t      one: true,\n\t      ctx: context || this\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 绑定事件\n\t   * @param {string} event 事件名\n\t   * @param {Function} handler 事件处理函数\n\t   * @param {Object} [context]\n\t   */\n\t  on: function (event, handler, context) {\n\t    var _h = this._$handlers;\n\t\n\t    if (!handler || !event) {\n\t      return this;\n\t    }\n\t\n\t    if (!_h[event]) {\n\t      _h[event] = [];\n\t    }\n\t\n\t    for (var i = 0; i < _h[event].length; i++) {\n\t      if (_h[event][i].h === handler) {\n\t        return this;\n\t      }\n\t    }\n\t\n\t    _h[event].push({\n\t      h: handler,\n\t      one: false,\n\t      ctx: context || this\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 是否绑定了事件\n\t   * @param  {string}  event\n\t   * @return {boolean}\n\t   */\n\t  isSilent: function (event) {\n\t    var _h = this._$handlers;\n\t    return _h[event] && _h[event].length;\n\t  },\n\t\n\t  /**\n\t   * 解绑事件\n\t   * @param {string} event 事件名\n\t   * @param {Function} [handler] 事件处理函数\n\t   */\n\t  off: function (event, handler) {\n\t    var _h = this._$handlers;\n\t\n\t    if (!event) {\n\t      this._$handlers = {};\n\t      return this;\n\t    }\n\t\n\t    if (handler) {\n\t      if (_h[event]) {\n\t        var newList = [];\n\t\n\t        for (var i = 0, l = _h[event].length; i < l; i++) {\n\t          if (_h[event][i]['h'] != handler) {\n\t            newList.push(_h[event][i]);\n\t          }\n\t        }\n\t\n\t        _h[event] = newList;\n\t      }\n\t\n\t      if (_h[event] && _h[event].length === 0) {\n\t        delete _h[event];\n\t      }\n\t    } else {\n\t      delete _h[event];\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 事件分发\n\t   *\n\t   * @param {string} type 事件类型\n\t   */\n\t  trigger: function (type) {\n\t    if (this._$handlers[type]) {\n\t      var args = arguments;\n\t      var argLen = args.length;\n\t\n\t      if (argLen > 3) {\n\t        args = arrySlice.call(args, 1);\n\t      }\n\t\n\t      var _h = this._$handlers[type];\n\t      var len = _h.length;\n\t\n\t      for (var i = 0; i < len;) {\n\t        // Optimize advise from backbone\n\t        switch (argLen) {\n\t          case 1:\n\t            _h[i]['h'].call(_h[i]['ctx']);\n\t\n\t            break;\n\t\n\t          case 2:\n\t            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\t\n\t            break;\n\t\n\t          case 3:\n\t            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\t\n\t            break;\n\t\n\t          default:\n\t            // have more than 2 given arguments\n\t            _h[i]['h'].apply(_h[i]['ctx'], args);\n\t\n\t            break;\n\t        }\n\t\n\t        if (_h[i]['one']) {\n\t          _h.splice(i, 1);\n\t\n\t          len--;\n\t        } else {\n\t          i++;\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * 带有context的事件分发, 最后一个参数是事件回调的context\n\t   * @param {string} type 事件类型\n\t   */\n\t  triggerWithContext: function (type) {\n\t    if (this._$handlers[type]) {\n\t      var args = arguments;\n\t      var argLen = args.length;\n\t\n\t      if (argLen > 4) {\n\t        args = arrySlice.call(args, 1, args.length - 1);\n\t      }\n\t\n\t      var ctx = args[args.length - 1];\n\t      var _h = this._$handlers[type];\n\t      var len = _h.length;\n\t\n\t      for (var i = 0; i < len;) {\n\t        // Optimize advise from backbone\n\t        switch (argLen) {\n\t          case 1:\n\t            _h[i]['h'].call(ctx);\n\t\n\t            break;\n\t\n\t          case 2:\n\t            _h[i]['h'].call(ctx, args[1]);\n\t\n\t            break;\n\t\n\t          case 3:\n\t            _h[i]['h'].call(ctx, args[1], args[2]);\n\t\n\t            break;\n\t\n\t          default:\n\t            // have more than 2 given arguments\n\t            _h[i]['h'].apply(ctx, args);\n\t\n\t            break;\n\t        }\n\t\n\t        if (_h[i]['one']) {\n\t          _h.splice(i, 1);\n\t\n\t          len--;\n\t        } else {\n\t          i++;\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  }\n\t}; // 对象可以通过 onxxxx 绑定事件\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onclick\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onmouseover\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onmouseout\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onmousemove\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onmousewheel\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onmousedown\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#onmouseup\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondrag\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondragstart\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondragend\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondragenter\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondragleave\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondragover\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\t/**\n\t * @event module:zrender/mixin/Eventful#ondrop\n\t * @type {Function}\n\t * @default null\n\t */\n\t\n\tvar _default = Eventful;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 362:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar matrix = __webpack_require__(85);\n\t\n\tvar vector = __webpack_require__(10);\n\t\n\t/**\n\t * 提供变换扩展\n\t * @module zrender/mixin/Transformable\n\t * @author pissang (https://www.github.com/pissang)\n\t */\n\tvar mIdentity = matrix.identity;\n\tvar EPSILON = 5e-5;\n\t\n\tfunction isNotAroundZero(val) {\n\t  return val > EPSILON || val < -EPSILON;\n\t}\n\t/**\n\t * @alias module:zrender/mixin/Transformable\n\t * @constructor\n\t */\n\t\n\t\n\tvar Transformable = function (opts) {\n\t  opts = opts || {}; // If there are no given position, rotation, scale\n\t\n\t  if (!opts.position) {\n\t    /**\n\t     * 平移\n\t     * @type {Array.<number>}\n\t     * @default [0, 0]\n\t     */\n\t    this.position = [0, 0];\n\t  }\n\t\n\t  if (opts.rotation == null) {\n\t    /**\n\t     * 旋转\n\t     * @type {Array.<number>}\n\t     * @default 0\n\t     */\n\t    this.rotation = 0;\n\t  }\n\t\n\t  if (!opts.scale) {\n\t    /**\n\t     * 缩放\n\t     * @type {Array.<number>}\n\t     * @default [1, 1]\n\t     */\n\t    this.scale = [1, 1];\n\t  }\n\t  /**\n\t   * 旋转和缩放的原点\n\t   * @type {Array.<number>}\n\t   * @default null\n\t   */\n\t\n\t\n\t  this.origin = this.origin || null;\n\t};\n\t\n\tvar transformableProto = Transformable.prototype;\n\ttransformableProto.transform = null;\n\t/**\n\t * 判断是否需要有坐标变换\n\t * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n\t */\n\t\n\ttransformableProto.needLocalTransform = function () {\n\t  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n\t};\n\t\n\ttransformableProto.updateTransform = function () {\n\t  var parent = this.parent;\n\t  var parentHasTransform = parent && parent.transform;\n\t  var needLocalTransform = this.needLocalTransform();\n\t  var m = this.transform;\n\t\n\t  if (!(needLocalTransform || parentHasTransform)) {\n\t    m && mIdentity(m);\n\t    return;\n\t  }\n\t\n\t  m = m || matrix.create();\n\t\n\t  if (needLocalTransform) {\n\t    this.getLocalTransform(m);\n\t  } else {\n\t    mIdentity(m);\n\t  } // 应用父节点变换\n\t\n\t\n\t  if (parentHasTransform) {\n\t    if (needLocalTransform) {\n\t      matrix.mul(m, parent.transform, m);\n\t    } else {\n\t      matrix.copy(m, parent.transform);\n\t    }\n\t  } // 保存这个变换矩阵\n\t\n\t\n\t  this.transform = m;\n\t  this.invTransform = this.invTransform || matrix.create();\n\t  matrix.invert(this.invTransform, m);\n\t};\n\t\n\ttransformableProto.getLocalTransform = function (m) {\n\t  return Transformable.getLocalTransform(this, m);\n\t};\n\t/**\n\t * 将自己的transform应用到context上\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t\n\t\n\ttransformableProto.setTransform = function (ctx) {\n\t  var m = this.transform;\n\t  var dpr = ctx.dpr || 1;\n\t\n\t  if (m) {\n\t    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n\t  } else {\n\t    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n\t  }\n\t};\n\t\n\ttransformableProto.restoreTransform = function (ctx) {\n\t  var dpr = ctx.dpr || 1;\n\t  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n\t};\n\t\n\tvar tmpTransform = [];\n\t/**\n\t * 分解`transform`矩阵到`position`, `rotation`, `scale`\n\t */\n\t\n\ttransformableProto.decomposeTransform = function () {\n\t  if (!this.transform) {\n\t    return;\n\t  }\n\t\n\t  var parent = this.parent;\n\t  var m = this.transform;\n\t\n\t  if (parent && parent.transform) {\n\t    // Get local transform and decompose them to position, scale, rotation\n\t    matrix.mul(tmpTransform, parent.invTransform, m);\n\t    m = tmpTransform;\n\t  }\n\t\n\t  var sx = m[0] * m[0] + m[1] * m[1];\n\t  var sy = m[2] * m[2] + m[3] * m[3];\n\t  var position = this.position;\n\t  var scale = this.scale;\n\t\n\t  if (isNotAroundZero(sx - 1)) {\n\t    sx = Math.sqrt(sx);\n\t  }\n\t\n\t  if (isNotAroundZero(sy - 1)) {\n\t    sy = Math.sqrt(sy);\n\t  }\n\t\n\t  if (m[0] < 0) {\n\t    sx = -sx;\n\t  }\n\t\n\t  if (m[3] < 0) {\n\t    sy = -sy;\n\t  }\n\t\n\t  position[0] = m[4];\n\t  position[1] = m[5];\n\t  scale[0] = sx;\n\t  scale[1] = sy;\n\t  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n\t};\n\t/**\n\t * Get global scale\n\t * @return {Array.<number>}\n\t */\n\t\n\t\n\ttransformableProto.getGlobalScale = function () {\n\t  var m = this.transform;\n\t\n\t  if (!m) {\n\t    return [1, 1];\n\t  }\n\t\n\t  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n\t  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\t\n\t  if (m[0] < 0) {\n\t    sx = -sx;\n\t  }\n\t\n\t  if (m[3] < 0) {\n\t    sy = -sy;\n\t  }\n\t\n\t  return [sx, sy];\n\t};\n\t/**\n\t * 变换坐标位置到 shape 的局部坐标空间\n\t * @method\n\t * @param {number} x\n\t * @param {number} y\n\t * @return {Array.<number>}\n\t */\n\t\n\t\n\ttransformableProto.transformCoordToLocal = function (x, y) {\n\t  var v2 = [x, y];\n\t  var invTransform = this.invTransform;\n\t\n\t  if (invTransform) {\n\t    vector.applyTransform(v2, v2, invTransform);\n\t  }\n\t\n\t  return v2;\n\t};\n\t/**\n\t * 变换局部坐标位置到全局坐标空间\n\t * @method\n\t * @param {number} x\n\t * @param {number} y\n\t * @return {Array.<number>}\n\t */\n\t\n\t\n\ttransformableProto.transformCoordToGlobal = function (x, y) {\n\t  var v2 = [x, y];\n\t  var transform = this.transform;\n\t\n\t  if (transform) {\n\t    vector.applyTransform(v2, v2, transform);\n\t  }\n\t\n\t  return v2;\n\t};\n\t/**\n\t * @static\n\t * @param {Object} target\n\t * @param {Array.<number>} target.origin\n\t * @param {number} target.rotation\n\t * @param {Array.<number>} target.position\n\t * @param {Array.<number>} [m]\n\t */\n\t\n\t\n\tTransformable.getLocalTransform = function (target, m) {\n\t  m = m || [];\n\t  mIdentity(m);\n\t  var origin = target.origin;\n\t  var scale = target.scale || [1, 1];\n\t  var rotation = target.rotation || 0;\n\t  var position = target.position || [0, 0];\n\t\n\t  if (origin) {\n\t    // Translate to origin\n\t    m[4] -= origin[0];\n\t    m[5] -= origin[1];\n\t  }\n\t\n\t  matrix.scale(m, m, scale);\n\t\n\t  if (rotation) {\n\t    matrix.rotate(m, m, rotation);\n\t  }\n\t\n\t  if (origin) {\n\t    // Translate back from origin\n\t    m[4] += origin[0];\n\t    m[5] += origin[1];\n\t  }\n\t\n\t  m[4] += position[0];\n\t  m[5] += position[1];\n\t  return m;\n\t};\n\t\n\tvar _default = Transformable;\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar LRU = __webpack_require__(563);\n\t\n\tvar kCSSColorTable = {\n\t  'transparent': [0, 0, 0, 0],\n\t  'aliceblue': [240, 248, 255, 1],\n\t  'antiquewhite': [250, 235, 215, 1],\n\t  'aqua': [0, 255, 255, 1],\n\t  'aquamarine': [127, 255, 212, 1],\n\t  'azure': [240, 255, 255, 1],\n\t  'beige': [245, 245, 220, 1],\n\t  'bisque': [255, 228, 196, 1],\n\t  'black': [0, 0, 0, 1],\n\t  'blanchedalmond': [255, 235, 205, 1],\n\t  'blue': [0, 0, 255, 1],\n\t  'blueviolet': [138, 43, 226, 1],\n\t  'brown': [165, 42, 42, 1],\n\t  'burlywood': [222, 184, 135, 1],\n\t  'cadetblue': [95, 158, 160, 1],\n\t  'chartreuse': [127, 255, 0, 1],\n\t  'chocolate': [210, 105, 30, 1],\n\t  'coral': [255, 127, 80, 1],\n\t  'cornflowerblue': [100, 149, 237, 1],\n\t  'cornsilk': [255, 248, 220, 1],\n\t  'crimson': [220, 20, 60, 1],\n\t  'cyan': [0, 255, 255, 1],\n\t  'darkblue': [0, 0, 139, 1],\n\t  'darkcyan': [0, 139, 139, 1],\n\t  'darkgoldenrod': [184, 134, 11, 1],\n\t  'darkgray': [169, 169, 169, 1],\n\t  'darkgreen': [0, 100, 0, 1],\n\t  'darkgrey': [169, 169, 169, 1],\n\t  'darkkhaki': [189, 183, 107, 1],\n\t  'darkmagenta': [139, 0, 139, 1],\n\t  'darkolivegreen': [85, 107, 47, 1],\n\t  'darkorange': [255, 140, 0, 1],\n\t  'darkorchid': [153, 50, 204, 1],\n\t  'darkred': [139, 0, 0, 1],\n\t  'darksalmon': [233, 150, 122, 1],\n\t  'darkseagreen': [143, 188, 143, 1],\n\t  'darkslateblue': [72, 61, 139, 1],\n\t  'darkslategray': [47, 79, 79, 1],\n\t  'darkslategrey': [47, 79, 79, 1],\n\t  'darkturquoise': [0, 206, 209, 1],\n\t  'darkviolet': [148, 0, 211, 1],\n\t  'deeppink': [255, 20, 147, 1],\n\t  'deepskyblue': [0, 191, 255, 1],\n\t  'dimgray': [105, 105, 105, 1],\n\t  'dimgrey': [105, 105, 105, 1],\n\t  'dodgerblue': [30, 144, 255, 1],\n\t  'firebrick': [178, 34, 34, 1],\n\t  'floralwhite': [255, 250, 240, 1],\n\t  'forestgreen': [34, 139, 34, 1],\n\t  'fuchsia': [255, 0, 255, 1],\n\t  'gainsboro': [220, 220, 220, 1],\n\t  'ghostwhite': [248, 248, 255, 1],\n\t  'gold': [255, 215, 0, 1],\n\t  'goldenrod': [218, 165, 32, 1],\n\t  'gray': [128, 128, 128, 1],\n\t  'green': [0, 128, 0, 1],\n\t  'greenyellow': [173, 255, 47, 1],\n\t  'grey': [128, 128, 128, 1],\n\t  'honeydew': [240, 255, 240, 1],\n\t  'hotpink': [255, 105, 180, 1],\n\t  'indianred': [205, 92, 92, 1],\n\t  'indigo': [75, 0, 130, 1],\n\t  'ivory': [255, 255, 240, 1],\n\t  'khaki': [240, 230, 140, 1],\n\t  'lavender': [230, 230, 250, 1],\n\t  'lavenderblush': [255, 240, 245, 1],\n\t  'lawngreen': [124, 252, 0, 1],\n\t  'lemonchiffon': [255, 250, 205, 1],\n\t  'lightblue': [173, 216, 230, 1],\n\t  'lightcoral': [240, 128, 128, 1],\n\t  'lightcyan': [224, 255, 255, 1],\n\t  'lightgoldenrodyellow': [250, 250, 210, 1],\n\t  'lightgray': [211, 211, 211, 1],\n\t  'lightgreen': [144, 238, 144, 1],\n\t  'lightgrey': [211, 211, 211, 1],\n\t  'lightpink': [255, 182, 193, 1],\n\t  'lightsalmon': [255, 160, 122, 1],\n\t  'lightseagreen': [32, 178, 170, 1],\n\t  'lightskyblue': [135, 206, 250, 1],\n\t  'lightslategray': [119, 136, 153, 1],\n\t  'lightslategrey': [119, 136, 153, 1],\n\t  'lightsteelblue': [176, 196, 222, 1],\n\t  'lightyellow': [255, 255, 224, 1],\n\t  'lime': [0, 255, 0, 1],\n\t  'limegreen': [50, 205, 50, 1],\n\t  'linen': [250, 240, 230, 1],\n\t  'magenta': [255, 0, 255, 1],\n\t  'maroon': [128, 0, 0, 1],\n\t  'mediumaquamarine': [102, 205, 170, 1],\n\t  'mediumblue': [0, 0, 205, 1],\n\t  'mediumorchid': [186, 85, 211, 1],\n\t  'mediumpurple': [147, 112, 219, 1],\n\t  'mediumseagreen': [60, 179, 113, 1],\n\t  'mediumslateblue': [123, 104, 238, 1],\n\t  'mediumspringgreen': [0, 250, 154, 1],\n\t  'mediumturquoise': [72, 209, 204, 1],\n\t  'mediumvioletred': [199, 21, 133, 1],\n\t  'midnightblue': [25, 25, 112, 1],\n\t  'mintcream': [245, 255, 250, 1],\n\t  'mistyrose': [255, 228, 225, 1],\n\t  'moccasin': [255, 228, 181, 1],\n\t  'navajowhite': [255, 222, 173, 1],\n\t  'navy': [0, 0, 128, 1],\n\t  'oldlace': [253, 245, 230, 1],\n\t  'olive': [128, 128, 0, 1],\n\t  'olivedrab': [107, 142, 35, 1],\n\t  'orange': [255, 165, 0, 1],\n\t  'orangered': [255, 69, 0, 1],\n\t  'orchid': [218, 112, 214, 1],\n\t  'palegoldenrod': [238, 232, 170, 1],\n\t  'palegreen': [152, 251, 152, 1],\n\t  'paleturquoise': [175, 238, 238, 1],\n\t  'palevioletred': [219, 112, 147, 1],\n\t  'papayawhip': [255, 239, 213, 1],\n\t  'peachpuff': [255, 218, 185, 1],\n\t  'peru': [205, 133, 63, 1],\n\t  'pink': [255, 192, 203, 1],\n\t  'plum': [221, 160, 221, 1],\n\t  'powderblue': [176, 224, 230, 1],\n\t  'purple': [128, 0, 128, 1],\n\t  'red': [255, 0, 0, 1],\n\t  'rosybrown': [188, 143, 143, 1],\n\t  'royalblue': [65, 105, 225, 1],\n\t  'saddlebrown': [139, 69, 19, 1],\n\t  'salmon': [250, 128, 114, 1],\n\t  'sandybrown': [244, 164, 96, 1],\n\t  'seagreen': [46, 139, 87, 1],\n\t  'seashell': [255, 245, 238, 1],\n\t  'sienna': [160, 82, 45, 1],\n\t  'silver': [192, 192, 192, 1],\n\t  'skyblue': [135, 206, 235, 1],\n\t  'slateblue': [106, 90, 205, 1],\n\t  'slategray': [112, 128, 144, 1],\n\t  'slategrey': [112, 128, 144, 1],\n\t  'snow': [255, 250, 250, 1],\n\t  'springgreen': [0, 255, 127, 1],\n\t  'steelblue': [70, 130, 180, 1],\n\t  'tan': [210, 180, 140, 1],\n\t  'teal': [0, 128, 128, 1],\n\t  'thistle': [216, 191, 216, 1],\n\t  'tomato': [255, 99, 71, 1],\n\t  'turquoise': [64, 224, 208, 1],\n\t  'violet': [238, 130, 238, 1],\n\t  'wheat': [245, 222, 179, 1],\n\t  'white': [255, 255, 255, 1],\n\t  'whitesmoke': [245, 245, 245, 1],\n\t  'yellow': [255, 255, 0, 1],\n\t  'yellowgreen': [154, 205, 50, 1]\n\t};\n\t\n\tfunction clampCssByte(i) {\n\t  // Clamp to integer 0 .. 255.\n\t  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\t\n\t  return i < 0 ? 0 : i > 255 ? 255 : i;\n\t}\n\t\n\tfunction clampCssAngle(i) {\n\t  // Clamp to integer 0 .. 360.\n\t  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\t\n\t  return i < 0 ? 0 : i > 360 ? 360 : i;\n\t}\n\t\n\tfunction clampCssFloat(f) {\n\t  // Clamp to float 0.0 .. 1.0.\n\t  return f < 0 ? 0 : f > 1 ? 1 : f;\n\t}\n\t\n\tfunction parseCssInt(str) {\n\t  // int or percentage.\n\t  if (str.length && str.charAt(str.length - 1) === '%') {\n\t    return clampCssByte(parseFloat(str) / 100 * 255);\n\t  }\n\t\n\t  return clampCssByte(parseInt(str, 10));\n\t}\n\t\n\tfunction parseCssFloat(str) {\n\t  // float or percentage.\n\t  if (str.length && str.charAt(str.length - 1) === '%') {\n\t    return clampCssFloat(parseFloat(str) / 100);\n\t  }\n\t\n\t  return clampCssFloat(parseFloat(str));\n\t}\n\t\n\tfunction cssHueToRgb(m1, m2, h) {\n\t  if (h < 0) {\n\t    h += 1;\n\t  } else if (h > 1) {\n\t    h -= 1;\n\t  }\n\t\n\t  if (h * 6 < 1) {\n\t    return m1 + (m2 - m1) * h * 6;\n\t  }\n\t\n\t  if (h * 2 < 1) {\n\t    return m2;\n\t  }\n\t\n\t  if (h * 3 < 2) {\n\t    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n\t  }\n\t\n\t  return m1;\n\t}\n\t\n\tfunction lerpNumber(a, b, p) {\n\t  return a + (b - a) * p;\n\t}\n\t\n\tfunction setRgba(out, r, g, b, a) {\n\t  out[0] = r;\n\t  out[1] = g;\n\t  out[2] = b;\n\t  out[3] = a;\n\t  return out;\n\t}\n\t\n\tfunction copyRgba(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\tvar colorCache = new LRU(20);\n\tvar lastRemovedArr = null;\n\t\n\tfunction putToCache(colorStr, rgbaArr) {\n\t  // Reuse removed array\n\t  if (lastRemovedArr) {\n\t    copyRgba(lastRemovedArr, rgbaArr);\n\t  }\n\t\n\t  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n\t}\n\t/**\n\t * @param {string} colorStr\n\t * @param {Array.<number>} out\n\t * @return {Array.<number>}\n\t * @memberOf module:zrender/util/color\n\t */\n\t\n\t\n\tfunction parse(colorStr, rgbaArr) {\n\t  if (!colorStr) {\n\t    return;\n\t  }\n\t\n\t  rgbaArr = rgbaArr || [];\n\t  var cached = colorCache.get(colorStr);\n\t\n\t  if (cached) {\n\t    return copyRgba(rgbaArr, cached);\n\t  } // colorStr may be not string\n\t\n\t\n\t  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\t\n\t  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\t\n\t  if (str in kCSSColorTable) {\n\t    copyRgba(rgbaArr, kCSSColorTable[str]);\n\t    putToCache(colorStr, rgbaArr);\n\t    return rgbaArr;\n\t  } // #abc and #abc123 syntax.\n\t\n\t\n\t  if (str.charAt(0) === '#') {\n\t    if (str.length === 4) {\n\t      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\t\n\t      if (!(iv >= 0 && iv <= 0xfff)) {\n\t        setRgba(rgbaArr, 0, 0, 0, 1);\n\t        return; // Covers NaN.\n\t      }\n\t\n\t      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n\t      putToCache(colorStr, rgbaArr);\n\t      return rgbaArr;\n\t    } else if (str.length === 7) {\n\t      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\t\n\t      if (!(iv >= 0 && iv <= 0xffffff)) {\n\t        setRgba(rgbaArr, 0, 0, 0, 1);\n\t        return; // Covers NaN.\n\t      }\n\t\n\t      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n\t      putToCache(colorStr, rgbaArr);\n\t      return rgbaArr;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  var op = str.indexOf('('),\n\t      ep = str.indexOf(')');\n\t\n\t  if (op !== -1 && ep + 1 === str.length) {\n\t    var fname = str.substr(0, op);\n\t    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n\t    var alpha = 1; // To allow case fallthrough.\n\t\n\t    switch (fname) {\n\t      case 'rgba':\n\t        if (params.length !== 4) {\n\t          setRgba(rgbaArr, 0, 0, 0, 1);\n\t          return;\n\t        }\n\t\n\t        alpha = parseCssFloat(params.pop());\n\t      // jshint ignore:line\n\t      // Fall through.\n\t\n\t      case 'rgb':\n\t        if (params.length !== 3) {\n\t          setRgba(rgbaArr, 0, 0, 0, 1);\n\t          return;\n\t        }\n\t\n\t        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n\t        putToCache(colorStr, rgbaArr);\n\t        return rgbaArr;\n\t\n\t      case 'hsla':\n\t        if (params.length !== 4) {\n\t          setRgba(rgbaArr, 0, 0, 0, 1);\n\t          return;\n\t        }\n\t\n\t        params[3] = parseCssFloat(params[3]);\n\t        hsla2rgba(params, rgbaArr);\n\t        putToCache(colorStr, rgbaArr);\n\t        return rgbaArr;\n\t\n\t      case 'hsl':\n\t        if (params.length !== 3) {\n\t          setRgba(rgbaArr, 0, 0, 0, 1);\n\t          return;\n\t        }\n\t\n\t        hsla2rgba(params, rgbaArr);\n\t        putToCache(colorStr, rgbaArr);\n\t        return rgbaArr;\n\t\n\t      default:\n\t        return;\n\t    }\n\t  }\n\t\n\t  setRgba(rgbaArr, 0, 0, 0, 1);\n\t  return;\n\t}\n\t/**\n\t * @param {Array.<number>} hsla\n\t * @param {Array.<number>} rgba\n\t * @return {Array.<number>} rgba\n\t */\n\t\n\t\n\tfunction hsla2rgba(hsla, rgba) {\n\t  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n\t  // NOTE(deanm): According to the CSS spec s/l should only be\n\t  // percentages, but we don't bother and let float or percentage.\n\t\n\t  var s = parseCssFloat(hsla[1]);\n\t  var l = parseCssFloat(hsla[2]);\n\t  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n\t  var m1 = l * 2 - m2;\n\t  rgba = rgba || [];\n\t  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\t\n\t  if (hsla.length === 4) {\n\t    rgba[3] = hsla[3];\n\t  }\n\t\n\t  return rgba;\n\t}\n\t/**\n\t * @param {Array.<number>} rgba\n\t * @return {Array.<number>} hsla\n\t */\n\t\n\t\n\tfunction rgba2hsla(rgba) {\n\t  if (!rgba) {\n\t    return;\n\t  } // RGB from 0 to 255\n\t\n\t\n\t  var R = rgba[0] / 255;\n\t  var G = rgba[1] / 255;\n\t  var B = rgba[2] / 255;\n\t  var vMin = Math.min(R, G, B); // Min. value of RGB\n\t\n\t  var vMax = Math.max(R, G, B); // Max. value of RGB\n\t\n\t  var delta = vMax - vMin; // Delta RGB value\n\t\n\t  var L = (vMax + vMin) / 2;\n\t  var H;\n\t  var S; // HSL results from 0 to 1\n\t\n\t  if (delta === 0) {\n\t    H = 0;\n\t    S = 0;\n\t  } else {\n\t    if (L < 0.5) {\n\t      S = delta / (vMax + vMin);\n\t    } else {\n\t      S = delta / (2 - vMax - vMin);\n\t    }\n\t\n\t    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n\t    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n\t    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\t\n\t    if (R === vMax) {\n\t      H = deltaB - deltaG;\n\t    } else if (G === vMax) {\n\t      H = 1 / 3 + deltaR - deltaB;\n\t    } else if (B === vMax) {\n\t      H = 2 / 3 + deltaG - deltaR;\n\t    }\n\t\n\t    if (H < 0) {\n\t      H += 1;\n\t    }\n\t\n\t    if (H > 1) {\n\t      H -= 1;\n\t    }\n\t  }\n\t\n\t  var hsla = [H * 360, S, L];\n\t\n\t  if (rgba[3] != null) {\n\t    hsla.push(rgba[3]);\n\t  }\n\t\n\t  return hsla;\n\t}\n\t/**\n\t * @param {string} color\n\t * @param {number} level\n\t * @return {string}\n\t * @memberOf module:zrender/util/color\n\t */\n\t\n\t\n\tfunction lift(color, level) {\n\t  var colorArr = parse(color);\n\t\n\t  if (colorArr) {\n\t    for (var i = 0; i < 3; i++) {\n\t      if (level < 0) {\n\t        colorArr[i] = colorArr[i] * (1 - level) | 0;\n\t      } else {\n\t        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n\t      }\n\t    }\n\t\n\t    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n\t  }\n\t}\n\t/**\n\t * @param {string} color\n\t * @return {string}\n\t * @memberOf module:zrender/util/color\n\t */\n\t\n\t\n\tfunction toHex(color) {\n\t  var colorArr = parse(color);\n\t\n\t  if (colorArr) {\n\t    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n\t  }\n\t}\n\t/**\n\t * Map value to color. Faster than lerp methods because color is represented by rgba array.\n\t * @param {number} normalizedValue A float between 0 and 1.\n\t * @param {Array.<Array.<number>>} colors List of rgba color array\n\t * @param {Array.<number>} [out] Mapped gba color array\n\t * @return {Array.<number>} will be null/undefined if input illegal.\n\t */\n\t\n\t\n\tfunction fastLerp(normalizedValue, colors, out) {\n\t  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n\t    return;\n\t  }\n\t\n\t  out = out || [];\n\t  var value = normalizedValue * (colors.length - 1);\n\t  var leftIndex = Math.floor(value);\n\t  var rightIndex = Math.ceil(value);\n\t  var leftColor = colors[leftIndex];\n\t  var rightColor = colors[rightIndex];\n\t  var dv = value - leftIndex;\n\t  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n\t  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n\t  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n\t  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\t  return out;\n\t}\n\t/**\n\t * @deprecated\n\t */\n\t\n\t\n\tvar fastMapToColor = fastLerp;\n\t/**\n\t * @param {number} normalizedValue A float between 0 and 1.\n\t * @param {Array.<string>} colors Color list.\n\t * @param {boolean=} fullOutput Default false.\n\t * @return {(string|Object)} Result color. If fullOutput,\n\t *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n\t * @memberOf module:zrender/util/color\n\t */\n\t\n\tfunction lerp(normalizedValue, colors, fullOutput) {\n\t  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n\t    return;\n\t  }\n\t\n\t  var value = normalizedValue * (colors.length - 1);\n\t  var leftIndex = Math.floor(value);\n\t  var rightIndex = Math.ceil(value);\n\t  var leftColor = parse(colors[leftIndex]);\n\t  var rightColor = parse(colors[rightIndex]);\n\t  var dv = value - leftIndex;\n\t  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n\t  return fullOutput ? {\n\t    color: color,\n\t    leftIndex: leftIndex,\n\t    rightIndex: rightIndex,\n\t    value: value\n\t  } : color;\n\t}\n\t/**\n\t * @deprecated\n\t */\n\t\n\t\n\tvar mapToColor = lerp;\n\t/**\n\t * @param {string} color\n\t * @param {number=} h 0 ~ 360, ignore when null.\n\t * @param {number=} s 0 ~ 1, ignore when null.\n\t * @param {number=} l 0 ~ 1, ignore when null.\n\t * @return {string} Color string in rgba format.\n\t * @memberOf module:zrender/util/color\n\t */\n\t\n\tfunction modifyHSL(color, h, s, l) {\n\t  color = parse(color);\n\t\n\t  if (color) {\n\t    color = rgba2hsla(color);\n\t    h != null && (color[0] = clampCssAngle(h));\n\t    s != null && (color[1] = parseCssFloat(s));\n\t    l != null && (color[2] = parseCssFloat(l));\n\t    return stringify(hsla2rgba(color), 'rgba');\n\t  }\n\t}\n\t/**\n\t * @param {string} color\n\t * @param {number=} alpha 0 ~ 1\n\t * @return {string} Color string in rgba format.\n\t * @memberOf module:zrender/util/color\n\t */\n\t\n\t\n\tfunction modifyAlpha(color, alpha) {\n\t  color = parse(color);\n\t\n\t  if (color && alpha != null) {\n\t    color[3] = clampCssFloat(alpha);\n\t    return stringify(color, 'rgba');\n\t  }\n\t}\n\t/**\n\t * @param {Array.<number>} arrColor like [12,33,44,0.4]\n\t * @param {string} type 'rgba', 'hsva', ...\n\t * @return {string} Result color. (If input illegal, return undefined).\n\t */\n\t\n\t\n\tfunction stringify(arrColor, type) {\n\t  if (!arrColor || !arrColor.length) {\n\t    return;\n\t  }\n\t\n\t  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\t\n\t  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n\t    colorStr += ',' + arrColor[3];\n\t  }\n\t\n\t  return type + '(' + colorStr + ')';\n\t}\n\t\n\texports.parse = parse;\n\texports.lift = lift;\n\texports.toHex = toHex;\n\texports.fastLerp = fastLerp;\n\texports.fastMapToColor = fastMapToColor;\n\texports.lerp = lerp;\n\texports.mapToColor = mapToColor;\n\texports.modifyHSL = modifyHSL;\n\texports.modifyAlpha = modifyAlpha;\n\texports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1521:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Path = __webpack_require__(42);\n\t\n\tvar PathProxy = __webpack_require__(232);\n\t\n\tvar transformPath = __webpack_require__(1522);\n\t\n\t// command chars\n\tvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n\tvar mathSqrt = Math.sqrt;\n\tvar mathSin = Math.sin;\n\tvar mathCos = Math.cos;\n\tvar PI = Math.PI;\n\t\n\tvar vMag = function (v) {\n\t  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n\t};\n\t\n\tvar vRatio = function (u, v) {\n\t  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n\t};\n\t\n\tvar vAngle = function (u, v) {\n\t  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n\t};\n\t\n\tfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n\t  var psi = psiDeg * (PI / 180.0);\n\t  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n\t  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n\t  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\t\n\t  if (lambda > 1) {\n\t    rx *= mathSqrt(lambda);\n\t    ry *= mathSqrt(lambda);\n\t  }\n\t\n\t  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n\t  var cxp = f * rx * yp / ry;\n\t  var cyp = f * -ry * xp / rx;\n\t  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n\t  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n\t  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n\t  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n\t  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n\t  var dTheta = vAngle(u, v);\n\t\n\t  if (vRatio(u, v) <= -1) {\n\t    dTheta = PI;\n\t  }\n\t\n\t  if (vRatio(u, v) >= 1) {\n\t    dTheta = 0;\n\t  }\n\t\n\t  if (fs === 0 && dTheta > 0) {\n\t    dTheta = dTheta - 2 * PI;\n\t  }\n\t\n\t  if (fs === 1 && dTheta < 0) {\n\t    dTheta = dTheta + 2 * PI;\n\t  }\n\t\n\t  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n\t}\n\t\n\tfunction createPathProxyFromString(data) {\n\t  if (!data) {\n\t    return [];\n\t  } // command string\n\t\n\t\n\t  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n\t  var n; // create pipes so that we can split the data\n\t\n\t  for (n = 0; n < cc.length; n++) {\n\t    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n\t  } // create array\n\t\n\t\n\t  var arr = cs.split('|'); // init context point\n\t\n\t  var cpx = 0;\n\t  var cpy = 0;\n\t  var path = new PathProxy();\n\t  var CMD = PathProxy.CMD;\n\t  var prevCmd;\n\t\n\t  for (n = 1; n < arr.length; n++) {\n\t    var str = arr[n];\n\t    var c = str.charAt(0);\n\t    var off = 0;\n\t    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n\t    var cmd;\n\t\n\t    if (p.length > 0 && p[0] === '') {\n\t      p.shift();\n\t    }\n\t\n\t    for (var i = 0; i < p.length; i++) {\n\t      p[i] = parseFloat(p[i]);\n\t    }\n\t\n\t    while (off < p.length && !isNaN(p[off])) {\n\t      if (isNaN(p[0])) {\n\t        break;\n\t      }\n\t\n\t      var ctlPtx;\n\t      var ctlPty;\n\t      var rx;\n\t      var ry;\n\t      var psi;\n\t      var fa;\n\t      var fs;\n\t      var x1 = cpx;\n\t      var y1 = cpy; // convert l, H, h, V, and v to L\n\t\n\t      switch (c) {\n\t        case 'l':\n\t          cpx += p[off++];\n\t          cpy += p[off++];\n\t          cmd = CMD.L;\n\t          path.addData(cmd, cpx, cpy);\n\t          break;\n\t\n\t        case 'L':\n\t          cpx = p[off++];\n\t          cpy = p[off++];\n\t          cmd = CMD.L;\n\t          path.addData(cmd, cpx, cpy);\n\t          break;\n\t\n\t        case 'm':\n\t          cpx += p[off++];\n\t          cpy += p[off++];\n\t          cmd = CMD.M;\n\t          path.addData(cmd, cpx, cpy);\n\t          c = 'l';\n\t          break;\n\t\n\t        case 'M':\n\t          cpx = p[off++];\n\t          cpy = p[off++];\n\t          cmd = CMD.M;\n\t          path.addData(cmd, cpx, cpy);\n\t          c = 'L';\n\t          break;\n\t\n\t        case 'h':\n\t          cpx += p[off++];\n\t          cmd = CMD.L;\n\t          path.addData(cmd, cpx, cpy);\n\t          break;\n\t\n\t        case 'H':\n\t          cpx = p[off++];\n\t          cmd = CMD.L;\n\t          path.addData(cmd, cpx, cpy);\n\t          break;\n\t\n\t        case 'v':\n\t          cpy += p[off++];\n\t          cmd = CMD.L;\n\t          path.addData(cmd, cpx, cpy);\n\t          break;\n\t\n\t        case 'V':\n\t          cpy = p[off++];\n\t          cmd = CMD.L;\n\t          path.addData(cmd, cpx, cpy);\n\t          break;\n\t\n\t        case 'C':\n\t          cmd = CMD.C;\n\t          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n\t          cpx = p[off - 2];\n\t          cpy = p[off - 1];\n\t          break;\n\t\n\t        case 'c':\n\t          cmd = CMD.C;\n\t          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n\t          cpx += p[off - 2];\n\t          cpy += p[off - 1];\n\t          break;\n\t\n\t        case 'S':\n\t          ctlPtx = cpx;\n\t          ctlPty = cpy;\n\t          var len = path.len();\n\t          var pathData = path.data;\n\t\n\t          if (prevCmd === CMD.C) {\n\t            ctlPtx += cpx - pathData[len - 4];\n\t            ctlPty += cpy - pathData[len - 3];\n\t          }\n\t\n\t          cmd = CMD.C;\n\t          x1 = p[off++];\n\t          y1 = p[off++];\n\t          cpx = p[off++];\n\t          cpy = p[off++];\n\t          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n\t          break;\n\t\n\t        case 's':\n\t          ctlPtx = cpx;\n\t          ctlPty = cpy;\n\t          var len = path.len();\n\t          var pathData = path.data;\n\t\n\t          if (prevCmd === CMD.C) {\n\t            ctlPtx += cpx - pathData[len - 4];\n\t            ctlPty += cpy - pathData[len - 3];\n\t          }\n\t\n\t          cmd = CMD.C;\n\t          x1 = cpx + p[off++];\n\t          y1 = cpy + p[off++];\n\t          cpx += p[off++];\n\t          cpy += p[off++];\n\t          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n\t          break;\n\t\n\t        case 'Q':\n\t          x1 = p[off++];\n\t          y1 = p[off++];\n\t          cpx = p[off++];\n\t          cpy = p[off++];\n\t          cmd = CMD.Q;\n\t          path.addData(cmd, x1, y1, cpx, cpy);\n\t          break;\n\t\n\t        case 'q':\n\t          x1 = p[off++] + cpx;\n\t          y1 = p[off++] + cpy;\n\t          cpx += p[off++];\n\t          cpy += p[off++];\n\t          cmd = CMD.Q;\n\t          path.addData(cmd, x1, y1, cpx, cpy);\n\t          break;\n\t\n\t        case 'T':\n\t          ctlPtx = cpx;\n\t          ctlPty = cpy;\n\t          var len = path.len();\n\t          var pathData = path.data;\n\t\n\t          if (prevCmd === CMD.Q) {\n\t            ctlPtx += cpx - pathData[len - 4];\n\t            ctlPty += cpy - pathData[len - 3];\n\t          }\n\t\n\t          cpx = p[off++];\n\t          cpy = p[off++];\n\t          cmd = CMD.Q;\n\t          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n\t          break;\n\t\n\t        case 't':\n\t          ctlPtx = cpx;\n\t          ctlPty = cpy;\n\t          var len = path.len();\n\t          var pathData = path.data;\n\t\n\t          if (prevCmd === CMD.Q) {\n\t            ctlPtx += cpx - pathData[len - 4];\n\t            ctlPty += cpy - pathData[len - 3];\n\t          }\n\t\n\t          cpx += p[off++];\n\t          cpy += p[off++];\n\t          cmd = CMD.Q;\n\t          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n\t          break;\n\t\n\t        case 'A':\n\t          rx = p[off++];\n\t          ry = p[off++];\n\t          psi = p[off++];\n\t          fa = p[off++];\n\t          fs = p[off++];\n\t          x1 = cpx, y1 = cpy;\n\t          cpx = p[off++];\n\t          cpy = p[off++];\n\t          cmd = CMD.A;\n\t          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n\t          break;\n\t\n\t        case 'a':\n\t          rx = p[off++];\n\t          ry = p[off++];\n\t          psi = p[off++];\n\t          fa = p[off++];\n\t          fs = p[off++];\n\t          x1 = cpx, y1 = cpy;\n\t          cpx += p[off++];\n\t          cpy += p[off++];\n\t          cmd = CMD.A;\n\t          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n\t          break;\n\t      }\n\t    }\n\t\n\t    if (c === 'z' || c === 'Z') {\n\t      cmd = CMD.Z;\n\t      path.addData(cmd);\n\t    }\n\t\n\t    prevCmd = cmd;\n\t  }\n\t\n\t  path.toStatic();\n\t  return path;\n\t} // TODO Optimize double memory cost problem\n\t\n\t\n\tfunction createPathOptions(str, opts) {\n\t  var pathProxy = createPathProxyFromString(str);\n\t  opts = opts || {};\n\t\n\t  opts.buildPath = function (path) {\n\t    if (path.setData) {\n\t      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\t\n\t      var ctx = path.getContext();\n\t\n\t      if (ctx) {\n\t        path.rebuildPath(ctx);\n\t      }\n\t    } else {\n\t      var ctx = path;\n\t      pathProxy.rebuildPath(ctx);\n\t    }\n\t  };\n\t\n\t  opts.applyTransform = function (m) {\n\t    transformPath(pathProxy, m);\n\t    this.dirty(true);\n\t  };\n\t\n\t  return opts;\n\t}\n\t/**\n\t * Create a Path object from path string data\n\t * http://www.w3.org/TR/SVG/paths.html#PathData\n\t * @param  {Object} opts Other options\n\t */\n\t\n\t\n\tfunction createFromString(str, opts) {\n\t  return new Path(createPathOptions(str, opts));\n\t}\n\t/**\n\t * Create a Path class from path string data\n\t * @param  {string} str\n\t * @param  {Object} opts Other options\n\t */\n\t\n\t\n\tfunction extendFromString(str, opts) {\n\t  return Path.extend(createPathOptions(str, opts));\n\t}\n\t/**\n\t * Merge multiple paths\n\t */\n\t// TODO Apply transform\n\t// TODO stroke dash\n\t// TODO Optimize double memory cost problem\n\t\n\t\n\tfunction mergePath(pathEls, opts) {\n\t  var pathList = [];\n\t  var len = pathEls.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    var pathEl = pathEls[i];\n\t\n\t    if (!pathEl.path) {\n\t      pathEl.createPathProxy();\n\t    }\n\t\n\t    if (pathEl.__dirtyPath) {\n\t      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n\t    }\n\t\n\t    pathList.push(pathEl.path);\n\t  }\n\t\n\t  var pathBundle = new Path(opts); // Need path proxy.\n\t\n\t  pathBundle.createPathProxy();\n\t\n\t  pathBundle.buildPath = function (path) {\n\t    path.appendPath(pathList); // Svg and vml renderer don't have context\n\t\n\t    var ctx = path.getContext();\n\t\n\t    if (ctx) {\n\t      path.rebuildPath(ctx);\n\t    }\n\t  };\n\t\n\t  return pathBundle;\n\t}\n\t\n\texports.createFromString = createFromString;\n\texports.extendFromString = extendFromString;\n\texports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1522:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar PathProxy = __webpack_require__(232);\n\t\n\tvar _vector = __webpack_require__(10);\n\t\n\tvar v2ApplyTransform = _vector.applyTransform;\n\tvar CMD = PathProxy.CMD;\n\tvar points = [[], [], []];\n\tvar mathSqrt = Math.sqrt;\n\tvar mathAtan2 = Math.atan2;\n\t\n\tfunction _default(path, m) {\n\t  var data = path.data;\n\t  var cmd;\n\t  var nPoint;\n\t  var i;\n\t  var j;\n\t  var k;\n\t  var p;\n\t  var M = CMD.M;\n\t  var C = CMD.C;\n\t  var L = CMD.L;\n\t  var R = CMD.R;\n\t  var A = CMD.A;\n\t  var Q = CMD.Q;\n\t\n\t  for (i = 0, j = 0; i < data.length;) {\n\t    cmd = data[i++];\n\t    j = i;\n\t    nPoint = 0;\n\t\n\t    switch (cmd) {\n\t      case M:\n\t        nPoint = 1;\n\t        break;\n\t\n\t      case L:\n\t        nPoint = 1;\n\t        break;\n\t\n\t      case C:\n\t        nPoint = 3;\n\t        break;\n\t\n\t      case Q:\n\t        nPoint = 2;\n\t        break;\n\t\n\t      case A:\n\t        var x = m[4];\n\t        var y = m[5];\n\t        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n\t        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n\t        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\t\n\t        data[i] *= sx;\n\t        data[i++] += x; // cy\n\t\n\t        data[i] *= sy;\n\t        data[i++] += y; // Scale rx and ry\n\t        // FIXME Assume psi is 0 here\n\t\n\t        data[i++] *= sx;\n\t        data[i++] *= sy; // Start angle\n\t\n\t        data[i++] += angle; // end angle\n\t\n\t        data[i++] += angle; // FIXME psi\n\t\n\t        i += 2;\n\t        j = i;\n\t        break;\n\t\n\t      case R:\n\t        // x0, y0\n\t        p[0] = data[i++];\n\t        p[1] = data[i++];\n\t        v2ApplyTransform(p, p, m);\n\t        data[j++] = p[0];\n\t        data[j++] = p[1]; // x1, y1\n\t\n\t        p[0] += data[i++];\n\t        p[1] += data[i++];\n\t        v2ApplyTransform(p, p, m);\n\t        data[j++] = p[0];\n\t        data[j++] = p[1];\n\t    }\n\t\n\t    for (k = 0; k < nPoint; k++) {\n\t      var p = points[k];\n\t      p[0] = data[i++];\n\t      p[1] = data[i++];\n\t      v2ApplyTransform(p, p, m); // Write back\n\t\n\t      data[j++] = p[0];\n\t      data[j++] = p[1];\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = _default;\n\n/***/ }),\n\n/***/ 573:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar guid = __webpack_require__(564);\n\t\n\tvar env = __webpack_require__(35);\n\t\n\tvar zrUtil = __webpack_require__(3);\n\t\n\tvar Handler = __webpack_require__(1486);\n\t\n\tvar Storage = __webpack_require__(1489);\n\t\n\tvar Painter = __webpack_require__(1488);\n\t\n\tvar Animation = __webpack_require__(1490);\n\t\n\tvar HandlerProxy = __webpack_require__(1500);\n\t\n\t/*!\n\t* ZRender, a high performance 2d drawing library.\n\t*\n\t* Copyright (c) 2013, Baidu Inc.\n\t* All rights reserved.\n\t*\n\t* LICENSE\n\t* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n\t*/\n\tvar useVML = !env.canvasSupported;\n\tvar painterCtors = {\n\t  canvas: Painter\n\t};\n\tvar instances = {}; // ZRender实例map索引\n\t\n\t/**\n\t * @type {string}\n\t */\n\t\n\tvar version = '4.0.1';\n\t/**\n\t * Initializing a zrender instance\n\t * @param {HTMLElement} dom\n\t * @param {Object} opts\n\t * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n\t * @param {number} [opts.devicePixelRatio]\n\t * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n\t * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n\t * @return {module:zrender/ZRender}\n\t */\n\t\n\tfunction init(dom, opts) {\n\t  var zr = new ZRender(guid(), dom, opts);\n\t  instances[zr.id] = zr;\n\t  return zr;\n\t}\n\t/**\n\t * Dispose zrender instance\n\t * @param {module:zrender/ZRender} zr\n\t */\n\t\n\t\n\tfunction dispose(zr) {\n\t  if (zr) {\n\t    zr.dispose();\n\t  } else {\n\t    for (var key in instances) {\n\t      if (instances.hasOwnProperty(key)) {\n\t        instances[key].dispose();\n\t      }\n\t    }\n\t\n\t    instances = {};\n\t  }\n\t\n\t  return this;\n\t}\n\t/**\n\t * Get zrender instance by id\n\t * @param {string} id zrender instance id\n\t * @return {module:zrender/ZRender}\n\t */\n\t\n\t\n\tfunction getInstance(id) {\n\t  return instances[id];\n\t}\n\t\n\tfunction registerPainter(name, Ctor) {\n\t  painterCtors[name] = Ctor;\n\t}\n\t\n\tfunction delInstance(id) {\n\t  delete instances[id];\n\t}\n\t/**\n\t * @module zrender/ZRender\n\t */\n\t\n\t/**\n\t * @constructor\n\t * @alias module:zrender/ZRender\n\t * @param {string} id\n\t * @param {HTMLElement} dom\n\t * @param {Object} opts\n\t * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n\t * @param {number} [opts.devicePixelRatio]\n\t * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n\t * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n\t */\n\t\n\t\n\tvar ZRender = function (id, dom, opts) {\n\t  opts = opts || {};\n\t  /**\n\t   * @type {HTMLDomElement}\n\t   */\n\t\n\t  this.dom = dom;\n\t  /**\n\t   * @type {string}\n\t   */\n\t\n\t  this.id = id;\n\t  var self = this;\n\t  var storage = new Storage();\n\t  var rendererType = opts.renderer; // TODO WebGL\n\t\n\t  if (useVML) {\n\t    if (!painterCtors.vml) {\n\t      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n\t    }\n\t\n\t    rendererType = 'vml';\n\t  } else if (!rendererType || !painterCtors[rendererType]) {\n\t    rendererType = 'canvas';\n\t  }\n\t\n\t  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n\t  this.storage = storage;\n\t  this.painter = painter;\n\t  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n\t  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\t  /**\n\t   * @type {module:zrender/animation/Animation}\n\t   */\n\t\n\t  this.animation = new Animation({\n\t    stage: {\n\t      update: zrUtil.bind(this.flush, this)\n\t    }\n\t  });\n\t  this.animation.start();\n\t  /**\n\t   * @type {boolean}\n\t   * @private\n\t   */\n\t\n\t  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n\t  // FIXME 有点ugly\n\t\n\t  var oldDelFromStorage = storage.delFromStorage;\n\t  var oldAddToStorage = storage.addToStorage;\n\t\n\t  storage.delFromStorage = function (el) {\n\t    oldDelFromStorage.call(storage, el);\n\t    el && el.removeSelfFromZr(self);\n\t  };\n\t\n\t  storage.addToStorage = function (el) {\n\t    oldAddToStorage.call(storage, el);\n\t    el.addSelfToZr(self);\n\t  };\n\t};\n\t\n\tZRender.prototype = {\n\t  constructor: ZRender,\n\t\n\t  /**\n\t   * 获取实例唯一标识\n\t   * @return {string}\n\t   */\n\t  getId: function () {\n\t    return this.id;\n\t  },\n\t\n\t  /**\n\t   * 添加元素\n\t   * @param  {module:zrender/Element} el\n\t   */\n\t  add: function (el) {\n\t    this.storage.addRoot(el);\n\t    this._needsRefresh = true;\n\t  },\n\t\n\t  /**\n\t   * 删除元素\n\t   * @param  {module:zrender/Element} el\n\t   */\n\t  remove: function (el) {\n\t    this.storage.delRoot(el);\n\t    this._needsRefresh = true;\n\t  },\n\t\n\t  /**\n\t   * Change configuration of layer\n\t   * @param {string} zLevel\n\t   * @param {Object} config\n\t   * @param {string} [config.clearColor=0] Clear color\n\t   * @param {string} [config.motionBlur=false] If enable motion blur\n\t   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n\t  */\n\t  configLayer: function (zLevel, config) {\n\t    this.painter.configLayer(zLevel, config);\n\t    this._needsRefresh = true;\n\t  },\n\t\n\t  /**\n\t   * Repaint the canvas immediately\n\t   */\n\t  refreshImmediately: function () {\n\t    // var start = new Date();\n\t    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n\t    // Or it will cause zrender refreshes again and again.\n\t    this._needsRefresh = false;\n\t    this.painter.refresh();\n\t    /**\n\t     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n\t     */\n\t\n\t    this._needsRefresh = false; // var end = new Date();\n\t    // var log = document.getElementById('log');\n\t    // if (log) {\n\t    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n\t    // }\n\t  },\n\t\n\t  /**\n\t   * Mark and repaint the canvas in the next frame of browser\n\t   */\n\t  refresh: function () {\n\t    this._needsRefresh = true;\n\t  },\n\t\n\t  /**\n\t   * Perform all refresh\n\t   */\n\t  flush: function () {\n\t    if (this._needsRefresh) {\n\t      this.refreshImmediately();\n\t    }\n\t\n\t    if (this._needsRefreshHover) {\n\t      this.refreshHoverImmediately();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Add element to hover layer\n\t   * @param  {module:zrender/Element} el\n\t   * @param {Object} style\n\t   */\n\t  addHover: function (el, style) {\n\t    if (this.painter.addHover) {\n\t      this.painter.addHover(el, style);\n\t      this.refreshHover();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Add element from hover layer\n\t   * @param  {module:zrender/Element} el\n\t   */\n\t  removeHover: function (el) {\n\t    if (this.painter.removeHover) {\n\t      this.painter.removeHover(el);\n\t      this.refreshHover();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Clear all hover elements in hover layer\n\t   * @param  {module:zrender/Element} el\n\t   */\n\t  clearHover: function () {\n\t    if (this.painter.clearHover) {\n\t      this.painter.clearHover();\n\t      this.refreshHover();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Refresh hover in next frame\n\t   */\n\t  refreshHover: function () {\n\t    this._needsRefreshHover = true;\n\t  },\n\t\n\t  /**\n\t   * Refresh hover immediately\n\t   */\n\t  refreshHoverImmediately: function () {\n\t    this._needsRefreshHover = false;\n\t    this.painter.refreshHover && this.painter.refreshHover();\n\t  },\n\t\n\t  /**\n\t   * Resize the canvas.\n\t   * Should be invoked when container size is changed\n\t   * @param {Object} [opts]\n\t   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n\t   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n\t   */\n\t  resize: function (opts) {\n\t    opts = opts || {};\n\t    this.painter.resize(opts.width, opts.height);\n\t    this.handler.resize();\n\t  },\n\t\n\t  /**\n\t   * Stop and clear all animation immediately\n\t   */\n\t  clearAnimation: function () {\n\t    this.animation.clear();\n\t  },\n\t\n\t  /**\n\t   * Get container width\n\t   */\n\t  getWidth: function () {\n\t    return this.painter.getWidth();\n\t  },\n\t\n\t  /**\n\t   * Get container height\n\t   */\n\t  getHeight: function () {\n\t    return this.painter.getHeight();\n\t  },\n\t\n\t  /**\n\t   * Export the canvas as Base64 URL\n\t   * @param {string} type\n\t   * @param {string} [backgroundColor='#fff']\n\t   * @return {string} Base64 URL\n\t   */\n\t  // toDataURL: function(type, backgroundColor) {\n\t  //     return this.painter.getRenderedCanvas({\n\t  //         backgroundColor: backgroundColor\n\t  //     }).toDataURL(type);\n\t  // },\n\t\n\t  /**\n\t   * Converting a path to image.\n\t   * It has much better performance of drawing image rather than drawing a vector path.\n\t   * @param {module:zrender/graphic/Path} e\n\t   * @param {number} width\n\t   * @param {number} height\n\t   */\n\t  pathToImage: function (e, dpr) {\n\t    return this.painter.pathToImage(e, dpr);\n\t  },\n\t\n\t  /**\n\t   * Set default cursor\n\t   * @param {string} [cursorStyle='default'] 例如 crosshair\n\t   */\n\t  setCursorStyle: function (cursorStyle) {\n\t    this.handler.setCursorStyle(cursorStyle);\n\t  },\n\t\n\t  /**\n\t   * Find hovered element\n\t   * @param {number} x\n\t   * @param {number} y\n\t   * @return {Object} {target, topTarget}\n\t   */\n\t  findHover: function (x, y) {\n\t    return this.handler.findHover(x, y);\n\t  },\n\t\n\t  /**\n\t   * Bind event\n\t   *\n\t   * @param {string} eventName Event name\n\t   * @param {Function} eventHandler Handler function\n\t   * @param {Object} [context] Context object\n\t   */\n\t  on: function (eventName, eventHandler, context) {\n\t    this.handler.on(eventName, eventHandler, context);\n\t  },\n\t\n\t  /**\n\t   * Unbind event\n\t   * @param {string} eventName Event name\n\t   * @param {Function} [eventHandler] Handler function\n\t   */\n\t  off: function (eventName, eventHandler) {\n\t    this.handler.off(eventName, eventHandler);\n\t  },\n\t\n\t  /**\n\t   * Trigger event manually\n\t   *\n\t   * @param {string} eventName Event name\n\t   * @param {event=} event Event object\n\t   */\n\t  trigger: function (eventName, event) {\n\t    this.handler.trigger(eventName, event);\n\t  },\n\t\n\t  /**\n\t   * Clear all objects and the canvas.\n\t   */\n\t  clear: function () {\n\t    this.storage.delRoot();\n\t    this.painter.clear();\n\t  },\n\t\n\t  /**\n\t   * Dispose self.\n\t   */\n\t  dispose: function () {\n\t    this.animation.stop();\n\t    this.clear();\n\t    this.storage.dispose();\n\t    this.painter.dispose();\n\t    this.handler.dispose();\n\t    this.animation = this.storage = this.painter = this.handler = null;\n\t    delInstance(this.id);\n\t  }\n\t};\n\texports.version = version;\n\texports.init = init;\n\texports.dispose = dispose;\n\texports.getInstance = getInstance;\n\texports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 623:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _classCallCheck2 = __webpack_require__(13);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _possibleConstructorReturn2 = __webpack_require__(16);\n\t\n\tvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\t\n\tvar _inherits2 = __webpack_require__(15);\n\t\n\tvar _inherits3 = _interopRequireDefault(_inherits2);\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _echarts = __webpack_require__(27);\n\t\n\tvar _echarts2 = _interopRequireDefault(_echarts);\n\t\n\t__webpack_require__(787);\n\t\n\t__webpack_require__(781);\n\t\n\t__webpack_require__(754);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar LearningMap = function (_Component) {\n\t  (0, _inherits3.default)(LearningMap, _Component);\n\t\n\t  function LearningMap() {\n\t    (0, _classCallCheck3.default)(this, LearningMap);\n\t    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  LearningMap.prototype.componentDidMount = function componentDidMount() {\n\t    this.initPie();\n\t  };\n\t\n\t  LearningMap.prototype.componentDidUpdate = function componentDidUpdate() {\n\t    this.initPie();\n\t  };\n\t\n\t  LearningMap.prototype.initPie = function initPie() {\n\t    var _props$options = this.props.options,\n\t        options = _props$options === undefined ? {} : _props$options; // 外部传入的data数据\n\t\n\t    var myChart = _echarts2.default.init(this.ID); // 初始化echarts\n\t\n\t    // 设置options\n\t    myChart.setOption(options);\n\t    window.onresize = function () {\n\t      myChart.resize();\n\t    };\n\t  };\n\t\n\t  LearningMap.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    var _props = this.props,\n\t        width = _props.width,\n\t        height = _props.height;\n\t\n\t    return _react2.default.createElement('div', {\n\t      ref: function ref(ID) {\n\t        return _this2.ID = ID;\n\t      },\n\t      style: { width: width, height: height }\n\t    });\n\t  };\n\t\n\t  return LearningMap;\n\t}(_react.Component);\n\t\n\tLearningMap.propTypes = {\n\t  width: _propTypes2.default.string,\n\t  height: _propTypes2.default.string\n\t};\n\t\n\tLearningMap.defaultProps = {\n\t  width: '100%',\n\t  height: '200px'\n\t};\n\t\n\texports.default = LearningMap;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _classCallCheck2 = __webpack_require__(13);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _possibleConstructorReturn2 = __webpack_require__(16);\n\t\n\tvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\t\n\tvar _inherits2 = __webpack_require__(15);\n\t\n\tvar _inherits3 = _interopRequireDefault(_inherits2);\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _LearningMap = __webpack_require__(623);\n\t\n\tvar _LearningMap2 = _interopRequireDefault(_LearningMap);\n\t\n\tvar _frontEnd = __webpack_require__(607);\n\t\n\tvar _frontEnd2 = _interopRequireDefault(_frontEnd);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Learning = function (_Component) {\n\t  (0, _inherits3.default)(Learning, _Component);\n\t\n\t  function Learning(props) {\n\t    (0, _classCallCheck3.default)(this, Learning);\n\t\n\t    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\t\n\t    _this.state = {\n\t      options: {}\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  Learning.prototype.componentWillMount = function componentWillMount() {\n\t    this.setState({ options: _frontEnd2.default });\n\t  };\n\t\n\t  Learning.prototype.render = function render() {\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'container' },\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        '\\u524D\\u7AEF\\u5B78\\u7FD2\\u5716\\u8B5C'\n\t      ),\n\t      this.state.options && _react2.default.createElement(_LearningMap2.default, {\n\t        width: '50%',\n\t        height: '100vh',\n\t        options: this.state.options\n\t      })\n\t    );\n\t  };\n\t\n\t  return Learning;\n\t}(_react.Component);\n\t\n\texports.default = Learning;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-demo-learning-index-js-d01b2f8b2a420716be8a.js","const data = [{\n  name: 'HTML',\n  draggable: 'true',\n}, {\n  name: 'CSS',\n  category: 'CSS',\n  draggable: 'true',\n}, {\n  name: 'JavaScript',\n  category: 'JavaScript',\n  draggable: 'true',\n}, {\n  name: 'ECMAScript 6',\n  category: 'JavaScript',\n}, {\n  name: 'HTTP',\n}, {\n  name: 'Webpack',\n}, {\n  name: 'Babel',\n  category: 'JavaScript',\n}, {\n  name: 'React.js',\n  category: 'JavaScript',\n}, {\n  name: 'Vue.js',\n  category: 'JavaScript',\n}, {\n  name: 'AngularJS',\n  category: 'JavaScript',\n}, {\n  name: 'TypeScript',\n  category: 'JavaScript',\n}, {\n  name: 'CoffeeScript',\n  category: 'JavaScript',\n}, {\n  name: 'axios',\n}, {\n  name: 'XMLHttpRequest',\n}, {\n  name: 'Node.js',\n}, {\n  name: 'Bootstrap',\n  category: 'CSS',\n}, {\n  name: 'SCSS',\n  category: 'CSS',\n}, {\n  name: 'LESS',\n  category: 'CSS',\n}, {\n  name: 'SASS',\n  category: 'CSS',\n}, {\n  name: 'PostCSS',\n  category: 'CSS',\n}, {\n  name: 'gulp',\n}, {\n  name: 'grunt',\n}, {\n  name: 'npm scripts',\n}, {\n  name: 'CSS Prepossesor',\n  category: 'CSS',\n}, {\n  name: 'moment.js',\n  category: 'JavaScript',\n}, {\n  name: 'Database',\n}, {\n  name: 'MongoDB',\n}, {\n  name: 'MySQL',\n}, {\n  name: '瀏覽器',\n}, {\n  name: '瀏覽器渲染頁面過程',\n}, {\n  name: 'SPA',\n}, {\n  name: 'Local Storage',\n}, {\n  name: 'Session Storage',\n}, {\n  name: 'Redux',\n}, {\n  name: 'Flux',\n}, {\n  name: 'HTML5',\n  category: 'HTML',\n}, {\n  name: 'CSS3',\n  category: 'CSS',\n}, {\n  name: '前端',\n}, {\n  name: '後端',\n}, {\n  name: 'HTTP2',\n}, {\n  name: 'CSR',\n}, {\n  name: 'SSR',\n}, {\n  name: 'WebSocket',\n}, {\n  name: 'Socket.io',\n}, {\n  name: 'Express.js',\n}, {\n  name: 'Koa',\n}, {\n  name: 'Storage',\n}, {\n  name: 'IndexDB',\n}, {\n  name: '常用網站',\n}, {\n  name: '掘金',\n}, {\n  name: 'V2EX',\n}, {\n  name: 'MDN',\n}, {\n  name: 'CSDN',\n}, {\n  name: 'Github',\n}, {\n  name: 'CodePen',\n}];\n\nexport default data;\n\n\n\n// WEBPACK FOOTER //\n// ./data/front-end/data.js","import links from './link';\nimport data from './data';\n\nconst options = {\n  title: {\n    text: '前端學習圖譜',\n    top: 'top',\n    left: 'center',\n  },\n  tooltip: {},\n  legend: [{\n    tooltip: {\n      show: true,\n    },\n    selectedMode: 'false',\n    bottom: 20,\n    data: ['HTML', 'CSS', 'JavaScript'],\n  }],\n  toolbox: {\n    show: true,\n    feature: {\n      dataView: {\n        show: true,\n        readOnly: true,\n      },\n      restore: {\n        show: true,\n      },\n      saveAsImage: {\n        show: true,\n      },\n    },\n  },\n  animationDuration: 3000,\n  animationEasingUpdate: 'quinticInOut',\n  series: [{\n    name: '前端學習圖譜',\n    type: 'graph',\n    layout: 'force',\n    force: {\n      repulsion: 200,\n    },\n    data,\n    links,\n    categories: [{\n      name: 'HTML',\n    }, {\n      name: 'CSS',\n    }, {\n      name: 'JavaScript',\n    }],\n    focusNodeAdjacency: true,\n    roam: true,\n    label: {\n      normal: {\n        show: true,\n        position: 'top',\n      },\n    },\n    lineStyle: {\n      normal: {\n        color: 'source',\n        curveness: 0,\n        type: 'solid',\n      },\n    },\n  }],\n};\n\n\nexport default options;\n\n\n\n// WEBPACK FOOTER //\n// ./data/front-end/index.js","const css = [\n  {\n    source: 'CSS Prepossesor',\n    target: 'Bootstrap',\n  },\n  {\n    source: 'CSS Prepossesor',\n    target: 'SCSS',\n  },\n  {\n    source: 'CSS Prepossesor',\n    target: 'LESS',\n  },\n  {\n    source: 'CSS Prepossesor',\n    target: 'SASS',\n  },\n  {\n    source: 'CSS Prepossesor',\n    target: 'PostCSS',\n  },\n  {\n    source: 'CSS',\n    target: 'CSS Prepossesor',\n  },\n];\n\nexport default css;\n\n\n\n// WEBPACK FOOTER //\n// ./data/front-end/link/css.js","import javascript from './javascript';\nimport css from './css';\nimport others from './others';\n\nconst links = [{\n  source: 'HTML',\n  target: '前端',\n},\n{\n  source: 'CSS',\n  target: '前端',\n},\n{\n  source: 'JavaScript',\n  target: '前端',\n},\n...javascript,\n...css,\n...others];\n\nexport default links;\n\n\n\n// WEBPACK FOOTER //\n// ./data/front-end/link/index.js","const javascript = [\n  {\n    source: 'JavaScript',\n    target: 'AngularJS',\n  }, {\n    source: 'JavaScript',\n    target: 'Vue.js',\n  }, {\n    source: 'JavaScript',\n    target: 'React.js',\n  }, {\n    source: 'JavaScript',\n    target: 'ECMAScript 6',\n  },\n  {\n    source: 'JavaScript',\n    target: 'CoffeeScript',\n  },\n  {\n    source: 'JavaScript',\n    target: 'TypeScript',\n  },\n  {\n    source: 'JavaScript',\n    target: 'Babel',\n  },\n  {\n    source: 'JavaScript',\n    target: 'Node.js',\n  },\n  {\n    source: 'Node.js',\n    target: 'gulp',\n  },\n  {\n    source: 'Node.js',\n    target: 'grunt',\n  },\n  {\n    source: 'Node.js',\n    target: 'npm scripts',\n  },\n];\n\nexport default javascript;\n\n\n\n// WEBPACK FOOTER //\n// ./data/front-end/link/javascript.js","const others = [\n  {\n    source: 'axios',\n    target: 'XMLHttpRequest',\n  },\n  {\n    source: 'HTTP',\n    target: 'axios',\n  },\n  {\n    source: 'Database',\n    target: 'MongoDB',\n  }, {\n    source: 'Database',\n    target: 'MySQL',\n  }, {\n    source: 'HTTP',\n    target: '前端',\n  }, {\n    source: 'HTTP',\n    target: '後端',\n  }, {\n    source: '後端',\n    target: 'Database',\n  },\n  {\n    source: 'HTML',\n    target: 'HTML5',\n  }, {\n    source: 'HTTP',\n    target: 'HTTP2',\n  }, {\n    source: 'HTTP',\n    target: 'Webpack',\n  }, {\n    source: 'CSS',\n    target: 'CSS3',\n  }, {\n    source: 'WebSocket',\n    target: 'Socket.io',\n  }, {\n    source: 'Node.js',\n    target: 'Express.js',\n  }, {\n    source: 'Node.js',\n    target: 'Koa',\n  }, {\n    source: 'React.js',\n    target: 'Redux',\n  }, {\n    source: '瀏覽器',\n    target: 'Storage',\n  }, {\n    source: 'Storage',\n    target: 'Local Storage',\n  }, {\n    source: 'Storage',\n    target: 'Session Storage',\n  }, {\n    source: 'Storage',\n    target: 'IndexDB',\n  }, {\n    source: '前端',\n    target: '瀏覽器',\n  }, {\n    source: '瀏覽器',\n    target: '瀏覽器渲染頁面過程',\n  }, {\n    source: '常用網站',\n    target: '掘金',\n  }, {\n    source: '常用網站',\n    target: 'V2EX',\n  }, {\n    source: '常用網站',\n    target: 'MDN',\n  }, {\n    source: '常用網站',\n    target: 'CSDN',\n  }, {\n    source: '前端',\n    target: '常用網站',\n  }, {\n    source: 'Redux',\n    target: 'Flux',\n  }, {\n    source: '常用網站',\n    target: 'Github',\n  }, {\n    source: '常用網站',\n    target: 'CodePen',\n  },\n];\n\nexport default others;\n\n\n\n// WEBPACK FOOTER //\n// ./data/front-end/link/others.js","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 189\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 407\n// module chunks = 107944193185467","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/roamHelper.js\n// module id = 753\n// module chunks = 107944193185467","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph.js\n// module id = 754\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/GraphSeries.js\n// module id = 755\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/GraphView.js\n// module id = 756\n// module chunks = 107944193185467","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/adjustEdge.js\n// module id = 757\n// module chunks = 107944193185467","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/categoryFilter.js\n// module id = 758\n// module chunks = 107944193185467","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/categoryVisual.js\n// module id = 759\n// module chunks = 107944193185467","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/circularLayout.js\n// module id = 760\n// module chunks = 107944193185467","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/circularLayoutHelper.js\n// module id = 408\n// module chunks = 107944193185467","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/createView.js\n// module id = 761\n// module chunks = 107944193185467","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/edgeVisual.js\n// module id = 762\n// module chunks = 107944193185467","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/forceHelper.js\n// module id = 763\n// module chunks = 107944193185467","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/forceLayout.js\n// module id = 764\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/graphAction.js\n// module id = 765\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/simpleLayout.js\n// module id = 766\n// module chunks = 107944193185467","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/graph/simpleLayoutHelper.js\n// module id = 409\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (normalText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Line.js\n// module id = 767\n// module chunks = 107944193185467","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/LineDraw.js\n// module id = 768\n// module chunks = 107944193185467","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/LinePath.js\n// module id = 769\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 770\n// module chunks = 107944193185467","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, isIgnore) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, isIgnore) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, isIgnore)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 771\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createGraphFromNodeEdge.js\n// module id = 772\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n */\nfunction createListFromArray(source, seriesModel) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType);\n        dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var list = new List(dimInfoList, seriesModel);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 410\n// module chunks = 107944193185467","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalIncremental = fields.incrementalRender;\n    var large = fields.large = pipelineContext.large;\n    var incremental = fields.incrementalRender = pipelineContext.incrementalRender;\n    return (originalLarge ^ large || originalIncremental ^ incremental) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createRenderPlanner.js\n// module id = 773\n// module chunks = 107944193185467","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 774\n// module chunks = 107944193185467","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 775\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 411\n// module chunks = 107944193185467","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 412\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 776\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 413\n// module chunks = 107944193185467","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 414\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 777\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 778\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 779\n// module chunks = 107944193185467","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 415\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 780\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 416\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 417\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 190\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 418\n// module chunks = 107944193185467","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 781\n// module chunks = 107944193185467","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 782\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/RoamController.js\n// module id = 783\n// module chunks = 107944193185467","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/cursorHelper.js\n// module id = 784\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/interactionMutex.js\n// module id = 785\n// module chunks = 107944193185467","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/roamHelper.js\n// module id = 786\n// module chunks = 107944193185467","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 787\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 788\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 789\n// module chunks = 107944193185467","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 790\n// module chunks = 107944193185467","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 26\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 419\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/View.js\n// module id = 791\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 792\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel) {\n    var isBaseAxisAndHasBarSeries = zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n      return seriesModel.getBaseAxis() === model.axis;\n    }).length > 0;\n\n    if ((scaleType === 'time' || scaleType === 'interval') && isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model) {\n  var ecModel = model.ecModel; // Get Axis Length\n\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  })); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  var totalOverFlow = Math.abs(minOverflow) + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.adjustScaleForOverflow = adjustScaleForOverflow;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 92\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 420\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 793\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 794\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 421\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 795\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 796\n// module chunks = 107944193185467","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 797\n// module chunks = 107944193185467","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 798\n// module chunks = 107944193185467","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 799\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 800\n// module chunks = 107944193185467","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 801\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/Graph.js\n// module id = 802\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\n\nfunction getIndicesCtor(list) {\n  var CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\n  var CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array; // The possible max value in this._indicies is always this._rawCount despite of filtering.\n\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is float64\n        type: 'float'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'float';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number|Array} [idx=0] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array.\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dims = this._dimensionsSummary.encode[coordDim];\n  return idx === true ? dims && dims.slice() || [] : dims ? dims[idx || 0] : null;\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = [Infinity, -Infinity];\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n}; // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n}; // FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n// Hack a much simpler _getFast\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim, stack) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = [Infinity, -Infinity];\n  stack = (stack || false) && this.isStacked(dim);\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count();\n  var cacheName = [dim, !!stack].join('_'); // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices && !stack;\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[cacheName];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[cacheName] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim, stack) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim, stack);\n};\n\nlistProto.setApproximateExtent = function (extent, dim, stack) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n\nlistProto.isStacked = function (concreteDim) {\n  var dimensionInfo = this._dimensionInfos[concreteDim];\n  return dimensionInfo && dimensionInfo.stackable && this.stackedOn;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var chunkSize = this._chunkSize;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var chunkIndex = Math.floor(i / chunkSize);\n      var chunkOffset = i % chunkSize;\n\n      if (dimData[chunkIndex][chunkOffset] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n  context = context || this;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  stack = stack || false;\n  context = context || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIdx);\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = stack ? this.get(dimensions[k], i, true) : this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range, stack) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  stack = stack || false;\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices && !stack) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n\n          if (val >= min && val <= max) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i];\n\n          if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      stack = stack || this.isStacked(dim0);\n\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n        var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n          var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      storage[dim] = zrUtil.indexOf(excludeDimensions, dim) >= 0 ? cloneDimStore(originalStorage[dim]) // Direct reference for other dimensions\n      : originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex, stack);\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = retValue[i];\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 191\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/OrdinalMeta.js\n// module id = 422\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/Source.js\n// module id = 127\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] can be specified to give names.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      isSysCoord: boolean True if the coord is from sys dimension.\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      resultItem.isSysCoord = true; // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n\n\nfunction getDimCount(source, sysDims, dimsDef, dimCount) {\n  if (dimCount == null) {\n    dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  }\n\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 423\n// module chunks = 107944193185467","var completeDimensions = require(\"./completeDimensions\");\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.extraPrefix]\n * @param {boolean} [opt.extraFromZero]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    extraPrefix: opt.extraPrefix,\n    extraFromZero: opt.extraFromZero\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/createDimensions.js\n// module id = 268\n// module chunks = 107944193185467","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/dataProvider.js\n// module id = 128\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var coordDimMap = summary.coordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (dimItem.isSysCoord && mayLabelDimType(dimItem.type)) {\n        // Use the last coord dim (and label friendly) as default label,\n        // because both show x, y on label is not look good, and usually\n        // y axis is more focusd conventionally.\n        defaultedLabel[0] = dimName;\n      }\n\n      coordDimMap.set(coordDim, 1);\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  coordDimMap.each(function (v, coordDim) {\n    dataDimsOnCoord = dataDimsOnCoord.concat(encode[coordDim]);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/dimensionHelper.js\n// module id = 269\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/linkList.js\n// module id = 803\n// module chunks = 107944193185467","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/sourceHelper.js\n// module id = 270\n// module chunks = 107944193185467","// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/sourceType.js\n// module id = 192\n// module chunks = 107944193185467","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.2';\nvar dependencies = {\n  zrender: '4.0.1'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // this._scheduler = new Scheduler();\n  // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(visualFuncs, ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished);\n\n      if (!scheduler.unfinished) {\n        this._zr && this._zr.flush();\n        this.trigger('finished');\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel);\n    stackSeriesData(ecModel);\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(visualFuncs, ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks(dataProcessorFuncs);\n  scheduler.prepareStageTasks(visualFuncs);\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  refresh(this, optionChanged, opts && opts.silent);\n};\n\nfunction refresh(ecIns, needPrepare, silent) {\n  ecIns[IN_MAIN_PROCESS] = true;\n  needPrepare && prepare(ecIns);\n  updateMethods.update.call(ecIns);\n  ecIns[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(ecIns, silent);\n  triggerUpdatedEvent.call(ecIns, silent);\n}\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params);\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 27\n// module chunks = 107944193185467","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 804\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 805\n// module chunks = 107944193185467","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/lang.js\n// module id = 806\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [data.mapDimension('x'), data.mapDimension('y')];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(data.mapDimension(valueAxis.dim), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 807\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 808\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 75\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 424\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 55\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 809\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (seriesName === modelUtil.DEFAULT_COMPONENT_NAME) {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (modelUtil.DEFAULT_COMPONENT_NAME === name) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 810\n// module chunks = 107944193185467","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 811\n// module chunks = 107944193185467","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 812\n// module chunks = 107944193185467","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 813\n// module chunks = 107944193185467","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 425\n// module chunks = 107944193185467","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/dataFormat.js\n// module id = 814\n// module chunks = 107944193185467","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 815\n// module chunks = 107944193185467","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 816\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 271\n// module chunks = 107944193185467","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 817\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/referHelper.js\n// module id = 426\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 818\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(labelOpt) {\n  var textStyle = isObject(labelOpt) && labelOpt.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOpt[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt.label);\n    opt.emphasis && compatTextStyle(opt.emphasis.label);\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt.label); // treemap\n\n  compatTextStyle(seriesOpt.upperLabel); // graph\n\n  compatTextStyle(seriesOpt.edgeLabel);\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis.label); // treemap\n\n    compatTextStyle(seriesOpt.emphasis.upperLabel); // graph\n\n    compatTextStyle(seriesOpt.emphasis.edgeLabel);\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    convertNormalEmphasis(timelineOpt, 'checkpointStyle');\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 819\n// module chunks = 107944193185467","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 272\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 820\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 821\n// module chunks = 107944193185467","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 193\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 822\n// module chunks = 107944193185467","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 427\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished;\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.incrementalRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count();\n  var incrementalRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    incrementalRender: incrementalRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function (stageHandlers, useClearVisual) {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(stageHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (stageHandlers, ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, stageHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (stageHandlers, ecModel, payload, opt) {\n  performStageTasks(this, stageHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/stream/Scheduler.js\n// module id = 823\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && start < end && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  taskIns._progress = !skip && taskIns._reset && taskIns._reset(taskIns.context);\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n};\n\nexports.createTask = createTask;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/stream/task.js\n// module id = 273\n// module chunks = 107944193185467","var contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/theme/dark.js\n// module id = 824\n// module chunks = 107944193185467","var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/theme/light.js\n// module id = 825\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 56\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 194\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 44\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 18\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 76\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * name may be displayed on screen, so use '-'.\n * But we should make sure it is not duplicated\n * with user specified name, so use '\\0';\n */\n\nvar DEFAULT_COMPONENT_NAME = '\\0-';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : DEFAULT_COMPONENT_NAME;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.DEFAULT_COMPONENT_NAME = DEFAULT_COMPONENT_NAME;\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 11\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 22\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 195\n// module chunks = 107944193185467","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 274\n// module chunks = 107944193185467","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var incremental = seriesModel.pipelineContext.incrementalRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = incremental && view.incrementalPrepareRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n  view[methodName](seriesModel, ecModel, api, payload);\n  return incremental ? renderTaskProgress : null;\n}\n\nfunction renderTaskProgress(params, context) {\n  context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n}\n\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 826\n// module chunks = 107944193185467","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 827\n// module chunks = 107944193185467","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/aria.js\n// module id = 828\n// module chunks = 107944193185467","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.get('name'), null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 829\n// module chunks = 107944193185467","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 830\n// module chunks = 107944193185467","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 558\n// module chunks = 107944193185467","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 1486\n// module chunks = 107944193185467","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 1487\n// module chunks = 107944193185467","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now(); // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear();\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear();\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 1488\n// module chunks = 107944193185467","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 1489\n// module chunks = 107944193185467","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // Frame should before stage update. Upper application\n    // depends on the sequence (e.g., echarts-stream)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 1490\n// module chunks = 107944193185467","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 559\n// module chunks = 107944193185467","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 1491\n// module chunks = 107944193185467","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 1492\n// module chunks = 107944193185467","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 560\n// module chunks = 107944193185467","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 230\n// module chunks = 107944193185467","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 1493\n// module chunks = 107944193185467","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 1494\n// module chunks = 107944193185467","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 1495\n// module chunks = 107944193185467","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 1496\n// module chunks = 107944193185467","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 1497\n// module chunks = 107944193185467","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 1498\n// module chunks = 107944193185467","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 113\n// module chunks = 107944193185467","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 561\n// module chunks = 107944193185467","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 562\n// module chunks = 107944193185467","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 231\n// module chunks = 107944193185467","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 34\n// module chunks = 107944193185467","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 1499\n// module chunks = 107944193185467","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 563\n// module chunks = 107944193185467","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 232\n// module chunks = 107944193185467","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 358\n// module chunks = 107944193185467","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 84\n// module chunks = 107944193185467","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 35\n// module chunks = 107944193185467","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 114\n// module chunks = 107944193185467","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 564\n// module chunks = 107944193185467","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 565\n// module chunks = 107944193185467","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 85\n// module chunks = 107944193185467","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 359\n// module chunks = 107944193185467","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 3\n// module chunks = 107944193185467","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 10\n// module chunks = 107944193185467","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 1500\n// module chunks = 107944193185467","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 1501\n// module chunks = 107944193185467","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 233\n// module chunks = 107944193185467","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 360\n// module chunks = 107944193185467","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 566\n// module chunks = 107944193185467","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/IncrementalDisplayable.js\n// module id = 1502\n// module chunks = 107944193185467","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 1503\n// module chunks = 107944193185467","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 42\n// module chunks = 107944193185467","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 567\n// module chunks = 107944193185467","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 1504\n// module chunks = 107944193185467","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 568\n// module chunks = 107944193185467","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 1505\n// module chunks = 107944193185467","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1506\n// module chunks = 107944193185467","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixShadow.js\n// module id = 569\n// module chunks = 107944193185467","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 361\n// module chunks = 107944193185467","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 570\n// module chunks = 107944193185467","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 571\n// module chunks = 107944193185467","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1507\n// module chunks = 107944193185467","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1508\n// module chunks = 107944193185467","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 572\n// module chunks = 107944193185467","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 1509\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 1510\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1511\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 1512\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 1513\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 1514\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 1515\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 1516\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 1517\n// module chunks = 107944193185467","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 1518\n// module chunks = 107944193185467","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 1519\n// module chunks = 107944193185467","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 1520\n// module chunks = 107944193185467","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 115\n// module chunks = 107944193185467","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 362\n// module chunks = 107944193185467","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 165\n// module chunks = 107944193185467","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 1521\n// module chunks = 107944193185467","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 1522\n// module chunks = 107944193185467","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.1';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 573\n// module chunks = 107944193185467","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/chart/graph';\n\nclass LearningMap extends Component {\n  componentDidMount() {\n    this.initPie();\n  }\n\n  componentDidUpdate() {\n    this.initPie();\n  }\n\n  initPie() {\n    const { options = {} } = this.props; // 外部传入的data数据\n    const myChart = echarts.init(this.ID); // 初始化echarts\n\n    // 设置options\n    myChart.setOption(options);\n    window.onresize = () => {\n      myChart.resize();\n    };\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (<div\n      ref={ID => this.ID = ID}\n      style={{ width, height }}\n    />);\n  }\n}\n\nLearningMap.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n\nLearningMap.defaultProps = {\n  width: '100%',\n  height: '200px',\n};\n\nexport default LearningMap;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/LearningMap/index.js","import React, { Component } from 'react';\n\nimport LearningMap from '../../../components/LearningMap';\nimport options from '../../../../data/front-end';\n\nclass Learning extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {},\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ options });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3>前端學習圖譜</h3>\n        {this.state.options &&\n          <LearningMap\n            width=\"50%\"\n            height=\"100vh\"\n            options={this.state.options}\n          />\n        }\n      </div>\n    );\n  }\n}\nexport default Learning;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/demo/learning/index.js"],"sourceRoot":""}